{
	"id": "cc2a4ddcd52774e6ec359e223e4beb5d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/4_LootBox.sol": {
				"content": "pragma solidity >=0.8.2 <0.9.0;\n\ncontract LootBoxGame {\n    // ----------- STRUCTS -----------\n    struct Item {\n        string name;\n        uint256 basePrice;\n        bool inUse; \n    }\n\n    struct WeightedItem {\n        uint256 itemId;\n        uint256 weight; \n    }\n\n    struct LootBox {\n        string name;\n        uint256 price; \n        uint256 totalWeight; \n        bool exists;\n        // Note: We don't store items in the struct to avoid array copying issues\n    }\n\n    address public admin;\n\n    Item[] public allItems; \n    mapping(uint256 => bool) public deletedItems; \n\n    LootBox[] public allLootBoxes;\n    // Store items separately to avoid struct array copying issues\n    mapping(uint256 => WeightedItem[]) public lootBoxItems;\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Not admin\");\n        _;\n    }\n\n    // ----------- EVENTS -----------\n    event ItemAdded(uint256 indexed itemId, string name, uint256 basePrice);\n    event ItemDeleted(uint256 indexed itemId, string name);\n\n    event LootBoxCreated(uint256 indexed lootBoxId, string name, uint256 price);\n    event LootBoxDeleted(uint256 indexed lootBoxId, string name);\n\n    event LootBoxPurchased(\n        address indexed buyer,\n        uint256 indexed lootBoxId,\n        string lootBoxName,\n        uint256 itemId,\n        string itemName\n    );\n\n    // ----------- CONSTRUCTOR -----------\n    constructor() {\n        admin = msg.sender;\n    }\n\n    // ========== ADMIN FUNCTIONS ==========\n\n    /**\n     * @notice Add a new item to the global item list.\n     * @param _name Name of the item.\n     * @param _basePrice Some base price or reference price (optional usage).\n     * @return itemId The index of the newly created item in `allItems`.\n     */\n    function addItem(string calldata _name, uint256 _basePrice)\n        external\n        onlyAdmin\n        returns (uint256)\n    {\n        allItems.push(Item({name: _name, basePrice: _basePrice, inUse: false}));\n\n        uint256 itemId = allItems.length - 1;\n        emit ItemAdded(itemId, _name, _basePrice);\n\n        return itemId;\n    }\n\n    /**\n     * @notice Admin can delete an item if it is not in use by any lootbox.\n     *         We'll mark it as \"deleted\" in `deletedItems` mapping and remove\n     *         it from availability. (We won't actually remove from array to keep it simple.)\n     * @param _itemId The ID of the item to delete.\n     */\n    function deleteItem(uint256 _itemId) external onlyAdmin {\n        require(_itemId < allItems.length, \"Invalid itemId\");\n        require(!allItems[_itemId].inUse, \"Item is used in a lootbox\");\n        require(!deletedItems[_itemId], \"Item already deleted\");\n\n        deletedItems[_itemId] = true;\n        emit ItemDeleted(_itemId, allItems[_itemId].name);\n    }\n\n    /**\n     * @notice Create a new lootbox with an array of weighted items.\n     *         Example usage:\n     *         WeightedItem[] => (itemId=1, weight=50), (itemId=2, weight=30), ...\n     *         totalWeight = 80 in that case.\n     * @param _name  Name of this lootbox (for display).\n     * @param _price Price in Wei to buy this lootbox.\n     * @param _items Array of WeightedItem (itemId, weight).\n     * @return lootBoxId The index of the newly created lootbox in `allLootBoxes`.\n     */\n    function createLootBox(\n        string calldata _name,\n        uint256 _price,\n        WeightedItem[] calldata _items\n    ) external onlyAdmin returns (uint256) {\n        require(_items.length > 0, \"No items provided\");\n\n        // Calculate total weight and validate items\n        uint256 totalWeightTemp = 0;\n\n        for (uint256 i = 0; i < _items.length; i++) {\n            // Validate item\n            require(\n                _items[i].itemId < allItems.length,\n                \"Invalid itemId in WeightedItem\"\n            );\n            require(!deletedItems[_items[i].itemId], \"Item is deleted\");\n            require(_items[i].weight > 0, \"Weight must be > 0\");\n\n            // Mark that item as in use\n            allItems[_items[i].itemId].inUse = true;\n\n            totalWeightTemp += _items[i].weight;\n        }\n\n        // Create a new lootbox without items array inside\n        allLootBoxes.push(\n            LootBox({\n                name: _name,\n                price: _price,\n                totalWeight: totalWeightTemp,\n                exists: true\n            })\n        );\n\n        uint256 newLootBoxId = allLootBoxes.length - 1;\n\n        // Add items to the separate mapping\n        for (uint256 i = 0; i < _items.length; i++) {\n            lootBoxItems[newLootBoxId].push(\n                WeightedItem({\n                    itemId: _items[i].itemId,\n                    weight: _items[i].weight\n                })\n            );\n        }\n\n        emit LootBoxCreated(newLootBoxId, _name, _price);\n        return newLootBoxId;\n    }\n\n    /**\n     * @notice Delete a lootbox by ID. This sets `exists = false` and\n     *         makes items available for other lootboxes or deletion if needed.\n     * @param _lootBoxId The ID of the lootbox to delete.\n     */\n    function deleteLootBox(uint256 _lootBoxId) external onlyAdmin {\n        require(_lootBoxId < allLootBoxes.length, \"Invalid lootBoxId\");\n        LootBox storage lb = allLootBoxes[_lootBoxId];\n        require(lb.exists, \"LootBox already deleted\");\n\n        // Mark items in that lootbox as not in use\n        WeightedItem[] storage items = lootBoxItems[_lootBoxId];\n        for (uint256 i = 0; i < items.length; i++) {\n            uint256 itemId = items[i].itemId;\n            // Make sure to set inUse = false only if it's not used by another lootbox\n            // (In a more advanced contract, you'd track usage count or references.)\n            // For simplicity, let's just set to false. But be aware if items are used in multiple boxes,\n            // you'd need a reference count to truly handle it.\n            allItems[itemId].inUse = false;\n        }\n\n        lb.exists = false;\n\n        emit LootBoxDeleted(_lootBoxId, lb.name);\n    }\n\n    // ========== PLAYER FUNCTIONS ==========\n\n    /**\n     * @notice Return the number of lootboxes in `allLootBoxes` array.\n     *         Some might be deleted, so front-end can filter those out by `exists` flag.\n     */\n    function getAllLootBoxesCount() external view returns (uint256) {\n        return allLootBoxes.length;\n    }\n\n    /**\n     * @notice Get info about a lootbox by ID.\n     *         This helps front-end list all lootboxes with their name, price, etc.\n     */\n    function getLootBoxInfo(uint256 _lootBoxId)\n        external\n        view\n        returns (\n            string memory name,\n            uint256 price,\n            bool isActive,\n            uint256 totalWeight,\n            uint256 itemsCount\n        )\n    {\n        require(_lootBoxId < allLootBoxes.length, \"Invalid lootBoxId\");\n        LootBox storage lb = allLootBoxes[_lootBoxId];\n        uint256 itemsCount = lootBoxItems[_lootBoxId].length;\n\n        return (lb.name, lb.price, lb.exists, lb.totalWeight, itemsCount);\n    }\n\n    /**\n     * @notice Get items for a specific lootbox by ID.\n     * @param _lootBoxId The ID of the lootbox.\n     * @return Array of WeightedItem structs for this lootbox.\n     */\n    function getLootBoxItems(uint256 _lootBoxId) \n        external \n        view \n        returns (WeightedItem[] memory) \n    {\n        require(_lootBoxId < allLootBoxes.length, \"Invalid lootBoxId\");\n        return lootBoxItems[_lootBoxId];\n    }\n\n    /**\n     * @notice Buy a lootbox using Ether (msg.value must be >= lootbox price).\n     *         Randomly select an item based on the weight distribution.\n     * @param _lootBoxId The ID of the lootbox to purchase.\n     */\n    function buyLootBox(uint256 _lootBoxId) external payable {\n        require(_lootBoxId < allLootBoxes.length, \"Invalid lootBoxId\");\n        LootBox storage lb = allLootBoxes[_lootBoxId];\n        require(lb.exists, \"LootBox does not exist\");\n\n        // Payment check\n        require(msg.value >= lb.price, \"Not enough Ether to buy this lootbox\");\n\n        WeightedItem[] storage items = lootBoxItems[_lootBoxId];\n        require(items.length > 0, \"No items in lootbox\");\n\n        // -- Randomness (not secure!) --\n        // This is a naive approach for demonstration\n        uint256 rand = uint256(\n            keccak256(\n                abi.encodePacked(\n                    blockhash(block.number - 1),\n                    msg.sender,\n                    block.timestamp\n                )\n            )\n        ) % lb.totalWeight;\n\n        // Find which item index is picked\n        uint256 cumulative = 0;\n        uint256 selectedItemIndex = 0;\n\n        for (uint256 i = 0; i < items.length; i++) {\n            cumulative += items[i].weight;\n            if (rand < cumulative) {\n                selectedItemIndex = i;\n                break;\n            }\n        }\n\n        // The WeightedItem we picked\n        WeightedItem storage wItem = items[selectedItemIndex];\n        Item storage itemInfo = allItems[wItem.itemId];\n\n        // Return item name in an event\n        emit LootBoxPurchased(\n            msg.sender,\n            _lootBoxId,\n            lb.name,\n            wItem.itemId,\n            itemInfo.name\n        );\n\n        // (Business logic for collecting or distributing funds)\n        // e.g., contract keeps the Ether, or admin withdraws it later.\n        // This is just a simple demonstration that you have \"revenue.\"\n    }\n\n    // ========== ADMIN WITHDRAWAL (OPTIONAL) ==========\n\n    /**\n     * @notice Admin can withdraw Ether from the contract balance.\n     */\n    function adminWithdraw(address payable _to, uint256 _amount)\n        external\n        onlyAdmin\n    {\n        require(\n            _amount <= address(this).balance,\n            \"Insufficient contract balance\"\n        );\n        (bool success, ) = _to.call{value: _amount}(\"\");\n        require(success, \"Withdraw transfer failed\");\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/4_LootBox.sol": {
				"LootBoxGame": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "basePrice",
									"type": "uint256"
								}
							],
							"name": "ItemAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "ItemDeleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "lootBoxId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "LootBoxCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "lootBoxId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "LootBoxDeleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "lootBoxId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "lootBoxName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								}
							],
							"name": "LootBoxPurchased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_basePrice",
									"type": "uint256"
								}
							],
							"name": "addItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "adminWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allItems",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "basePrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "inUse",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allLootBoxes",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lootBoxId",
									"type": "uint256"
								}
							],
							"name": "buyLootBox",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "weight",
											"type": "uint256"
										}
									],
									"internalType": "struct LootBoxGame.WeightedItem[]",
									"name": "_items",
									"type": "tuple[]"
								}
							],
							"name": "createLootBox",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_itemId",
									"type": "uint256"
								}
							],
							"name": "deleteItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lootBoxId",
									"type": "uint256"
								}
							],
							"name": "deleteLootBox",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "deletedItems",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllLootBoxesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lootBoxId",
									"type": "uint256"
								}
							],
							"name": "getLootBoxInfo",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "itemsCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lootBoxId",
									"type": "uint256"
								}
							],
							"name": "getLootBoxItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "weight",
											"type": "uint256"
										}
									],
									"internalType": "struct LootBoxGame.WeightedItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lootBoxItems",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"}],\"name\":\"ItemAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ItemDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lootBoxId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"LootBoxCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lootBoxId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"LootBoxDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lootBoxId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"lootBoxName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"}],\"name\":\"LootBoxPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_basePrice\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"adminWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allItems\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inUse\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allLootBoxes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lootBoxId\",\"type\":\"uint256\"}],\"name\":\"buyLootBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct LootBoxGame.WeightedItem[]\",\"name\":\"_items\",\"type\":\"tuple[]\"}],\"name\":\"createLootBox\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"deleteItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lootBoxId\",\"type\":\"uint256\"}],\"name\":\"deleteLootBox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deletedItems\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllLootBoxesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lootBoxId\",\"type\":\"uint256\"}],\"name\":\"getLootBoxInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lootBoxId\",\"type\":\"uint256\"}],\"name\":\"getLootBoxItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct LootBoxGame.WeightedItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lootBoxItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addItem(string,uint256)\":{\"params\":{\"_basePrice\":\"Some base price or reference price (optional usage).\",\"_name\":\"Name of the item.\"},\"returns\":{\"_0\":\"itemId The index of the newly created item in `allItems`.\"}},\"buyLootBox(uint256)\":{\"params\":{\"_lootBoxId\":\"The ID of the lootbox to purchase.\"}},\"createLootBox(string,uint256,(uint256,uint256)[])\":{\"params\":{\"_items\":\"Array of WeightedItem (itemId, weight).\",\"_name\":\"Name of this lootbox (for display).\",\"_price\":\"Price in Wei to buy this lootbox.\"},\"returns\":{\"_0\":\"lootBoxId The index of the newly created lootbox in `allLootBoxes`.\"}},\"deleteItem(uint256)\":{\"params\":{\"_itemId\":\"The ID of the item to delete.\"}},\"deleteLootBox(uint256)\":{\"params\":{\"_lootBoxId\":\"The ID of the lootbox to delete.\"}},\"getLootBoxItems(uint256)\":{\"params\":{\"_lootBoxId\":\"The ID of the lootbox.\"},\"returns\":{\"_0\":\"Array of WeightedItem structs for this lootbox.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addItem(string,uint256)\":{\"notice\":\"Add a new item to the global item list.\"},\"adminWithdraw(address,uint256)\":{\"notice\":\"Admin can withdraw Ether from the contract balance.\"},\"buyLootBox(uint256)\":{\"notice\":\"Buy a lootbox using Ether (msg.value must be >= lootbox price).         Randomly select an item based on the weight distribution.\"},\"createLootBox(string,uint256,(uint256,uint256)[])\":{\"notice\":\"Create a new lootbox with an array of weighted items.         Example usage:         WeightedItem[] => (itemId=1, weight=50), (itemId=2, weight=30), ...         totalWeight = 80 in that case.\"},\"deleteItem(uint256)\":{\"notice\":\"Admin can delete an item if it is not in use by any lootbox.         We'll mark it as \\\"deleted\\\" in `deletedItems` mapping and remove         it from availability. (We won't actually remove from array to keep it simple.)\"},\"deleteLootBox(uint256)\":{\"notice\":\"Delete a lootbox by ID. This sets `exists = false` and         makes items available for other lootboxes or deletion if needed.\"},\"getAllLootBoxesCount()\":{\"notice\":\"Return the number of lootboxes in `allLootBoxes` array.         Some might be deleted, so front-end can filter those out by `exists` flag.\"},\"getLootBoxInfo(uint256)\":{\"notice\":\"Get info about a lootbox by ID.         This helps front-end list all lootboxes with their name, price, etc.\"},\"getLootBoxItems(uint256)\":{\"notice\":\"Get items for a specific lootbox by ID.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/4_LootBox.sol\":\"LootBoxGame\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_LootBox.sol\":{\"keccak256\":\"0x82208ad690a77e20ef7f21b417a57ee004a217fd5e2ec019cdd3aecce5e37595\",\"urls\":[\"bzz-raw://7cab3cd04bc71225aac343a4e371305413883bcceabd5181afa5bd98d6af5fb8\",\"dweb:/ipfs/QmYMDhJZV6AZ8kWhLKvEsyQCGRYbLwt7dznNLYvm2zrmc2\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addItem(string,uint256)": {
								"params": {
									"_basePrice": "Some base price or reference price (optional usage).",
									"_name": "Name of the item."
								},
								"returns": {
									"_0": "itemId The index of the newly created item in `allItems`."
								}
							},
							"buyLootBox(uint256)": {
								"params": {
									"_lootBoxId": "The ID of the lootbox to purchase."
								}
							},
							"createLootBox(string,uint256,(uint256,uint256)[])": {
								"params": {
									"_items": "Array of WeightedItem (itemId, weight).",
									"_name": "Name of this lootbox (for display).",
									"_price": "Price in Wei to buy this lootbox."
								},
								"returns": {
									"_0": "lootBoxId The index of the newly created lootbox in `allLootBoxes`."
								}
							},
							"deleteItem(uint256)": {
								"params": {
									"_itemId": "The ID of the item to delete."
								}
							},
							"deleteLootBox(uint256)": {
								"params": {
									"_lootBoxId": "The ID of the lootbox to delete."
								}
							},
							"getLootBoxItems(uint256)": {
								"params": {
									"_lootBoxId": "The ID of the lootbox."
								},
								"returns": {
									"_0": "Array of WeightedItem structs for this lootbox."
								}
							}
						},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addItem(string,uint256)": {
								"notice": "Add a new item to the global item list."
							},
							"adminWithdraw(address,uint256)": {
								"notice": "Admin can withdraw Ether from the contract balance."
							},
							"buyLootBox(uint256)": {
								"notice": "Buy a lootbox using Ether (msg.value must be >= lootbox price).         Randomly select an item based on the weight distribution."
							},
							"createLootBox(string,uint256,(uint256,uint256)[])": {
								"notice": "Create a new lootbox with an array of weighted items.         Example usage:         WeightedItem[] => (itemId=1, weight=50), (itemId=2, weight=30), ...         totalWeight = 80 in that case."
							},
							"deleteItem(uint256)": {
								"notice": "Admin can delete an item if it is not in use by any lootbox.         We'll mark it as \"deleted\" in `deletedItems` mapping and remove         it from availability. (We won't actually remove from array to keep it simple.)"
							},
							"deleteLootBox(uint256)": {
								"notice": "Delete a lootbox by ID. This sets `exists = false` and         makes items available for other lootboxes or deletion if needed."
							},
							"getAllLootBoxesCount()": {
								"notice": "Return the number of lootboxes in `allLootBoxes` array.         Some might be deleted, so front-end can filter those out by `exists` flag."
							},
							"getLootBoxInfo(uint256)": {
								"notice": "Get info about a lootbox by ID.         This helps front-end list all lootboxes with their name, price, etc."
							},
							"getLootBoxItems(uint256)": {
								"notice": "Get items for a specific lootbox by ID."
							}
						},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/4_LootBox.sol:LootBoxGame",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 28,
								"contract": "contracts/4_LootBox.sol:LootBoxGame",
								"label": "allItems",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(Item)8_storage)dyn_storage"
							},
							{
								"astId": 32,
								"contract": "contracts/4_LootBox.sol:LootBoxGame",
								"label": "deletedItems",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 36,
								"contract": "contracts/4_LootBox.sol:LootBoxGame",
								"label": "allLootBoxes",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_struct(LootBox)22_storage)dyn_storage"
							},
							{
								"astId": 42,
								"contract": "contracts/4_LootBox.sol:LootBoxGame",
								"label": "lootBoxItems",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_array(t_struct(WeightedItem)13_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Item)8_storage)dyn_storage": {
								"base": "t_struct(Item)8_storage",
								"encoding": "dynamic_array",
								"label": "struct LootBoxGame.Item[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(LootBox)22_storage)dyn_storage": {
								"base": "t_struct(LootBox)22_storage",
								"encoding": "dynamic_array",
								"label": "struct LootBoxGame.LootBox[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(WeightedItem)13_storage)dyn_storage": {
								"base": "t_struct(WeightedItem)13_storage",
								"encoding": "dynamic_array",
								"label": "struct LootBoxGame.WeightedItem[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_array(t_struct(WeightedItem)13_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LootBoxGame.WeightedItem[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(WeightedItem)13_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Item)8_storage": {
								"encoding": "inplace",
								"label": "struct LootBoxGame.Item",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 5,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "basePrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 7,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "inUse",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(LootBox)22_storage": {
								"encoding": "inplace",
								"label": "struct LootBoxGame.LootBox",
								"members": [
									{
										"astId": 15,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 17,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 19,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "totalWeight",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 21,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "exists",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(WeightedItem)13_storage": {
								"encoding": "inplace",
								"label": "struct LootBoxGame.WeightedItem",
								"members": [
									{
										"astId": 10,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "itemId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 12,
										"contract": "contracts/4_LootBox.sol:LootBoxGame",
										"label": "weight",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 160/65712 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 27441\n// Code size = 89817 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x200a0]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x200a0] = a1\n    42: a1 = 0x200b0\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x200b0\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 1)\n    64: jump @22 if a0 == a1\n      : @9 (gas: 9)\n    67: a3 = a1 << 0x20\n    70: a3 = a3 >> 0x20\n    73: a4 = a0 << 0x20\n    76: a4 = a4 >> 0x20\n    79: a4 = a4 + a2\n    82: a3 = a3 - a4\n    85: a4 = a2 << 0x1\n    88: a4 = -a4\n    90: jump @15 if a4 >=u a3\n      : @10 (gas: 1)\n    93: jump @19 if a0 >=u a1\n      : @11 (gas: 1)\n    96: jump @22 if a2 == 0\n      : @12 (gas: 3)\n    99: a2 = a2 + a0\n   102: a3 = a0\n   104: fallthrough\n      : @13 (gas: 6)\n   105: a4 = u8 [a1]\n   107: a1 = a1 + 0x1\n   110: a5 = a3 + 0x1\n   113: u8 [a3] = a4\n   115: a3 = a5\n   117: jump @13 if a5 != a2\n      : @14 (gas: 1)\n   120: jump @22\n      : @15 (gas: 1)\n   122: jump @22 if a2 == 0\n      : @16 (gas: 3)\n   125: a2 = a2 + a0\n   128: a3 = a0\n   130: fallthrough\n      : @17 (gas: 6)\n   131: a4 = u8 [a1]\n   133: a1 = a1 + 0x1\n   136: a5 = a3 + 0x1\n   139: u8 [a3] = a4\n   141: a3 = a5\n   143: jump @17 if a5 != a2\n      : @18 (gas: 1)\n   146: jump @22\n      : @19 (gas: 1)\n   148: jump @22 if a2 == 0\n      : @20 (gas: 2)\n   151: i32 a3 = a2 + 0xffffffffffffffff\n   154: fallthrough\n      : @21 (gas: 7)\n   155: a4 = a1 + a3\n   158: a4 = u8 [a4]\n   160: a2 = a2 + 0xffffffffffffffff\n   163: a5 = a0 + a3\n   166: u8 [a5] = a4\n   168: i32 a3 = a3 + 0xffffffffffffffff\n   171: jump @21 if a2 != 0\n      : @22 (gas: 1)\n   174: ret\n      : @23 (gas: 13)\n   176: sp = sp + 0xffffffffffffffd8\n   179: u64 [sp + 0x20] = ra\n   182: u64 [sp + 0x18] = s0\n   185: u64 [sp + 0x10] = s1\n   188: a2 = u64 [a1]\n   190: u64 [sp + 0x8] = a2\n   193: a2 = u64 [a1 + 0x8]\n   196: u64 [sp] = a2\n   198: s0 = u64 [a1 + 0x10]\n   201: s1 = u64 [a1 + 0x18]\n   204: i32 a0 = a0 + 0\n   206: a1 = 0x20\n   209: ra = 2, jump @0\n      : @24 [@dyn 1] (gas: 71)\n   214: a1 = reverse s1\n   216: a2 = reverse s0\n   218: a3 = u64 [sp]\n   220: a3 = reverse a3\n   222: a4 = u64 [sp + 0x8]\n   225: a4 = reverse a4\n   227: u8 [a0 + 0x18] = a4\n   230: u8 [a0 + 0x10] = a3\n   233: u8 [a0 + 0x8] = a2\n   236: u8 [a0] = a1\n   238: a5 = a4 >> 0x38\n   241: u8 [a0 + 0x1f] = a5\n   244: a5 = a4 >> 0x30\n   247: u8 [a0 + 0x1e] = a5\n   250: a5 = a4 >> 0x28\n   253: u8 [a0 + 0x1d] = a5\n   256: a5 = a4 >> 0x20\n   259: u8 [a0 + 0x1c] = a5\n   262: a5 = a4 >> 0x18\n   265: u8 [a0 + 0x1b] = a5\n   268: a5 = a4 >> 0x10\n   271: u8 [a0 + 0x1a] = a5\n   274: a4 = a4 >> 0x8\n   277: u8 [a0 + 0x19] = a4\n   280: a4 = a3 >> 0x38\n   283: u8 [a0 + 0x17] = a4\n   286: a4 = a3 >> 0x30\n   289: u8 [a0 + 0x16] = a4\n   292: a4 = a3 >> 0x28\n   295: u8 [a0 + 0x15] = a4\n   298: a4 = a3 >> 0x20\n   301: u8 [a0 + 0x14] = a4\n   304: a4 = a3 >> 0x18\n   307: u8 [a0 + 0x13] = a4\n   310: a4 = a3 >> 0x10\n   313: u8 [a0 + 0x12] = a4\n   316: a3 = a3 >> 0x8\n   319: u8 [a0 + 0x11] = a3\n   322: a3 = a2 >> 0x38\n   325: u8 [a0 + 0xf] = a3\n   328: a3 = a2 >> 0x30\n   331: u8 [a0 + 0xe] = a3\n   334: a3 = a2 >> 0x28\n   337: u8 [a0 + 0xd] = a3\n   340: a3 = a2 >> 0x20\n   343: u8 [a0 + 0xc] = a3\n   346: a3 = a2 >> 0x18\n   349: u8 [a0 + 0xb] = a3\n   352: a3 = a2 >> 0x10\n   355: u8 [a0 + 0xa] = a3\n   358: a2 = a2 >> 0x8\n   361: u8 [a0 + 0x9] = a2\n   364: a2 = a1 >> 0x38\n   367: u8 [a0 + 0x7] = a2\n   370: a2 = a1 >> 0x30\n   373: u8 [a0 + 0x6] = a2\n   376: a2 = a1 >> 0x28\n   379: u8 [a0 + 0x5] = a2\n   382: a2 = a1 >> 0x20\n   385: u8 [a0 + 0x4] = a2\n   388: a2 = a1 >> 0x18\n   391: u8 [a0 + 0x3] = a2\n   394: a2 = a1 >> 0x10\n   397: u8 [a0 + 0x2] = a2\n   400: a1 = a1 >> 0x8\n   403: u8 [a0 + 0x1] = a1\n   406: ra = u64 [sp + 0x20]\n   409: s0 = u64 [sp + 0x18]\n   412: s1 = u64 [sp + 0x10]\n   415: sp = sp + 0x28\n   418: ret\n      : @25 (gas: 40)\n   420: sp = sp + 0xffffffffffffffa0\n   423: u64 [sp + 0x58] = ra\n   426: u64 [sp + 0x50] = s0\n   429: u64 [sp + 0x48] = s1\n   432: s0 = sp + 0x60\n   435: sp = sp & 0xffffffffffffffe0\n   438: s1 = a0\n   440: a0 = u64 [a2 + 0x18]\n   443: a3 = u64 [a2 + 0x10]\n   446: a4 = u64 [a2 + 0x8]\n   449: a2 = u64 [a2]\n   451: u64 [sp + 0x18] = a0\n   454: u64 [sp + 0x10] = a3\n   457: u64 [sp + 0x8] = a4\n   460: u64 [sp] = a2\n   462: u64 [sp + 56] = 0\n   465: u64 [sp + 48] = 0\n   468: u64 [sp + 40] = 0\n   471: u64 [sp + 32] = 0\n   474: u32 [sp + 64] = 0x20\n   478: a0 = 0\n   480: i32 a1 = sp + 0\n   482: i32 a3 = sp + 0x20\n   485: i32 a4 = sp + 0x40\n   488: a2 = 0xffffffffffffffff\n   491: ecalli 9 // 'get_storage'\n   493: a0 = u64 [sp + 0x38]\n   496: a1 = u64 [sp + 0x30]\n   499: a2 = u64 [sp + 0x28]\n   502: a3 = u64 [sp + 0x20]\n   505: u64 [s1 + 0x18] = a0\n   508: u64 [s1 + 0x10] = a1\n   511: u64 [s1 + 0x8] = a2\n   514: u64 [s1] = a3\n   516: sp = s0 + 0xffffffffffffffa0\n   519: ra = u64 [sp + 0x58]\n   522: s0 = u64 [sp + 0x50]\n   525: s1 = u64 [sp + 0x48]\n   528: sp = sp + 0x60\n   531: ret\n      : @26 (gas: 25)\n   533: sp = sp + 0xffffffffffffff60\n   537: u64 [sp + 0x98] = ra\n   541: u64 [sp + 0x90] = s0\n   545: u64 [sp + 0x88] = s1\n   549: s0 = sp + 0xa0\n   553: sp = sp & 0xffffffffffffffe0\n   556: a4 = u64 [a3]\n   558: u64 [sp + 0x38] = a4\n   561: a4 = u64 [a3 + 0x8]\n   564: u64 [sp + 0x28] = a4\n   567: a4 = u64 [a3 + 0x10]\n   570: u64 [sp + 0x20] = a4\n   573: a3 = u64 [a3 + 0x18]\n   576: u64 [sp + 0x18] = a3\n   579: a3 = u64 [a2]\n   581: u64 [sp + 0x10] = a3\n   584: a3 = u64 [a2 + 0x8]\n   587: u64 [sp + 0x8] = a3\n   590: a3 = u64 [a2 + 0x10]\n   593: u64 [sp] = a3\n   595: s1 = u64 [a2 + 0x18]\n   598: i32 a0 = a0 + 0\n   600: i32 a1 = a1 + 0\n   602: u64 [sp + 0x30] = a1\n   605: ra = 4, jump @0\n      : @27 [@dyn 2] (gas: 34)\n   610: a1 = reverse s1\n   612: a2 = u64 [sp]\n   614: a2 = reverse a2\n   616: a3 = u64 [sp + 0x8]\n   619: a3 = reverse a3\n   621: a4 = u64 [sp + 0x10]\n   624: a4 = reverse a4\n   626: u64 [sp + 0x58] = a4\n   629: u64 [sp + 0x50] = a3\n   632: u64 [sp + 0x48] = a2\n   635: u64 [sp + 0x40] = a1\n   638: a1 = u64 [sp + 0x18]\n   641: a1 = reverse a1\n   643: a2 = u64 [sp + 0x20]\n   646: a2 = reverse a2\n   648: a3 = u64 [sp + 0x28]\n   651: a3 = reverse a3\n   653: a4 = u64 [sp + 0x38]\n   656: a4 = reverse a4\n   658: u64 [sp + 0x78] = a4\n   661: u64 [sp + 0x70] = a3\n   664: u64 [sp + 0x68] = a2\n   667: u64 [sp + 0x60] = a1\n   670: i32 a2 = a0 + 0\n   672: i32 a0 = sp + 0x40\n   675: a1 = 0x2\n   678: a3 = u64 [sp + 0x30]\n   681: ecalli 8 // 'deposit_event'\n   683: sp = s0 + 0xffffffffffffff60\n   687: ra = u64 [sp + 0x98]\n   691: s0 = u64 [sp + 0x90]\n   695: s1 = u64 [sp + 0x88]\n   699: sp = sp + 0xa0\n   703: ret\n      : @28 [@dyn 3] (gas: 46)\n   705: a1 = reverse s1\n   707: u64 [sp + 0x78] = a1\n   710: a1 = u64 [sp]\n   712: a1 = reverse a1\n   714: u64 [sp + 0x70] = a1\n   717: a1 = u64 [sp + 0x8]\n   720: a1 = reverse a1\n   722: u64 [sp + 0x68] = a1\n   725: a1 = u64 [sp + 0x10]\n   728: a1 = reverse a1\n   730: u64 [sp + 0x60] = a1\n   733: a1 = u64 [sp + 0x18]\n   736: a1 = reverse a1\n   738: u64 [sp + 0x98] = a1\n   742: a1 = u64 [sp + 0x20]\n   745: a1 = reverse a1\n   747: u64 [sp + 0x90] = a1\n   751: a1 = u64 [sp + 0x28]\n   754: a1 = reverse a1\n   756: u64 [sp + 0x88] = a1\n   760: a1 = u64 [sp + 0x30]\n   763: a1 = reverse a1\n   765: u64 [sp + 0x80] = a1\n   769: a1 = u64 [sp + 0x40]\n   772: a1 = reverse a1\n   774: u64 [sp + 0xb8] = a1\n   778: a1 = u64 [sp + 0x48]\n   781: a1 = reverse a1\n   783: u64 [sp + 0xb0] = a1\n   787: a1 = u64 [sp + 0x50]\n   790: a1 = reverse a1\n   792: u64 [sp + 0xa8] = a1\n   796: a1 = u64 [sp + 0x58]\n   799: a1 = reverse a1\n   801: u64 [sp + 0xa0] = a1\n   805: i32 a2 = a0 + 0\n   807: i32 a0 = sp + 0x60\n   810: a1 = 0x3\n   813: a3 = u64 [sp + 0x38]\n   816: ecalli 8 // 'deposit_event'\n   818: sp = s0 + 0xffffffffffffff20\n   822: ra = u64 [sp + 0xd8]\n   826: s0 = u64 [sp + 0xd0]\n   830: s1 = u64 [sp + 0xc8]\n   834: sp = sp + 0xe0\n   838: ret\n      : @29 (gas: 6)\n   840: sp = sp + 0xfffffffffffffff0\n   843: u64 [sp + 0x8] = ra\n   846: u64 [sp] = s0\n   848: s0 = a0 & 0x1\n   851: ecalli 6 // 'call_data_size'\n   853: fallthrough\n      : @30 (gas: 2)\n   854: u32 [0x200a4] = a0\n   859: jump @32 if s0 == 0\n      : @31 (gas: 1)\n   862: ra = 8, jump @33\n      : @32 [@dyn 4] (gas: 1)\n   866: ra = 10, jump @44\n      : @33 [@dyn 5] (gas: 9)\n   871: sp = sp + 0xffffffffffffff20\n   875: u64 [sp + 0xd8] = ra\n   879: u64 [sp + 0xd0] = s0\n   883: u64 [sp + 0xc8] = s1\n   887: s0 = sp + 0xe0\n   891: sp = sp & 0xffffffffffffffe0\n   894: a0 = 0x40\n   897: a1 = 0x20\n   900: ra = 12, jump @0\n      : @34 [@dyn 6] (gas: 39)\n   905: u8 [a0 + 31] = 0x80\n   910: u8 [a0 + 30] = 0\n   913: u8 [a0 + 29] = 0\n   916: u8 [a0 + 28] = 0\n   919: u8 [a0 + 27] = 0\n   922: u8 [a0 + 26] = 0\n   925: u8 [a0 + 25] = 0\n   928: u8 [a0 + 24] = 0\n   931: u8 [a0 + 23] = 0\n   934: u8 [a0 + 22] = 0\n   937: u8 [a0 + 21] = 0\n   940: u8 [a0 + 20] = 0\n   943: u8 [a0 + 19] = 0\n   946: u8 [a0 + 18] = 0\n   949: u8 [a0 + 17] = 0\n   952: u8 [a0 + 16] = 0\n   955: u8 [a0 + 15] = 0\n   958: u8 [a0 + 14] = 0\n   961: u8 [a0 + 13] = 0\n   964: u8 [a0 + 12] = 0\n   967: u8 [a0 + 11] = 0\n   970: u8 [a0 + 10] = 0\n   973: u8 [a0 + 9] = 0\n   976: u8 [a0 + 8] = 0\n   979: u8 [a0 + 7] = 0\n   982: u8 [a0 + 6] = 0\n   985: u8 [a0 + 5] = 0\n   988: u8 [a0 + 4] = 0\n   991: u8 [a0 + 3] = 0\n   994: u8 [a0 + 2] = 0\n   997: u8 [a0 + 1] = 0\n  1000: u8 [a0 + 0] = 0\n  1002: u64 [sp + 56] = 0\n  1005: u64 [sp + 32] = 0\n  1008: u64 [sp + 40] = 0\n  1011: u64 [sp + 48] = 0\n  1014: i32 a0 = sp + 0x20\n  1017: ecalli 18 // 'value_transferred'\n  1019: fallthrough\n      : @35 (gas: 8)\n  1020: a0 = u64 [sp + 0x30]\n  1023: a1 = u64 [sp + 0x38]\n  1026: a2 = u64 [sp + 0x28]\n  1029: a3 = u64 [sp + 0x20]\n  1032: a1 = a1 | a2\n  1035: a0 = a0 | a3\n  1038: a0 = a0 | a1\n  1041: jump @38 if a0 == 0\n      : @36 (gas: 3)\n  1044: a0 = 0\n  1046: a1 = 0\n  1048: ra = 14, jump @0\n      : @37 [@dyn 7] (gas: 5)\n  1053: i32 a1 = a0 + 0\n  1055: a0 = 0x1\n  1058: a2 = 0\n  1060: ecalli 15 // 'seal_return'\n  1062: fallthrough\n      : @38 (gas: 55)\n  1063: i32 a0 = sp + 0x40\n  1066: ecalli 7 // 'caller'\n  1068: a0 = u64 [sp + 0x48]\n  1071: a1 = i32 [sp + 0x50]\n  1074: a2 = u64 [sp + 0x40]\n  1077: a0 = reverse a0\n  1079: a3 = a0 << 0x20\n  1082: a1 = reverse a1\n  1084: a1 = a1 >> 0x20\n  1087: a1 = a1 | a3\n  1090: u64 [sp + 0x18] = a1\n  1093: a0 = a0 >> 0x20\n  1096: s1 = reverse a2\n  1098: a1 = s1 << 0x20\n  1101: a0 = a0 | a1\n  1104: u64 [sp + 0x10] = a0\n  1107: s1 = s1 >> 0x20\n  1110: u64 [sp + 152] = 0\n  1114: u64 [sp + 144] = 0\n  1118: u64 [sp + 136] = 0\n  1122: u64 [sp + 128] = 0\n  1126: u64 [sp + 184] = 0\n  1130: u64 [sp + 176] = 0\n  1134: u64 [sp + 168] = 0\n  1138: u64 [sp + 160] = 0\n  1142: u32 [sp + 96] = 0x20\n  1146: i32 a1 = sp + 0x80\n  1150: i32 a3 = sp + 0xa0\n  1154: i32 a4 = sp + 0x60\n  1157: a2 = 0xffffffffffffffff\n  1160: a0 = 0\n  1162: ecalli 9 // 'get_storage'\n  1164: a0 = u32 [sp + 0xb4]\n  1168: a0 = a0 << 0x20\n  1171: a1 = u64 [sp + 0xb8]\n  1175: a0 = a0 | s1\n  1178: u64 [sp + 152] = 0\n  1182: u64 [sp + 144] = 0\n  1186: u64 [sp + 136] = 0\n  1190: u64 [sp + 128] = 0\n  1194: u64 [sp + 0xb8] = a1\n  1198: u64 [sp + 0xb0] = a0\n  1202: a0 = u64 [sp + 0x10]\n  1205: u64 [sp + 0xa8] = a0\n  1209: a0 = u64 [sp + 0x18]\n  1212: u64 [sp + 0xa0] = a0\n  1216: i32 a1 = sp + 0x80\n  1220: i32 a3 = sp + 0xa0\n  1224: a2 = 0xffffffffffffffff\n  1227: a4 = 0x20\n  1230: a0 = 0\n  1232: ecalli 17 // 'set_storage'\n  1234: a0 = 0x80\n  1238: a1 = 0\n  1240: ra = 16, jump @0\n      : @39 [@dyn 8] (gas: 5)\n  1245: i32 a0 = a0 + 0\n  1247: a1 = 0\n  1249: a2 = 0\n  1251: ecalli 4 // 'call_data_copy'\n  1253: fallthrough\n      : @40 (gas: 2)\n  1254: a1 = i32 [0x200a8]\n  1259: jump @42 if a1 == 0\n      : @41 (gas: 4)\n  1262: a0 = 0x300b0\n  1267: i32 a0 = a0 + 0\n  1269: ecalli 16 // 'set_immutable_data'\n  1271: fallthrough\n      : @42 (gas: 3)\n  1272: a0 = 0x80\n  1276: a1 = 0\n  1278: ra = 18, jump @0\n      : @43 [@dyn 9] (gas: 6)\n  1283: i32 a1 = a0 + 0\n  1285: a0 = 0\n  1287: a2 = 0\n  1289: ra = 0x14\n  1292: ecalli 15 // 'seal_return'\n  1294: fallthrough\n      : @44 [@dyn 10] (gas: 11)\n  1295: sp = sp + 0xfffffffffffffe10\n  1299: u64 [sp + 0x1e8] = ra\n  1303: u64 [sp + 0x1e0] = s0\n  1307: u64 [sp + 0x1d8] = s1\n  1311: s0 = sp + 0x1f0\n  1315: sp = sp + 0xffffffffffffdd70\n  1319: sp = sp & 0xffffffffffffffe0\n  1322: s1 = sp\n  1324: a0 = 0x40\n  1327: a1 = 0x20\n  1330: ra = 22, jump @0\n      : @45 [@dyn 11] (gas: 36)\n  1335: u8 [a0 + 31] = 0x80\n  1340: u8 [a0 + 30] = 0\n  1343: u8 [a0 + 29] = 0\n  1346: u8 [a0 + 28] = 0\n  1349: u8 [a0 + 27] = 0\n  1352: u8 [a0 + 26] = 0\n  1355: u8 [a0 + 25] = 0\n  1358: u8 [a0 + 24] = 0\n  1361: u8 [a0 + 23] = 0\n  1364: u8 [a0 + 22] = 0\n  1367: u8 [a0 + 21] = 0\n  1370: u8 [a0 + 20] = 0\n  1373: u8 [a0 + 19] = 0\n  1376: u8 [a0 + 18] = 0\n  1379: u8 [a0 + 17] = 0\n  1382: u8 [a0 + 16] = 0\n  1385: u8 [a0 + 15] = 0\n  1388: u8 [a0 + 14] = 0\n  1391: u8 [a0 + 13] = 0\n  1394: u8 [a0 + 12] = 0\n  1397: u8 [a0 + 11] = 0\n  1400: u8 [a0 + 10] = 0\n  1403: u8 [a0 + 9] = 0\n  1406: u8 [a0 + 8] = 0\n  1409: u8 [a0 + 7] = 0\n  1412: u8 [a0 + 3] = 0\n  1415: a1 = 0x200a4\n  1420: u8 [a0 + 2] = 0\n  1423: u8 [a0 + 1] = 0\n  1426: u8 [a0 + 0] = 0\n  1428: u64 [s1 + 0x1a8] = a1\n  1432: a1 = i32 [0x200a4]\n  1437: u8 [a0 + 6] = 0\n  1440: u8 [a0 + 5] = 0\n  1443: u8 [a0 + 4] = 0\n  1446: jump @47 if a1 >=u 4\n      : @46 (gas: 1)\n  1450: jump @918\n      : @47 (gas: 6)\n  1454: a0 = s1 + 0x2000\n  1458: i32 a0 = a0 + 0xfffffffffffffea0\n  1462: a1 = 0\n  1464: ra = 0x18\n  1467: ecalli 5 // 'call_data_load'\n  1469: fallthrough\n      : @48 [@dyn 12] (gas: 3)\n  1470: a0 = s1 + 0x1a18\n  1474: a0 = i32 [a0 + 0x4a4]\n  1478: jump @81 if a0 <=s 153673393\n      : @49 (gas: 1)\n  1486: jump @51 if a0 >s 1075659905\n      : @50 (gas: 1)\n  1493: jump @114\n      : @51 (gas: 1)\n  1496: jump @53 if a0 <=s 1658239966\n      : @52 (gas: 1)\n  1503: jump @157\n      : @53 (gas: 1)\n  1506: jump @55 if a0 == 1075659906\n      : @54 (gas: 1)\n  1513: jump @304\n      : @55 (gas: 11)\n  1516: a0 = sp + 0xffffffffffffffe0\n  1519: a0 = a0 & 0xffffffffffffffe0\n  1522: u64 [s1 + 0x298] = a0\n  1526: sp = a0\n  1528: u64 [a0 + 24] = 0\n  1531: u64 [a0 + 16] = 0\n  1534: u64 [a0 + 8] = 0\n  1537: u64 [a0 + 0] = 0\n  1539: i32 a0 = a0 + 0\n  1541: ecalli 18 // 'value_transferred'\n  1543: fallthrough\n      : @56 (gas: 9)\n  1544: a3 = u64 [s1 + 0x298]\n  1548: a0 = u64 [a3 + 0x10]\n  1551: a1 = u64 [a3 + 0x18]\n  1554: a2 = u64 [a3 + 0x8]\n  1557: a3 = u64 [a3]\n  1559: a1 = a1 | a2\n  1562: a0 = a0 | a3\n  1565: a0 = a0 | a1\n  1568: jump @58 if a0 == 0\n      : @57 (gas: 1)\n  1571: jump @918\n      : @58 (gas: 3)\n  1575: a0 = u64 [s1 + 0x1a8]\n  1579: a0 = i32 [a0]\n  1581: jump @60 if a0 >u 67\n      : @59 (gas: 1)\n  1585: jump @918\n      : @60 (gas: 5)\n  1589: a0 = s1 + 0x2000\n  1593: i32 a0 = a0 + 0xffffffffffffff80\n  1596: a1 = 0x4\n  1599: ecalli 5 // 'call_data_load'\n  1601: fallthrough\n      : @61 (gas: 12)\n  1602: a3 = s1 + 0x1a18\n  1606: a2 = u64 [a3 + 0x578]\n  1610: a0 = u64 [a3 + 0x580]\n  1614: a1 = 0x100000000\n  1624: a1 = a1 ^ a2\n  1627: a1 = a1 | a0\n  1630: u64 [s1 + 0x260] = a2\n  1634: a2 = a2 >> 0x20\n  1637: a2 = a2 <u 0x1\n  1640: a2 = 0 if a0 != 0\n  1642: a2 = 0 if a1 == 0\n  1644: jump @63 if a2 != 0\n      : @62 (gas: 1)\n  1647: jump @918\n      : @63 (gas: 75)\n  1651: a0 = u64 [a3 + 0x570]\n  1655: u64 [s1 + 0x250] = a0\n  1659: a0 = u64 [a3 + 0x568]\n  1663: u64 [s1 + 0x258] = a0\n  1667: a0 = s1 + 0x2000\n  1671: i32 a0 = a0 + 0xffffffffffffffa0\n  1674: a1 = 0x24\n  1677: ecalli 5 // 'call_data_load'\n  1679: a1 = s1 + 0x1a18\n  1683: a0 = u64 [a1 + 0x5a0]\n  1687: u64 [s1 + 0x298] = a0\n  1691: a0 = u64 [a1 + 0x598]\n  1695: u64 [s1 + 0x290] = a0\n  1699: a0 = u64 [a1 + 0x590]\n  1703: u64 [s1 + 0x280] = a0\n  1707: a0 = u64 [a1 + 0x588]\n  1711: u64 [s1 + 0x288] = a0\n  1715: a1 = s1 + 0x2218\n  1719: u64 [a1 + 512] = 0\n  1723: u64 [a1 + 504] = 0\n  1727: u64 [a1 + 496] = 0\n  1731: u64 [a1 + 488] = 0\n  1735: u64 [a1 + 544] = 0\n  1739: u64 [a1 + 536] = 0\n  1743: u64 [a1 + 528] = 0\n  1747: u64 [a1 + 520] = 0\n  1751: u32 [a1 + 552] = 0x20\n  1756: a0 = s1 + 0x2000\n  1760: i32 a1 = a0 + 0x400\n  1764: a0 = s1 + 0x2000\n  1768: i32 a3 = a0 + 0x420\n  1772: a0 = s1 + 0x2000\n  1776: i32 a4 = a0 + 0x440\n  1780: a2 = 0xffffffffffffffff\n  1783: a0 = 0\n  1785: ecalli 9 // 'get_storage'\n  1787: a1 = s1 + 0x2218\n  1791: a0 = u64 [a1 + 0x210]\n  1795: u64 [s1 + 0x278] = a0\n  1799: a0 = u64 [a1 + 0x208]\n  1803: u64 [s1 + 0x270] = a0\n  1807: a0 = u32 [a1 + 0x218]\n  1811: u64 [s1 + 0x268] = a0\n  1815: a0 = s1 + 0x2000\n  1819: i32 a0 = a0 + 0xffffffffffffffc0\n  1822: ecalli 7 // 'caller'\n  1824: a2 = s1 + 0x1a18\n  1828: a0 = u64 [a2 + 0x5b0]\n  1832: a1 = u64 [a2 + 0x5a8]\n  1836: a2 = i32 [a2 + 0x5b8]\n  1840: a0 = reverse a0\n  1842: a3 = a0 >> 0x20\n  1845: a1 = reverse a1\n  1847: a4 = a1 << 0x20\n  1850: a3 = a3 | a4\n  1853: a0 = a0 << 0x20\n  1856: a2 = reverse a2\n  1858: a2 = a2 >> 0x20\n  1861: a0 = a0 | a2\n  1864: a1 = a1 >> 0x20\n  1867: a2 = u64 [s1 + 0x268]\n  1871: a1 = a1 ^ a2\n  1874: a2 = u64 [s1 + 0x270]\n  1878: a0 = a0 ^ a2\n  1881: a0 = a0 | a1\n  1884: a1 = u64 [s1 + 0x278]\n  1888: a1 = a1 ^ a3\n  1891: a0 = a0 | a1\n  1894: a0 = a0 <u 0x1\n  1897: u64 [s1 + 1944] = 0\n  1901: u64 [s1 + 1936] = 0\n  1905: u64 [s1 + 0x780] = a0\n  1909: a0 = s1 + 0x780\n  1913: u64 [s1 + 1928] = 0\n  1917: ra = 26, jump @1057\n      : @64 [@dyn 13] (gas: 7)\n  1923: a0 = sp + 0xffffffffffffffe0\n  1926: a0 = a0 & 0xffffffffffffffe0\n  1929: u64 [s1 + 0x278] = a0\n  1933: sp = a0\n  1935: i32 a0 = a0 + 0\n  1937: ecalli 0 // 'balance'\n  1938: fallthrough\n      : @65 (gas: 21)\n  1939: a1 = u64 [s1 + 0x278]\n  1943: a0 = u64 [a1 + 0x18]\n  1946: t0 = u64 [a1]\n  1948: a2 = u64 [a1 + 0x10]\n  1951: a3 = u64 [a1 + 0x8]\n  1954: a1 = u64 [s1 + 0x298]\n  1958: a4 = a1 ^ a0\n  1961: a1 = a0 <u a1\n  1964: a0 = u64 [s1 + 0x290]\n  1968: a5 = a2 <u a0\n  1971: a5 = a1 if a4 != 0\n  1974: a1 = u64 [s1 + 0x280]\n  1978: t1 = a1 ^ a3\n  1981: a3 = a3 <u a1\n  1984: a1 = u64 [s1 + 0x288]\n  1988: a1 = t0 <u a1\n  1991: a1 = a3 if t1 != 0\n  1994: a0 = a0 ^ a2\n  1997: a0 = a0 | a4\n  2000: a1 = a5 if a0 != 0\n  2003: jump @67 if a1 != 0\n      : @66 (gas: 1)\n  2006: jump @482\n      : @67 (gas: 3)\n  2009: a0 = 0x40\n  2012: a1 = 0x20\n  2015: ra = 28, jump @0\n      : @68 [@dyn 14] (gas: 100)\n  2020: a1 = u8 [a0 + 0x11]\n  2023: a2 = u8 [a0 + 0x10]\n  2026: a3 = u8 [a0 + 0x12]\n  2029: a4 = u8 [a0 + 0x13]\n  2032: a1 = a1 << 0x8\n  2035: a1 = a1 | a2\n  2038: a3 = a3 << 0x10\n  2041: a4 = a4 << 0x18\n  2044: a3 = a3 | a4\n  2047: a1 = a1 | a3\n  2050: a2 = u8 [a0 + 0x15]\n  2053: a3 = u8 [a0 + 0x14]\n  2056: a4 = u8 [a0 + 0x16]\n  2059: a5 = u8 [a0 + 0x17]\n  2062: a2 = a2 << 0x8\n  2065: a2 = a2 | a3\n  2068: a4 = a4 << 0x10\n  2071: a5 = a5 << 0x18\n  2074: a4 = a4 | a5\n  2077: a2 = a2 | a4\n  2080: a2 = a2 << 0x20\n  2083: t0 = a2 | a1\n  2086: a2 = u8 [a0 + 0x1]\n  2089: a3 = u8 [a0]\n  2091: a4 = u8 [a0 + 0x2]\n  2094: a5 = u8 [a0 + 0x3]\n  2097: a2 = a2 << 0x8\n  2100: a2 = a2 | a3\n  2103: a4 = a4 << 0x10\n  2106: a5 = a5 << 0x18\n  2109: a4 = a4 | a5\n  2112: a2 = a2 | a4\n  2115: a3 = u8 [a0 + 0x5]\n  2118: a4 = u8 [a0 + 0x4]\n  2121: a5 = u8 [a0 + 0x6]\n  2124: a1 = u8 [a0 + 0x7]\n  2127: a3 = a3 << 0x8\n  2130: a3 = a3 | a4\n  2133: a5 = a5 << 0x10\n  2136: a1 = a1 << 0x18\n  2139: a1 = a1 | a5\n  2142: a1 = a1 | a3\n  2145: a1 = a1 << 0x20\n  2148: t1 = a1 | a2\n  2151: a1 = u8 [a0 + 0x19]\n  2154: a3 = u8 [a0 + 0x18]\n  2157: a4 = u8 [a0 + 0x1a]\n  2160: a5 = u8 [a0 + 0x1b]\n  2163: a1 = a1 << 0x8\n  2166: a1 = a1 | a3\n  2169: a4 = a4 << 0x10\n  2172: a5 = a5 << 0x18\n  2175: a4 = a4 | a5\n  2178: a1 = a1 | a4\n  2181: a3 = u8 [a0 + 0x1d]\n  2184: a4 = u8 [a0 + 0x1c]\n  2187: a5 = u8 [a0 + 0x1e]\n  2190: a2 = u8 [a0 + 0x1f]\n  2193: a3 = a3 << 0x8\n  2196: a3 = a3 | a4\n  2199: a5 = a5 << 0x10\n  2202: a2 = a2 << 0x18\n  2205: a2 = a2 | a5\n  2208: a2 = a2 | a3\n  2211: a2 = a2 << 0x20\n  2214: a3 = a2 | a1\n  2217: a1 = u8 [a0 + 0x9]\n  2220: a2 = u8 [a0 + 0x8]\n  2223: a4 = u8 [a0 + 0xa]\n  2226: a5 = u8 [a0 + 0xb]\n  2229: a1 = a1 << 0x8\n  2232: a1 = a1 | a2\n  2235: a4 = a4 << 0x10\n  2238: a5 = a5 << 0x18\n  2241: a4 = a4 | a5\n  2244: a1 = a1 | a4\n  2247: a2 = u8 [a0 + 0xd]\n  2250: a4 = u8 [a0 + 0xc]\n  2253: a5 = u8 [a0 + 0xe]\n  2256: a0 = u8 [a0 + 0xf]\n  2259: a2 = a2 << 0x8\n  2262: a2 = a2 | a4\n  2265: a5 = a5 << 0x10\n  2268: a0 = a0 << 0x18\n  2271: a0 = a0 | a5\n  2274: a0 = a0 | a2\n  2277: a0 = a0 << 0x20\n  2280: a0 = a0 | a1\n  2283: a4 = reverse a0\n  2285: a2 = reverse a3\n  2287: a5 = reverse t1\n  2289: a3 = reverse t0\n  2291: a0 = a3 | a5\n  2294: a1 = a2 | a4\n  2297: a1 = a1 | a0\n  2300: a1 = a1 >> 0x20\n  2303: a0 = a0 | a4\n  2306: a0 = a0 << 0x20\n  2309: a0 = a0 | a1\n  2312: jump @70 if a0 == 0\n      : @69 (gas: 1)\n  2315: jump @799\n      : @70 (gas: 8)\n  2319: i32 a0 = a2 + 0\n  2321: a1 = 0x20\n  2324: u64 [s1 + 0x278] = a0\n  2328: u64 [s1 + 0x298] = a2\n  2332: u64 [s1 + 0x290] = a3\n  2336: u64 [s1 + 0x288] = a4\n  2340: u64 [s1 + 0x280] = a5\n  2344: ra = 30, jump @0\n      : @71 [@dyn 15] (gas: 43)\n  2349: u8 [a0 + 31] = 0\n  2352: u8 [a0 + 30] = 0\n  2355: u8 [a0 + 29] = 0\n  2358: u8 [a0 + 28] = 0\n  2361: u8 [a0 + 27] = 0\n  2364: u8 [a0 + 26] = 0\n  2367: u8 [a0 + 25] = 0\n  2370: u8 [a0 + 24] = 0\n  2373: u8 [a0 + 23] = 0\n  2376: u8 [a0 + 22] = 0\n  2379: u8 [a0 + 21] = 0\n  2382: u8 [a0 + 20] = 0\n  2385: u8 [a0 + 19] = 0\n  2388: u8 [a0 + 18] = 0\n  2391: u8 [a0 + 17] = 0\n  2394: u8 [a0 + 16] = 0\n  2397: u8 [a0 + 15] = 0\n  2400: u8 [a0 + 14] = 0\n  2403: u8 [a0 + 13] = 0\n  2406: u8 [a0 + 12] = 0\n  2409: u8 [a0 + 11] = 0\n  2412: u8 [a0 + 10] = 0\n  2415: u8 [a0 + 9] = 0\n  2418: u8 [a0 + 8] = 0\n  2421: u8 [a0 + 7] = 0\n  2424: u8 [a0 + 6] = 0\n  2427: u8 [a0 + 5] = 0\n  2430: u8 [a0 + 3] = 0xa0\n  2435: u8 [a0 + 2] = 0x79\n  2439: u8 [a0 + 1] = 0xc3\n  2444: u8 [a0 + 0] = 0x8\n  2447: a1 = u64 [s1 + 0x288]\n  2451: a3 = u64 [s1 + 0x280]\n  2455: a3 = a3 | a1\n  2458: a4 = 0x100000000\n  2468: a1 = 0xfffffffc\n  2478: a2 = u64 [s1 + 0x298]\n  2482: a1 = a2 <u a1\n  2485: a2 = u64 [s1 + 0x290]\n  2489: a1 = 0 if a2 != 0\n  2491: a1 = 0 if a3 != 0\n  2493: u8 [a0 + 4] = 0\n  2496: jump @73 if a1 != 0\n      : @72 (gas: 1)\n  2499: jump @799\n      : @73 (gas: 6)\n  2503: a0 = u64 [s1 + 0x278]\n  2507: i32 a0 = a0 + 0x4\n  2510: a1 = 0x20\n  2513: u64 [s1 + 0x288] = a3\n  2517: u64 [s1 + 0x280] = a4\n  2521: ra = 32, jump @0\n      : @74 [@dyn 16] (gas: 41)\n  2526: a4 = u64 [s1 + 0x288]\n  2530: a3 = u64 [s1 + 0x290]\n  2534: a2 = u64 [s1 + 0x298]\n  2538: u8 [a0 + 31] = 0x20\n  2542: u8 [a0 + 30] = 0\n  2545: u8 [a0 + 29] = 0\n  2548: u8 [a0 + 28] = 0\n  2551: u8 [a0 + 27] = 0\n  2554: u8 [a0 + 26] = 0\n  2557: u8 [a0 + 25] = 0\n  2560: u8 [a0 + 24] = 0\n  2563: u8 [a0 + 23] = 0\n  2566: u8 [a0 + 22] = 0\n  2569: u8 [a0 + 21] = 0\n  2572: u8 [a0 + 20] = 0\n  2575: u8 [a0 + 19] = 0\n  2578: u8 [a0 + 18] = 0\n  2581: u8 [a0 + 17] = 0\n  2584: u8 [a0 + 16] = 0\n  2587: u8 [a0 + 15] = 0\n  2590: u8 [a0 + 14] = 0\n  2593: u8 [a0 + 13] = 0\n  2596: u8 [a0 + 12] = 0\n  2599: u8 [a0 + 11] = 0\n  2602: u8 [a0 + 10] = 0\n  2605: u8 [a0 + 9] = 0\n  2608: u8 [a0 + 8] = 0\n  2611: u8 [a0 + 7] = 0\n  2614: u8 [a0 + 6] = 0\n  2617: u8 [a0 + 5] = 0\n  2620: u8 [a0 + 4] = 0\n  2623: u8 [a0 + 3] = 0\n  2626: u8 [a0 + 2] = 0\n  2629: u8 [a0 + 1] = 0\n  2632: a1 = u64 [s1 + 0x280]\n  2636: a1 = a1 + 0xffffffffffffffdc\n  2639: a1 = a2 <u a1\n  2642: a1 = 0 if a3 != 0\n  2644: a1 = 0 if a4 != 0\n  2646: u8 [a0 + 0] = 0\n  2648: jump @76 if a1 != 0\n      : @75 (gas: 1)\n  2651: jump @799\n      : @76 (gas: 4)\n  2655: a0 = u64 [s1 + 0x278]\n  2659: i32 a0 = a0 + 0x24\n  2662: a1 = 0x20\n  2665: ra = 34, jump @0\n      : @77 [@dyn 17] (gas: 40)\n  2670: u8 [a0 + 31] = 0x1d\n  2674: u8 [a0 + 30] = 0\n  2677: u8 [a0 + 29] = 0\n  2680: u8 [a0 + 28] = 0\n  2683: u8 [a0 + 27] = 0\n  2686: u8 [a0 + 26] = 0\n  2689: u8 [a0 + 25] = 0\n  2692: u8 [a0 + 24] = 0\n  2695: u8 [a0 + 23] = 0\n  2698: u8 [a0 + 22] = 0\n  2701: u8 [a0 + 21] = 0\n  2704: u8 [a0 + 20] = 0\n  2707: u8 [a0 + 19] = 0\n  2710: u8 [a0 + 18] = 0\n  2713: u8 [a0 + 17] = 0\n  2716: u8 [a0 + 16] = 0\n  2719: u8 [a0 + 15] = 0\n  2722: u8 [a0 + 14] = 0\n  2725: u8 [a0 + 13] = 0\n  2728: u8 [a0 + 12] = 0\n  2731: u8 [a0 + 11] = 0\n  2734: u8 [a0 + 10] = 0\n  2737: u8 [a0 + 9] = 0\n  2740: u8 [a0 + 8] = 0\n  2743: u8 [a0 + 7] = 0\n  2746: u8 [a0 + 6] = 0\n  2749: u8 [a0 + 5] = 0\n  2752: u8 [a0 + 4] = 0\n  2755: u8 [a0 + 3] = 0\n  2758: u8 [a0 + 2] = 0\n  2761: u8 [a0 + 1] = 0\n  2764: a1 = 0xffffffbc\n  2774: a2 = u64 [s1 + 0x298]\n  2778: a1 = a2 <u a1\n  2781: a2 = u64 [s1 + 0x290]\n  2785: a1 = 0 if a2 != 0\n  2787: a2 = u64 [s1 + 0x288]\n  2791: a1 = 0 if a2 != 0\n  2793: u8 [a0 + 0] = 0\n  2795: jump @79 if a1 != 0\n      : @78 (gas: 1)\n  2798: jump @799\n      : @79 (gas: 4)\n  2802: a0 = u64 [s1 + 0x278]\n  2806: i32 a0 = a0 + 0x44\n  2809: a1 = 0x20\n  2812: ra = 36, jump @0\n      : @80 [@dyn 18] (gas: 36)\n  2817: u8 [a0 + 31] = 0\n  2820: u8 [a0 + 30] = 0\n  2823: u8 [a0 + 29] = 0\n  2826: t0 = 0x65\n  2829: u8 [a0 + 0x1c] = t0\n  2832: u8 [a0 + 27] = 0x63\n  2836: u8 [a0 + 26] = 0x6e\n  2840: u8 [a0 + 25] = 0x61\n  2844: u8 [a0 + 24] = 0x6c\n  2848: u8 [a0 + 23] = 0x61\n  2852: u8 [a0 + 22] = 0x62\n  2856: u8 [a0 + 21] = 0x20\n  2860: a5 = 0x74\n  2863: u8 [a0 + 0x14] = a5\n  2866: u8 [a0 + 19] = 0x63\n  2870: u8 [a0 + 18] = 0x61\n  2874: u8 [a0 + 17] = 0x72\n  2878: u8 [a0 + 0x10] = a5\n  2881: u8 [a0 + 15] = 0x6e\n  2885: a4 = 0x6f\n  2888: u8 [a0 + 0xe] = a4\n  2891: u8 [a0 + 13] = 0x63\n  2895: u8 [a0 + 12] = 0x20\n  2899: u8 [a0 + 0xb] = a5\n  2902: u8 [a0 + 10] = 0x6e\n  2906: u8 [a0 + 0x9] = t0\n  2909: u8 [a0 + 8] = 0x69\n  2913: u8 [a0 + 7] = 0x63\n  2917: u8 [a0 + 6] = 0x69\n  2921: u8 [a0 + 5] = 0x66\n  2925: u8 [a0 + 4] = 0x66\n  2929: u8 [a0 + 3] = 0x75\n  2933: u8 [a0 + 2] = 0x73\n  2937: u8 [a0 + 1] = 0x6e\n  2941: u8 [a0 + 0] = 0x49\n  2944: jump @747\n      : @81 (gas: 1)\n  2948: jump @83 if a0 <=s 4166100031\n      : @82 (gas: 1)\n  2955: jump @143\n      : @83 (gas: 1)\n  2958: jump @85 if a0 != 2569374755\n      : @84 (gas: 1)\n  2965: jump @234\n      : @85 (gas: 1)\n  2968: jump @87 if a0 == 3215030467\n      : @86 (gas: 1)\n  2975: jump @376\n      : @87 (gas: 11)\n  2978: a0 = sp + 0xffffffffffffffe0\n  2981: a0 = a0 & 0xffffffffffffffe0\n  2984: u64 [s1 + 0x298] = a0\n  2988: sp = a0\n  2990: u64 [a0 + 24] = 0\n  2993: u64 [a0 + 16] = 0\n  2996: u64 [a0 + 8] = 0\n  2999: u64 [a0 + 0] = 0\n  3001: i32 a0 = a0 + 0\n  3003: ecalli 18 // 'value_transferred'\n  3005: fallthrough\n      : @88 (gas: 9)\n  3006: a3 = u64 [s1 + 0x298]\n  3010: a0 = u64 [a3 + 0x10]\n  3013: a1 = u64 [a3 + 0x18]\n  3016: a2 = u64 [a3 + 0x8]\n  3019: a3 = u64 [a3]\n  3021: a1 = a1 | a2\n  3024: a0 = a0 | a3\n  3027: a0 = a0 | a1\n  3030: jump @90 if a0 == 0\n      : @89 (gas: 1)\n  3033: jump @918\n      : @90 (gas: 3)\n  3037: a0 = u64 [s1 + 0x1a8]\n  3041: a0 = i32 [a0]\n  3043: jump @92 if a0 >u 35\n      : @91 (gas: 1)\n  3047: jump @918\n      : @92 (gas: 32)\n  3051: a0 = s1 + 0x2000\n  3055: i32 a0 = a0 + 0x2a0\n  3059: a1 = 0x4\n  3062: ecalli 5 // 'call_data_load'\n  3064: a1 = s1 + 0x2218\n  3068: a0 = u64 [a1 + 0xa0]\n  3072: u64 [s1 + 0x290] = a0\n  3076: a0 = u64 [a1 + 0x98]\n  3080: u64 [s1 + 0x298] = a0\n  3084: a0 = u64 [a1 + 0x90]\n  3088: u64 [s1 + 0x288] = a0\n  3092: a0 = u64 [a1 + 0x88]\n  3096: u64 [s1 + 0x280] = a0\n  3100: u64 [a1 + 512] = 0\n  3104: u64 [a1 + 504] = 0\n  3108: u64 [a1 + 496] = 0\n  3112: u64 [a1 + 488] = 0x3\n  3117: u64 [a1 + 544] = 0\n  3121: u64 [a1 + 536] = 0\n  3125: u64 [a1 + 528] = 0\n  3129: u64 [a1 + 520] = 0\n  3133: u32 [a1 + 552] = 0x20\n  3138: a0 = s1 + 0x2000\n  3142: i32 a1 = a0 + 0x400\n  3146: a0 = s1 + 0x2000\n  3150: i32 a3 = a0 + 0x420\n  3154: a0 = s1 + 0x2000\n  3158: i32 a4 = a0 + 0x440\n  3162: a2 = 0xffffffffffffffff\n  3165: a0 = 0\n  3167: ecalli 9 // 'get_storage'\n  3169: fallthrough\n      : @93 (gas: 21)\n  3170: t1 = u64 [s1 + 0x280]\n  3174: a5 = u64 [s1 + 0x288]\n  3178: t0 = u64 [s1 + 0x290]\n  3182: a2 = s1 + 0x2218\n  3186: a0 = u64 [a2 + 0x210]\n  3190: a1 = u64 [a2 + 0x208]\n  3194: t2 = u64 [a2 + 0x218]\n  3198: a3 = u64 [a2 + 0x220]\n  3202: a4 = a5 ^ a0\n  3205: a0 = a5 <u a0\n  3208: a1 = t1 <u a1\n  3211: a1 = a0 if a4 != 0\n  3214: a0 = t0 ^ a3\n  3217: a2 = t0 <u a3\n  3220: a3 = u64 [s1 + 0x298]\n  3224: a4 = a3 <u t2\n  3227: a4 = a2 if a0 != 0\n  3230: a2 = a3 ^ t2\n  3233: a0 = a0 | a2\n  3236: a1 = a4 if a0 != 0\n  3239: jump @95 if a1 != 0\n      : @94 (gas: 1)\n  3242: jump @910\n      : @95 (gas: 8)\n  3246: a2 = s1 + 0x1218\n  3250: u64 [a2 + 0x508] = t1\n  3254: u64 [a2 + 0x510] = a5\n  3258: u64 [a2 + 0x518] = a3\n  3262: a0 = s1 + 0x1740\n  3266: a1 = s1 + 0x1720\n  3270: u64 [a2 + 0x520] = t0\n  3274: ra = 38, jump @988\n      : @96 [@dyn 19] (gas: 16)\n  3280: a3 = s1 + 0x1218\n  3284: a2 = u64 [a3 + 0x528]\n  3288: u64 [s1 + 0x288] = a2\n  3292: a1 = u64 [a3 + 0x530]\n  3296: u64 [s1 + 0x290] = a1\n  3300: a4 = u64 [a3 + 0x538]\n  3304: u64 [s1 + 0x280] = a4\n  3308: a0 = u64 [a3 + 0x540]\n  3312: u64 [s1 + 0x298] = a0\n  3316: u64 [a3 + 0x4e0] = a0\n  3320: u64 [a3 + 0x4d8] = a4\n  3324: u64 [a3 + 0x4d0] = a1\n  3328: a0 = s1 + 0x1700\n  3332: a1 = s1 + 0x16e0\n  3336: u64 [a3 + 0x4c8] = a2\n  3340: ra = 40, jump @1018\n      : @97 [@dyn 20] (gas: 124)\n  3346: a1 = s1 + 0x1218\n  3350: a0 = u64 [a1 + 0x500]\n  3354: u64 [s1 + 0x260] = a0\n  3358: a0 = u64 [a1 + 0x4f8]\n  3362: u64 [s1 + 0x268] = a0\n  3366: a0 = u64 [a1 + 0x4f0]\n  3370: u64 [s1 + 0x270] = a0\n  3374: a0 = u64 [a1 + 0x4e8]\n  3378: u64 [s1 + 0x278] = a0\n  3382: a0 = u64 [s1 + 0x288]\n  3386: a0 = a0 + 0x1\n  3389: a1 = a0 <u 0x1\n  3392: a2 = u64 [s1 + 0x290]\n  3396: a1 = a1 + a2\n  3399: a2 = s1 + 0x2218\n  3403: u64 [a2 + 0x1f0] = a1\n  3407: a1 = a1 | a0\n  3410: u64 [a2 + 0x1e8] = a0\n  3414: a0 = a1 <u 0x1\n  3417: a1 = u64 [s1 + 0x280]\n  3421: a0 = a0 + a1\n  3424: u64 [a2 + 0x1f8] = a0\n  3428: a0 = a0 <u a1\n  3431: a1 = u64 [s1 + 0x298]\n  3435: a0 = a0 + a1\n  3438: u64 [a2 + 0x200] = a0\n  3442: u64 [a2 + 544] = 0\n  3446: u64 [a2 + 536] = 0\n  3450: u64 [a2 + 528] = 0\n  3454: u64 [a2 + 520] = 0\n  3458: u32 [a2 + 552] = 0x20\n  3463: a0 = s1 + 0x2000\n  3467: i32 a1 = a0 + 0x400\n  3471: a0 = s1 + 0x2000\n  3475: i32 a3 = a0 + 0x420\n  3479: a0 = s1 + 0x2000\n  3483: i32 a4 = a0 + 0x440\n  3487: a2 = 0xffffffffffffffff\n  3490: a0 = 0\n  3492: ecalli 9 // 'get_storage'\n  3494: a1 = u64 [s1 + 0x288]\n  3498: a0 = a1 + 0x2\n  3501: a1 = a0 <u a1\n  3504: a3 = u64 [s1 + 0x290]\n  3508: a2 = a3 + a1\n  3511: a3 = a2 <u a3\n  3514: a3 = a1 if a1 == 0\n  3517: a1 = u64 [s1 + 0x280]\n  3521: a3 = a3 + a1\n  3524: a1 = a3 <u a1\n  3527: a4 = u64 [s1 + 0x298]\n  3531: a1 = a1 + a4\n  3534: a4 = s1 + 0x2218\n  3538: u64 [a4 + 0x200] = a1\n  3542: a1 = u64 [a4 + 0x220]\n  3546: u64 [s1 + 0x258] = a1\n  3550: u64 [a4 + 0x1f8] = a3\n  3554: a1 = u64 [a4 + 0x218]\n  3558: u64 [s1 + 0x250] = a1\n  3562: u64 [a4 + 0x1f0] = a2\n  3566: a1 = u64 [a4 + 0x210]\n  3570: u64 [s1 + 0x248] = a1\n  3574: u64 [a4 + 0x1e8] = a0\n  3578: a0 = u64 [a4 + 0x208]\n  3582: u64 [s1 + 0x240] = a0\n  3586: u64 [a4 + 544] = 0\n  3590: u64 [a4 + 536] = 0\n  3594: u64 [a4 + 528] = 0\n  3598: u64 [a4 + 520] = 0\n  3602: u32 [a4 + 552] = 0x20\n  3607: a0 = s1 + 0x2000\n  3611: i32 a1 = a0 + 0x400\n  3615: a0 = s1 + 0x2000\n  3619: i32 a3 = a0 + 0x420\n  3623: a0 = s1 + 0x2000\n  3627: i32 a4 = a0 + 0x440\n  3631: a2 = 0xffffffffffffffff\n  3634: a0 = 0\n  3636: ecalli 9 // 'get_storage'\n  3638: a1 = u64 [s1 + 0x288]\n  3642: a0 = a1 + 0x3\n  3645: a1 = a0 <u a1\n  3648: a3 = u64 [s1 + 0x290]\n  3652: a2 = a3 + a1\n  3655: a3 = a2 <u a3\n  3658: a3 = a1 if a1 == 0\n  3661: a1 = u64 [s1 + 0x280]\n  3665: a3 = a3 + a1\n  3668: a1 = a3 <u a1\n  3671: a4 = u64 [s1 + 0x298]\n  3675: a1 = a1 + a4\n  3678: a4 = s1 + 0x2218\n  3682: u64 [a4 + 0x200] = a1\n  3686: u64 [a4 + 0x1f8] = a3\n  3690: a1 = u64 [a4 + 0x220]\n  3694: u64 [s1 + 0x238] = a1\n  3698: u64 [a4 + 0x1f0] = a2\n  3702: a1 = u64 [a4 + 0x218]\n  3706: u64 [s1 + 0x230] = a1\n  3710: u64 [a4 + 0x1e8] = a0\n  3714: a0 = u64 [a4 + 0x210]\n  3718: u64 [s1 + 0x228] = a0\n  3722: u32 [a4 + 552] = 0x20\n  3727: a0 = u64 [a4 + 0x208]\n  3731: u64 [s1 + 0x220] = a0\n  3735: u64 [a4 + 544] = 0\n  3739: u64 [a4 + 536] = 0\n  3743: u64 [a4 + 528] = 0\n  3747: u64 [a4 + 520] = 0\n  3751: a0 = s1 + 0x2000\n  3755: i32 a1 = a0 + 0x400\n  3759: a0 = s1 + 0x2000\n  3763: i32 a3 = a0 + 0x420\n  3767: a0 = s1 + 0x2000\n  3771: i32 a4 = a0 + 0x440\n  3775: a2 = 0xffffffffffffffff\n  3778: a0 = 0\n  3780: ecalli 9 // 'get_storage'\n  3782: a0 = s1 + 0x2218\n  3786: a0 = u8 [a0 + 0x208]\n  3790: u64 [s1 + 0x218] = a0\n  3794: a0 = 0x40\n  3797: a1 = 0x20\n  3800: ra = 42, jump @0\n      : @98 [@dyn 21] (gas: 101)\n  3805: a1 = u8 [a0 + 0x11]\n  3808: a2 = u8 [a0 + 0x10]\n  3811: a3 = u8 [a0 + 0x12]\n  3814: a4 = u8 [a0 + 0x13]\n  3817: a1 = a1 << 0x8\n  3820: a1 = a1 | a2\n  3823: a3 = a3 << 0x10\n  3826: a4 = a4 << 0x18\n  3829: a3 = a3 | a4\n  3832: a1 = a1 | a3\n  3835: a2 = u8 [a0 + 0x15]\n  3838: a3 = u8 [a0 + 0x14]\n  3841: a4 = u8 [a0 + 0x16]\n  3844: a5 = u8 [a0 + 0x17]\n  3847: a2 = a2 << 0x8\n  3850: a2 = a2 | a3\n  3853: a4 = a4 << 0x10\n  3856: a5 = a5 << 0x18\n  3859: a4 = a4 | a5\n  3862: a2 = a2 | a4\n  3865: a2 = a2 << 0x20\n  3868: t0 = a2 | a1\n  3871: a2 = u8 [a0 + 0x1]\n  3874: a3 = u8 [a0]\n  3876: a4 = u8 [a0 + 0x2]\n  3879: a5 = u8 [a0 + 0x3]\n  3882: a2 = a2 << 0x8\n  3885: a2 = a2 | a3\n  3888: a4 = a4 << 0x10\n  3891: a5 = a5 << 0x18\n  3894: a4 = a4 | a5\n  3897: a2 = a2 | a4\n  3900: a3 = u8 [a0 + 0x5]\n  3903: a4 = u8 [a0 + 0x4]\n  3906: a5 = u8 [a0 + 0x6]\n  3909: a1 = u8 [a0 + 0x7]\n  3912: a3 = a3 << 0x8\n  3915: a3 = a3 | a4\n  3918: a5 = a5 << 0x10\n  3921: a1 = a1 << 0x18\n  3924: a1 = a1 | a5\n  3927: a1 = a1 | a3\n  3930: a1 = a1 << 0x20\n  3933: t1 = a1 | a2\n  3936: a1 = u8 [a0 + 0x19]\n  3939: a3 = u8 [a0 + 0x18]\n  3942: a4 = u8 [a0 + 0x1a]\n  3945: a5 = u8 [a0 + 0x1b]\n  3948: a1 = a1 << 0x8\n  3951: a1 = a1 | a3\n  3954: a4 = a4 << 0x10\n  3957: a5 = a5 << 0x18\n  3960: a4 = a4 | a5\n  3963: a1 = a1 | a4\n  3966: a3 = u8 [a0 + 0x1d]\n  3969: a4 = u8 [a0 + 0x1c]\n  3972: a5 = u8 [a0 + 0x1e]\n  3975: a2 = u8 [a0 + 0x1f]\n  3978: a3 = a3 << 0x8\n  3981: a3 = a3 | a4\n  3984: a5 = a5 << 0x10\n  3987: a2 = a2 << 0x18\n  3990: a2 = a2 | a5\n  3993: a2 = a2 | a3\n  3996: a2 = a2 << 0x20\n  3999: a3 = a2 | a1\n  4002: a1 = u8 [a0 + 0x9]\n  4005: a2 = u8 [a0 + 0x8]\n  4008: a4 = u8 [a0 + 0xa]\n  4011: a5 = u8 [a0 + 0xb]\n  4014: a1 = a1 << 0x8\n  4017: a1 = a1 | a2\n  4020: a4 = a4 << 0x10\n  4023: a5 = a5 << 0x18\n  4026: a4 = a4 | a5\n  4029: a1 = a1 | a4\n  4032: a2 = u8 [a0 + 0xd]\n  4035: a4 = u8 [a0 + 0xc]\n  4038: a5 = u8 [a0 + 0xe]\n  4041: a0 = u8 [a0 + 0xf]\n  4044: a2 = a2 << 0x8\n  4047: a2 = a2 | a4\n  4050: a5 = a5 << 0x10\n  4053: a0 = a0 << 0x18\n  4056: a0 = a0 | a5\n  4059: a0 = a0 | a2\n  4062: a0 = a0 << 0x20\n  4065: a0 = a0 | a1\n  4068: a4 = reverse a0\n  4070: a2 = reverse a3\n  4072: a3 = reverse t1\n  4074: a0 = reverse t0\n  4076: u64 [s1 + 0x290] = a0\n  4080: a0 = a0 | a3\n  4083: a1 = a2 | a4\n  4086: a1 = a1 | a0\n  4089: a1 = a1 >> 0x20\n  4092: a0 = a0 | a4\n  4095: a0 = a0 << 0x20\n  4098: a0 = a0 | a1\n  4101: jump @100 if a0 == 0\n      : @99 (gas: 1)\n  4104: jump @799\n      : @100 (gas: 7)\n  4108: i32 a0 = a2 + 0\n  4110: a1 = 0x20\n  4113: u64 [s1 + 0x210] = a0\n  4117: u64 [s1 + 0x298] = a2\n  4121: u64 [s1 + 0x288] = a4\n  4125: u64 [s1 + 0x280] = a3\n  4129: ra = 44, jump @0\n      : @101 [@dyn 22] (gas: 63)\n  4134: u8 [a0 + 31] = 0x80\n  4139: u8 [a0 + 30] = 0\n  4142: u8 [a0 + 29] = 0\n  4145: u8 [a0 + 28] = 0\n  4148: u8 [a0 + 27] = 0\n  4151: u8 [a0 + 26] = 0\n  4154: u8 [a0 + 25] = 0\n  4157: u8 [a0 + 24] = 0\n  4160: u8 [a0 + 23] = 0\n  4163: u8 [a0 + 22] = 0\n  4166: u8 [a0 + 21] = 0\n  4169: u8 [a0 + 20] = 0\n  4172: u8 [a0 + 19] = 0\n  4175: u8 [a0 + 18] = 0\n  4178: u8 [a0 + 17] = 0\n  4181: u8 [a0 + 16] = 0\n  4184: u8 [a0 + 15] = 0\n  4187: u8 [a0 + 14] = 0\n  4190: u8 [a0 + 13] = 0\n  4193: u8 [a0 + 12] = 0\n  4196: u8 [a0 + 11] = 0\n  4199: u8 [a0 + 10] = 0\n  4202: u8 [a0 + 9] = 0\n  4205: u8 [a0 + 8] = 0\n  4208: u8 [a0 + 7] = 0\n  4211: u8 [a0 + 6] = 0\n  4214: u8 [a0 + 5] = 0\n  4217: u8 [a0 + 4] = 0\n  4220: u8 [a0 + 3] = 0\n  4223: u8 [a0 + 2] = 0\n  4226: u8 [a0 + 1] = 0\n  4229: u8 [a0 + 0] = 0\n  4231: a0 = u64 [s1 + 0x298]\n  4235: a0 = a0 + 0x80\n  4239: a1 = u64 [s1 + 0x298]\n  4243: a1 = a0 <u a1\n  4246: a3 = u64 [s1 + 0x290]\n  4250: a2 = a3 + a1\n  4253: a3 = a2 <u a3\n  4256: a3 = a1 if a1 == 0\n  4259: a1 = u64 [s1 + 0x288]\n  4263: a3 = a3 + a1\n  4266: a1 = u64 [s1 + 0x288]\n  4270: a1 = a3 <u a1\n  4273: a4 = u64 [s1 + 0x280]\n  4277: a4 = a4 + a1\n  4280: a5 = s1 + 0x1218\n  4284: u64 [a5 + 0x470] = a2\n  4288: u64 [a5 + 0x468] = a0\n  4292: a0 = u64 [s1 + 0x260]\n  4296: u64 [a5 + 0x4a0] = a0\n  4300: a0 = u64 [s1 + 0x268]\n  4304: u64 [a5 + 0x498] = a0\n  4308: a0 = u64 [s1 + 0x270]\n  4312: u64 [a5 + 0x490] = a0\n  4316: a0 = u64 [s1 + 0x278]\n  4320: u64 [a5 + 0x488] = a0\n  4324: u64 [a5 + 0x478] = a3\n  4328: a0 = s1 + 0x16c0\n  4332: a1 = s1 + 0x16a0\n  4336: a2 = s1 + 0x1680\n  4340: u64 [a5 + 0x480] = a4\n  4344: ra = 46, jump @964\n      : @102 [@dyn 23] (gas: 11)\n  4350: a0 = u64 [s1 + 0x288]\n  4354: a1 = u64 [s1 + 0x280]\n  4358: a2 = a0 | a1\n  4361: a3 = 0x100000000\n  4371: a0 = 0xffffffe0\n  4381: a1 = u64 [s1 + 0x298]\n  4385: a0 = a1 <u a0\n  4388: a1 = u64 [s1 + 0x290]\n  4392: a0 = 0 if a1 != 0\n  4394: a0 = 0 if a2 != 0\n  4396: jump @104 if a0 != 0\n      : @103 (gas: 1)\n  4399: jump @799\n      : @104 (gas: 15)\n  4403: a0 = s1 + 0x1218\n  4407: a1 = u64 [a0 + 0x4c0]\n  4411: u64 [s1 + 0x208] = a1\n  4415: a1 = u64 [a0 + 0x4b8]\n  4419: u64 [s1 + 0x200] = a1\n  4423: a1 = u64 [a0 + 0x4b0]\n  4427: u64 [s1 + 0x260] = a1\n  4431: a0 = u64 [a0 + 0x4a8]\n  4435: u64 [s1 + 0x268] = a0\n  4439: a0 = u64 [s1 + 0x210]\n  4443: i32 a0 = a0 + 0x20\n  4446: a1 = 0x20\n  4449: u64 [s1 + 0x278] = a2\n  4453: u64 [s1 + 0x270] = a3\n  4457: ra = 48, jump @0\n      : @105 [@dyn 24] (gas: 77)\n  4462: a1 = u64 [s1 + 0x258]\n  4466: a1 = reverse a1\n  4468: a2 = u64 [s1 + 0x250]\n  4472: a2 = reverse a2\n  4474: a3 = u64 [s1 + 0x248]\n  4478: a3 = reverse a3\n  4480: a4 = u64 [s1 + 0x240]\n  4484: a4 = reverse a4\n  4486: a5 = a4 >> 0x38\n  4489: u8 [a0 + 0x1f] = a5\n  4492: a5 = a4 >> 0x30\n  4495: u8 [a0 + 0x1e] = a5\n  4498: a5 = a4 >> 0x28\n  4501: u8 [a0 + 0x1d] = a5\n  4504: a5 = a4 >> 0x20\n  4507: u8 [a0 + 0x1c] = a5\n  4510: a5 = a4 >> 0x18\n  4513: u8 [a0 + 0x1b] = a5\n  4516: a5 = a4 >> 0x10\n  4519: u8 [a0 + 0x1a] = a5\n  4522: a5 = a4 >> 0x8\n  4525: u8 [a0 + 0x19] = a5\n  4528: u8 [a0 + 0x18] = a4\n  4531: u8 [a0 + 0x10] = a3\n  4534: a4 = a3 >> 0x38\n  4537: u8 [a0 + 0x17] = a4\n  4540: a4 = a3 >> 0x30\n  4543: u8 [a0 + 0x16] = a4\n  4546: a4 = a3 >> 0x28\n  4549: u8 [a0 + 0x15] = a4\n  4552: a4 = a3 >> 0x20\n  4555: u8 [a0 + 0x14] = a4\n  4558: a4 = a3 >> 0x18\n  4561: u8 [a0 + 0x13] = a4\n  4564: a4 = a3 >> 0x10\n  4567: u8 [a0 + 0x12] = a4\n  4570: a3 = a3 >> 0x8\n  4573: u8 [a0 + 0x11] = a3\n  4576: u8 [a0 + 0x8] = a2\n  4579: a3 = a2 >> 0x38\n  4582: u8 [a0 + 0xf] = a3\n  4585: a3 = a2 >> 0x30\n  4588: u8 [a0 + 0xe] = a3\n  4591: a3 = a2 >> 0x28\n  4594: u8 [a0 + 0xd] = a3\n  4597: a3 = a2 >> 0x20\n  4600: u8 [a0 + 0xc] = a3\n  4603: a3 = a2 >> 0x18\n  4606: u8 [a0 + 0xb] = a3\n  4609: a3 = a2 >> 0x10\n  4612: u8 [a0 + 0xa] = a3\n  4615: a2 = a2 >> 0x8\n  4618: u8 [a0 + 0x9] = a2\n  4621: u8 [a0] = a1\n  4623: a2 = a1 >> 0x38\n  4626: u8 [a0 + 0x7] = a2\n  4629: a2 = a1 >> 0x30\n  4632: u8 [a0 + 0x6] = a2\n  4635: a2 = a1 >> 0x28\n  4638: u8 [a0 + 0x5] = a2\n  4641: a2 = a1 >> 0x20\n  4644: u8 [a0 + 0x4] = a2\n  4647: a2 = a1 >> 0x18\n  4650: u8 [a0 + 0x3] = a2\n  4653: a2 = a1 >> 0x10\n  4656: u8 [a0 + 0x2] = a2\n  4659: a1 = a1 >> 0x8\n  4662: a2 = u64 [s1 + 0x270]\n  4666: a2 = a2 + 0xffffffffffffffc0\n  4669: a3 = u64 [s1 + 0x298]\n  4673: a2 = a3 <u a2\n  4676: a3 = u64 [s1 + 0x290]\n  4680: a2 = 0 if a3 != 0\n  4682: a3 = u64 [s1 + 0x278]\n  4686: a2 = 0 if a3 != 0\n  4688: u8 [a0 + 0x1] = a1\n  4691: jump @107 if a2 != 0\n      : @106 (gas: 1)\n  4694: jump @799\n      : @107 (gas: 4)\n  4698: a0 = u64 [s1 + 0x210]\n  4702: i32 a0 = a0 + 0x40\n  4705: a1 = 0x20\n  4708: ra = 50, jump @0\n      : @108 [@dyn 25] (gas: 76)\n  4713: a1 = u64 [s1 + 0x238]\n  4717: a1 = reverse a1\n  4719: a2 = u64 [s1 + 0x230]\n  4723: a2 = reverse a2\n  4725: a3 = u64 [s1 + 0x228]\n  4729: a3 = reverse a3\n  4731: a4 = u64 [s1 + 0x220]\n  4735: a4 = reverse a4\n  4737: a5 = a4 >> 0x38\n  4740: u8 [a0 + 0x1f] = a5\n  4743: a5 = a4 >> 0x30\n  4746: u8 [a0 + 0x1e] = a5\n  4749: a5 = a4 >> 0x28\n  4752: u8 [a0 + 0x1d] = a5\n  4755: a5 = a4 >> 0x20\n  4758: u8 [a0 + 0x1c] = a5\n  4761: a5 = a4 >> 0x18\n  4764: u8 [a0 + 0x1b] = a5\n  4767: a5 = a4 >> 0x10\n  4770: u8 [a0 + 0x1a] = a5\n  4773: a5 = a4 >> 0x8\n  4776: u8 [a0 + 0x19] = a5\n  4779: u8 [a0 + 0x18] = a4\n  4782: u8 [a0 + 0x10] = a3\n  4785: a4 = a3 >> 0x38\n  4788: u8 [a0 + 0x17] = a4\n  4791: a4 = a3 >> 0x30\n  4794: u8 [a0 + 0x16] = a4\n  4797: a4 = a3 >> 0x28\n  4800: u8 [a0 + 0x15] = a4\n  4803: a4 = a3 >> 0x20\n  4806: u8 [a0 + 0x14] = a4\n  4809: a4 = a3 >> 0x18\n  4812: u8 [a0 + 0x13] = a4\n  4815: a4 = a3 >> 0x10\n  4818: u8 [a0 + 0x12] = a4\n  4821: a3 = a3 >> 0x8\n  4824: u8 [a0 + 0x11] = a3\n  4827: u8 [a0 + 0x8] = a2\n  4830: a3 = a2 >> 0x38\n  4833: u8 [a0 + 0xf] = a3\n  4836: a3 = a2 >> 0x30\n  4839: u8 [a0 + 0xe] = a3\n  4842: a3 = a2 >> 0x28\n  4845: u8 [a0 + 0xd] = a3\n  4848: a3 = a2 >> 0x20\n  4851: u8 [a0 + 0xc] = a3\n  4854: a3 = a2 >> 0x18\n  4857: u8 [a0 + 0xb] = a3\n  4860: a3 = a2 >> 0x10\n  4863: u8 [a0 + 0xa] = a3\n  4866: a3 = u64 [s1 + 0x298]\n  4870: a2 = a2 >> 0x8\n  4873: u8 [a0 + 0x9] = a2\n  4876: u8 [a0] = a1\n  4878: a2 = a1 >> 0x38\n  4881: u8 [a0 + 0x7] = a2\n  4884: a2 = a1 >> 0x30\n  4887: u8 [a0 + 0x6] = a2\n  4890: a2 = a1 >> 0x28\n  4893: u8 [a0 + 0x5] = a2\n  4896: a2 = a1 >> 0x20\n  4899: u8 [a0 + 0x4] = a2\n  4902: a2 = a1 >> 0x18\n  4905: u8 [a0 + 0x3] = a2\n  4908: a2 = a1 >> 0x10\n  4911: u8 [a0 + 0x2] = a2\n  4914: a1 = a1 >> 0x8\n  4917: a2 = 0xffffffa0\n  4927: a2 = a3 <u a2\n  4930: a4 = u64 [s1 + 0x290]\n  4934: a2 = 0 if a4 != 0\n  4936: a4 = u64 [s1 + 0x278]\n  4940: a2 = 0 if a4 != 0\n  4942: u8 [a0 + 0x1] = a1\n  4945: jump @110 if a2 != 0\n      : @109 (gas: 1)\n  4948: jump @799\n      : @110 (gas: 7)\n  4952: a0 = u64 [s1 + 0x218]\n  4956: a0 = a0 >u 0\n  4958: u64 [s1 + 0x278] = a0\n  4962: a0 = u64 [s1 + 0x210]\n  4966: i32 a0 = a0 + 0x60\n  4969: a1 = 0x20\n  4972: ra = 52, jump @0\n      : @111 [@dyn 26] (gas: 64)\n  4977: a1 = u64 [s1 + 0x278]\n  4981: u8 [a0 + 0x1f] = a1\n  4984: t1 = u64 [s1 + 0x268]\n  4988: a1 = u64 [s1 + 0x298]\n  4992: t0 = t1 <u a1\n  4995: a1 = u64 [s1 + 0x290]\n  4999: a2 = u64 [s1 + 0x260]\n  5003: a4 = a2 ^ a1\n  5006: a3 = a2 <u a1\n  5009: a3 = t0 if a4 == 0\n  5012: a4 = u64 [s1 + 0x288]\n  5016: a5 = u64 [s1 + 0x200]\n  5020: t2 = a5 - a4\n  5023: ra = a5 <u a4\n  5026: a5 = u64 [s1 + 0x280]\n  5030: a4 = u64 [s1 + 0x208]\n  5034: a5 = a4 - a5\n  5037: a5 = a5 - ra\n  5040: a4 = t2 <u a3\n  5043: a4 = a5 - a4\n  5046: a5 = t2 - a3\n  5049: a3 = a2 - a1\n  5052: a3 = a3 - t0\n  5055: a1 = u64 [s1 + 0x298]\n  5059: a1 = t1 - a1\n  5062: a3 = a3 | a4\n  5065: a4 = a1 | a5\n  5068: a4 = a4 | a3\n  5071: a2 = a3 | a5\n  5074: a4 = a4 >> 0x20\n  5077: a2 = a2 << 0x20\n  5080: a2 = a2 | a4\n  5083: u8 [a0 + 30] = 0\n  5086: u8 [a0 + 29] = 0\n  5089: u8 [a0 + 28] = 0\n  5092: u8 [a0 + 27] = 0\n  5095: u8 [a0 + 26] = 0\n  5098: u8 [a0 + 25] = 0\n  5101: u8 [a0 + 24] = 0\n  5104: u8 [a0 + 23] = 0\n  5107: u8 [a0 + 22] = 0\n  5110: u8 [a0 + 21] = 0\n  5113: u8 [a0 + 20] = 0\n  5116: u8 [a0 + 19] = 0\n  5119: u8 [a0 + 18] = 0\n  5122: u8 [a0 + 17] = 0\n  5125: u8 [a0 + 16] = 0\n  5128: u8 [a0 + 15] = 0\n  5131: u8 [a0 + 14] = 0\n  5134: u8 [a0 + 13] = 0\n  5137: u8 [a0 + 12] = 0\n  5140: u8 [a0 + 11] = 0\n  5143: u8 [a0 + 10] = 0\n  5146: u8 [a0 + 9] = 0\n  5149: u8 [a0 + 8] = 0\n  5152: u8 [a0 + 7] = 0\n  5155: u8 [a0 + 6] = 0\n  5158: u8 [a0 + 5] = 0\n  5161: u8 [a0 + 4] = 0\n  5164: u8 [a0 + 3] = 0\n  5167: u8 [a0 + 2] = 0\n  5170: u8 [a0 + 1] = 0\n  5173: u8 [a0 + 0] = 0\n  5175: jump @113 if a2 == 0\n      : @112 (gas: 1)\n  5178: jump @799\n      : @113 (gas: 5)\n  5182: i32 a1 = a1 + 0\n  5184: u64 [s1 + 0x298] = a1\n  5188: a0 = u64 [s1 + 0x210]\n  5192: ra = 0xfe\n  5196: jump @0\n      : @114 (gas: 1)\n  5199: jump @116 if a0 != 153673394\n      : @115 (gas: 1)\n  5206: jump @213\n      : @116 (gas: 1)\n  5209: jump @118 if a0 == 430452555\n      : @117 (gas: 1)\n  5216: jump @271\n      : @118 (gas: 11)\n  5219: a0 = sp + 0xffffffffffffffe0\n  5222: a0 = a0 & 0xffffffffffffffe0\n  5225: u64 [s1 + 0x298] = a0\n  5229: sp = a0\n  5231: u64 [a0 + 24] = 0\n  5234: u64 [a0 + 16] = 0\n  5237: u64 [a0 + 8] = 0\n  5240: u64 [a0 + 0] = 0\n  5242: i32 a0 = a0 + 0\n  5244: ecalli 18 // 'value_transferred'\n  5246: fallthrough\n      : @119 (gas: 9)\n  5247: a3 = u64 [s1 + 0x298]\n  5251: a0 = u64 [a3 + 0x10]\n  5254: a1 = u64 [a3 + 0x18]\n  5257: a2 = u64 [a3 + 0x8]\n  5260: a3 = u64 [a3]\n  5262: a1 = a1 | a2\n  5265: a0 = a0 | a3\n  5268: a0 = a0 | a1\n  5271: jump @121 if a0 == 0\n      : @120 (gas: 1)\n  5274: jump @918\n      : @121 (gas: 3)\n  5278: a0 = u64 [s1 + 0x1a8]\n  5282: a0 = i32 [a0]\n  5284: jump @123 if a0 >u 35\n      : @122 (gas: 1)\n  5288: jump @918\n      : @123 (gas: 71)\n  5292: a0 = s1 + 0x2000\n  5296: i32 a0 = a0 + 0xffffffffffffff20\n  5300: a1 = 0x4\n  5303: ecalli 5 // 'call_data_load'\n  5305: a1 = s1 + 0x1a18\n  5309: a0 = u64 [a1 + 0x520]\n  5313: u64 [s1 + 0x238] = a0\n  5317: a0 = u64 [a1 + 0x518]\n  5321: u64 [s1 + 0x230] = a0\n  5325: a0 = u64 [a1 + 0x510]\n  5329: u64 [s1 + 0x228] = a0\n  5333: a0 = u64 [a1 + 0x508]\n  5337: u64 [s1 + 0x220] = a0\n  5341: a1 = s1 + 0x2218\n  5345: u64 [a1 + 512] = 0\n  5349: u64 [a1 + 504] = 0\n  5353: u64 [a1 + 496] = 0\n  5357: u64 [a1 + 488] = 0\n  5361: u64 [a1 + 544] = 0\n  5365: u64 [a1 + 536] = 0\n  5369: u64 [a1 + 528] = 0\n  5373: u64 [a1 + 520] = 0\n  5377: u32 [a1 + 552] = 0x20\n  5382: a0 = s1 + 0x2000\n  5386: i32 a1 = a0 + 0x400\n  5390: a0 = s1 + 0x2000\n  5394: i32 a3 = a0 + 0x420\n  5398: a0 = s1 + 0x2000\n  5402: i32 a4 = a0 + 0x440\n  5406: a2 = 0xffffffffffffffff\n  5409: a0 = 0\n  5411: ecalli 9 // 'get_storage'\n  5413: a0 = s1 + 0x2218\n  5417: a1 = u64 [a0 + 0x210]\n  5421: u64 [s1 + 0x298] = a1\n  5425: a1 = u64 [a0 + 0x208]\n  5429: u64 [s1 + 0x290] = a1\n  5433: a0 = u32 [a0 + 0x218]\n  5437: u64 [s1 + 0x288] = a0\n  5441: a0 = s1 + 0x2000\n  5445: i32 a0 = a0 + 0xffffffffffffff40\n  5449: ecalli 7 // 'caller'\n  5451: a2 = s1 + 0x1a18\n  5455: a0 = u64 [a2 + 0x530]\n  5459: a1 = u64 [a2 + 0x528]\n  5463: a2 = i32 [a2 + 0x538]\n  5467: a0 = reverse a0\n  5469: a3 = a0 >> 0x20\n  5472: a1 = reverse a1\n  5474: a4 = a1 << 0x20\n  5477: a3 = a3 | a4\n  5480: a0 = a0 << 0x20\n  5483: a2 = reverse a2\n  5485: a2 = a2 >> 0x20\n  5488: a0 = a0 | a2\n  5491: a1 = a1 >> 0x20\n  5494: a2 = u64 [s1 + 0x288]\n  5498: a1 = a1 ^ a2\n  5501: a2 = u64 [s1 + 0x290]\n  5505: a0 = a0 ^ a2\n  5508: a0 = a0 | a1\n  5511: a1 = u64 [s1 + 0x298]\n  5515: a1 = a1 ^ a3\n  5518: a0 = a0 | a1\n  5521: a0 = a0 <u 0x1\n  5524: u64 [s1 + 1496] = 0\n  5528: u64 [s1 + 1488] = 0\n  5532: u64 [s1 + 0x5c0] = a0\n  5536: a0 = s1 + 0x5c0\n  5540: u64 [s1 + 1480] = 0\n  5544: ra = 54, jump @1057\n      : @124 [@dyn 27] (gas: 45)\n  5550: a1 = s1 + 0x2218\n  5554: u64 [a1 + 512] = 0\n  5558: u64 [a1 + 504] = 0\n  5562: u64 [a1 + 496] = 0\n  5566: u64 [a1 + 488] = 0x3\n  5571: u64 [a1 + 544] = 0\n  5575: u64 [a1 + 536] = 0\n  5579: u64 [a1 + 528] = 0\n  5583: u64 [a1 + 520] = 0\n  5587: u32 [a1 + 552] = 0x20\n  5592: a0 = s1 + 0x2000\n  5596: i32 a1 = a0 + 0x400\n  5600: a0 = s1 + 0x2000\n  5604: i32 a3 = a0 + 0x420\n  5608: a0 = s1 + 0x2000\n  5612: i32 a4 = a0 + 0x440\n  5616: a2 = 0xffffffffffffffff\n  5619: a0 = 0\n  5621: ecalli 9 // 'get_storage'\n  5623: a3 = s1 + 0x2218\n  5627: a0 = u64 [a3 + 0x210]\n  5631: a1 = u64 [a3 + 0x208]\n  5635: a2 = u64 [a3 + 0x218]\n  5639: a3 = u64 [a3 + 0x220]\n  5643: a5 = u64 [s1 + 0x228]\n  5647: a4 = a5 ^ a0\n  5650: a0 = a5 <u a0\n  5653: a5 = u64 [s1 + 0x220]\n  5657: a1 = a5 <u a1\n  5660: a1 = a0 if a4 != 0\n  5663: a4 = u64 [s1 + 0x238]\n  5667: a0 = a4 ^ a3\n  5670: a3 = a4 <u a3\n  5673: a5 = u64 [s1 + 0x230]\n  5677: a4 = a5 <u a2\n  5680: a4 = a3 if a0 != 0\n  5683: a2 = a2 ^ a5\n  5686: a0 = a0 | a2\n  5689: a1 = a4 if a0 != 0\n  5692: u64 [s1 + 1464] = 0\n  5696: u64 [s1 + 1456] = 0\n  5700: u64 [s1 + 0x5a0] = a1\n  5704: a0 = s1 + 0x5a0\n  5708: u64 [s1 + 1448] = 0\n  5712: ra = 56, jump @1071\n      : @125 [@dyn 28] (gas: 11)\n  5718: a0 = u64 [s1 + 0x238]\n  5722: u64 [s1 + 0x558] = a0\n  5726: a0 = u64 [s1 + 0x230]\n  5730: u64 [s1 + 0x550] = a0\n  5734: a0 = u64 [s1 + 0x228]\n  5738: u64 [s1 + 0x548] = a0\n  5742: a0 = s1 + 0x560\n  5746: a1 = s1 + 0x540\n  5750: a2 = u64 [s1 + 0x220]\n  5754: u64 [s1 + 0x540] = a2\n  5758: ra = 58, jump @988\n      : @126 [@dyn 29] (gas: 40)\n  5764: a0 = u64 [s1 + 0x560]\n  5768: a2 = u64 [s1 + 0x578]\n  5772: a1 = u64 [s1 + 0x568]\n  5776: a3 = u64 [s1 + 0x570]\n  5780: a4 = a0 + 0x3\n  5783: u64 [s1 + 0x1f8] = a0\n  5787: a0 = a4 <u a0\n  5790: a5 = a1 + a0\n  5793: u64 [s1 + 0x1f0] = a1\n  5797: a1 = a5 <u a1\n  5800: a1 = a0 if a0 == 0\n  5803: a1 = a1 + a3\n  5806: u64 [s1 + 0x1e0] = a3\n  5810: a0 = a1 <u a3\n  5813: u64 [s1 + 0x1e8] = a2\n  5817: a0 = a0 + a2\n  5820: u64 [s1 + 0x210] = a5\n  5824: a2 = s1 + 0x2218\n  5828: u64 [a2 + 0x1f0] = a5\n  5832: u64 [s1 + 0x218] = a4\n  5836: u64 [a2 + 0x1e8] = a4\n  5840: u64 [s1 + 0x208] = a1\n  5844: u64 [a2 + 0x1f8] = a1\n  5848: u64 [s1 + 0x200] = a0\n  5852: u64 [a2 + 0x200] = a0\n  5856: u64 [a2 + 544] = 0\n  5860: u64 [a2 + 536] = 0\n  5864: u64 [a2 + 528] = 0\n  5868: u64 [a2 + 520] = 0\n  5872: u32 [a2 + 552] = 0x20\n  5877: a0 = s1 + 0x2000\n  5881: i32 a1 = a0 + 0x400\n  5885: a0 = s1 + 0x2000\n  5889: i32 a3 = a0 + 0x420\n  5893: a0 = s1 + 0x2000\n  5897: i32 a4 = a0 + 0x440\n  5901: a2 = 0xffffffffffffffff\n  5904: a0 = 0\n  5906: ecalli 9 // 'get_storage'\n  5908: fallthrough\n      : @127 (gas: 3)\n  5909: a0 = s1 + 0x2218\n  5913: a0 = u8 [a0 + 0x208]\n  5917: jump @129 if a0 == 0\n      : @128 (gas: 1)\n  5920: jump @442\n      : @129 (gas: 3)\n  5923: a0 = 0x40\n  5926: a1 = 0x20\n  5929: ra = 60, jump @0\n      : @130 [@dyn 30] (gas: 100)\n  5934: a1 = u8 [a0 + 0x11]\n  5937: a2 = u8 [a0 + 0x10]\n  5940: a3 = u8 [a0 + 0x12]\n  5943: a4 = u8 [a0 + 0x13]\n  5946: a1 = a1 << 0x8\n  5949: a1 = a1 | a2\n  5952: a3 = a3 << 0x10\n  5955: a4 = a4 << 0x18\n  5958: a3 = a3 | a4\n  5961: a1 = a1 | a3\n  5964: a2 = u8 [a0 + 0x15]\n  5967: a3 = u8 [a0 + 0x14]\n  5970: a4 = u8 [a0 + 0x16]\n  5973: a5 = u8 [a0 + 0x17]\n  5976: a2 = a2 << 0x8\n  5979: a2 = a2 | a3\n  5982: a4 = a4 << 0x10\n  5985: a5 = a5 << 0x18\n  5988: a4 = a4 | a5\n  5991: a2 = a2 | a4\n  5994: a2 = a2 << 0x20\n  5997: t0 = a2 | a1\n  6000: a2 = u8 [a0 + 0x1]\n  6003: a3 = u8 [a0]\n  6005: a4 = u8 [a0 + 0x2]\n  6008: a5 = u8 [a0 + 0x3]\n  6011: a2 = a2 << 0x8\n  6014: a2 = a2 | a3\n  6017: a4 = a4 << 0x10\n  6020: a5 = a5 << 0x18\n  6023: a4 = a4 | a5\n  6026: a2 = a2 | a4\n  6029: a3 = u8 [a0 + 0x5]\n  6032: a4 = u8 [a0 + 0x4]\n  6035: a5 = u8 [a0 + 0x6]\n  6038: a1 = u8 [a0 + 0x7]\n  6041: a3 = a3 << 0x8\n  6044: a3 = a3 | a4\n  6047: a5 = a5 << 0x10\n  6050: a1 = a1 << 0x18\n  6053: a1 = a1 | a5\n  6056: a1 = a1 | a3\n  6059: a1 = a1 << 0x20\n  6062: t1 = a1 | a2\n  6065: a1 = u8 [a0 + 0x19]\n  6068: a3 = u8 [a0 + 0x18]\n  6071: a4 = u8 [a0 + 0x1a]\n  6074: a5 = u8 [a0 + 0x1b]\n  6077: a1 = a1 << 0x8\n  6080: a1 = a1 | a3\n  6083: a4 = a4 << 0x10\n  6086: a5 = a5 << 0x18\n  6089: a4 = a4 | a5\n  6092: a1 = a1 | a4\n  6095: a3 = u8 [a0 + 0x1d]\n  6098: a4 = u8 [a0 + 0x1c]\n  6101: a5 = u8 [a0 + 0x1e]\n  6104: a2 = u8 [a0 + 0x1f]\n  6107: a3 = a3 << 0x8\n  6110: a3 = a3 | a4\n  6113: a5 = a5 << 0x10\n  6116: a2 = a2 << 0x18\n  6119: a2 = a2 | a5\n  6122: a2 = a2 | a3\n  6125: a2 = a2 << 0x20\n  6128: a3 = a2 | a1\n  6131: a1 = u8 [a0 + 0x9]\n  6134: a2 = u8 [a0 + 0x8]\n  6137: a4 = u8 [a0 + 0xa]\n  6140: a5 = u8 [a0 + 0xb]\n  6143: a1 = a1 << 0x8\n  6146: a1 = a1 | a2\n  6149: a4 = a4 << 0x10\n  6152: a5 = a5 << 0x18\n  6155: a4 = a4 | a5\n  6158: a1 = a1 | a4\n  6161: a2 = u8 [a0 + 0xd]\n  6164: a4 = u8 [a0 + 0xc]\n  6167: a5 = u8 [a0 + 0xe]\n  6170: a0 = u8 [a0 + 0xf]\n  6173: a2 = a2 << 0x8\n  6176: a2 = a2 | a4\n  6179: a5 = a5 << 0x10\n  6182: a0 = a0 << 0x18\n  6185: a0 = a0 | a5\n  6188: a0 = a0 | a2\n  6191: a0 = a0 << 0x20\n  6194: a0 = a0 | a1\n  6197: a4 = reverse a0\n  6199: a2 = reverse a3\n  6201: a5 = reverse t1\n  6203: a3 = reverse t0\n  6205: a0 = a3 | a5\n  6208: a1 = a2 | a4\n  6211: a1 = a1 | a0\n  6214: a1 = a1 >> 0x20\n  6217: a0 = a0 | a4\n  6220: a0 = a0 << 0x20\n  6223: a0 = a0 | a1\n  6226: jump @132 if a0 == 0\n      : @131 (gas: 1)\n  6229: jump @799\n      : @132 (gas: 8)\n  6233: i32 a0 = a2 + 0\n  6235: a1 = 0x20\n  6238: u64 [s1 + 0x278] = a0\n  6242: u64 [s1 + 0x298] = a2\n  6246: u64 [s1 + 0x290] = a3\n  6250: u64 [s1 + 0x288] = a4\n  6254: u64 [s1 + 0x280] = a5\n  6258: ra = 62, jump @0\n      : @133 [@dyn 31] (gas: 43)\n  6263: u8 [a0 + 31] = 0\n  6266: u8 [a0 + 30] = 0\n  6269: u8 [a0 + 29] = 0\n  6272: u8 [a0 + 28] = 0\n  6275: u8 [a0 + 27] = 0\n  6278: u8 [a0 + 26] = 0\n  6281: u8 [a0 + 25] = 0\n  6284: u8 [a0 + 24] = 0\n  6287: u8 [a0 + 23] = 0\n  6290: u8 [a0 + 22] = 0\n  6293: u8 [a0 + 21] = 0\n  6296: u8 [a0 + 20] = 0\n  6299: u8 [a0 + 19] = 0\n  6302: u8 [a0 + 18] = 0\n  6305: u8 [a0 + 17] = 0\n  6308: u8 [a0 + 16] = 0\n  6311: u8 [a0 + 15] = 0\n  6314: u8 [a0 + 14] = 0\n  6317: u8 [a0 + 13] = 0\n  6320: u8 [a0 + 12] = 0\n  6323: u8 [a0 + 11] = 0\n  6326: u8 [a0 + 10] = 0\n  6329: u8 [a0 + 9] = 0\n  6332: u8 [a0 + 8] = 0\n  6335: u8 [a0 + 7] = 0\n  6338: u8 [a0 + 6] = 0\n  6341: u8 [a0 + 5] = 0\n  6344: u8 [a0 + 3] = 0xa0\n  6349: u8 [a0 + 2] = 0x79\n  6353: u8 [a0 + 1] = 0xc3\n  6358: u8 [a0 + 0] = 0x8\n  6361: a1 = u64 [s1 + 0x288]\n  6365: a3 = u64 [s1 + 0x280]\n  6369: a3 = a3 | a1\n  6372: a4 = 0x100000000\n  6382: a1 = 0xfffffffc\n  6392: a2 = u64 [s1 + 0x298]\n  6396: a1 = a2 <u a1\n  6399: a2 = u64 [s1 + 0x290]\n  6403: a1 = 0 if a2 != 0\n  6405: a1 = 0 if a3 != 0\n  6407: u8 [a0 + 4] = 0\n  6410: jump @135 if a1 != 0\n      : @134 (gas: 1)\n  6413: jump @799\n      : @135 (gas: 6)\n  6417: a0 = u64 [s1 + 0x278]\n  6421: i32 a0 = a0 + 0x4\n  6424: a1 = 0x20\n  6427: u64 [s1 + 0x288] = a3\n  6431: u64 [s1 + 0x280] = a4\n  6435: ra = 64, jump @0\n      : @136 [@dyn 32] (gas: 41)\n  6440: a4 = u64 [s1 + 0x288]\n  6444: a3 = u64 [s1 + 0x290]\n  6448: a2 = u64 [s1 + 0x298]\n  6452: u8 [a0 + 31] = 0x20\n  6456: u8 [a0 + 30] = 0\n  6459: u8 [a0 + 29] = 0\n  6462: u8 [a0 + 28] = 0\n  6465: u8 [a0 + 27] = 0\n  6468: u8 [a0 + 26] = 0\n  6471: u8 [a0 + 25] = 0\n  6474: u8 [a0 + 24] = 0\n  6477: u8 [a0 + 23] = 0\n  6480: u8 [a0 + 22] = 0\n  6483: u8 [a0 + 21] = 0\n  6486: u8 [a0 + 20] = 0\n  6489: u8 [a0 + 19] = 0\n  6492: u8 [a0 + 18] = 0\n  6495: u8 [a0 + 17] = 0\n  6498: u8 [a0 + 16] = 0\n  6501: u8 [a0 + 15] = 0\n  6504: u8 [a0 + 14] = 0\n  6507: u8 [a0 + 13] = 0\n  6510: u8 [a0 + 12] = 0\n  6513: u8 [a0 + 11] = 0\n  6516: u8 [a0 + 10] = 0\n  6519: u8 [a0 + 9] = 0\n  6522: u8 [a0 + 8] = 0\n  6525: u8 [a0 + 7] = 0\n  6528: u8 [a0 + 6] = 0\n  6531: u8 [a0 + 5] = 0\n  6534: u8 [a0 + 4] = 0\n  6537: u8 [a0 + 3] = 0\n  6540: u8 [a0 + 2] = 0\n  6543: u8 [a0 + 1] = 0\n  6546: a1 = u64 [s1 + 0x280]\n  6550: a1 = a1 + 0xffffffffffffffdc\n  6553: a1 = a2 <u a1\n  6556: a1 = 0 if a3 != 0\n  6558: a1 = 0 if a4 != 0\n  6560: u8 [a0 + 0] = 0\n  6562: jump @138 if a1 != 0\n      : @137 (gas: 1)\n  6565: jump @799\n      : @138 (gas: 4)\n  6569: a0 = u64 [s1 + 0x278]\n  6573: i32 a0 = a0 + 0x24\n  6576: a1 = 0x20\n  6579: ra = 66, jump @0\n      : @139 [@dyn 33] (gas: 40)\n  6584: u8 [a0 + 31] = 0x17\n  6588: u8 [a0 + 30] = 0\n  6591: u8 [a0 + 29] = 0\n  6594: u8 [a0 + 28] = 0\n  6597: u8 [a0 + 27] = 0\n  6600: u8 [a0 + 26] = 0\n  6603: u8 [a0 + 25] = 0\n  6606: u8 [a0 + 24] = 0\n  6609: u8 [a0 + 23] = 0\n  6612: u8 [a0 + 22] = 0\n  6615: u8 [a0 + 21] = 0\n  6618: u8 [a0 + 20] = 0\n  6621: u8 [a0 + 19] = 0\n  6624: u8 [a0 + 18] = 0\n  6627: u8 [a0 + 17] = 0\n  6630: u8 [a0 + 16] = 0\n  6633: u8 [a0 + 15] = 0\n  6636: u8 [a0 + 14] = 0\n  6639: u8 [a0 + 13] = 0\n  6642: u8 [a0 + 12] = 0\n  6645: u8 [a0 + 11] = 0\n  6648: u8 [a0 + 10] = 0\n  6651: u8 [a0 + 9] = 0\n  6654: u8 [a0 + 8] = 0\n  6657: u8 [a0 + 7] = 0\n  6660: u8 [a0 + 6] = 0\n  6663: u8 [a0 + 5] = 0\n  6666: u8 [a0 + 4] = 0\n  6669: u8 [a0 + 3] = 0\n  6672: u8 [a0 + 2] = 0\n  6675: u8 [a0 + 1] = 0\n  6678: a1 = 0xffffffbc\n  6688: a2 = u64 [s1 + 0x298]\n  6692: a1 = a2 <u a1\n  6695: a2 = u64 [s1 + 0x290]\n  6699: a1 = 0 if a2 != 0\n  6701: a2 = u64 [s1 + 0x288]\n  6705: a1 = 0 if a2 != 0\n  6707: u8 [a0 + 0] = 0\n  6709: jump @141 if a1 != 0\n      : @140 (gas: 1)\n  6712: jump @799\n      : @141 (gas: 4)\n  6716: a0 = u64 [s1 + 0x278]\n  6720: i32 a0 = a0 + 0x44\n  6723: a1 = 0x20\n  6726: ra = 68, jump @0\n      : @142 [@dyn 34] (gas: 36)\n  6731: u8 [a0 + 31] = 0\n  6734: u8 [a0 + 30] = 0\n  6737: u8 [a0 + 29] = 0\n  6740: u8 [a0 + 28] = 0\n  6743: u8 [a0 + 27] = 0\n  6746: u8 [a0 + 26] = 0\n  6749: u8 [a0 + 25] = 0\n  6752: u8 [a0 + 24] = 0\n  6755: u8 [a0 + 23] = 0\n  6758: u8 [a0 + 22] = 0x64\n  6762: u8 [a0 + 21] = 0x65\n  6766: t0 = 0x74\n  6769: u8 [a0 + 0x14] = t0\n  6772: u8 [a0 + 19] = 0x65\n  6776: a4 = 0x6c\n  6779: u8 [a0 + 0x12] = a4\n  6782: u8 [a0 + 17] = 0x65\n  6786: u8 [a0 + 16] = 0x64\n  6790: u8 [a0 + 15] = 0x20\n  6794: a5 = 0x79\n  6797: u8 [a0 + 0xe] = a5\n  6800: u8 [a0 + 13] = 0x64\n  6804: u8 [a0 + 12] = 0x61\n  6808: u8 [a0 + 11] = 0x65\n  6812: u8 [a0 + 10] = 0x72\n  6816: u8 [a0 + 0x9] = a4\n  6819: u8 [a0 + 8] = 0x61\n  6823: u8 [a0 + 7] = 0x20\n  6827: u8 [a0 + 6] = 0x78\n  6831: u8 [a0 + 5] = 0x6f\n  6835: u8 [a0 + 4] = 0x42\n  6839: u8 [a0 + 0x3] = t0\n  6842: u8 [a0 + 2] = 0x6f\n  6846: u8 [a0 + 1] = 0x6f\n  6850: u8 [a0 + 0] = 0x4c\n  6853: jump @747\n      : @143 (gas: 2)\n  6857: a1 = 0xffffffffff690000\n  6863: jump @145 if a0 <=s 4285069933\n      : @144 (gas: 1)\n  6870: jump @245\n      : @145 (gas: 1)\n  6873: jump @147 if a0 == 4166100032\n      : @146 (gas: 1)\n  6880: jump @399\n      : @147 (gas: 11)\n  6883: a0 = sp + 0xffffffffffffffe0\n  6886: a0 = a0 & 0xffffffffffffffe0\n  6889: u64 [s1 + 0x298] = a0\n  6893: sp = a0\n  6895: u64 [a0 + 24] = 0\n  6898: u64 [a0 + 16] = 0\n  6901: u64 [a0 + 8] = 0\n  6904: u64 [a0 + 0] = 0\n  6906: i32 a0 = a0 + 0\n  6908: ecalli 18 // 'value_transferred'\n  6910: fallthrough\n      : @148 (gas: 9)\n  6911: a3 = u64 [s1 + 0x298]\n  6915: a0 = u64 [a3 + 0x10]\n  6918: a1 = u64 [a3 + 0x18]\n  6921: a2 = u64 [a3 + 0x8]\n  6924: a3 = u64 [a3]\n  6926: a1 = a1 | a2\n  6929: a0 = a0 | a3\n  6932: a0 = a0 | a1\n  6935: jump @150 if a0 == 0\n      : @149 (gas: 1)\n  6938: jump @918\n      : @150 (gas: 4)\n  6942: a0 = u64 [s1 + 0x1a8]\n  6946: a0 = i32 [a0]\n  6948: a2 = s1 + 0x2218\n  6952: jump @152 if a0 >u 3\n      : @151 (gas: 1)\n  6956: jump @918\n      : @152 (gas: 28)\n  6960: u64 [a2 + 512] = 0\n  6964: u64 [a2 + 504] = 0\n  6968: u64 [a2 + 496] = 0\n  6972: u64 [a2 + 488] = 0\n  6976: u64 [a2 + 544] = 0\n  6980: u64 [a2 + 536] = 0\n  6984: u64 [a2 + 528] = 0\n  6988: u64 [a2 + 520] = 0\n  6992: u32 [a2 + 552] = 0x20\n  6997: a0 = s1 + 0x2000\n  7001: i32 a1 = a0 + 0x400\n  7005: a0 = s1 + 0x2000\n  7009: i32 a3 = a0 + 0x420\n  7013: a0 = s1 + 0x2000\n  7017: i32 a4 = a0 + 0x440\n  7021: a2 = 0xffffffffffffffff\n  7024: a0 = 0\n  7026: ecalli 9 // 'get_storage'\n  7028: a1 = s1 + 0x2218\n  7032: a0 = u64 [a1 + 0x218]\n  7036: u64 [s1 + 0x288] = a0\n  7040: a0 = u64 [a1 + 0x210]\n  7044: u64 [s1 + 0x290] = a0\n  7048: a0 = u64 [a1 + 0x208]\n  7052: u64 [s1 + 0x298] = a0\n  7056: a0 = 0x40\n  7059: a1 = 0x20\n  7062: ra = 70, jump @0\n      : @153 [@dyn 35] (gas: 100)\n  7067: a1 = u8 [a0 + 0x11]\n  7070: a2 = u8 [a0 + 0x10]\n  7073: a3 = u8 [a0 + 0x12]\n  7076: a4 = u8 [a0 + 0x13]\n  7079: a1 = a1 << 0x8\n  7082: a1 = a1 | a2\n  7085: a3 = a3 << 0x10\n  7088: a4 = a4 << 0x18\n  7091: a3 = a3 | a4\n  7094: a1 = a1 | a3\n  7097: a2 = u8 [a0 + 0x15]\n  7100: a3 = u8 [a0 + 0x14]\n  7103: a4 = u8 [a0 + 0x16]\n  7106: a5 = u8 [a0 + 0x17]\n  7109: a2 = a2 << 0x8\n  7112: a2 = a2 | a3\n  7115: a4 = a4 << 0x10\n  7118: a5 = a5 << 0x18\n  7121: a4 = a4 | a5\n  7124: a2 = a2 | a4\n  7127: a2 = a2 << 0x20\n  7130: t0 = a2 | a1\n  7133: a2 = u8 [a0 + 0x1]\n  7136: a3 = u8 [a0]\n  7138: a4 = u8 [a0 + 0x2]\n  7141: a5 = u8 [a0 + 0x3]\n  7144: a2 = a2 << 0x8\n  7147: a2 = a2 | a3\n  7150: a4 = a4 << 0x10\n  7153: a5 = a5 << 0x18\n  7156: a4 = a4 | a5\n  7159: a2 = a2 | a4\n  7162: a3 = u8 [a0 + 0x5]\n  7165: a4 = u8 [a0 + 0x4]\n  7168: a5 = u8 [a0 + 0x6]\n  7171: a1 = u8 [a0 + 0x7]\n  7174: a3 = a3 << 0x8\n  7177: a3 = a3 | a4\n  7180: a5 = a5 << 0x10\n  7183: a1 = a1 << 0x18\n  7186: a1 = a1 | a5\n  7189: a1 = a1 | a3\n  7192: a1 = a1 << 0x20\n  7195: t1 = a1 | a2\n  7198: a1 = u8 [a0 + 0x19]\n  7201: a3 = u8 [a0 + 0x18]\n  7204: a4 = u8 [a0 + 0x1a]\n  7207: a5 = u8 [a0 + 0x1b]\n  7210: a1 = a1 << 0x8\n  7213: a1 = a1 | a3\n  7216: a4 = a4 << 0x10\n  7219: a5 = a5 << 0x18\n  7222: a4 = a4 | a5\n  7225: a1 = a1 | a4\n  7228: a3 = u8 [a0 + 0x1d]\n  7231: a4 = u8 [a0 + 0x1c]\n  7234: a5 = u8 [a0 + 0x1e]\n  7237: a2 = u8 [a0 + 0x1f]\n  7240: a3 = a3 << 0x8\n  7243: a3 = a3 | a4\n  7246: a5 = a5 << 0x10\n  7249: a2 = a2 << 0x18\n  7252: a2 = a2 | a5\n  7255: a2 = a2 | a3\n  7258: a2 = a2 << 0x20\n  7261: a3 = a2 | a1\n  7264: a1 = u8 [a0 + 0x9]\n  7267: a2 = u8 [a0 + 0x8]\n  7270: a4 = u8 [a0 + 0xa]\n  7273: a5 = u8 [a0 + 0xb]\n  7276: a1 = a1 << 0x8\n  7279: a1 = a1 | a2\n  7282: a4 = a4 << 0x10\n  7285: a5 = a5 << 0x18\n  7288: a4 = a4 | a5\n  7291: a1 = a1 | a4\n  7294: a2 = u8 [a0 + 0xd]\n  7297: a4 = u8 [a0 + 0xc]\n  7300: a5 = u8 [a0 + 0xe]\n  7303: a0 = u8 [a0 + 0xf]\n  7306: a2 = a2 << 0x8\n  7309: a2 = a2 | a4\n  7312: a5 = a5 << 0x10\n  7315: a0 = a0 << 0x18\n  7318: a0 = a0 | a5\n  7321: a0 = a0 | a2\n  7324: a0 = a0 << 0x20\n  7327: a0 = a0 | a1\n  7330: a1 = reverse a0\n  7332: a0 = reverse a3\n  7334: a2 = reverse t1\n  7336: a3 = reverse t0\n  7338: a2 = a2 | a3\n  7341: a3 = a0 | a1\n  7344: a3 = a3 | a2\n  7347: a3 = a3 >> 0x20\n  7350: a1 = a1 | a2\n  7353: a1 = a1 << 0x20\n  7356: a1 = a1 | a3\n  7359: jump @155 if a1 == 0\n      : @154 (gas: 1)\n  7362: jump @799\n      : @155 (gas: 8)\n  7366: a1 = u64 [s1 + 0x288]\n  7370: a1 = a1 << 0x20\n  7373: a1 = a1 >> 0x20\n  7376: u64 [s1 + 0x280] = a1\n  7380: i32 a0 = a0 + 0\n  7382: u64 [s1 + 0x288] = a0\n  7386: a1 = 0x20\n  7389: ra = 72, jump @0\n      : @156 [@dyn 36] (gas: 60)\n  7394: a1 = u64 [s1 + 0x280]\n  7398: a1 = reverse a1\n  7400: a2 = u64 [s1 + 0x290]\n  7404: a2 = reverse a2\n  7406: a3 = u64 [s1 + 0x298]\n  7410: a3 = reverse a3\n  7412: a4 = a3 >> 0x38\n  7415: u8 [a0 + 0x1f] = a4\n  7418: a4 = a3 >> 0x30\n  7421: u8 [a0 + 0x1e] = a4\n  7424: a4 = a3 >> 0x28\n  7427: u8 [a0 + 0x1d] = a4\n  7430: a4 = a3 >> 0x20\n  7433: u8 [a0 + 0x1c] = a4\n  7436: a4 = a3 >> 0x18\n  7439: u8 [a0 + 0x1b] = a4\n  7442: a4 = a3 >> 0x10\n  7445: u8 [a0 + 0x1a] = a4\n  7448: a4 = a3 >> 0x8\n  7451: u8 [a0 + 0x19] = a4\n  7454: u8 [a0 + 0x18] = a3\n  7457: u8 [a0 + 0x10] = a2\n  7460: u8 [a0 + 11] = 0\n  7463: u8 [a0 + 10] = 0\n  7466: u8 [a0 + 9] = 0\n  7469: u8 [a0 + 7] = 0\n  7472: u8 [a0 + 6] = 0\n  7475: u8 [a0 + 5] = 0\n  7478: u8 [a0 + 4] = 0\n  7481: u8 [a0 + 3] = 0\n  7484: u8 [a0 + 2] = 0\n  7487: u8 [a0 + 1] = 0\n  7490: u8 [a0 + 0] = 0\n  7492: a3 = a2 >> 0x38\n  7495: u8 [a0 + 0x17] = a3\n  7498: a3 = a2 >> 0x30\n  7501: u8 [a0 + 0x16] = a3\n  7504: a3 = a2 >> 0x28\n  7507: u8 [a0 + 0x15] = a3\n  7510: a3 = a2 >> 0x20\n  7513: u8 [a0 + 0x14] = a3\n  7516: a3 = a2 >> 0x18\n  7519: u8 [a0 + 0x13] = a3\n  7522: a3 = a2 >> 0x10\n  7525: u8 [a0 + 0x12] = a3\n  7528: a2 = a2 >> 0x8\n  7531: u8 [a0 + 0x11] = a2\n  7534: u8 [a0 + 0x8] = a1\n  7537: a2 = a1 >> 0x38\n  7540: u8 [a0 + 0xf] = a2\n  7543: a2 = a1 >> 0x30\n  7546: u8 [a0 + 0xe] = a2\n  7549: a2 = a1 >> 0x28\n  7552: u8 [a0 + 0xd] = a2\n  7555: a1 = a1 >> 0x20\n  7558: u8 [a0 + 0xc] = a1\n  7561: a1 = 0x20\n  7564: a0 = u64 [s1 + 0x288]\n  7568: ra = 0x82\n  7572: jump @0\n      : @157 (gas: 1)\n  7575: jump @159 if a0 == 1658239967\n      : @158 (gas: 1)\n  7582: jump @342\n      : @159 (gas: 11)\n  7585: a0 = sp + 0xffffffffffffffe0\n  7588: a0 = a0 & 0xffffffffffffffe0\n  7591: u64 [s1 + 0x298] = a0\n  7595: sp = a0\n  7597: u64 [a0 + 24] = 0\n  7600: u64 [a0 + 16] = 0\n  7603: u64 [a0 + 8] = 0\n  7606: u64 [a0 + 0] = 0\n  7608: i32 a0 = a0 + 0\n  7610: ecalli 18 // 'value_transferred'\n  7612: fallthrough\n      : @160 (gas: 9)\n  7613: a3 = u64 [s1 + 0x298]\n  7617: a0 = u64 [a3 + 0x10]\n  7620: a1 = u64 [a3 + 0x18]\n  7623: a2 = u64 [a3 + 0x8]\n  7626: a3 = u64 [a3]\n  7628: a1 = a1 | a2\n  7631: a0 = a0 | a3\n  7634: a0 = a0 | a1\n  7637: jump @162 if a0 == 0\n      : @161 (gas: 1)\n  7640: jump @918\n      : @162 (gas: 3)\n  7644: a0 = u64 [s1 + 0x1a8]\n  7648: a0 = i32 [a0]\n  7650: jump @164 if a0 >u 67\n      : @163 (gas: 1)\n  7654: jump @918\n      : @164 (gas: 5)\n  7658: a0 = s1 + 0x2000\n  7662: i32 a0 = a0 + 0x200\n  7666: a1 = 0x4\n  7669: ecalli 5 // 'call_data_load'\n  7671: fallthrough\n      : @165 (gas: 8)\n  7672: a5 = s1 + 0x2218\n  7676: a0 = u64 [a5]\n  7678: a1 = u64 [a5 + 0xfffffffffffffff8]\n  7681: a2 = u64 [a5 + 0xfffffffffffffff0]\n  7684: a3 = a1 | a0\n  7687: a4 = a2 <u 0x1\n  7690: a4 = 0 if a3 != 0\n  7692: jump @167 if a4 != 0\n      : @166 (gas: 1)\n  7695: jump @918\n      : @167 (gas: 25)\n  7699: a3 = u64 [a5 + 0xffffffffffffffe8]\n  7702: a4 = u64 [s1 + 0x1a8]\n  7706: t0 = u32 [a4]\n  7708: a5 = a3 + 0x4\n  7711: a3 = a5 <u a3\n  7714: a4 = a2 + a3\n  7717: a2 = a4 <u a2\n  7720: a2 = a3 if a3 == 0\n  7723: a2 = a2 + a1\n  7726: a1 = a2 <u a1\n  7729: a3 = a0 + a1\n  7732: a0 = s1 + 0x1218\n  7736: u64 [a0 + 512] = 0\n  7740: u64 [a0 + 504] = 0\n  7744: u64 [a0 + 496] = 0\n  7748: u64 [a0 + 0x1e8] = t0\n  7752: u64 [a0 + 0x208] = a5\n  7756: u64 [a0 + 0x210] = a4\n  7760: u64 [a0 + 0x218] = a2\n  7764: a4 = a0\n  7766: a0 = s1 + 0x1440\n  7770: a1 = s1 + 0x1420\n  7774: a2 = s1 + 0x1400\n  7778: u64 [a4 + 0x220] = a3\n  7782: ra = 74, jump @978\n      : @168 [@dyn 37] (gas: 88)\n  7788: a1 = s1 + 0x1218\n  7792: a0 = u64 [a1 + 0x240]\n  7796: u64 [s1 + 0x1f0] = a0\n  7800: a0 = u64 [a1 + 0x238]\n  7804: u64 [s1 + 0x1f8] = a0\n  7808: a0 = u64 [a1 + 0x230]\n  7812: u64 [s1 + 0x200] = a0\n  7816: a0 = u64 [a1 + 0x228]\n  7820: u64 [s1 + 0x208] = a0\n  7824: a0 = u64 [a1 + 0x260]\n  7828: u64 [s1 + 0x1d0] = a0\n  7832: a0 = u64 [a1 + 0x258]\n  7836: u64 [s1 + 0x1d8] = a0\n  7840: a0 = u64 [a1 + 0x250]\n  7844: u64 [s1 + 0x1e0] = a0\n  7848: a0 = u64 [a1 + 0x248]\n  7852: u64 [s1 + 0x1e8] = a0\n  7856: a0 = s1 + 0x2000\n  7860: i32 a0 = a0 + 0x220\n  7864: a1 = 0x24\n  7867: ecalli 5 // 'call_data_load'\n  7869: a1 = s1 + 0x2218\n  7873: a0 = u64 [a1 + 0x20]\n  7876: u64 [s1 + 0x1b0] = a0\n  7880: a0 = u64 [a1 + 0x18]\n  7883: u64 [s1 + 0x1b8] = a0\n  7887: a0 = u64 [a1 + 0x10]\n  7890: u64 [s1 + 0x1c0] = a0\n  7894: a0 = u64 [a1 + 0x8]\n  7897: u64 [s1 + 0x1c8] = a0\n  7901: u64 [a1 + 512] = 0\n  7905: u64 [a1 + 504] = 0\n  7909: u64 [a1 + 496] = 0\n  7913: u64 [a1 + 488] = 0\n  7917: u64 [a1 + 544] = 0\n  7921: u64 [a1 + 536] = 0\n  7925: u64 [a1 + 528] = 0\n  7929: u64 [a1 + 520] = 0\n  7933: u32 [a1 + 552] = 0x20\n  7938: a0 = s1 + 0x2000\n  7942: i32 a1 = a0 + 0x400\n  7946: a0 = s1 + 0x2000\n  7950: i32 a3 = a0 + 0x420\n  7954: a0 = s1 + 0x2000\n  7958: i32 a4 = a0 + 0x440\n  7962: a2 = 0xffffffffffffffff\n  7965: a0 = 0\n  7967: ecalli 9 // 'get_storage'\n  7969: a0 = s1 + 0x2218\n  7973: a1 = u64 [a0 + 0x210]\n  7977: u64 [s1 + 0x298] = a1\n  7981: a1 = u64 [a0 + 0x208]\n  7985: u64 [s1 + 0x290] = a1\n  7989: a1 = u32 [a0 + 0x218]\n  7993: u64 [s1 + 0x288] = a1\n  7997: a0 = s1 + 0x2000\n  8001: i32 a0 = a0 + 0x240\n  8005: ecalli 7 // 'caller'\n  8007: a2 = s1 + 0x2218\n  8011: a0 = u64 [a2 + 0x30]\n  8014: a1 = u64 [a2 + 0x28]\n  8017: a2 = i32 [a2 + 0x38]\n  8020: a0 = reverse a0\n  8022: a3 = a0 >> 0x20\n  8025: a1 = reverse a1\n  8027: a4 = a1 << 0x20\n  8030: a3 = a3 | a4\n  8033: a0 = a0 << 0x20\n  8036: a2 = reverse a2\n  8038: a2 = a2 >> 0x20\n  8041: a0 = a0 | a2\n  8044: a1 = a1 >> 0x20\n  8047: a2 = u64 [s1 + 0x288]\n  8051: a1 = a1 ^ a2\n  8054: a2 = u64 [s1 + 0x290]\n  8058: a0 = a0 ^ a2\n  8061: a0 = a0 | a1\n  8064: a1 = u64 [s1 + 0x298]\n  8068: a1 = a1 ^ a3\n  8071: a0 = a0 | a1\n  8074: a0 = a0 <u 0x1\n  8077: a1 = s1 + 0x1218\n  8081: u64 [a1 + 480] = 0\n  8085: u64 [a1 + 472] = 0\n  8089: u64 [a1 + 0x1c8] = a0\n  8093: a0 = s1 + 0x13e0\n  8097: u64 [a1 + 464] = 0\n  8101: ra = 76, jump @1057\n      : @169 [@dyn 38] (gas: 3)\n  8107: a0 = 0x40\n  8110: a1 = 0x20\n  8113: ra = 78, jump @0\n      : @170 [@dyn 39] (gas: 100)\n  8118: a1 = u8 [a0 + 0x9]\n  8121: a2 = u8 [a0 + 0x8]\n  8124: a3 = u8 [a0 + 0xa]\n  8127: a4 = u8 [a0 + 0xb]\n  8130: a1 = a1 << 0x8\n  8133: a1 = a1 | a2\n  8136: a3 = a3 << 0x10\n  8139: a4 = a4 << 0x18\n  8142: a3 = a3 | a4\n  8145: a1 = a1 | a3\n  8148: a2 = u8 [a0 + 0xd]\n  8151: a3 = u8 [a0 + 0xc]\n  8154: a4 = u8 [a0 + 0xe]\n  8157: a5 = u8 [a0 + 0xf]\n  8160: a2 = a2 << 0x8\n  8163: a2 = a2 | a3\n  8166: a4 = a4 << 0x10\n  8169: a5 = a5 << 0x18\n  8172: a4 = a4 | a5\n  8175: a2 = a2 | a4\n  8178: a2 = a2 << 0x20\n  8181: t0 = a2 | a1\n  8184: a2 = u8 [a0 + 0x1]\n  8187: a3 = u8 [a0]\n  8189: a4 = u8 [a0 + 0x2]\n  8192: a5 = u8 [a0 + 0x3]\n  8195: a2 = a2 << 0x8\n  8198: a2 = a2 | a3\n  8201: a4 = a4 << 0x10\n  8204: a5 = a5 << 0x18\n  8207: a4 = a4 | a5\n  8210: a2 = a2 | a4\n  8213: a3 = u8 [a0 + 0x5]\n  8216: a4 = u8 [a0 + 0x4]\n  8219: a5 = u8 [a0 + 0x6]\n  8222: a1 = u8 [a0 + 0x7]\n  8225: a3 = a3 << 0x8\n  8228: a3 = a3 | a4\n  8231: a5 = a5 << 0x10\n  8234: a1 = a1 << 0x18\n  8237: a1 = a1 | a5\n  8240: a1 = a1 | a3\n  8243: a1 = a1 << 0x20\n  8246: t1 = a1 | a2\n  8249: a1 = u8 [a0 + 0x19]\n  8252: a3 = u8 [a0 + 0x18]\n  8255: a4 = u8 [a0 + 0x1a]\n  8258: a5 = u8 [a0 + 0x1b]\n  8261: a1 = a1 << 0x8\n  8264: a1 = a1 | a3\n  8267: a4 = a4 << 0x10\n  8270: a5 = a5 << 0x18\n  8273: a4 = a4 | a5\n  8276: a1 = a1 | a4\n  8279: a3 = u8 [a0 + 0x1d]\n  8282: a4 = u8 [a0 + 0x1c]\n  8285: a5 = u8 [a0 + 0x1e]\n  8288: a2 = u8 [a0 + 0x1f]\n  8291: a3 = a3 << 0x8\n  8294: a3 = a3 | a4\n  8297: a5 = a5 << 0x10\n  8300: a2 = a2 << 0x18\n  8303: a2 = a2 | a5\n  8306: a2 = a2 | a3\n  8309: a2 = a2 << 0x20\n  8312: a3 = a2 | a1\n  8315: a1 = u8 [a0 + 0x11]\n  8318: a2 = u8 [a0 + 0x10]\n  8321: a4 = u8 [a0 + 0x12]\n  8324: a5 = u8 [a0 + 0x13]\n  8327: a1 = a1 << 0x8\n  8330: a1 = a1 | a2\n  8333: a4 = a4 << 0x10\n  8336: a5 = a5 << 0x18\n  8339: a4 = a4 | a5\n  8342: a1 = a1 | a4\n  8345: a2 = u8 [a0 + 0x15]\n  8348: a4 = u8 [a0 + 0x14]\n  8351: a5 = u8 [a0 + 0x16]\n  8354: a0 = u8 [a0 + 0x17]\n  8357: a2 = a2 << 0x8\n  8360: a2 = a2 | a4\n  8363: a5 = a5 << 0x10\n  8366: a0 = a0 << 0x18\n  8369: a0 = a0 | a5\n  8372: a0 = a0 | a2\n  8375: a0 = a0 << 0x20\n  8378: a0 = a0 | a1\n  8381: a1 = reverse a0\n  8383: a0 = reverse a3\n  8385: a4 = reverse t1\n  8387: a3 = reverse t0\n  8389: a2 = a3 | a4\n  8392: u64 [s1 + 0x298] = a0\n  8396: a0 = a0 <u 0xffffffffffffffa0\n  8399: u64 [s1 + 0x290] = a1\n  8403: a0 = 0 if a1 != 0\n  8405: u64 [s1 + 0x258] = a2\n  8409: a0 = 0 if a2 != 0\n  8411: jump @172 if a0 != 0\n      : @171 (gas: 1)\n  8414: jump @913\n      : @172 (gas: 19)\n  8418: a0 = u64 [s1 + 0x298]\n  8422: a1 = a0 + 0x60\n  8425: u64 [s1 + 0x278] = a1\n  8429: a0 = a1 <u a0\n  8432: a1 = u64 [s1 + 0x290]\n  8436: a2 = a1 + a0\n  8439: u64 [s1 + 0x270] = a2\n  8443: a1 = a2 <u a1\n  8446: a1 = a0 if a0 == 0\n  8449: a1 = a1 + a3\n  8452: u64 [s1 + 0x268] = a1\n  8456: a0 = a1 <u a3\n  8459: a0 = a0 + a4\n  8462: u64 [s1 + 0x260] = a0\n  8466: a0 = 0x40\n  8469: a1 = 0x20\n  8472: u64 [s1 + 0x280] = a3\n  8476: u64 [s1 + 0x288] = a4\n  8480: ra = 80, jump @0\n      : @173 [@dyn 40] (gas: 96)\n  8485: a1 = u64 [s1 + 0x260]\n  8489: a1 = reverse a1\n  8491: a2 = u64 [s1 + 0x268]\n  8495: a2 = reverse a2\n  8497: a3 = u64 [s1 + 0x270]\n  8501: a3 = reverse a3\n  8503: a4 = u64 [s1 + 0x278]\n  8507: a4 = reverse a4\n  8509: u8 [a0 + 0x18] = a4\n  8512: a5 = a4 >> 0x38\n  8515: u8 [a0 + 0x1f] = a5\n  8518: a5 = a4 >> 0x30\n  8521: u8 [a0 + 0x1e] = a5\n  8524: a5 = a4 >> 0x28\n  8527: u8 [a0 + 0x1d] = a5\n  8530: a5 = a4 >> 0x20\n  8533: u8 [a0 + 0x1c] = a5\n  8536: a5 = a4 >> 0x18\n  8539: u8 [a0 + 0x1b] = a5\n  8542: a5 = a4 >> 0x10\n  8545: u8 [a0 + 0x1a] = a5\n  8548: a4 = a4 >> 0x8\n  8551: u8 [a0 + 0x19] = a4\n  8554: u8 [a0 + 0x10] = a3\n  8557: a4 = a3 >> 0x38\n  8560: u8 [a0 + 0x17] = a4\n  8563: a4 = a3 >> 0x30\n  8566: u8 [a0 + 0x16] = a4\n  8569: a4 = a3 >> 0x28\n  8572: u8 [a0 + 0x15] = a4\n  8575: a4 = a3 >> 0x20\n  8578: u8 [a0 + 0x14] = a4\n  8581: a4 = a3 >> 0x18\n  8584: u8 [a0 + 0x13] = a4\n  8587: a4 = a3 >> 0x10\n  8590: u8 [a0 + 0x12] = a4\n  8593: a3 = a3 >> 0x8\n  8596: u8 [a0 + 0x11] = a3\n  8599: u8 [a0 + 0x8] = a2\n  8602: a3 = a2 >> 0x38\n  8605: u8 [a0 + 0xf] = a3\n  8608: a3 = a2 >> 0x30\n  8611: u8 [a0 + 0xe] = a3\n  8614: a3 = a2 >> 0x28\n  8617: u8 [a0 + 0xd] = a3\n  8620: a3 = a2 >> 0x20\n  8623: u8 [a0 + 0xc] = a3\n  8626: a3 = a2 >> 0x18\n  8629: u8 [a0 + 0xb] = a3\n  8632: a3 = a2 >> 0x10\n  8635: u8 [a0 + 0xa] = a3\n  8638: a2 = a2 >> 0x8\n  8641: u8 [a0 + 0x9] = a2\n  8644: u8 [a0] = a1\n  8646: a2 = a1 >> 0x38\n  8649: u8 [a0 + 0x7] = a2\n  8652: a2 = a1 >> 0x30\n  8655: u8 [a0 + 0x6] = a2\n  8658: a2 = a1 >> 0x28\n  8661: a3 = a1 >> 0x18\n  8664: u8 [a0 + 0x3] = a3\n  8667: a3 = a1 >> 0x10\n  8670: u8 [a0 + 0x2] = a3\n  8673: a3 = a1 >> 0x8\n  8676: u8 [a0 + 0x1] = a3\n  8679: a3 = u64 [s1 + 0x1a8]\n  8683: a3 = u32 [a3]\n  8685: u8 [a0 + 0x5] = a2\n  8688: a1 = a1 >> 0x20\n  8691: u8 [a0 + 0x4] = a1\n  8694: a4 = s1 + 0x1218\n  8698: u64 [a4 + 352] = 0\n  8702: u64 [a4 + 344] = 0\n  8706: u64 [a4 + 336] = 0\n  8710: u64 [a4 + 0x148] = a3\n  8714: a0 = u64 [s1 + 0x1d0]\n  8718: u64 [a4 + 0x180] = a0\n  8722: a0 = u64 [s1 + 0x1d8]\n  8726: u64 [a4 + 0x178] = a0\n  8730: a0 = u64 [s1 + 0x1e0]\n  8734: u64 [a4 + 0x170] = a0\n  8738: a0 = u64 [s1 + 0x1e8]\n  8742: u64 [a4 + 0x168] = a0\n  8746: a0 = u64 [s1 + 0x1f0]\n  8750: u64 [a4 + 0x1a0] = a0\n  8754: a0 = u64 [s1 + 0x1f8]\n  8758: u64 [a4 + 0x198] = a0\n  8762: a0 = u64 [s1 + 0x200]\n  8766: u64 [a4 + 0x190] = a0\n  8770: a0 = s1 + 0x13c0\n  8774: a1 = s1 + 0x13a0\n  8778: a2 = s1 + 0x1380\n  8782: a3 = s1 + 0x1360\n  8786: a5 = u64 [s1 + 0x208]\n  8790: u64 [a4 + 0x188] = a5\n  8794: ra = 82, jump @1128\n      : @174 [@dyn 41] (gas: 12)\n  8800: a0 = u64 [s1 + 0x298]\n  8804: a2 = u64 [s1 + 0x280]\n  8808: a0 = a0 | a2\n  8811: a1 = u64 [s1 + 0x290]\n  8815: a3 = u64 [s1 + 0x288]\n  8819: a1 = a1 | a3\n  8822: a0 = a0 | a1\n  8825: a0 = a0 >> 0x20\n  8828: a1 = a1 | a2\n  8831: a1 = a1 << 0x20\n  8834: a0 = a0 | a1\n  8837: jump @176 if a0 == 0\n      : @175 (gas: 1)\n  8840: jump @799\n      : @176 (gas: 13)\n  8844: a0 = s1 + 0x1218\n  8848: a1 = u64 [a0 + 0x1c0]\n  8852: u64 [s1 + 0x270] = a1\n  8856: a1 = u64 [a0 + 0x1b8]\n  8860: u64 [s1 + 0x278] = a1\n  8864: a1 = u64 [a0 + 0x1b0]\n  8868: u64 [s1 + 0x280] = a1\n  8872: a0 = u64 [a0 + 0x1a8]\n  8876: u64 [s1 + 0x288] = a0\n  8880: a0 = i32 [s1 + 0x298]\n  8884: a1 = 0x20\n  8887: u64 [s1 + 0x268] = a0\n  8891: ra = 84, jump @0\n      : @177 [@dyn 42] (gas: 77)\n  8896: a1 = u64 [s1 + 0x270]\n  8900: a1 = reverse a1\n  8902: a2 = u64 [s1 + 0x278]\n  8906: a2 = reverse a2\n  8908: a3 = u64 [s1 + 0x280]\n  8912: a3 = reverse a3\n  8914: a4 = u64 [s1 + 0x288]\n  8918: a4 = reverse a4\n  8920: a5 = a4 >> 0x38\n  8923: u8 [a0 + 0x1f] = a5\n  8926: a5 = a4 >> 0x30\n  8929: u8 [a0 + 0x1e] = a5\n  8932: a5 = a4 >> 0x28\n  8935: u8 [a0 + 0x1d] = a5\n  8938: a5 = a4 >> 0x20\n  8941: u8 [a0 + 0x1c] = a5\n  8944: a5 = a4 >> 0x18\n  8947: u8 [a0 + 0x1b] = a5\n  8950: a5 = a4 >> 0x10\n  8953: u8 [a0 + 0x1a] = a5\n  8956: a5 = a4 >> 0x8\n  8959: u8 [a0 + 0x19] = a5\n  8962: u8 [a0 + 0x18] = a4\n  8965: u8 [a0 + 0x10] = a3\n  8968: a4 = a3 >> 0x38\n  8971: u8 [a0 + 0x17] = a4\n  8974: a4 = a3 >> 0x30\n  8977: u8 [a0 + 0x16] = a4\n  8980: a4 = a3 >> 0x28\n  8983: u8 [a0 + 0x15] = a4\n  8986: a4 = a3 >> 0x20\n  8989: u8 [a0 + 0x14] = a4\n  8992: a4 = a3 >> 0x18\n  8995: u8 [a0 + 0x13] = a4\n  8998: a4 = a3 >> 0x10\n  9001: u8 [a0 + 0x12] = a4\n  9004: a3 = a3 >> 0x8\n  9007: u8 [a0 + 0x11] = a3\n  9010: u8 [a0 + 0x8] = a2\n  9013: a3 = a2 >> 0x38\n  9016: u8 [a0 + 0xf] = a3\n  9019: a3 = a2 >> 0x30\n  9022: u8 [a0 + 0xe] = a3\n  9025: a3 = a2 >> 0x28\n  9028: u8 [a0 + 0xd] = a3\n  9031: a3 = a2 >> 0x20\n  9034: u8 [a0 + 0xc] = a3\n  9037: a3 = a2 >> 0x18\n  9040: u8 [a0 + 0xb] = a3\n  9043: a3 = a2 >> 0x10\n  9046: u8 [a0 + 0xa] = a3\n  9049: a2 = a2 >> 0x8\n  9052: u8 [a0 + 0x9] = a2\n  9055: u8 [a0] = a1\n  9057: a2 = a1 >> 0x38\n  9060: u8 [a0 + 0x7] = a2\n  9063: a2 = a1 >> 0x30\n  9066: u8 [a0 + 0x6] = a2\n  9069: a2 = a1 >> 0x28\n  9072: u8 [a0 + 0x5] = a2\n  9075: a2 = a1 >> 0x20\n  9078: u8 [a0 + 0x4] = a2\n  9081: a2 = a1 >> 0x18\n  9084: u8 [a0 + 0x3] = a2\n  9087: a2 = a1 >> 0x10\n  9090: u8 [a0 + 0x2] = a2\n  9093: a1 = a1 >> 0x8\n  9096: a4 = 0x100000000\n  9106: a2 = 0xffffffe0\n  9116: a3 = u64 [s1 + 0x298]\n  9120: a2 = a3 <u a2\n  9123: a3 = u64 [s1 + 0x290]\n  9127: a2 = 0 if a3 != 0\n  9129: a3 = u64 [s1 + 0x258]\n  9133: a2 = 0 if a3 != 0\n  9135: u8 [a0 + 0x1] = a1\n  9138: jump @179 if a2 != 0\n      : @178 (gas: 1)\n  9141: jump @799\n      : @179 (gas: 6)\n  9145: a0 = u64 [s1 + 0x298]\n  9149: i32 a0 = a0 + 0x20\n  9152: a1 = 0x20\n  9155: u64 [s1 + 0x190] = a0\n  9159: u64 [s1 + 0x288] = a4\n  9163: ra = 86, jump @0\n      : @180 [@dyn 43] (gas: 77)\n  9168: a1 = u64 [s1 + 0x1c8]\n  9172: a1 = reverse a1\n  9174: a2 = a1 >> 0x38\n  9177: u8 [a0 + 0x1f] = a2\n  9180: a2 = a1 >> 0x30\n  9183: u8 [a0 + 0x1e] = a2\n  9186: a2 = a1 >> 0x28\n  9189: u8 [a0 + 0x1d] = a2\n  9192: a2 = a1 >> 0x20\n  9195: u8 [a0 + 0x1c] = a2\n  9198: a2 = a1 >> 0x18\n  9201: u8 [a0 + 0x1b] = a2\n  9204: a2 = a1 >> 0x10\n  9207: u8 [a0 + 0x1a] = a2\n  9210: a2 = a1 >> 0x8\n  9213: u8 [a0 + 0x19] = a2\n  9216: a2 = u64 [s1 + 0x1c0]\n  9220: a2 = reverse a2\n  9222: u8 [a0 + 0x18] = a1\n  9225: a1 = a2 >> 0x38\n  9228: u8 [a0 + 0x17] = a1\n  9231: a1 = a2 >> 0x30\n  9234: u8 [a0 + 0x16] = a1\n  9237: a1 = a2 >> 0x28\n  9240: u8 [a0 + 0x15] = a1\n  9243: a1 = a2 >> 0x20\n  9246: u8 [a0 + 0x14] = a1\n  9249: a1 = a2 >> 0x18\n  9252: u8 [a0 + 0x13] = a1\n  9255: a1 = a2 >> 0x10\n  9258: u8 [a0 + 0x12] = a1\n  9261: a1 = u64 [s1 + 0x1b8]\n  9265: a3 = reverse a1\n  9267: u8 [a0 + 0x10] = a2\n  9270: a2 = a2 >> 0x8\n  9273: u8 [a0 + 0x11] = a2\n  9276: a1 = a3 >> 0x38\n  9279: u8 [a0 + 0xf] = a1\n  9282: a1 = a3 >> 0x30\n  9285: u8 [a0 + 0xe] = a1\n  9288: a1 = a3 >> 0x28\n  9291: u8 [a0 + 0xd] = a1\n  9294: a1 = a3 >> 0x20\n  9297: u8 [a0 + 0xc] = a1\n  9300: a1 = a3 >> 0x18\n  9303: u8 [a0 + 0xb] = a1\n  9306: a1 = a3 >> 0x10\n  9309: u8 [a0 + 0xa] = a1\n  9312: a1 = u64 [s1 + 0x1b0]\n  9316: a1 = reverse a1\n  9318: u8 [a0 + 0x8] = a3\n  9321: a3 = a3 >> 0x8\n  9324: u8 [a0 + 0x9] = a3\n  9327: a2 = a1 >> 0x38\n  9330: u8 [a0 + 0x7] = a2\n  9333: a2 = a1 >> 0x30\n  9336: u8 [a0 + 0x6] = a2\n  9339: a2 = a1 >> 0x28\n  9342: u8 [a0 + 0x5] = a2\n  9345: a2 = a1 >> 0x20\n  9348: u8 [a0 + 0x4] = a2\n  9351: a2 = a1 >> 0x18\n  9354: u8 [a0 + 0x3] = a2\n  9357: a2 = a1 >> 0x10\n  9360: u8 [a0 + 0x2] = a2\n  9363: a2 = u64 [s1 + 0x288]\n  9367: a2 = a2 + 0xffffffffffffffc0\n  9370: a3 = u64 [s1 + 0x298]\n  9374: a2 = a3 <u a2\n  9377: a3 = u64 [s1 + 0x290]\n  9381: a2 = 0 if a3 != 0\n  9383: a3 = u64 [s1 + 0x258]\n  9387: a2 = 0 if a3 != 0\n  9389: u8 [a0] = a1\n  9391: a1 = a1 >> 0x8\n  9394: u8 [a0 + 0x1] = a1\n  9397: jump @182 if a2 != 0\n      : @181 (gas: 1)\n  9400: jump @799\n      : @182 (gas: 5)\n  9404: a0 = u64 [s1 + 0x298]\n  9408: i32 a0 = a0 + 0x40\n  9411: a1 = 0x20\n  9414: u64 [s1 + 0x168] = a0\n  9418: ra = 88, jump @0\n      : @183 [@dyn 44] (gas: 41)\n  9423: u8 [a0 + 31] = 0\n  9426: u8 [a0 + 30] = 0\n  9429: u8 [a0 + 29] = 0\n  9432: u8 [a0 + 28] = 0\n  9435: u8 [a0 + 27] = 0\n  9438: u8 [a0 + 26] = 0\n  9441: u8 [a0 + 25] = 0\n  9444: u8 [a0 + 24] = 0\n  9447: u8 [a0 + 23] = 0\n  9450: u8 [a0 + 22] = 0\n  9453: u8 [a0 + 21] = 0\n  9456: u8 [a0 + 20] = 0\n  9459: u8 [a0 + 19] = 0\n  9462: u8 [a0 + 18] = 0\n  9465: u8 [a0 + 17] = 0\n  9468: u8 [a0 + 16] = 0\n  9471: u8 [a0 + 15] = 0\n  9474: u8 [a0 + 14] = 0\n  9477: u8 [a0 + 13] = 0\n  9480: u8 [a0 + 12] = 0\n  9483: u8 [a0 + 11] = 0\n  9486: u8 [a0 + 10] = 0\n  9489: u8 [a0 + 9] = 0\n  9492: u8 [a0 + 8] = 0\n  9495: u8 [a0 + 7] = 0\n  9498: u8 [a0 + 6] = 0\n  9501: u8 [a0 + 5] = 0\n  9504: u8 [a0 + 4] = 0\n  9507: u8 [a0 + 3] = 0\n  9510: u8 [a0 + 2] = 0\n  9513: u8 [a0 + 1] = 0\n  9516: u8 [a0 + 0] = 0\n  9518: a0 = s1 + 0x1218\n  9522: u64 [a0 + 288] = 0\n  9526: u64 [a0 + 280] = 0\n  9530: u64 [a0 + 272] = 0\n  9534: a3 = a0\n  9536: a0 = s1 + 0x1340\n  9540: a2 = s1 + 0x1320\n  9544: u64 [a3 + 264] = 0x1\n  9549: ra = 90, jump @25\n      : @184 [@dyn 45] (gas: 8)\n  9554: a2 = s1 + 0x1218\n  9558: a5 = u64 [a2 + 0x140]\n  9562: a4 = u64 [a2 + 0x138]\n  9566: a3 = u64 [a2 + 0x130]\n  9570: a0 = a4 | a5\n  9573: a1 = a3 <u 0x1\n  9576: a1 = 0 if a0 != 0\n  9578: jump @186 if a1 != 0\n      : @185 (gas: 1)\n  9581: jump @930\n      : @186 (gas: 45)\n  9585: a0 = u64 [a2 + 0x128]\n  9589: u64 [s1 + 0x298] = a0\n  9593: a0 = a0 + 0x1\n  9596: a2 = s1 + 0x2218\n  9600: u64 [a2 + 488] = 0x1\n  9605: a1 = a0 <u 0x1\n  9608: a1 = a1 + a3\n  9611: u64 [a2 + 0x208] = a0\n  9615: a0 = a0 | a1\n  9618: u64 [a2 + 0x210] = a1\n  9622: a0 = a0 <u 0x1\n  9625: a0 = a0 + a4\n  9628: u64 [a2 + 0x218] = a0\n  9632: a0 = a0 <u a4\n  9635: a0 = a0 + a5\n  9638: u64 [a2 + 0x220] = a0\n  9642: u64 [a2 + 512] = 0\n  9646: u64 [a2 + 504] = 0\n  9650: u64 [a2 + 496] = 0\n  9654: a0 = s1 + 0x2000\n  9658: i32 a1 = a0 + 0x400\n  9662: u64 [s1 + 0x290] = a3\n  9666: a0 = s1 + 0x2000\n  9670: i32 a3 = a0 + 0x420\n  9674: a2 = 0xffffffffffffffff\n  9677: u64 [s1 + 0x288] = a4\n  9681: a4 = 0x20\n  9684: a0 = 0\n  9686: u64 [s1 + 0x280] = a5\n  9690: ecalli 17 // 'set_storage'\n  9692: a0 = s1 + 0x1218\n  9696: a1 = u64 [s1 + 0x280]\n  9700: u64 [a0 + 0xc0] = a1\n  9704: a0 = s1 + 0x1218\n  9708: a1 = u64 [s1 + 0x288]\n  9712: u64 [a0 + 0xb8] = a1\n  9716: a0 = s1 + 0x1218\n  9720: a1 = u64 [s1 + 0x290]\n  9724: u64 [a0 + 0xb0] = a1\n  9728: a0 = s1 + 0x12e0\n  9732: a1 = s1 + 0x12c0\n  9736: a2 = s1 + 0x1218\n  9740: a3 = u64 [s1 + 0x298]\n  9744: u64 [a2 + 0xa8] = a3\n  9748: ra = 92, jump @1048\n      : @187 [@dyn 46] (gas: 9)\n  9754: a4 = s1 + 0x1218\n  9758: a0 = u64 [a4 + 0xf8]\n  9762: a1 = u64 [a4 + 0x100]\n  9766: a2 = u64 [a4 + 0xf0]\n  9770: a3 = u64 [a4 + 0xe8]\n  9774: a1 = a1 | a2\n  9777: a0 = a0 | a3\n  9780: a0 = a0 | a1\n  9783: jump @189 if a0 == 0\n      : @188 (gas: 1)\n  9786: jump @932\n      : @189 (gas: 11)\n  9790: a0 = u64 [a4 + 0xe0]\n  9794: u64 [s1 + 0x258] = a0\n  9798: a0 = u64 [a4 + 0xd8]\n  9802: u64 [s1 + 0x1a8] = a0\n  9806: a0 = u64 [a4 + 0xd0]\n  9810: u64 [s1 + 0x1a0] = a0\n  9814: a0 = u64 [a4 + 0xc8]\n  9818: u64 [s1 + 0x198] = a0\n  9822: a1 = 0x20\n  9825: a0 = u64 [s1 + 0x268]\n  9829: ra = 94, jump @0\n      : @190 [@dyn 47] (gas: 103)\n  9834: a1 = u8 [a0 + 0x11]\n  9837: a2 = u8 [a0 + 0x10]\n  9840: a3 = u8 [a0 + 0x12]\n  9843: a4 = u8 [a0 + 0x13]\n  9846: a1 = a1 << 0x8\n  9849: a1 = a1 | a2\n  9852: a3 = a3 << 0x10\n  9855: a4 = a4 << 0x18\n  9858: a3 = a3 | a4\n  9861: a1 = a1 | a3\n  9864: a2 = u8 [a0 + 0x15]\n  9867: a3 = u8 [a0 + 0x14]\n  9870: a4 = u8 [a0 + 0x16]\n  9873: a5 = u8 [a0 + 0x17]\n  9876: a2 = a2 << 0x8\n  9879: a2 = a2 | a3\n  9882: a4 = a4 << 0x10\n  9885: a5 = a5 << 0x18\n  9888: a4 = a4 | a5\n  9891: a2 = a2 | a4\n  9894: a2 = a2 << 0x20\n  9897: t0 = a2 | a1\n  9900: a2 = u8 [a0 + 0x1]\n  9903: a3 = u8 [a0]\n  9905: a4 = u8 [a0 + 0x2]\n  9908: a5 = u8 [a0 + 0x3]\n  9911: a2 = a2 << 0x8\n  9914: a2 = a2 | a3\n  9917: a4 = a4 << 0x10\n  9920: a5 = a5 << 0x18\n  9923: a4 = a4 | a5\n  9926: a2 = a2 | a4\n  9929: a3 = u8 [a0 + 0x5]\n  9932: a4 = u8 [a0 + 0x4]\n  9935: a5 = u8 [a0 + 0x6]\n  9938: a1 = u8 [a0 + 0x7]\n  9941: a3 = a3 << 0x8\n  9944: a3 = a3 | a4\n  9947: a5 = a5 << 0x10\n  9950: a1 = a1 << 0x18\n  9953: a1 = a1 | a5\n  9956: a1 = a1 | a3\n  9959: a1 = a1 << 0x20\n  9962: t1 = a1 | a2\n  9965: a1 = u8 [a0 + 0x19]\n  9968: a3 = u8 [a0 + 0x18]\n  9971: a4 = u8 [a0 + 0x1a]\n  9974: a5 = u8 [a0 + 0x1b]\n  9977: a1 = a1 << 0x8\n  9980: a1 = a1 | a3\n  9983: a4 = a4 << 0x10\n  9986: a5 = a5 << 0x18\n  9989: a4 = a4 | a5\n  9992: a1 = a1 | a4\n  9995: a3 = u8 [a0 + 0x1d]\n  9998: a4 = u8 [a0 + 0x1c]\n 10001: a5 = u8 [a0 + 0x1e]\n 10004: a2 = u8 [a0 + 0x1f]\n 10007: a3 = a3 << 0x8\n 10010: a3 = a3 | a4\n 10013: a5 = a5 << 0x10\n 10016: a2 = a2 << 0x18\n 10019: a2 = a2 | a5\n 10022: a2 = a2 | a3\n 10025: a2 = a2 << 0x20\n 10028: a3 = a2 | a1\n 10031: a1 = u8 [a0 + 0x9]\n 10034: a2 = u8 [a0 + 0x8]\n 10037: a4 = u8 [a0 + 0xa]\n 10040: a5 = u8 [a0 + 0xb]\n 10043: a1 = a1 << 0x8\n 10046: a1 = a1 | a2\n 10049: a4 = a4 << 0x10\n 10052: a5 = a5 << 0x18\n 10055: a4 = a4 | a5\n 10058: a1 = a1 | a4\n 10061: a2 = u8 [a0 + 0xd]\n 10064: a4 = u8 [a0 + 0xc]\n 10067: a5 = u8 [a0 + 0xe]\n 10070: a0 = u8 [a0 + 0xf]\n 10073: a2 = a2 << 0x8\n 10076: a2 = a2 | a4\n 10079: a5 = a5 << 0x10\n 10082: a0 = a0 << 0x18\n 10085: a0 = a0 | a5\n 10088: a0 = a0 | a2\n 10091: a0 = a0 << 0x20\n 10094: a0 = a0 | a1\n 10097: a2 = reverse a0\n 10099: a3 = reverse a3\n 10101: a0 = reverse t1\n 10103: a1 = reverse t0\n 10105: u64 [s1 + 0x250] = a0\n 10109: u64 [s1 + 0x240] = a1\n 10113: a0 = a0 | a1\n 10116: a1 = a3 | a2\n 10119: a1 = a1 | a0\n 10122: a1 = a1 >> 0x20\n 10125: u64 [s1 + 0x248] = a2\n 10129: a0 = a0 | a2\n 10132: a0 = a0 << 0x20\n 10135: a0 = a0 | a1\n 10138: jump @192 if a0 == 0\n      : @191 (gas: 1)\n 10141: jump @799\n      : @192 (gas: 5)\n 10145: u64 [s1 + 0x238] = a3\n 10149: i32 a0 = a3 + 0\n 10151: a1 = 0x20\n 10154: u64 [s1 + 0x138] = a0\n 10158: ra = 96, jump @0\n      : @193 [@dyn 48] (gas: 80)\n 10163: a1 = u8 [a0 + 0x9]\n 10166: a2 = u8 [a0 + 0x8]\n 10169: a3 = u8 [a0 + 0xa]\n 10172: a4 = u8 [a0 + 0xb]\n 10175: a1 = a1 << 0x8\n 10178: a1 = a1 | a2\n 10181: a3 = a3 << 0x10\n 10184: a4 = a4 << 0x18\n 10187: a3 = a3 | a4\n 10190: a1 = a1 | a3\n 10193: a2 = u8 [a0 + 0xd]\n 10196: a3 = u8 [a0 + 0xc]\n 10199: a4 = u8 [a0 + 0xe]\n 10202: a5 = u8 [a0 + 0xf]\n 10205: a2 = a2 << 0x8\n 10208: a2 = a2 | a3\n 10211: a4 = a4 << 0x10\n 10214: a5 = a5 << 0x18\n 10217: a4 = a4 | a5\n 10220: a2 = a2 | a4\n 10223: a2 = a2 << 0x20\n 10226: t0 = a2 | a1\n 10229: a1 = u8 [a0 + 0x1]\n 10232: a2 = u8 [a0]\n 10234: a3 = u8 [a0 + 0x2]\n 10237: a4 = u8 [a0 + 0x3]\n 10240: a1 = a1 << 0x8\n 10243: a1 = a1 | a2\n 10246: a3 = a3 << 0x10\n 10249: a4 = a4 << 0x18\n 10252: a3 = a3 | a4\n 10255: a1 = a1 | a3\n 10258: a2 = u8 [a0 + 0x5]\n 10261: a3 = u8 [a0 + 0x4]\n 10264: a4 = u8 [a0 + 0x6]\n 10267: a5 = u8 [a0 + 0x7]\n 10270: a2 = a2 << 0x8\n 10273: a2 = a2 | a3\n 10276: a4 = a4 << 0x10\n 10279: a5 = a5 << 0x18\n 10282: a4 = a4 | a5\n 10285: a2 = a2 | a4\n 10288: a2 = a2 << 0x20\n 10291: t1 = a2 | a1\n 10294: a1 = u8 [a0 + 0x11]\n 10297: a2 = u8 [a0 + 0x10]\n 10300: a3 = u8 [a0 + 0x12]\n 10303: a4 = u8 [a0 + 0x13]\n 10306: a1 = a1 << 0x8\n 10309: a1 = a1 | a2\n 10312: a3 = a3 << 0x10\n 10315: a4 = a4 << 0x18\n 10318: a3 = a3 | a4\n 10321: a1 = a1 | a3\n 10324: a2 = u8 [a0 + 0x15]\n 10327: a3 = u8 [a0 + 0x14]\n 10330: a4 = u8 [a0 + 0x16]\n 10333: a5 = u8 [a0 + 0x17]\n 10336: a2 = a2 << 0x8\n 10339: a2 = a2 | a3\n 10342: a4 = a4 << 0x10\n 10345: a5 = a5 << 0x18\n 10348: a4 = a4 | a5\n 10351: a2 = a2 | a4\n 10354: a2 = a2 << 0x20\n 10357: a1 = a1 | a2\n 10360: u64 [s1 + 0x148] = a1\n 10364: a1 = reverse a1\n 10366: u64 [s1 + 0x150] = t1\n 10370: a3 = reverse t1\n 10372: u64 [s1 + 0x158] = t0\n 10376: a2 = reverse t0\n 10378: u64 [s1 + 0x180] = a2\n 10382: u64 [s1 + 0x170] = a3\n 10386: a2 = a2 | a3\n 10389: u64 [s1 + 0x178] = a1\n 10393: a1 = a1 <u 0x1\n 10396: u64 [s1 + 0x230] = a2\n 10400: a1 = 0 if a2 != 0\n 10402: jump @195 if a1 != 0\n      : @194 (gas: 1)\n 10405: jump @936\n      : @195 (gas: 37)\n 10409: a1 = u8 [a0 + 0x19]\n 10412: a2 = u8 [a0 + 0x18]\n 10415: a3 = u8 [a0 + 0x1a]\n 10418: a4 = u8 [a0 + 0x1b]\n 10421: a1 = a1 << 0x8\n 10424: a1 = a1 | a2\n 10427: a3 = a3 << 0x10\n 10430: a4 = a4 << 0x18\n 10433: a3 = a3 | a4\n 10436: a1 = a1 | a3\n 10439: a2 = u8 [a0 + 0x1d]\n 10442: a3 = u8 [a0 + 0x1c]\n 10445: a4 = u8 [a0 + 0x1e]\n 10448: a0 = u8 [a0 + 0x1f]\n 10451: a2 = a2 << 0x8\n 10454: a2 = a2 | a3\n 10457: a4 = a4 << 0x10\n 10460: a0 = a0 << 0x18\n 10463: a0 = a0 | a4\n 10466: a0 = a0 | a2\n 10469: a0 = a0 << 0x20\n 10472: a0 = a0 | a1\n 10475: u64 [s1 + 0x140] = a0\n 10479: a0 = reverse a0\n 10481: u64 [s1 + 0x188] = a0\n 10485: a3 = s1 + 0x1218\n 10489: a0 = u64 [s1 + 0x198]\n 10493: u64 [a3 + 0x28] = a0\n 10496: a0 = u64 [s1 + 0x1a0]\n 10500: u64 [a3 + 0x30] = a0\n 10503: a0 = u64 [s1 + 0x1a8]\n 10507: u64 [a3 + 0x38] = a0\n 10510: a0 = s1 + 0x1260\n 10514: a2 = s1 + 0x1240\n 10518: a1 = u64 [s1 + 0x258]\n 10522: u64 [a3 + 0x40] = a1\n 10525: ra = 98, jump @25\n      : @196 [@dyn 49] (gas: 12)\n 10530: a4 = s1 + 0x1218\n 10534: a2 = u64 [a4 + 0x48]\n 10537: a0 = u64 [a4 + 0x50]\n 10540: a1 = u64 [a4 + 0x58]\n 10543: a3 = u64 [a4 + 0x60]\n 10546: u64 [a4] = a3\n 10548: u64 [a4 + 0xfffffffffffffff8] = a1\n 10551: u64 [a4 + 0xfffffffffffffff0] = a0\n 10554: a0 = s1 + 0x1220\n 10558: a1 = s1 + 0x1200\n 10562: u64 [a4 + 0xffffffffffffffe8] = a2\n 10565: ra = 100, jump @997\n      : @197 [@dyn 50] (gas: 25)\n 10571: a0 = s1 + 0x1218\n 10575: a2 = u64 [a0 + 0x20]\n 10578: a3 = u64 [a0 + 0x18]\n 10581: a5 = u64 [a0 + 0x8]\n 10584: a4 = u64 [a0 + 0x10]\n 10587: a0 = a3 | a2\n 10590: a1 = a5 <u 0x20\n 10593: a1 = 0 if a4 != 0\n 10595: a1 = 0 if a0 != 0\n 10597: a0 = u64 [s1 + 0x258]\n 10601: a0 = reverse a0\n 10603: u64 [s1 + 0x220] = a0\n 10607: a0 = u64 [s1 + 0x1a8]\n 10611: a0 = reverse a0\n 10613: u64 [s1 + 0x218] = a0\n 10617: a0 = u64 [s1 + 0x1a0]\n 10621: a0 = reverse a0\n 10623: u64 [s1 + 0x210] = a0\n 10627: a0 = u64 [s1 + 0x198]\n 10631: a0 = reverse a0\n 10633: u64 [s1 + 0x160] = a0\n 10637: a0 = u64 [s1 + 0x188]\n 10641: a0 = a0 <u 0x20\n 10644: u64 [s1 + 0x228] = a0\n 10648: jump @205 if a1 != 0\n      : @198 (gas: 7)\n 10652: a1 = 0x20\n 10655: a0 = 0\n 10657: u64 [s1 + 0x280] = a2\n 10661: u64 [s1 + 0x288] = a3\n 10665: u64 [s1 + 0x278] = a4\n 10669: u64 [s1 + 0x270] = a5\n 10673: ra = 102, jump @0\n      : @199 [@dyn 51] (gas: 67)\n 10678: a2 = u64 [s1 + 0x160]\n 10682: u8 [a0 + 0x18] = a2\n 10685: a1 = a2 >> 0x38\n 10688: u8 [a0 + 0x1f] = a1\n 10691: a1 = a2 >> 0x30\n 10694: u8 [a0 + 0x1e] = a1\n 10697: a1 = a2 >> 0x28\n 10700: u8 [a0 + 0x1d] = a1\n 10703: a1 = a2 >> 0x20\n 10706: u8 [a0 + 0x1c] = a1\n 10709: a1 = a2 >> 0x18\n 10712: u8 [a0 + 0x1b] = a1\n 10715: a1 = a2 >> 0x10\n 10718: u8 [a0 + 0x1a] = a1\n 10721: a1 = a2 >> 0x8\n 10724: u8 [a0 + 0x19] = a1\n 10727: a2 = u64 [s1 + 0x210]\n 10731: u8 [a0 + 0x10] = a2\n 10734: a1 = a2 >> 0x38\n 10737: u8 [a0 + 0x17] = a1\n 10740: a1 = a2 >> 0x30\n 10743: u8 [a0 + 0x16] = a1\n 10746: a1 = a2 >> 0x28\n 10749: u8 [a0 + 0x15] = a1\n 10752: a1 = a2 >> 0x20\n 10755: u8 [a0 + 0x14] = a1\n 10758: a1 = a2 >> 0x18\n 10761: u8 [a0 + 0x13] = a1\n 10764: a1 = a2 >> 0x10\n 10767: u8 [a0 + 0x12] = a1\n 10770: a1 = a2 >> 0x8\n 10773: u8 [a0 + 0x11] = a1\n 10776: a2 = u64 [s1 + 0x218]\n 10780: u8 [a0 + 0x8] = a2\n 10783: a1 = a2 >> 0x38\n 10786: u8 [a0 + 0xf] = a1\n 10789: a1 = a2 >> 0x30\n 10792: u8 [a0 + 0xe] = a1\n 10795: a1 = a2 >> 0x28\n 10798: u8 [a0 + 0xd] = a1\n 10801: a1 = a2 >> 0x20\n 10804: u8 [a0 + 0xc] = a1\n 10807: a1 = a2 >> 0x18\n 10810: u8 [a0 + 0xb] = a1\n 10813: a1 = a2 >> 0x10\n 10816: u8 [a0 + 0xa] = a1\n 10819: a1 = a2 >> 0x8\n 10822: u8 [a0 + 0x9] = a1\n 10825: a2 = u64 [s1 + 0x220]\n 10829: u8 [a0] = a2\n 10831: a1 = a2 >> 0x38\n 10834: u8 [a0 + 0x7] = a1\n 10837: a1 = a2 >> 0x30\n 10840: u8 [a0 + 0x6] = a1\n 10843: a1 = a2 >> 0x28\n 10846: u8 [a0 + 0x5] = a1\n 10849: a1 = a2 >> 0x20\n 10852: u8 [a0 + 0x4] = a1\n 10855: a1 = a2 >> 0x18\n 10858: u8 [a0 + 0x3] = a1\n 10861: a1 = a2 >> 0x10\n 10864: u8 [a0 + 0x2] = a1\n 10867: a1 = a2 >> 0x8\n 10870: u8 [a0 + 0x1] = a1\n 10873: a1 = 0x20\n 10876: a0 = 0\n 10878: ra = 104, jump @0\n      : @200 [@dyn 52] (gas: 9)\n 10883: a1 = sp + 0xffffffffffffffe0\n 10886: a1 = a1 & 0xffffffffffffffe0\n 10889: u64 [s1 + 0x290] = a1\n 10893: sp = a1\n 10895: i32 a0 = a0 + 0\n 10897: i32 a2 = a1 + 0\n 10899: a1 = 0x20\n 10902: ecalli 10 // 'hash_keccak_256'\n 10904: fallthrough\n      : @201 (gas: 120)\n 10905: a0 = u64 [s1 + 0x188]\n 10909: a1 = a0 + 0x1f\n 10912: a0 = a1 <u a0\n 10915: a5 = u64 [s1 + 0x178]\n 10919: a3 = a5 + a0\n 10922: a2 = a3 <u a5\n 10925: a2 = a0 if a0 == 0\n 10928: a4 = u64 [s1 + 0x180]\n 10932: a2 = a2 + a4\n 10935: u64 [s1 + 0x268] = a2\n 10939: a2 = a2 << 0x3b\n 10942: a4 = a3 >> 0x5\n 10945: a2 = a2 | a4\n 10948: a0 = u64 [s1 + 0x290]\n 10952: t0 = u64 [a0 + 0x18]\n 10955: a3 = a3 << 0x3b\n 10958: a0 = u64 [a0 + 0x10]\n 10961: a1 = a1 >> 0x5\n 10964: a3 = a3 | a1\n 10967: t2 = reverse t0\n 10969: a4 = reverse a0\n 10971: a1 = u64 [s1 + 0x228]\n 10975: a1 = 0 if a5 != 0\n 10977: a0 = u64 [s1 + 0x230]\n 10981: a1 = 0 if a0 != 0\n 10983: a2 = 0 if a1 != 0\n 10985: a3 = 0 if a1 != 0\n 10987: a3 = a3 + t2\n 10990: u64 [s1 + 0x298] = a3\n 10994: a0 = a3 <u t2\n 10997: a3 = a4 + a0\n 11000: t0 = a3 + a2\n 11003: a3 = t0 ^ a4\n 11006: a2 = t0 <u a4\n 11009: a2 = a0 if a3 == 0\n 11012: u64 [s1 + 0x130] = a2\n 11016: a0 = u64 [s1 + 0x270]\n 11020: ra = a0 + 0x1f\n 11023: a2 = ra <u a0\n 11026: a3 = u64 [s1 + 0x278]\n 11030: a0 = a3 + a2\n 11033: a3 = a0 <u a3\n 11036: a3 = a2 if a2 == 0\n 11039: t1 = u64 [s1 + 0x288]\n 11043: a2 = t1 + a3\n 11046: u64 [s1 + 0x270] = a2\n 11050: a2 = a2 << 0x3b\n 11053: a5 = a0 >> 0x5\n 11056: a2 = a2 | a5\n 11059: a0 = a0 << 0x3b\n 11062: a5 = ra >> 0x5\n 11065: ra = u64 [s1 + 0x298]\n 11069: a0 = a0 | a5\n 11072: a3 = t2 + a0\n 11075: a0 = a3 <u t2\n 11078: a5 = a4 + a0\n 11081: a2 = a2 + a5\n 11084: t2 = a3\n 11086: a3 = a2 ^ a4\n 11089: a4 = a2 <u a4\n 11092: a4 = a0 if a3 == 0\n 11095: u64 [s1 + 0x128] = a4\n 11099: a0 = t0 ^ a2\n 11102: u64 [s1 + 0x278] = a2\n 11106: a2 = t0 <u a2\n 11109: t1 = ra <u t2\n 11112: t1 = a2 if a0 != 0\n 11115: a2 = u64 [s1 + 0x268]\n 11119: a0 = u64 [s1 + 0x180]\n 11123: a0 = a2 <u a0\n 11126: a4 = u64 [s1 + 0x170]\n 11130: a4 = a4 + a0\n 11133: a2 = a2 >> 0x5\n 11136: a0 = a4 << 0x3b\n 11139: a0 = a0 | a2\n 11142: a2 = u64 [s1 + 0x290]\n 11146: a3 = u64 [a2]\n 11148: a2 = u64 [a2 + 0x8]\n 11151: a4 = a4 >> 0x5\n 11154: a0 = 0 if a1 != 0\n 11156: a4 = 0 if a1 != 0\n 11158: a1 = reverse a2\n 11160: a2 = reverse a3\n 11162: a4 = a4 + a2\n 11165: a0 = a0 + a1\n 11168: a3 = a0 <u a1\n 11171: a3 = a3 + a4\n 11174: a4 = u64 [s1 + 0x130]\n 11178: a4 = a4 + a0\n 11181: u64 [s1 + 0x290] = a4\n 11185: a0 = a4 <u a0\n 11188: a5 = a3 + a0\n 11191: a0 = u64 [s1 + 0x288]\n 11195: a4 = u64 [s1 + 0x270]\n 11199: a0 = a4 <u a0\n 11202: a3 = u64 [s1 + 0x280]\n 11206: a0 = a0 + a3\n 11209: a3 = a4 >> 0x5\n 11212: a4 = a0 << 0x3b\n 11215: a3 = a3 | a4\n 11218: a0 = a0 >> 0x5\n 11221: a0 = a0 + a2\n 11224: a3 = a3 + a1\n 11227: a1 = a3 <u a1\n 11230: a0 = a0 + a1\n 11233: a4 = u64 [s1 + 0x128]\n 11237: a4 = a4 + a3\n 11240: a1 = a4 <u a3\n 11243: a3 = u64 [s1 + 0x290]\n 11247: a2 = a0 + a1\n 11250: a0 = a3 <u a4\n 11253: a1 = a5 ^ a2\n 11256: u64 [s1 + 0x268] = a2\n 11260: a2 = a5 <u a2\n 11263: a2 = a0 if a1 == 0\n 11266: u64 [s1 + 0x270] = a4\n 11270: a0 = a3 ^ a4\n 11273: a0 = a0 | a1\n 11276: t1 = a2 if a0 != 0\n 11279: jump @205 if t1 == 0\n      : @202 (gas: 2)\n 11283: u64 [s1 + 0x260] = t2\n 11287: fallthrough\n      : @203 (gas: 22)\n 11288: u64 [s1 + 0x290] = a3\n 11292: u64 [s1 + 0x280] = a5\n 11296: u64 [s1 + 0x288] = t0\n 11300: u64 [s1 + 0x298] = ra\n 11304: a0 = s1 + 0x2218\n 11308: u64 [a0 + 0x1f0] = t0\n 11312: u64 [a0 + 0x1e8] = ra\n 11316: u64 [a0 + 0x1f8] = a3\n 11320: u64 [a0 + 0x200] = a5\n 11324: u64 [a0 + 544] = 0\n 11328: u64 [a0 + 536] = 0\n 11332: u64 [a0 + 528] = 0\n 11336: u64 [a0 + 520] = 0\n 11340: a0 = s1 + 0x2000\n 11344: i32 a1 = a0 + 0x400\n 11348: a0 = s1 + 0x2000\n 11352: i32 a3 = a0 + 0x420\n 11356: a2 = 0xffffffffffffffff\n 11359: a4 = 0x20\n 11362: a0 = 0\n 11364: ecalli 17 // 'set_storage'\n 11366: fallthrough\n      : @204 (gas: 29)\n 11367: a5 = u64 [s1 + 0x280]\n 11371: t2 = u64 [s1 + 0x260]\n 11375: t0 = u64 [s1 + 0x288]\n 11379: ra = u64 [s1 + 0x298]\n 11383: ra = ra + 0x1\n 11386: a0 = ra <u 0x1\n 11389: t0 = t0 + a0\n 11392: a0 = ra | t0\n 11395: a0 = a0 <u 0x1\n 11398: a1 = u64 [s1 + 0x290]\n 11402: a0 = a0 + a1\n 11405: a1 = a0 <u a1\n 11408: a5 = a5 + a1\n 11411: a1 = ra <u t2\n 11414: a3 = u64 [s1 + 0x278]\n 11418: a2 = t0 ^ a3\n 11421: a3 = t0 <u a3\n 11424: a3 = a1 if a2 == 0\n 11427: a1 = u64 [s1 + 0x270]\n 11431: t1 = a0 <u a1\n 11434: a4 = u64 [s1 + 0x268]\n 11438: a2 = a5 ^ a4\n 11441: a4 = a5 <u a4\n 11444: a4 = t1 if a2 == 0\n 11447: a1 = a1 ^ a0\n 11450: a1 = a1 | a2\n 11453: a4 = a3 if a1 == 0\n 11456: a3 = a0\n 11458: jump @203 if a4 != 0\n      : @205 (gas: 13)\n 11462: a3 = u64 [s1 + 0x178]\n 11466: a0 = a3 >u 0\n 11468: a1 = u64 [s1 + 0x228]\n 11472: a1 = a1 ^ 0x1\n 11475: a1 = a0 if a3 != 0\n 11478: a5 = u64 [s1 + 0x180]\n 11482: a0 = a5 >u 0\n 11484: a4 = u64 [s1 + 0x170]\n 11488: a2 = a4 >u 0\n 11490: a2 = a0 if a4 == 0\n 11493: a0 = u64 [s1 + 0x230]\n 11497: a2 = a1 if a0 == 0\n 11500: jump @207 if a2 != 0\n      : @206 (gas: 1)\n 11503: jump @767\n      : @207 (gas: 6)\n 11507: a0 = u64 [s1 + 0x188]\n 11511: a0 = a0 & 0xffffffffffffffe0\n 11514: u64 [s1 + 0x230] = a0\n 11518: a1 = 0x20\n 11521: a0 = 0\n 11523: ra = 106, jump @0\n      : @208 [@dyn 53] (gas: 67)\n 11528: a2 = u64 [s1 + 0x160]\n 11532: u8 [a0 + 0x18] = a2\n 11535: a1 = a2 >> 0x38\n 11538: u8 [a0 + 0x1f] = a1\n 11541: a1 = a2 >> 0x30\n 11544: u8 [a0 + 0x1e] = a1\n 11547: a1 = a2 >> 0x28\n 11550: u8 [a0 + 0x1d] = a1\n 11553: a1 = a2 >> 0x20\n 11556: u8 [a0 + 0x1c] = a1\n 11559: a1 = a2 >> 0x18\n 11562: u8 [a0 + 0x1b] = a1\n 11565: a1 = a2 >> 0x10\n 11568: u8 [a0 + 0x1a] = a1\n 11571: a1 = a2 >> 0x8\n 11574: u8 [a0 + 0x19] = a1\n 11577: a2 = u64 [s1 + 0x210]\n 11581: u8 [a0 + 0x10] = a2\n 11584: a1 = a2 >> 0x38\n 11587: u8 [a0 + 0x17] = a1\n 11590: a1 = a2 >> 0x30\n 11593: u8 [a0 + 0x16] = a1\n 11596: a1 = a2 >> 0x28\n 11599: u8 [a0 + 0x15] = a1\n 11602: a1 = a2 >> 0x20\n 11605: u8 [a0 + 0x14] = a1\n 11608: a1 = a2 >> 0x18\n 11611: u8 [a0 + 0x13] = a1\n 11614: a1 = a2 >> 0x10\n 11617: u8 [a0 + 0x12] = a1\n 11620: a1 = a2 >> 0x8\n 11623: u8 [a0 + 0x11] = a1\n 11626: a2 = u64 [s1 + 0x218]\n 11630: u8 [a0 + 0x8] = a2\n 11633: a1 = a2 >> 0x38\n 11636: u8 [a0 + 0xf] = a1\n 11639: a1 = a2 >> 0x30\n 11642: u8 [a0 + 0xe] = a1\n 11645: a1 = a2 >> 0x28\n 11648: u8 [a0 + 0xd] = a1\n 11651: a1 = a2 >> 0x20\n 11654: u8 [a0 + 0xc] = a1\n 11657: a1 = a2 >> 0x18\n 11660: u8 [a0 + 0xb] = a1\n 11663: a1 = a2 >> 0x10\n 11666: u8 [a0 + 0xa] = a1\n 11669: a1 = a2 >> 0x8\n 11672: u8 [a0 + 0x9] = a1\n 11675: a2 = u64 [s1 + 0x220]\n 11679: u8 [a0] = a2\n 11681: a1 = a2 >> 0x38\n 11684: u8 [a0 + 0x7] = a1\n 11687: a1 = a2 >> 0x30\n 11690: u8 [a0 + 0x6] = a1\n 11693: a1 = a2 >> 0x28\n 11696: u8 [a0 + 0x5] = a1\n 11699: a1 = a2 >> 0x20\n 11702: u8 [a0 + 0x4] = a1\n 11705: a1 = a2 >> 0x18\n 11708: u8 [a0 + 0x3] = a1\n 11711: a1 = a2 >> 0x10\n 11714: u8 [a0 + 0x2] = a1\n 11717: a1 = a2 >> 0x8\n 11720: u8 [a0 + 0x1] = a1\n 11723: a1 = 0x20\n 11726: a0 = 0\n 11728: ra = 108, jump @0\n      : @209 [@dyn 54] (gas: 9)\n 11733: a1 = sp + 0xffffffffffffffe0\n 11736: a1 = a1 & 0xffffffffffffffe0\n 11739: u64 [s1 + 0x298] = a1\n 11743: sp = a1\n 11745: i32 a0 = a0 + 0\n 11747: i32 a2 = a1 + 0\n 11749: a1 = 0x20\n 11752: ecalli 10 // 'hash_keccak_256'\n 11754: fallthrough\n      : @210 (gas: 14)\n 11755: a5 = u64 [s1 + 0x230]\n 11759: a3 = u64 [s1 + 0x298]\n 11763: a0 = u64 [a3]\n 11765: a1 = u64 [a3 + 0x8]\n 11768: a2 = u64 [a3 + 0x10]\n 11771: a3 = u64 [a3 + 0x18]\n 11774: a0 = reverse a0\n 11776: u64 [s1 + 0x280] = a0\n 11780: a4 = reverse a1\n 11782: a0 = reverse a2\n 11784: u64 [s1 + 0x288] = a0\n 11788: a0 = reverse a3\n 11790: u64 [s1 + 0x290] = a0\n 11794: jump @212 if a5 == 0\n      : @211 (gas: 1)\n 11797: jump @769\n      : @212 (gas: 6)\n 11801: t1 = 0\n 11803: a0 = 0\n 11805: u64 [s1 + 664] = 0\n 11809: t2 = u64 [s1 + 0x258]\n 11813: a1 = 0x20\n 11816: jump @775\n      : @213 (gas: 11)\n 11820: a0 = sp + 0xffffffffffffffe0\n 11823: a0 = a0 & 0xffffffffffffffe0\n 11826: u64 [s1 + 0x298] = a0\n 11830: sp = a0\n 11832: u64 [a0 + 24] = 0\n 11835: u64 [a0 + 16] = 0\n 11838: u64 [a0 + 8] = 0\n 11841: u64 [a0 + 0] = 0\n 11843: i32 a0 = a0 + 0\n 11845: ecalli 18 // 'value_transferred'\n 11847: fallthrough\n      : @214 (gas: 9)\n 11848: a3 = u64 [s1 + 0x298]\n 11852: a0 = u64 [a3 + 0x10]\n 11855: a1 = u64 [a3 + 0x18]\n 11858: a2 = u64 [a3 + 0x8]\n 11861: a3 = u64 [a3]\n 11863: a1 = a1 | a2\n 11866: a0 = a0 | a3\n 11869: a0 = a0 | a1\n 11872: jump @216 if a0 == 0\n      : @215 (gas: 1)\n 11875: jump @918\n      : @216 (gas: 3)\n 11879: a0 = u64 [s1 + 0x1a8]\n 11883: a0 = i32 [a0]\n 11885: jump @218 if a0 >u 67\n      : @217 (gas: 1)\n 11889: jump @918\n      : @218 (gas: 29)\n 11893: a0 = s1 + 0x2000\n 11897: i32 a0 = a0 + 0xfffffffffffffee0\n 11901: a1 = 0x24\n 11904: ecalli 5 // 'call_data_load'\n 11906: a1 = s1 + 0x1a18\n 11910: a0 = u64 [a1 + 0x4e0]\n 11914: u64 [s1 + 0x290] = a0\n 11918: a0 = u64 [a1 + 0x4d8]\n 11922: u64 [s1 + 0x298] = a0\n 11926: a0 = u64 [a1 + 0x4d0]\n 11930: u64 [s1 + 0x288] = a0\n 11934: a0 = u64 [a1 + 0x4c8]\n 11938: u64 [s1 + 0x280] = a0\n 11942: a0 = s1 + 0x2000\n 11946: i32 a0 = a0 + 0xffffffffffffff00\n 11950: a1 = 0x4\n 11953: ecalli 5 // 'call_data_load'\n 11955: a1 = s1 + 0x1a18\n 11959: a0 = u64 [a1 + 0x4e8]\n 11963: u64 [s1 + 0x278] = a0\n 11967: a0 = u64 [a1 + 0x4f0]\n 11971: u64 [s1 + 0x270] = a0\n 11975: a0 = u64 [a1 + 0x4f8]\n 11979: u64 [s1 + 0x268] = a0\n 11983: a0 = u64 [a1 + 0x500]\n 11987: u64 [s1 + 0x260] = a0\n 11991: a1 = 0x20\n 11994: a0 = 0\n 11996: ra = 110, jump @0\n      : @219 [@dyn 55] (gas: 71)\n 12001: a1 = u64 [s1 + 0x260]\n 12005: a1 = reverse a1\n 12007: a2 = u64 [s1 + 0x268]\n 12011: a2 = reverse a2\n 12013: a3 = u64 [s1 + 0x270]\n 12017: a3 = reverse a3\n 12019: a4 = u64 [s1 + 0x278]\n 12023: a4 = reverse a4\n 12025: a5 = a4 >> 0x38\n 12028: u8 [a0 + 0x1f] = a5\n 12031: a5 = a4 >> 0x30\n 12034: u8 [a0 + 0x1e] = a5\n 12037: a5 = a4 >> 0x28\n 12040: u8 [a0 + 0x1d] = a5\n 12043: a5 = a4 >> 0x20\n 12046: u8 [a0 + 0x1c] = a5\n 12049: a5 = a4 >> 0x18\n 12052: u8 [a0 + 0x1b] = a5\n 12055: a5 = a4 >> 0x10\n 12058: u8 [a0 + 0x1a] = a5\n 12061: a5 = a4 >> 0x8\n 12064: u8 [a0 + 0x19] = a5\n 12067: u8 [a0 + 0x18] = a4\n 12070: a4 = a3 >> 0x38\n 12073: u8 [a0 + 0x17] = a4\n 12076: a4 = a3 >> 0x30\n 12079: u8 [a0 + 0x16] = a4\n 12082: a4 = a3 >> 0x28\n 12085: u8 [a0 + 0x15] = a4\n 12088: a4 = a3 >> 0x20\n 12091: u8 [a0 + 0x14] = a4\n 12094: a4 = a3 >> 0x18\n 12097: u8 [a0 + 0x13] = a4\n 12100: a4 = a3 >> 0x10\n 12103: u8 [a0 + 0x12] = a4\n 12106: a4 = a3 >> 0x8\n 12109: u8 [a0 + 0x11] = a4\n 12112: u8 [a0 + 0x10] = a3\n 12115: a3 = a2 >> 0x38\n 12118: u8 [a0 + 0xf] = a3\n 12121: a3 = a2 >> 0x30\n 12124: u8 [a0 + 0xe] = a3\n 12127: a3 = a2 >> 0x28\n 12130: u8 [a0 + 0xd] = a3\n 12133: a3 = a2 >> 0x20\n 12136: u8 [a0 + 0xc] = a3\n 12139: a3 = a2 >> 0x18\n 12142: u8 [a0 + 0xb] = a3\n 12145: a3 = a2 >> 0x10\n 12148: u8 [a0 + 0xa] = a3\n 12151: a3 = a2 >> 0x8\n 12154: u8 [a0 + 0x9] = a3\n 12157: u8 [a0 + 0x8] = a2\n 12160: a2 = a1 >> 0x38\n 12163: u8 [a0 + 0x7] = a2\n 12166: a2 = a1 >> 0x30\n 12169: u8 [a0 + 0x6] = a2\n 12172: a2 = a1 >> 0x28\n 12175: u8 [a0 + 0x5] = a2\n 12178: a2 = a1 >> 0x20\n 12181: u8 [a0 + 0x4] = a2\n 12184: a2 = a1 >> 0x18\n 12187: u8 [a0 + 0x3] = a2\n 12190: a2 = a1 >> 0x10\n 12193: u8 [a0 + 0x2] = a2\n 12196: a2 = a1 >> 0x8\n 12199: u8 [a0 + 0x1] = a2\n 12202: u8 [a0] = a1\n 12204: a0 = 0x20\n 12207: a1 = 0x20\n 12210: ra = 112, jump @0\n      : @220 [@dyn 56] (gas: 35)\n 12215: u8 [a0 + 31] = 0x4\n 12219: u8 [a0 + 30] = 0\n 12222: u8 [a0 + 29] = 0\n 12225: u8 [a0 + 28] = 0\n 12228: u8 [a0 + 27] = 0\n 12231: u8 [a0 + 26] = 0\n 12234: u8 [a0 + 25] = 0\n 12237: u8 [a0 + 24] = 0\n 12240: u8 [a0 + 23] = 0\n 12243: u8 [a0 + 22] = 0\n 12246: u8 [a0 + 21] = 0\n 12249: u8 [a0 + 20] = 0\n 12252: u8 [a0 + 19] = 0\n 12255: u8 [a0 + 18] = 0\n 12258: u8 [a0 + 17] = 0\n 12261: u8 [a0 + 16] = 0\n 12264: u8 [a0 + 15] = 0\n 12267: u8 [a0 + 14] = 0\n 12270: u8 [a0 + 13] = 0\n 12273: u8 [a0 + 12] = 0\n 12276: u8 [a0 + 11] = 0\n 12279: u8 [a0 + 10] = 0\n 12282: u8 [a0 + 9] = 0\n 12285: u8 [a0 + 8] = 0\n 12288: u8 [a0 + 7] = 0\n 12291: u8 [a0 + 6] = 0\n 12294: u8 [a0 + 5] = 0\n 12297: u8 [a0 + 4] = 0\n 12300: u8 [a0 + 3] = 0\n 12303: u8 [a0 + 2] = 0\n 12306: u8 [a0 + 1] = 0\n 12309: u8 [a0 + 0] = 0\n 12311: a1 = 0x40\n 12314: a0 = 0\n 12316: ra = 114, jump @0\n      : @221 [@dyn 57] (gas: 41)\n 12321: a1 = sp + 0xffffffffffffffe0\n 12324: a1 = a1 & 0xffffffffffffffe0\n 12327: u64 [s1 + 0x278] = a1\n 12331: sp = a1\n 12333: i32 a0 = a0 + 0\n 12335: i32 a2 = a1 + 0\n 12337: a1 = 0x40\n 12340: ecalli 10 // 'hash_keccak_256'\n 12342: a3 = u64 [s1 + 0x278]\n 12346: a0 = u64 [a3 + 0x18]\n 12349: a1 = u64 [a3 + 0x10]\n 12352: a2 = u64 [a3 + 0x8]\n 12355: a3 = u64 [a3]\n 12357: a5 = reverse a0\n 12359: a4 = reverse a1\n 12361: a2 = reverse a2\n 12363: a1 = reverse a3\n 12365: a3 = s1 + 0x2218\n 12369: u64 [s1 + 0x278] = a1\n 12373: u64 [a3 + 0x200] = a1\n 12377: u64 [s1 + 0x270] = a2\n 12381: u64 [a3 + 0x1f8] = a2\n 12385: u64 [s1 + 0x268] = a4\n 12389: u64 [a3 + 0x1f0] = a4\n 12393: u64 [s1 + 0x260] = a5\n 12397: u64 [a3 + 0x1e8] = a5\n 12401: u64 [a3 + 544] = 0\n 12405: u64 [a3 + 536] = 0\n 12409: u64 [a3 + 528] = 0\n 12413: u64 [a3 + 520] = 0\n 12417: u32 [a3 + 552] = 0x20\n 12422: a0 = s1 + 0x2000\n 12426: i32 a1 = a0 + 0x400\n 12430: a0 = s1 + 0x2000\n 12434: i32 a3 = a0 + 0x420\n 12438: a0 = s1 + 0x2000\n 12442: i32 a4 = a0 + 0x440\n 12446: a2 = 0xffffffffffffffff\n 12449: a0 = 0\n 12451: ecalli 9 // 'get_storage'\n 12453: fallthrough\n      : @222 (gas: 21)\n 12454: t1 = u64 [s1 + 0x280]\n 12458: t2 = u64 [s1 + 0x288]\n 12462: t0 = u64 [s1 + 0x290]\n 12466: a3 = s1 + 0x2218\n 12470: a0 = u64 [a3 + 0x210]\n 12474: a1 = u64 [a3 + 0x208]\n 12478: a2 = u64 [a3 + 0x218]\n 12482: a3 = u64 [a3 + 0x220]\n 12486: a4 = t2 ^ a0\n 12489: a0 = t2 <u a0\n 12492: a1 = t1 <u a1\n 12495: a1 = a0 if a4 != 0\n 12498: a0 = t0 ^ a3\n 12501: a5 = t0 <u a3\n 12504: a3 = u64 [s1 + 0x298]\n 12508: a4 = a3 <u a2\n 12511: a4 = a5 if a0 != 0\n 12514: a2 = a2 ^ a3\n 12517: a0 = a0 | a2\n 12520: a1 = a4 if a0 != 0\n 12523: jump @224 if a1 != 0\n      : @223 (gas: 1)\n 12526: jump @910\n      : @224 (gas: 16)\n 12530: u64 [s1 + 0x340] = t1\n 12534: a0 = u64 [s1 + 0x260]\n 12538: u64 [s1 + 0x360] = a0\n 12542: u64 [s1 + 0x348] = t2\n 12546: a0 = u64 [s1 + 0x268]\n 12550: u64 [s1 + 0x368] = a0\n 12554: u64 [s1 + 0x350] = a3\n 12558: a0 = u64 [s1 + 0x270]\n 12562: u64 [s1 + 0x370] = a0\n 12566: u64 [s1 + 0x358] = t0\n 12570: a0 = s1 + 0x380\n 12574: a1 = s1 + 0x360\n 12578: a2 = s1 + 0x340\n 12582: a3 = u64 [s1 + 0x278]\n 12586: u64 [s1 + 0x378] = a3\n 12590: ra = 116, jump @955\n      : @225 [@dyn 58] (gas: 78)\n 12596: a1 = u64 [s1 + 0x398]\n 12600: u64 [s1 + 0x298] = a1\n 12604: a3 = u64 [s1 + 0x390]\n 12608: u64 [s1 + 0x290] = a3\n 12612: a4 = u64 [s1 + 0x388]\n 12616: u64 [s1 + 0x288] = a4\n 12620: a5 = u64 [s1 + 0x380]\n 12624: u64 [s1 + 0x280] = a5\n 12628: a2 = s1 + 0x2218\n 12632: u64 [a2 + 0x200] = a1\n 12636: u64 [a2 + 0x1f8] = a3\n 12640: u64 [a2 + 0x1f0] = a4\n 12644: u64 [a2 + 0x1e8] = a5\n 12648: u64 [a2 + 544] = 0\n 12652: u64 [a2 + 536] = 0\n 12656: u64 [a2 + 528] = 0\n 12660: u64 [a2 + 520] = 0\n 12664: u32 [a2 + 552] = 0x20\n 12669: a0 = s1 + 0x2000\n 12673: i32 a1 = a0 + 0x400\n 12677: a0 = s1 + 0x2000\n 12681: i32 a3 = a0 + 0x420\n 12685: a0 = s1 + 0x2000\n 12689: i32 a4 = a0 + 0x440\n 12693: a2 = 0xffffffffffffffff\n 12696: a0 = 0\n 12698: ecalli 9 // 'get_storage'\n 12700: a0 = u64 [s1 + 0x280]\n 12704: a0 = a0 + 0x1\n 12707: a1 = a0 <u 0x1\n 12710: a2 = u64 [s1 + 0x288]\n 12714: a1 = a1 + a2\n 12717: a2 = a0 | a1\n 12720: a2 = a2 <u 0x1\n 12723: a3 = u64 [s1 + 0x290]\n 12727: a2 = a2 + a3\n 12730: a3 = a2 <u a3\n 12733: a4 = u64 [s1 + 0x298]\n 12737: a3 = a3 + a4\n 12740: a4 = s1 + 0x2218\n 12744: u64 [a4 + 0x200] = a3\n 12748: u64 [a4 + 0x1f8] = a2\n 12752: a2 = u64 [a4 + 0x220]\n 12756: u64 [s1 + 0x298] = a2\n 12760: u64 [a4 + 0x1f0] = a1\n 12764: a1 = u64 [a4 + 0x218]\n 12768: u64 [s1 + 0x290] = a1\n 12772: u64 [a4 + 0x1e8] = a0\n 12776: a0 = u64 [a4 + 0x210]\n 12780: u64 [s1 + 0x288] = a0\n 12784: u32 [a4 + 552] = 0x20\n 12789: a0 = u64 [a4 + 0x208]\n 12793: u64 [s1 + 0x280] = a0\n 12797: u64 [a4 + 544] = 0\n 12801: u64 [a4 + 536] = 0\n 12805: u64 [a4 + 528] = 0\n 12809: u64 [a4 + 520] = 0\n 12813: a0 = s1 + 0x2000\n 12817: i32 a1 = a0 + 0x400\n 12821: a0 = s1 + 0x2000\n 12825: i32 a3 = a0 + 0x420\n 12829: a0 = s1 + 0x2000\n 12833: i32 a4 = a0 + 0x440\n 12837: a2 = 0xffffffffffffffff\n 12840: a0 = 0\n 12842: ecalli 9 // 'get_storage'\n 12844: a1 = s1 + 0x2218\n 12848: a0 = u64 [a1 + 0x220]\n 12852: u64 [s1 + 0x260] = a0\n 12856: a0 = u64 [a1 + 0x218]\n 12860: u64 [s1 + 0x268] = a0\n 12864: a0 = u64 [a1 + 0x210]\n 12868: u64 [s1 + 0x270] = a0\n 12872: a0 = u64 [a1 + 0x208]\n 12876: u64 [s1 + 0x278] = a0\n 12880: a0 = 0x40\n 12883: a1 = 0x20\n 12886: ra = 118, jump @0\n      : @226 [@dyn 59] (gas: 100)\n 12891: a1 = u8 [a0 + 0x11]\n 12894: a2 = u8 [a0 + 0x10]\n 12897: a3 = u8 [a0 + 0x12]\n 12900: a4 = u8 [a0 + 0x13]\n 12903: a1 = a1 << 0x8\n 12906: a1 = a1 | a2\n 12909: a3 = a3 << 0x10\n 12912: a4 = a4 << 0x18\n 12915: a3 = a3 | a4\n 12918: a1 = a1 | a3\n 12921: a2 = u8 [a0 + 0x15]\n 12924: a3 = u8 [a0 + 0x14]\n 12927: a4 = u8 [a0 + 0x16]\n 12930: a5 = u8 [a0 + 0x17]\n 12933: a2 = a2 << 0x8\n 12936: a2 = a2 | a3\n 12939: a4 = a4 << 0x10\n 12942: a5 = a5 << 0x18\n 12945: a4 = a4 | a5\n 12948: a2 = a2 | a4\n 12951: a2 = a2 << 0x20\n 12954: t0 = a2 | a1\n 12957: a2 = u8 [a0 + 0x1]\n 12960: a3 = u8 [a0]\n 12962: a4 = u8 [a0 + 0x2]\n 12965: a5 = u8 [a0 + 0x3]\n 12968: a2 = a2 << 0x8\n 12971: a2 = a2 | a3\n 12974: a4 = a4 << 0x10\n 12977: a5 = a5 << 0x18\n 12980: a4 = a4 | a5\n 12983: a2 = a2 | a4\n 12986: a3 = u8 [a0 + 0x5]\n 12989: a4 = u8 [a0 + 0x4]\n 12992: a5 = u8 [a0 + 0x6]\n 12995: a1 = u8 [a0 + 0x7]\n 12998: a3 = a3 << 0x8\n 13001: a3 = a3 | a4\n 13004: a5 = a5 << 0x10\n 13007: a1 = a1 << 0x18\n 13010: a1 = a1 | a5\n 13013: a1 = a1 | a3\n 13016: a1 = a1 << 0x20\n 13019: t1 = a1 | a2\n 13022: a1 = u8 [a0 + 0x19]\n 13025: a3 = u8 [a0 + 0x18]\n 13028: a4 = u8 [a0 + 0x1a]\n 13031: a5 = u8 [a0 + 0x1b]\n 13034: a1 = a1 << 0x8\n 13037: a1 = a1 | a3\n 13040: a4 = a4 << 0x10\n 13043: a5 = a5 << 0x18\n 13046: a4 = a4 | a5\n 13049: a1 = a1 | a4\n 13052: a3 = u8 [a0 + 0x1d]\n 13055: a4 = u8 [a0 + 0x1c]\n 13058: a5 = u8 [a0 + 0x1e]\n 13061: a2 = u8 [a0 + 0x1f]\n 13064: a3 = a3 << 0x8\n 13067: a3 = a3 | a4\n 13070: a5 = a5 << 0x10\n 13073: a2 = a2 << 0x18\n 13076: a2 = a2 | a5\n 13079: a2 = a2 | a3\n 13082: a2 = a2 << 0x20\n 13085: a3 = a2 | a1\n 13088: a1 = u8 [a0 + 0x9]\n 13091: a2 = u8 [a0 + 0x8]\n 13094: a4 = u8 [a0 + 0xa]\n 13097: a5 = u8 [a0 + 0xb]\n 13100: a1 = a1 << 0x8\n 13103: a1 = a1 | a2\n 13106: a4 = a4 << 0x10\n 13109: a5 = a5 << 0x18\n 13112: a4 = a4 | a5\n 13115: a1 = a1 | a4\n 13118: a2 = u8 [a0 + 0xd]\n 13121: a4 = u8 [a0 + 0xc]\n 13124: a5 = u8 [a0 + 0xe]\n 13127: a0 = u8 [a0 + 0xf]\n 13130: a2 = a2 << 0x8\n 13133: a2 = a2 | a4\n 13136: a5 = a5 << 0x10\n 13139: a0 = a0 << 0x18\n 13142: a0 = a0 | a5\n 13145: a0 = a0 | a2\n 13148: a0 = a0 << 0x20\n 13151: a0 = a0 | a1\n 13154: a4 = reverse a0\n 13156: a2 = reverse a3\n 13158: a5 = reverse t1\n 13160: a3 = reverse t0\n 13162: a0 = a3 | a5\n 13165: a1 = a2 | a4\n 13168: a1 = a1 | a0\n 13171: a1 = a1 >> 0x20\n 13174: a0 = a0 | a4\n 13177: a0 = a0 << 0x20\n 13180: a0 = a0 | a1\n 13183: jump @228 if a0 == 0\n      : @227 (gas: 1)\n 13186: jump @799\n      : @228 (gas: 8)\n 13190: i32 a0 = a2 + 0\n 13192: a1 = 0x20\n 13195: u64 [s1 + 0x238] = a0\n 13199: u64 [s1 + 0x250] = a2\n 13203: u64 [s1 + 0x258] = a3\n 13207: u64 [s1 + 0x248] = a4\n 13211: u64 [s1 + 0x240] = a5\n 13215: ra = 120, jump @0\n      : @229 [@dyn 60] (gas: 78)\n 13220: a1 = u64 [s1 + 0x298]\n 13224: a1 = reverse a1\n 13226: a2 = u64 [s1 + 0x290]\n 13230: a2 = reverse a2\n 13232: a3 = u64 [s1 + 0x288]\n 13236: a3 = reverse a3\n 13238: a4 = u64 [s1 + 0x280]\n 13242: a4 = reverse a4\n 13244: a5 = a4 >> 0x38\n 13247: u8 [a0 + 0x1f] = a5\n 13250: a5 = a4 >> 0x30\n 13253: u8 [a0 + 0x1e] = a5\n 13256: a5 = a4 >> 0x28\n 13259: u8 [a0 + 0x1d] = a5\n 13262: a5 = a4 >> 0x20\n 13265: u8 [a0 + 0x1c] = a5\n 13268: a5 = a4 >> 0x18\n 13271: u8 [a0 + 0x1b] = a5\n 13274: a5 = a4 >> 0x10\n 13277: u8 [a0 + 0x1a] = a5\n 13280: a5 = a4 >> 0x8\n 13283: u8 [a0 + 0x19] = a5\n 13286: u8 [a0 + 0x18] = a4\n 13289: u8 [a0 + 0x10] = a3\n 13292: a4 = a3 >> 0x38\n 13295: u8 [a0 + 0x17] = a4\n 13298: a4 = a3 >> 0x30\n 13301: u8 [a0 + 0x16] = a4\n 13304: a4 = a3 >> 0x28\n 13307: u8 [a0 + 0x15] = a4\n 13310: a4 = a3 >> 0x20\n 13313: u8 [a0 + 0x14] = a4\n 13316: a4 = a3 >> 0x18\n 13319: u8 [a0 + 0x13] = a4\n 13322: a4 = a3 >> 0x10\n 13325: u8 [a0 + 0x12] = a4\n 13328: a3 = a3 >> 0x8\n 13331: u8 [a0 + 0x11] = a3\n 13334: u8 [a0 + 0x8] = a2\n 13337: a3 = a2 >> 0x38\n 13340: u8 [a0 + 0xf] = a3\n 13343: a3 = a2 >> 0x30\n 13346: u8 [a0 + 0xe] = a3\n 13349: a3 = a2 >> 0x28\n 13352: u8 [a0 + 0xd] = a3\n 13355: a3 = a2 >> 0x20\n 13358: u8 [a0 + 0xc] = a3\n 13361: a3 = a2 >> 0x18\n 13364: u8 [a0 + 0xb] = a3\n 13367: a3 = a2 >> 0x10\n 13370: u8 [a0 + 0xa] = a3\n 13373: a2 = a2 >> 0x8\n 13376: u8 [a0 + 0x9] = a2\n 13379: u8 [a0] = a1\n 13381: a2 = a1 >> 0x38\n 13384: u8 [a0 + 0x7] = a2\n 13387: a2 = a1 >> 0x30\n 13390: u8 [a0 + 0x6] = a2\n 13393: a2 = a1 >> 0x28\n 13396: u8 [a0 + 0x5] = a2\n 13399: a2 = a1 >> 0x20\n 13402: u8 [a0 + 0x4] = a2\n 13405: a2 = a1 >> 0x18\n 13408: u8 [a0 + 0x3] = a2\n 13411: a2 = a1 >> 0x10\n 13414: u8 [a0 + 0x2] = a2\n 13417: a1 = a1 >> 0x8\n 13420: a2 = u64 [s1 + 0x248]\n 13424: a3 = u64 [s1 + 0x240]\n 13428: a2 = a2 | a3\n 13431: a3 = 0xffffffe0\n 13441: a4 = u64 [s1 + 0x250]\n 13445: a3 = a4 <u a3\n 13448: a4 = u64 [s1 + 0x258]\n 13452: a3 = 0 if a4 != 0\n 13454: a3 = 0 if a2 != 0\n 13456: u8 [a0 + 0x1] = a1\n 13459: jump @231 if a3 != 0\n      : @230 (gas: 1)\n 13462: jump @799\n      : @231 (gas: 4)\n 13466: a0 = u64 [s1 + 0x238]\n 13470: i32 a0 = a0 + 0x20\n 13473: a1 = 0x20\n 13476: ra = 122, jump @0\n      : @232 [@dyn 61] (gas: 71)\n 13481: a1 = u64 [s1 + 0x260]\n 13485: a1 = reverse a1\n 13487: a2 = u64 [s1 + 0x268]\n 13491: a2 = reverse a2\n 13493: a3 = u64 [s1 + 0x270]\n 13497: a3 = reverse a3\n 13499: a4 = u64 [s1 + 0x278]\n 13503: a4 = reverse a4\n 13505: a5 = a4 >> 0x38\n 13508: u8 [a0 + 0x1f] = a5\n 13511: a5 = a4 >> 0x30\n 13514: u8 [a0 + 0x1e] = a5\n 13517: a5 = a4 >> 0x28\n 13520: u8 [a0 + 0x1d] = a5\n 13523: a5 = a4 >> 0x20\n 13526: u8 [a0 + 0x1c] = a5\n 13529: a5 = a4 >> 0x18\n 13532: u8 [a0 + 0x1b] = a5\n 13535: a5 = a4 >> 0x10\n 13538: u8 [a0 + 0x1a] = a5\n 13541: a5 = a4 >> 0x8\n 13544: u8 [a0 + 0x19] = a5\n 13547: u8 [a0 + 0x18] = a4\n 13550: u8 [a0 + 0x10] = a3\n 13553: a4 = a3 >> 0x38\n 13556: u8 [a0 + 0x17] = a4\n 13559: a4 = a3 >> 0x30\n 13562: u8 [a0 + 0x16] = a4\n 13565: a4 = a3 >> 0x28\n 13568: u8 [a0 + 0x15] = a4\n 13571: a4 = a3 >> 0x20\n 13574: u8 [a0 + 0x14] = a4\n 13577: a4 = a3 >> 0x18\n 13580: u8 [a0 + 0x13] = a4\n 13583: a4 = a3 >> 0x10\n 13586: u8 [a0 + 0x12] = a4\n 13589: a3 = a3 >> 0x8\n 13592: u8 [a0 + 0x11] = a3\n 13595: u8 [a0 + 0x8] = a2\n 13598: a3 = a2 >> 0x38\n 13601: u8 [a0 + 0xf] = a3\n 13604: a3 = a2 >> 0x30\n 13607: u8 [a0 + 0xe] = a3\n 13610: a3 = a2 >> 0x28\n 13613: u8 [a0 + 0xd] = a3\n 13616: a3 = a2 >> 0x20\n 13619: u8 [a0 + 0xc] = a3\n 13622: a3 = a2 >> 0x18\n 13625: u8 [a0 + 0xb] = a3\n 13628: a3 = a2 >> 0x10\n 13631: u8 [a0 + 0xa] = a3\n 13634: a2 = a2 >> 0x8\n 13637: u8 [a0 + 0x9] = a2\n 13640: u8 [a0] = a1\n 13642: a2 = a1 >> 0x38\n 13645: u8 [a0 + 0x7] = a2\n 13648: a2 = a1 >> 0x30\n 13651: u8 [a0 + 0x6] = a2\n 13654: a2 = a1 >> 0x28\n 13657: u8 [a0 + 0x5] = a2\n 13660: a2 = a1 >> 0x20\n 13663: u8 [a0 + 0x4] = a2\n 13666: a2 = a1 >> 0x18\n 13669: u8 [a0 + 0x3] = a2\n 13672: a2 = a1 >> 0x10\n 13675: u8 [a0 + 0x2] = a2\n 13678: a1 = a1 >> 0x8\n 13681: u8 [a0 + 0x1] = a1\n 13684: a1 = 0x40\n 13687: a0 = u64 [s1 + 0x238]\n 13691: ra = 124, jump @0\n      : @233 [@dyn 62] (gas: 5)\n 13696: i32 a1 = a0 + 0\n 13698: a2 = 0x40\n 13701: a0 = 0\n 13703: ecalli 15 // 'seal_return'\n 13705: fallthrough\n      : @234 (gas: 11)\n 13706: a0 = sp + 0xffffffffffffffe0\n 13709: a0 = a0 & 0xffffffffffffffe0\n 13712: u64 [s1 + 0x298] = a0\n 13716: sp = a0\n 13718: u64 [a0 + 24] = 0\n 13721: u64 [a0 + 16] = 0\n 13724: u64 [a0 + 8] = 0\n 13727: u64 [a0 + 0] = 0\n 13729: i32 a0 = a0 + 0\n 13731: ecalli 18 // 'value_transferred'\n 13733: fallthrough\n      : @235 (gas: 9)\n 13734: a3 = u64 [s1 + 0x298]\n 13738: a0 = u64 [a3 + 0x10]\n 13741: a1 = u64 [a3 + 0x18]\n 13744: a2 = u64 [a3 + 0x8]\n 13747: a3 = u64 [a3]\n 13749: a1 = a1 | a2\n 13752: a0 = a0 | a3\n 13755: a0 = a0 | a1\n 13758: jump @237 if a0 == 0\n      : @236 (gas: 1)\n 13761: jump @918\n      : @237 (gas: 4)\n 13765: a0 = u64 [s1 + 0x1a8]\n 13769: a1 = i32 [a0]\n 13771: a2 = s1 + 0x2218\n 13775: jump @239 if a1 >u 3\n      : @238 (gas: 1)\n 13779: jump @918\n      : @239 (gas: 30)\n 13783: u64 [a2 + 512] = 0\n 13787: u64 [a2 + 504] = 0\n 13791: u64 [a2 + 496] = 0\n 13795: u64 [a2 + 488] = 0x3\n 13800: u64 [a2 + 544] = 0\n 13804: u64 [a2 + 536] = 0\n 13808: u64 [a2 + 528] = 0\n 13812: u64 [a2 + 520] = 0\n 13816: u32 [a2 + 552] = 0x20\n 13821: a0 = s1 + 0x2000\n 13825: i32 a1 = a0 + 0x400\n 13829: a0 = s1 + 0x2000\n 13833: i32 a3 = a0 + 0x420\n 13837: a0 = s1 + 0x2000\n 13841: i32 a4 = a0 + 0x440\n 13845: a2 = 0xffffffffffffffff\n 13848: a0 = 0\n 13850: ecalli 9 // 'get_storage'\n 13852: a1 = s1 + 0x2218\n 13856: a0 = u64 [a1 + 0x220]\n 13860: u64 [s1 + 0x280] = a0\n 13864: a0 = u64 [a1 + 0x218]\n 13868: u64 [s1 + 0x288] = a0\n 13872: a0 = u64 [a1 + 0x210]\n 13876: u64 [s1 + 0x290] = a0\n 13880: a0 = u64 [a1 + 0x208]\n 13884: u64 [s1 + 0x298] = a0\n 13888: a0 = 0x40\n 13891: a1 = 0x20\n 13894: ra = 126, jump @0\n      : @240 [@dyn 63] (gas: 100)\n 13899: a1 = u8 [a0 + 0x11]\n 13902: a2 = u8 [a0 + 0x10]\n 13905: a3 = u8 [a0 + 0x12]\n 13908: a4 = u8 [a0 + 0x13]\n 13911: a1 = a1 << 0x8\n 13914: a1 = a1 | a2\n 13917: a3 = a3 << 0x10\n 13920: a4 = a4 << 0x18\n 13923: a3 = a3 | a4\n 13926: a1 = a1 | a3\n 13929: a2 = u8 [a0 + 0x15]\n 13932: a3 = u8 [a0 + 0x14]\n 13935: a4 = u8 [a0 + 0x16]\n 13938: a5 = u8 [a0 + 0x17]\n 13941: a2 = a2 << 0x8\n 13944: a2 = a2 | a3\n 13947: a4 = a4 << 0x10\n 13950: a5 = a5 << 0x18\n 13953: a4 = a4 | a5\n 13956: a2 = a2 | a4\n 13959: a2 = a2 << 0x20\n 13962: t0 = a2 | a1\n 13965: a2 = u8 [a0 + 0x1]\n 13968: a3 = u8 [a0]\n 13970: a4 = u8 [a0 + 0x2]\n 13973: a5 = u8 [a0 + 0x3]\n 13976: a2 = a2 << 0x8\n 13979: a2 = a2 | a3\n 13982: a4 = a4 << 0x10\n 13985: a5 = a5 << 0x18\n 13988: a4 = a4 | a5\n 13991: a2 = a2 | a4\n 13994: a3 = u8 [a0 + 0x5]\n 13997: a4 = u8 [a0 + 0x4]\n 14000: a5 = u8 [a0 + 0x6]\n 14003: a1 = u8 [a0 + 0x7]\n 14006: a3 = a3 << 0x8\n 14009: a3 = a3 | a4\n 14012: a5 = a5 << 0x10\n 14015: a1 = a1 << 0x18\n 14018: a1 = a1 | a5\n 14021: a1 = a1 | a3\n 14024: a1 = a1 << 0x20\n 14027: t1 = a1 | a2\n 14030: a1 = u8 [a0 + 0x19]\n 14033: a3 = u8 [a0 + 0x18]\n 14036: a4 = u8 [a0 + 0x1a]\n 14039: a5 = u8 [a0 + 0x1b]\n 14042: a1 = a1 << 0x8\n 14045: a1 = a1 | a3\n 14048: a4 = a4 << 0x10\n 14051: a5 = a5 << 0x18\n 14054: a4 = a4 | a5\n 14057: a1 = a1 | a4\n 14060: a3 = u8 [a0 + 0x1d]\n 14063: a4 = u8 [a0 + 0x1c]\n 14066: a5 = u8 [a0 + 0x1e]\n 14069: a2 = u8 [a0 + 0x1f]\n 14072: a3 = a3 << 0x8\n 14075: a3 = a3 | a4\n 14078: a5 = a5 << 0x10\n 14081: a2 = a2 << 0x18\n 14084: a2 = a2 | a5\n 14087: a2 = a2 | a3\n 14090: a2 = a2 << 0x20\n 14093: a3 = a2 | a1\n 14096: a1 = u8 [a0 + 0x9]\n 14099: a2 = u8 [a0 + 0x8]\n 14102: a4 = u8 [a0 + 0xa]\n 14105: a5 = u8 [a0 + 0xb]\n 14108: a1 = a1 << 0x8\n 14111: a1 = a1 | a2\n 14114: a4 = a4 << 0x10\n 14117: a5 = a5 << 0x18\n 14120: a4 = a4 | a5\n 14123: a1 = a1 | a4\n 14126: a2 = u8 [a0 + 0xd]\n 14129: a4 = u8 [a0 + 0xc]\n 14132: a5 = u8 [a0 + 0xe]\n 14135: a0 = u8 [a0 + 0xf]\n 14138: a2 = a2 << 0x8\n 14141: a2 = a2 | a4\n 14144: a5 = a5 << 0x10\n 14147: a0 = a0 << 0x18\n 14150: a0 = a0 | a5\n 14153: a0 = a0 | a2\n 14156: a0 = a0 << 0x20\n 14159: a0 = a0 | a1\n 14162: a1 = reverse a0\n 14164: a0 = reverse a3\n 14166: a2 = reverse t1\n 14168: a3 = reverse t0\n 14170: a2 = a2 | a3\n 14173: a3 = a0 | a1\n 14176: a3 = a3 | a2\n 14179: a3 = a3 >> 0x20\n 14182: a1 = a1 | a2\n 14185: a1 = a1 << 0x20\n 14188: a1 = a1 | a3\n 14191: jump @242 if a1 == 0\n      : @241 (gas: 1)\n 14194: jump @799\n      : @242 (gas: 4)\n 14198: i32 a0 = a0 + 0\n 14200: u64 [s1 + 0x278] = a0\n 14204: a1 = 0x20\n 14207: ra = 128, jump @0\n      : @243 [@dyn 64] (gas: 71)\n 14213: a1 = u64 [s1 + 0x280]\n 14217: a1 = reverse a1\n 14219: a2 = u64 [s1 + 0x288]\n 14223: a2 = reverse a2\n 14225: a3 = u64 [s1 + 0x290]\n 14229: a3 = reverse a3\n 14231: a4 = u64 [s1 + 0x298]\n 14235: a4 = reverse a4\n 14237: a5 = a4 >> 0x38\n 14240: u8 [a0 + 0x1f] = a5\n 14243: a5 = a4 >> 0x30\n 14246: u8 [a0 + 0x1e] = a5\n 14249: a5 = a4 >> 0x28\n 14252: u8 [a0 + 0x1d] = a5\n 14255: a5 = a4 >> 0x20\n 14258: u8 [a0 + 0x1c] = a5\n 14261: a5 = a4 >> 0x18\n 14264: u8 [a0 + 0x1b] = a5\n 14267: a5 = a4 >> 0x10\n 14270: u8 [a0 + 0x1a] = a5\n 14273: a5 = a4 >> 0x8\n 14276: u8 [a0 + 0x19] = a5\n 14279: u8 [a0 + 0x18] = a4\n 14282: u8 [a0 + 0x10] = a3\n 14285: a4 = a3 >> 0x38\n 14288: u8 [a0 + 0x17] = a4\n 14291: a4 = a3 >> 0x30\n 14294: u8 [a0 + 0x16] = a4\n 14297: a4 = a3 >> 0x28\n 14300: u8 [a0 + 0x15] = a4\n 14303: a4 = a3 >> 0x20\n 14306: u8 [a0 + 0x14] = a4\n 14309: a4 = a3 >> 0x18\n 14312: u8 [a0 + 0x13] = a4\n 14315: a4 = a3 >> 0x10\n 14318: u8 [a0 + 0x12] = a4\n 14321: a3 = a3 >> 0x8\n 14324: u8 [a0 + 0x11] = a3\n 14327: u8 [a0 + 0x8] = a2\n 14330: a3 = a2 >> 0x38\n 14333: u8 [a0 + 0xf] = a3\n 14336: a3 = a2 >> 0x30\n 14339: u8 [a0 + 0xe] = a3\n 14342: a3 = a2 >> 0x28\n 14345: u8 [a0 + 0xd] = a3\n 14348: a3 = a2 >> 0x20\n 14351: u8 [a0 + 0xc] = a3\n 14354: a3 = a2 >> 0x18\n 14357: u8 [a0 + 0xb] = a3\n 14360: a3 = a2 >> 0x10\n 14363: u8 [a0 + 0xa] = a3\n 14366: a2 = a2 >> 0x8\n 14369: u8 [a0 + 0x9] = a2\n 14372: u8 [a0] = a1\n 14374: a2 = a1 >> 0x38\n 14377: u8 [a0 + 0x7] = a2\n 14380: a2 = a1 >> 0x30\n 14383: u8 [a0 + 0x6] = a2\n 14386: a2 = a1 >> 0x28\n 14389: u8 [a0 + 0x5] = a2\n 14392: a2 = a1 >> 0x20\n 14395: u8 [a0 + 0x4] = a2\n 14398: a2 = a1 >> 0x18\n 14401: u8 [a0 + 0x3] = a2\n 14404: a2 = a1 >> 0x10\n 14407: u8 [a0 + 0x2] = a2\n 14410: a1 = a1 >> 0x8\n 14413: u8 [a0 + 0x1] = a1\n 14416: a1 = 0x20\n 14419: a0 = u64 [s1 + 0x278]\n 14423: ra = 130, jump @0\n      : @244 [@dyn 65] (gas: 5)\n 14429: i32 a1 = a0 + 0\n 14431: a2 = 0x20\n 14434: a0 = 0\n 14436: ecalli 15 // 'seal_return'\n 14438: fallthrough\n      : @245 (gas: 2)\n 14439: i32 a1 = a1 + 0xfffffffffffffa6e\n 14443: jump @247 if a0 == a1\n      : @246 (gas: 1)\n 14446: jump @915\n      : @247 (gas: 11)\n 14450: a0 = sp + 0xffffffffffffffe0\n 14453: a0 = a0 & 0xffffffffffffffe0\n 14456: u64 [s1 + 0x298] = a0\n 14460: sp = a0\n 14462: u64 [a0 + 24] = 0\n 14465: u64 [a0 + 16] = 0\n 14468: u64 [a0 + 8] = 0\n 14471: u64 [a0 + 0] = 0\n 14473: i32 a0 = a0 + 0\n 14475: ecalli 18 // 'value_transferred'\n 14477: fallthrough\n      : @248 (gas: 9)\n 14478: a3 = u64 [s1 + 0x298]\n 14482: a0 = u64 [a3 + 0x10]\n 14485: a1 = u64 [a3 + 0x18]\n 14488: a2 = u64 [a3 + 0x8]\n 14491: a3 = u64 [a3]\n 14493: a1 = a1 | a2\n 14496: a0 = a0 | a3\n 14499: a0 = a0 | a1\n 14502: jump @250 if a0 == 0\n      : @249 (gas: 1)\n 14505: jump @918\n      : @250 (gas: 3)\n 14509: a0 = u64 [s1 + 0x1a8]\n 14513: a0 = i32 [a0]\n 14515: jump @252 if a0 >u 35\n      : @251 (gas: 1)\n 14519: jump @918\n      : @252 (gas: 32)\n 14523: a0 = s1 + 0x2000\n 14527: i32 a0 = a0 + 0x3e0\n 14531: a1 = 0x4\n 14534: ecalli 5 // 'call_data_load'\n 14536: a1 = s1 + 0x2218\n 14540: a0 = u64 [a1 + 0x1e0]\n 14544: u64 [s1 + 0x290] = a0\n 14548: a0 = u64 [a1 + 0x1d8]\n 14552: u64 [s1 + 0x298] = a0\n 14556: a0 = u64 [a1 + 0x1d0]\n 14560: u64 [s1 + 0x288] = a0\n 14564: a0 = u64 [a1 + 0x1c8]\n 14568: u64 [s1 + 0x280] = a0\n 14572: u64 [a1 + 512] = 0\n 14576: u64 [a1 + 504] = 0\n 14580: u64 [a1 + 496] = 0\n 14584: u64 [a1 + 488] = 0x1\n 14589: u64 [a1 + 544] = 0\n 14593: u64 [a1 + 536] = 0\n 14597: u64 [a1 + 528] = 0\n 14601: u64 [a1 + 520] = 0\n 14605: u32 [a1 + 552] = 0x20\n 14610: a0 = s1 + 0x2000\n 14614: i32 a1 = a0 + 0x400\n 14618: a0 = s1 + 0x2000\n 14622: i32 a3 = a0 + 0x420\n 14626: a0 = s1 + 0x2000\n 14630: i32 a4 = a0 + 0x440\n 14634: a2 = 0xffffffffffffffff\n 14637: a0 = 0\n 14639: ecalli 9 // 'get_storage'\n 14641: fallthrough\n      : @253 (gas: 21)\n 14642: t1 = u64 [s1 + 0x280]\n 14646: a5 = u64 [s1 + 0x288]\n 14650: t0 = u64 [s1 + 0x290]\n 14654: a2 = s1 + 0x2218\n 14658: a0 = u64 [a2 + 0x210]\n 14662: a1 = u64 [a2 + 0x208]\n 14666: t2 = u64 [a2 + 0x218]\n 14670: a3 = u64 [a2 + 0x220]\n 14674: a4 = a5 ^ a0\n 14677: a0 = a5 <u a0\n 14680: a1 = t1 <u a1\n 14683: a1 = a0 if a4 != 0\n 14686: a0 = t0 ^ a3\n 14689: a2 = t0 <u a3\n 14692: a3 = u64 [s1 + 0x298]\n 14696: a4 = a3 <u t2\n 14699: a4 = a2 if a0 != 0\n 14702: a2 = a3 ^ t2\n 14705: a0 = a0 | a2\n 14708: a1 = a4 if a0 != 0\n 14711: jump @255 if a1 != 0\n      : @254 (gas: 1)\n 14714: jump @910\n      : @255 (gas: 8)\n 14718: a2 = s1 + 0x1a18\n 14722: u64 [a2 + 0x428] = t1\n 14726: u64 [a2 + 0x430] = a5\n 14730: u64 [a2 + 0x438] = a3\n 14734: a0 = s1 + 0x1e60\n 14738: a1 = s1 + 0x1e40\n 14742: u64 [a2 + 0x440] = t0\n 14746: ra = 132, jump @1048\n      : @256 [@dyn 66] (gas: 16)\n 14753: a3 = s1 + 0x1a18\n 14757: a2 = u64 [a3 + 0x448]\n 14761: u64 [s1 + 0x288] = a2\n 14765: a1 = u64 [a3 + 0x450]\n 14769: u64 [s1 + 0x290] = a1\n 14773: a4 = u64 [a3 + 0x458]\n 14777: u64 [s1 + 0x280] = a4\n 14781: a0 = u64 [a3 + 0x460]\n 14785: u64 [s1 + 0x298] = a0\n 14789: u64 [a3 + 0x400] = a0\n 14793: u64 [a3 + 0x3f8] = a4\n 14797: u64 [a3 + 0x3f0] = a1\n 14801: a0 = s1 + 0x1e20\n 14805: a1 = s1 + 0x1e00\n 14809: u64 [a3 + 0x3e8] = a2\n 14813: ra = 134, jump @1018\n      : @257 [@dyn 67] (gas: 85)\n 14820: a1 = s1 + 0x1a18\n 14824: a0 = u64 [a1 + 0x420]\n 14828: u64 [s1 + 0x260] = a0\n 14832: a0 = u64 [a1 + 0x418]\n 14836: u64 [s1 + 0x268] = a0\n 14840: a0 = u64 [a1 + 0x410]\n 14844: u64 [s1 + 0x270] = a0\n 14848: a0 = u64 [a1 + 0x408]\n 14852: u64 [s1 + 0x278] = a0\n 14856: a0 = u64 [s1 + 0x288]\n 14860: a0 = a0 + 0x1\n 14863: a1 = a0 <u 0x1\n 14866: a2 = u64 [s1 + 0x290]\n 14870: a1 = a1 + a2\n 14873: a2 = s1 + 0x2218\n 14877: u64 [a2 + 0x1f0] = a1\n 14881: a1 = a1 | a0\n 14884: u64 [a2 + 0x1e8] = a0\n 14888: a0 = a1 <u 0x1\n 14891: a1 = u64 [s1 + 0x280]\n 14895: a0 = a0 + a1\n 14898: u64 [a2 + 0x1f8] = a0\n 14902: a0 = a0 <u a1\n 14905: a1 = u64 [s1 + 0x298]\n 14909: a0 = a0 + a1\n 14912: u64 [a2 + 0x200] = a0\n 14916: u64 [a2 + 544] = 0\n 14920: u64 [a2 + 536] = 0\n 14924: u64 [a2 + 528] = 0\n 14928: u64 [a2 + 520] = 0\n 14932: u32 [a2 + 552] = 0x20\n 14937: a0 = s1 + 0x2000\n 14941: i32 a1 = a0 + 0x400\n 14945: a0 = s1 + 0x2000\n 14949: i32 a3 = a0 + 0x420\n 14953: a0 = s1 + 0x2000\n 14957: i32 a4 = a0 + 0x440\n 14961: a2 = 0xffffffffffffffff\n 14964: a0 = 0\n 14966: ecalli 9 // 'get_storage'\n 14968: a1 = u64 [s1 + 0x288]\n 14972: a0 = a1 + 0x2\n 14975: a1 = a0 <u a1\n 14978: a3 = u64 [s1 + 0x290]\n 14982: a2 = a3 + a1\n 14985: a3 = a2 <u a3\n 14988: a3 = a1 if a1 == 0\n 14991: a1 = u64 [s1 + 0x280]\n 14995: a3 = a3 + a1\n 14998: a1 = a3 <u a1\n 15001: a4 = u64 [s1 + 0x298]\n 15005: a1 = a1 + a4\n 15008: a4 = s1 + 0x2218\n 15012: u64 [a4 + 0x200] = a1\n 15016: u64 [a4 + 0x1f8] = a3\n 15020: a1 = u64 [a4 + 0x220]\n 15024: u64 [s1 + 0x258] = a1\n 15028: u64 [a4 + 0x1f0] = a2\n 15032: a1 = u64 [a4 + 0x218]\n 15036: u64 [s1 + 0x250] = a1\n 15040: u64 [a4 + 0x1e8] = a0\n 15044: a0 = u64 [a4 + 0x210]\n 15048: u64 [s1 + 0x248] = a0\n 15052: u32 [a4 + 552] = 0x20\n 15057: a0 = u64 [a4 + 0x208]\n 15061: u64 [s1 + 0x240] = a0\n 15065: u64 [a4 + 544] = 0\n 15069: u64 [a4 + 536] = 0\n 15073: u64 [a4 + 528] = 0\n 15077: u64 [a4 + 520] = 0\n 15081: a0 = s1 + 0x2000\n 15085: i32 a1 = a0 + 0x400\n 15089: a0 = s1 + 0x2000\n 15093: i32 a3 = a0 + 0x420\n 15097: a0 = s1 + 0x2000\n 15101: i32 a4 = a0 + 0x440\n 15105: a2 = 0xffffffffffffffff\n 15108: a0 = 0\n 15110: ecalli 9 // 'get_storage'\n 15112: a0 = s1 + 0x2218\n 15116: a0 = u8 [a0 + 0x208]\n 15120: u64 [s1 + 0x238] = a0\n 15124: a0 = 0x40\n 15127: a1 = 0x20\n 15130: ra = 136, jump @0\n      : @258 [@dyn 68] (gas: 101)\n 15136: a1 = u8 [a0 + 0x11]\n 15139: a2 = u8 [a0 + 0x10]\n 15142: a3 = u8 [a0 + 0x12]\n 15145: a4 = u8 [a0 + 0x13]\n 15148: a1 = a1 << 0x8\n 15151: a1 = a1 | a2\n 15154: a3 = a3 << 0x10\n 15157: a4 = a4 << 0x18\n 15160: a3 = a3 | a4\n 15163: a1 = a1 | a3\n 15166: a2 = u8 [a0 + 0x15]\n 15169: a3 = u8 [a0 + 0x14]\n 15172: a4 = u8 [a0 + 0x16]\n 15175: a5 = u8 [a0 + 0x17]\n 15178: a2 = a2 << 0x8\n 15181: a2 = a2 | a3\n 15184: a4 = a4 << 0x10\n 15187: a5 = a5 << 0x18\n 15190: a4 = a4 | a5\n 15193: a2 = a2 | a4\n 15196: a2 = a2 << 0x20\n 15199: t0 = a2 | a1\n 15202: a2 = u8 [a0 + 0x1]\n 15205: a3 = u8 [a0]\n 15207: a4 = u8 [a0 + 0x2]\n 15210: a5 = u8 [a0 + 0x3]\n 15213: a2 = a2 << 0x8\n 15216: a2 = a2 | a3\n 15219: a4 = a4 << 0x10\n 15222: a5 = a5 << 0x18\n 15225: a4 = a4 | a5\n 15228: a2 = a2 | a4\n 15231: a3 = u8 [a0 + 0x5]\n 15234: a4 = u8 [a0 + 0x4]\n 15237: a5 = u8 [a0 + 0x6]\n 15240: a1 = u8 [a0 + 0x7]\n 15243: a3 = a3 << 0x8\n 15246: a3 = a3 | a4\n 15249: a5 = a5 << 0x10\n 15252: a1 = a1 << 0x18\n 15255: a1 = a1 | a5\n 15258: a1 = a1 | a3\n 15261: a1 = a1 << 0x20\n 15264: t1 = a1 | a2\n 15267: a1 = u8 [a0 + 0x19]\n 15270: a3 = u8 [a0 + 0x18]\n 15273: a4 = u8 [a0 + 0x1a]\n 15276: a5 = u8 [a0 + 0x1b]\n 15279: a1 = a1 << 0x8\n 15282: a1 = a1 | a3\n 15285: a4 = a4 << 0x10\n 15288: a5 = a5 << 0x18\n 15291: a4 = a4 | a5\n 15294: a1 = a1 | a4\n 15297: a3 = u8 [a0 + 0x1d]\n 15300: a4 = u8 [a0 + 0x1c]\n 15303: a5 = u8 [a0 + 0x1e]\n 15306: a2 = u8 [a0 + 0x1f]\n 15309: a3 = a3 << 0x8\n 15312: a3 = a3 | a4\n 15315: a5 = a5 << 0x10\n 15318: a2 = a2 << 0x18\n 15321: a2 = a2 | a5\n 15324: a2 = a2 | a3\n 15327: a2 = a2 << 0x20\n 15330: a3 = a2 | a1\n 15333: a1 = u8 [a0 + 0x9]\n 15336: a2 = u8 [a0 + 0x8]\n 15339: a4 = u8 [a0 + 0xa]\n 15342: a5 = u8 [a0 + 0xb]\n 15345: a1 = a1 << 0x8\n 15348: a1 = a1 | a2\n 15351: a4 = a4 << 0x10\n 15354: a5 = a5 << 0x18\n 15357: a4 = a4 | a5\n 15360: a1 = a1 | a4\n 15363: a2 = u8 [a0 + 0xd]\n 15366: a4 = u8 [a0 + 0xc]\n 15369: a5 = u8 [a0 + 0xe]\n 15372: a0 = u8 [a0 + 0xf]\n 15375: a2 = a2 << 0x8\n 15378: a2 = a2 | a4\n 15381: a5 = a5 << 0x10\n 15384: a0 = a0 << 0x18\n 15387: a0 = a0 | a5\n 15390: a0 = a0 | a2\n 15393: a0 = a0 << 0x20\n 15396: a0 = a0 | a1\n 15399: a4 = reverse a0\n 15401: a2 = reverse a3\n 15403: a3 = reverse t1\n 15405: a0 = reverse t0\n 15407: u64 [s1 + 0x290] = a0\n 15411: a0 = a0 | a3\n 15414: a1 = a2 | a4\n 15417: a1 = a1 | a0\n 15420: a1 = a1 >> 0x20\n 15423: a0 = a0 | a4\n 15426: a0 = a0 << 0x20\n 15429: a0 = a0 | a1\n 15432: jump @260 if a0 == 0\n      : @259 (gas: 1)\n 15435: jump @799\n      : @260 (gas: 7)\n 15439: i32 a0 = a2 + 0\n 15441: a1 = 0x20\n 15444: u64 [s1 + 0x230] = a0\n 15448: u64 [s1 + 0x298] = a2\n 15452: u64 [s1 + 0x288] = a4\n 15456: u64 [s1 + 0x280] = a3\n 15460: ra = 138, jump @0\n      : @261 [@dyn 69] (gas: 63)\n 15466: u8 [a0 + 31] = 0x60\n 15470: u8 [a0 + 30] = 0\n 15473: u8 [a0 + 29] = 0\n 15476: u8 [a0 + 28] = 0\n 15479: u8 [a0 + 27] = 0\n 15482: u8 [a0 + 26] = 0\n 15485: u8 [a0 + 25] = 0\n 15488: u8 [a0 + 24] = 0\n 15491: u8 [a0 + 23] = 0\n 15494: u8 [a0 + 22] = 0\n 15497: u8 [a0 + 21] = 0\n 15500: u8 [a0 + 20] = 0\n 15503: u8 [a0 + 19] = 0\n 15506: u8 [a0 + 18] = 0\n 15509: u8 [a0 + 17] = 0\n 15512: u8 [a0 + 16] = 0\n 15515: u8 [a0 + 15] = 0\n 15518: u8 [a0 + 14] = 0\n 15521: u8 [a0 + 13] = 0\n 15524: u8 [a0 + 12] = 0\n 15527: u8 [a0 + 11] = 0\n 15530: u8 [a0 + 10] = 0\n 15533: u8 [a0 + 9] = 0\n 15536: u8 [a0 + 8] = 0\n 15539: u8 [a0 + 7] = 0\n 15542: u8 [a0 + 6] = 0\n 15545: u8 [a0 + 5] = 0\n 15548: u8 [a0 + 4] = 0\n 15551: u8 [a0 + 3] = 0\n 15554: u8 [a0 + 2] = 0\n 15557: u8 [a0 + 1] = 0\n 15560: u8 [a0 + 0] = 0\n 15562: a0 = u64 [s1 + 0x298]\n 15566: a0 = a0 + 0x60\n 15569: a1 = u64 [s1 + 0x298]\n 15573: a1 = a0 <u a1\n 15576: a3 = u64 [s1 + 0x290]\n 15580: a2 = a3 + a1\n 15583: a3 = a2 <u a3\n 15586: a3 = a1 if a1 == 0\n 15589: a1 = u64 [s1 + 0x288]\n 15593: a3 = a3 + a1\n 15596: a1 = u64 [s1 + 0x288]\n 15600: a1 = a3 <u a1\n 15603: a4 = u64 [s1 + 0x280]\n 15607: a4 = a4 + a1\n 15610: a5 = s1 + 0x1a18\n 15614: u64 [a5 + 0x390] = a2\n 15618: u64 [a5 + 0x388] = a0\n 15622: a0 = u64 [s1 + 0x260]\n 15626: u64 [a5 + 0x3c0] = a0\n 15630: a0 = u64 [s1 + 0x268]\n 15634: u64 [a5 + 0x3b8] = a0\n 15638: a0 = u64 [s1 + 0x270]\n 15642: u64 [a5 + 0x3b0] = a0\n 15646: a0 = u64 [s1 + 0x278]\n 15650: u64 [a5 + 0x3a8] = a0\n 15654: u64 [a5 + 0x398] = a3\n 15658: a0 = s1 + 0x1de0\n 15662: a1 = s1 + 0x1dc0\n 15666: a2 = s1 + 0x1da0\n 15670: u64 [a5 + 0x3a0] = a4\n 15674: ra = 140, jump @964\n      : @262 [@dyn 70] (gas: 11)\n 15681: a0 = u64 [s1 + 0x288]\n 15685: a1 = u64 [s1 + 0x280]\n 15689: a2 = a0 | a1\n 15692: a3 = 0x100000000\n 15702: a0 = 0xffffffe0\n 15712: a1 = u64 [s1 + 0x298]\n 15716: a0 = a1 <u a0\n 15719: a1 = u64 [s1 + 0x290]\n 15723: a0 = 0 if a1 != 0\n 15725: a0 = 0 if a2 != 0\n 15727: jump @264 if a0 != 0\n      : @263 (gas: 1)\n 15730: jump @799\n      : @264 (gas: 15)\n 15734: a0 = s1 + 0x1a18\n 15738: a1 = u64 [a0 + 0x3e0]\n 15742: u64 [s1 + 0x228] = a1\n 15746: a1 = u64 [a0 + 0x3d8]\n 15750: u64 [s1 + 0x220] = a1\n 15754: a1 = u64 [a0 + 0x3d0]\n 15758: u64 [s1 + 0x260] = a1\n 15762: a0 = u64 [a0 + 0x3c8]\n 15766: u64 [s1 + 0x268] = a0\n 15770: a0 = u64 [s1 + 0x230]\n 15774: i32 a0 = a0 + 0x20\n 15777: a1 = 0x20\n 15780: u64 [s1 + 0x278] = a2\n 15784: u64 [s1 + 0x270] = a3\n 15788: ra = 142, jump @0\n      : @265 [@dyn 71] (gas: 77)\n 15794: a1 = u64 [s1 + 0x258]\n 15798: a1 = reverse a1\n 15800: a2 = u64 [s1 + 0x250]\n 15804: a2 = reverse a2\n 15806: a3 = u64 [s1 + 0x248]\n 15810: a3 = reverse a3\n 15812: a4 = u64 [s1 + 0x240]\n 15816: a4 = reverse a4\n 15818: a5 = a4 >> 0x38\n 15821: u8 [a0 + 0x1f] = a5\n 15824: a5 = a4 >> 0x30\n 15827: u8 [a0 + 0x1e] = a5\n 15830: a5 = a4 >> 0x28\n 15833: u8 [a0 + 0x1d] = a5\n 15836: a5 = a4 >> 0x20\n 15839: u8 [a0 + 0x1c] = a5\n 15842: a5 = a4 >> 0x18\n 15845: u8 [a0 + 0x1b] = a5\n 15848: a5 = a4 >> 0x10\n 15851: u8 [a0 + 0x1a] = a5\n 15854: a5 = a4 >> 0x8\n 15857: u8 [a0 + 0x19] = a5\n 15860: u8 [a0 + 0x18] = a4\n 15863: u8 [a0 + 0x10] = a3\n 15866: a4 = a3 >> 0x38\n 15869: u8 [a0 + 0x17] = a4\n 15872: a4 = a3 >> 0x30\n 15875: u8 [a0 + 0x16] = a4\n 15878: a4 = a3 >> 0x28\n 15881: u8 [a0 + 0x15] = a4\n 15884: a4 = a3 >> 0x20\n 15887: u8 [a0 + 0x14] = a4\n 15890: a4 = a3 >> 0x18\n 15893: u8 [a0 + 0x13] = a4\n 15896: a4 = a3 >> 0x10\n 15899: u8 [a0 + 0x12] = a4\n 15902: a3 = a3 >> 0x8\n 15905: u8 [a0 + 0x11] = a3\n 15908: u8 [a0 + 0x8] = a2\n 15911: a3 = a2 >> 0x38\n 15914: u8 [a0 + 0xf] = a3\n 15917: a3 = a2 >> 0x30\n 15920: u8 [a0 + 0xe] = a3\n 15923: a3 = a2 >> 0x28\n 15926: u8 [a0 + 0xd] = a3\n 15929: a3 = a2 >> 0x20\n 15932: u8 [a0 + 0xc] = a3\n 15935: a3 = a2 >> 0x18\n 15938: u8 [a0 + 0xb] = a3\n 15941: a3 = a2 >> 0x10\n 15944: u8 [a0 + 0xa] = a3\n 15947: a3 = u64 [s1 + 0x298]\n 15951: a2 = a2 >> 0x8\n 15954: u8 [a0 + 0x9] = a2\n 15957: u8 [a0] = a1\n 15959: a2 = a1 >> 0x38\n 15962: u8 [a0 + 0x7] = a2\n 15965: a2 = a1 >> 0x30\n 15968: u8 [a0 + 0x6] = a2\n 15971: a2 = a1 >> 0x28\n 15974: u8 [a0 + 0x5] = a2\n 15977: a2 = a1 >> 0x20\n 15980: u8 [a0 + 0x4] = a2\n 15983: a2 = a1 >> 0x18\n 15986: u8 [a0 + 0x3] = a2\n 15989: a2 = a1 >> 0x10\n 15992: u8 [a0 + 0x2] = a2\n 15995: a1 = a1 >> 0x8\n 15998: a2 = u64 [s1 + 0x270]\n 16002: a2 = a2 + 0xffffffffffffffc0\n 16005: a2 = a3 <u a2\n 16008: a4 = u64 [s1 + 0x290]\n 16012: a2 = 0 if a4 != 0\n 16014: a4 = u64 [s1 + 0x278]\n 16018: a2 = 0 if a4 != 0\n 16020: u8 [a0 + 0x1] = a1\n 16023: jump @267 if a2 != 0\n      : @266 (gas: 1)\n 16026: jump @799\n      : @267 (gas: 7)\n 16030: a0 = u64 [s1 + 0x238]\n 16034: a0 = a0 >u 0\n 16036: u64 [s1 + 0x278] = a0\n 16040: a0 = u64 [s1 + 0x230]\n 16044: i32 a0 = a0 + 0x40\n 16047: a1 = 0x20\n 16050: ra = 144, jump @0\n      : @268 [@dyn 72] (gas: 64)\n 16056: a1 = u64 [s1 + 0x278]\n 16060: u8 [a0 + 0x1f] = a1\n 16063: t1 = u64 [s1 + 0x268]\n 16067: a1 = u64 [s1 + 0x298]\n 16071: t0 = t1 <u a1\n 16074: a1 = u64 [s1 + 0x290]\n 16078: a2 = u64 [s1 + 0x260]\n 16082: a4 = a2 ^ a1\n 16085: a3 = a2 <u a1\n 16088: a3 = t0 if a4 == 0\n 16091: a4 = u64 [s1 + 0x288]\n 16095: a5 = u64 [s1 + 0x220]\n 16099: t2 = a5 - a4\n 16102: ra = a5 <u a4\n 16105: a5 = u64 [s1 + 0x280]\n 16109: a4 = u64 [s1 + 0x228]\n 16113: a5 = a4 - a5\n 16116: a5 = a5 - ra\n 16119: a4 = t2 <u a3\n 16122: a4 = a5 - a4\n 16125: a5 = t2 - a3\n 16128: a3 = a2 - a1\n 16131: a3 = a3 - t0\n 16134: a1 = u64 [s1 + 0x298]\n 16138: a1 = t1 - a1\n 16141: a3 = a3 | a4\n 16144: a4 = a1 | a5\n 16147: a4 = a4 | a3\n 16150: a2 = a3 | a5\n 16153: a4 = a4 >> 0x20\n 16156: a2 = a2 << 0x20\n 16159: a2 = a2 | a4\n 16162: u8 [a0 + 30] = 0\n 16165: u8 [a0 + 29] = 0\n 16168: u8 [a0 + 28] = 0\n 16171: u8 [a0 + 27] = 0\n 16174: u8 [a0 + 26] = 0\n 16177: u8 [a0 + 25] = 0\n 16180: u8 [a0 + 24] = 0\n 16183: u8 [a0 + 23] = 0\n 16186: u8 [a0 + 22] = 0\n 16189: u8 [a0 + 21] = 0\n 16192: u8 [a0 + 20] = 0\n 16195: u8 [a0 + 19] = 0\n 16198: u8 [a0 + 18] = 0\n 16201: u8 [a0 + 17] = 0\n 16204: u8 [a0 + 16] = 0\n 16207: u8 [a0 + 15] = 0\n 16210: u8 [a0 + 14] = 0\n 16213: u8 [a0 + 13] = 0\n 16216: u8 [a0 + 12] = 0\n 16219: u8 [a0 + 11] = 0\n 16222: u8 [a0 + 10] = 0\n 16225: u8 [a0 + 9] = 0\n 16228: u8 [a0 + 8] = 0\n 16231: u8 [a0 + 7] = 0\n 16234: u8 [a0 + 6] = 0\n 16237: u8 [a0 + 5] = 0\n 16240: u8 [a0 + 4] = 0\n 16243: u8 [a0 + 3] = 0\n 16246: u8 [a0 + 2] = 0\n 16249: u8 [a0 + 1] = 0\n 16252: u8 [a0 + 0] = 0\n 16254: jump @270 if a2 == 0\n      : @269 (gas: 1)\n 16257: jump @799\n      : @270 (gas: 5)\n 16261: i32 a1 = a1 + 0\n 16263: u64 [s1 + 0x298] = a1\n 16267: a0 = u64 [s1 + 0x230]\n 16271: ra = 0xfe\n 16275: jump @0\n      : @271 (gas: 1)\n 16278: jump @273 if a0 == 978148400\n      : @272 (gas: 1)\n 16285: jump @918\n      : @273 (gas: 11)\n 16289: a0 = sp + 0xffffffffffffffe0\n 16292: a0 = a0 & 0xffffffffffffffe0\n 16295: u64 [s1 + 0x298] = a0\n 16299: sp = a0\n 16301: u64 [a0 + 24] = 0\n 16304: u64 [a0 + 16] = 0\n 16307: u64 [a0 + 8] = 0\n 16310: u64 [a0 + 0] = 0\n 16312: i32 a0 = a0 + 0\n 16314: ecalli 18 // 'value_transferred'\n 16316: fallthrough\n      : @274 (gas: 9)\n 16317: a3 = u64 [s1 + 0x298]\n 16321: a0 = u64 [a3 + 0x10]\n 16324: a1 = u64 [a3 + 0x18]\n 16327: a2 = u64 [a3 + 0x8]\n 16330: a3 = u64 [a3]\n 16332: a1 = a1 | a2\n 16335: a0 = a0 | a3\n 16338: a0 = a0 | a1\n 16341: jump @276 if a0 == 0\n      : @275 (gas: 1)\n 16344: jump @918\n      : @276 (gas: 3)\n 16348: a0 = u64 [s1 + 0x1a8]\n 16352: a0 = i32 [a0]\n 16354: jump @278 if a0 >u 35\n      : @277 (gas: 1)\n 16358: jump @918\n      : @278 (gas: 58)\n 16362: a0 = s1 + 0x2000\n 16366: i32 a0 = a0 + 0xffffffffffffff60\n 16370: a1 = 0x4\n 16373: ecalli 5 // 'call_data_load'\n 16375: a0 = s1 + 0x1a18\n 16379: a1 = u64 [a0 + 0x548]\n 16383: u64 [s1 + 0x278] = a1\n 16387: a1 = u64 [a0 + 0x550]\n 16391: u64 [s1 + 0x270] = a1\n 16395: a1 = u64 [a0 + 0x558]\n 16399: u64 [s1 + 0x268] = a1\n 16403: a0 = u64 [a0 + 0x560]\n 16407: u64 [s1 + 0x260] = a0\n 16411: a1 = s1 + 0x2218\n 16415: u64 [a1 + 512] = 0\n 16419: u64 [a1 + 504] = 0\n 16423: u64 [a1 + 496] = 0\n 16427: u64 [a1 + 488] = 0x3\n 16432: u64 [a1 + 544] = 0\n 16436: u64 [a1 + 536] = 0\n 16440: u64 [a1 + 528] = 0\n 16444: u64 [a1 + 520] = 0\n 16448: u32 [a1 + 552] = 0x20\n 16453: a0 = s1 + 0x2000\n 16457: i32 a1 = a0 + 0x400\n 16461: a0 = s1 + 0x2000\n 16465: i32 a3 = a0 + 0x420\n 16469: a0 = s1 + 0x2000\n 16473: i32 a4 = a0 + 0x440\n 16477: a2 = 0xffffffffffffffff\n 16480: a0 = 0\n 16482: ecalli 9 // 'get_storage'\n 16484: a3 = s1 + 0x2218\n 16488: a0 = u64 [a3 + 0x210]\n 16492: a1 = u64 [a3 + 0x208]\n 16496: a2 = u64 [a3 + 0x218]\n 16500: a3 = u64 [a3 + 0x220]\n 16504: a5 = u64 [s1 + 0x270]\n 16508: a4 = a5 ^ a0\n 16511: a0 = a5 <u a0\n 16514: a5 = u64 [s1 + 0x278]\n 16518: a1 = a5 <u a1\n 16521: a1 = a0 if a4 != 0\n 16524: a4 = u64 [s1 + 0x260]\n 16528: a0 = a4 ^ a3\n 16531: a3 = a4 <u a3\n 16534: a5 = u64 [s1 + 0x268]\n 16538: a4 = a5 <u a2\n 16541: a4 = a3 if a0 != 0\n 16544: a2 = a2 ^ a5\n 16547: a0 = a0 | a2\n 16550: a1 = a4 if a0 != 0\n 16553: u64 [s1 + 1784] = 0\n 16557: u64 [s1 + 1776] = 0\n 16561: u64 [s1 + 0x6e0] = a1\n 16565: a0 = s1 + 0x6e0\n 16569: u64 [s1 + 1768] = 0\n 16573: ra = 146, jump @1071\n      : @279 [@dyn 73] (gas: 11)\n 16580: a0 = u64 [s1 + 0x260]\n 16584: u64 [s1 + 0x698] = a0\n 16588: a0 = u64 [s1 + 0x268]\n 16592: u64 [s1 + 0x690] = a0\n 16596: a0 = u64 [s1 + 0x270]\n 16600: u64 [s1 + 0x688] = a0\n 16604: a0 = s1 + 0x6a0\n 16608: a1 = s1 + 0x680\n 16612: a2 = u64 [s1 + 0x278]\n 16616: u64 [s1 + 0x680] = a2\n 16620: ra = 148, jump @988\n      : @280 [@dyn 74] (gas: 11)\n 16627: a0 = u64 [s1 + 0x6b8]\n 16631: u64 [s1 + 0x298] = a0\n 16635: a0 = u64 [s1 + 0x6b0]\n 16639: u64 [s1 + 0x280] = a0\n 16643: a0 = u64 [s1 + 0x6a8]\n 16647: u64 [s1 + 0x290] = a0\n 16651: a0 = u64 [s1 + 0x6a0]\n 16655: u64 [s1 + 0x288] = a0\n 16659: a1 = 0x20\n 16662: a0 = 0\n 16664: ra = 150, jump @0\n      : @281 [@dyn 75] (gas: 71)\n 16670: a1 = u64 [s1 + 0x260]\n 16674: a1 = reverse a1\n 16676: a2 = u64 [s1 + 0x268]\n 16680: a2 = reverse a2\n 16682: a3 = u64 [s1 + 0x270]\n 16686: a3 = reverse a3\n 16688: a4 = u64 [s1 + 0x278]\n 16692: a4 = reverse a4\n 16694: a5 = a4 >> 0x38\n 16697: u8 [a0 + 0x1f] = a5\n 16700: a5 = a4 >> 0x30\n 16703: u8 [a0 + 0x1e] = a5\n 16706: a5 = a4 >> 0x28\n 16709: u8 [a0 + 0x1d] = a5\n 16712: a5 = a4 >> 0x20\n 16715: u8 [a0 + 0x1c] = a5\n 16718: a5 = a4 >> 0x18\n 16721: u8 [a0 + 0x1b] = a5\n 16724: a5 = a4 >> 0x10\n 16727: u8 [a0 + 0x1a] = a5\n 16730: a5 = a4 >> 0x8\n 16733: u8 [a0 + 0x19] = a5\n 16736: u8 [a0 + 0x18] = a4\n 16739: a4 = a3 >> 0x38\n 16742: u8 [a0 + 0x17] = a4\n 16745: a4 = a3 >> 0x30\n 16748: u8 [a0 + 0x16] = a4\n 16751: a4 = a3 >> 0x28\n 16754: u8 [a0 + 0x15] = a4\n 16757: a4 = a3 >> 0x20\n 16760: u8 [a0 + 0x14] = a4\n 16763: a4 = a3 >> 0x18\n 16766: u8 [a0 + 0x13] = a4\n 16769: a4 = a3 >> 0x10\n 16772: u8 [a0 + 0x12] = a4\n 16775: a4 = a3 >> 0x8\n 16778: u8 [a0 + 0x11] = a4\n 16781: u8 [a0 + 0x10] = a3\n 16784: a3 = a2 >> 0x38\n 16787: u8 [a0 + 0xf] = a3\n 16790: a3 = a2 >> 0x30\n 16793: u8 [a0 + 0xe] = a3\n 16796: a3 = a2 >> 0x28\n 16799: u8 [a0 + 0xd] = a3\n 16802: a3 = a2 >> 0x20\n 16805: u8 [a0 + 0xc] = a3\n 16808: a3 = a2 >> 0x18\n 16811: u8 [a0 + 0xb] = a3\n 16814: a3 = a2 >> 0x10\n 16817: u8 [a0 + 0xa] = a3\n 16820: a3 = a2 >> 0x8\n 16823: u8 [a0 + 0x9] = a3\n 16826: u8 [a0 + 0x8] = a2\n 16829: a2 = a1 >> 0x38\n 16832: u8 [a0 + 0x7] = a2\n 16835: a2 = a1 >> 0x30\n 16838: u8 [a0 + 0x6] = a2\n 16841: a2 = a1 >> 0x28\n 16844: u8 [a0 + 0x5] = a2\n 16847: a2 = a1 >> 0x20\n 16850: u8 [a0 + 0x4] = a2\n 16853: a2 = a1 >> 0x18\n 16856: u8 [a0 + 0x3] = a2\n 16859: a2 = a1 >> 0x10\n 16862: u8 [a0 + 0x2] = a2\n 16865: a2 = a1 >> 0x8\n 16868: u8 [a0 + 0x1] = a2\n 16871: u8 [a0] = a1\n 16873: a0 = 0x20\n 16876: a1 = 0x20\n 16879: ra = 152, jump @0\n      : @282 [@dyn 76] (gas: 35)\n 16885: u8 [a0 + 31] = 0x4\n 16889: u8 [a0 + 30] = 0\n 16892: u8 [a0 + 29] = 0\n 16895: u8 [a0 + 28] = 0\n 16898: u8 [a0 + 27] = 0\n 16901: u8 [a0 + 26] = 0\n 16904: u8 [a0 + 25] = 0\n 16907: u8 [a0 + 24] = 0\n 16910: u8 [a0 + 23] = 0\n 16913: u8 [a0 + 22] = 0\n 16916: u8 [a0 + 21] = 0\n 16919: u8 [a0 + 20] = 0\n 16922: u8 [a0 + 19] = 0\n 16925: u8 [a0 + 18] = 0\n 16928: u8 [a0 + 17] = 0\n 16931: u8 [a0 + 16] = 0\n 16934: u8 [a0 + 15] = 0\n 16937: u8 [a0 + 14] = 0\n 16940: u8 [a0 + 13] = 0\n 16943: u8 [a0 + 12] = 0\n 16946: u8 [a0 + 11] = 0\n 16949: u8 [a0 + 10] = 0\n 16952: u8 [a0 + 9] = 0\n 16955: u8 [a0 + 8] = 0\n 16958: u8 [a0 + 7] = 0\n 16961: u8 [a0 + 6] = 0\n 16964: u8 [a0 + 5] = 0\n 16967: u8 [a0 + 4] = 0\n 16970: u8 [a0 + 3] = 0\n 16973: u8 [a0 + 2] = 0\n 16976: u8 [a0 + 1] = 0\n 16979: u8 [a0 + 0] = 0\n 16981: a1 = 0x40\n 16984: a0 = 0\n 16986: ra = 154, jump @0\n      : @283 [@dyn 77] (gas: 167)\n 16992: a1 = sp + 0xffffffffffffffe0\n 16995: a1 = a1 & 0xffffffffffffffe0\n 16998: u64 [s1 + 0x278] = a1\n 17002: sp = a1\n 17004: i32 a0 = a0 + 0\n 17006: i32 a2 = a1 + 0\n 17008: a1 = 0x40\n 17011: ecalli 10 // 'hash_keccak_256'\n 17013: a3 = u64 [s1 + 0x278]\n 17017: a0 = u64 [a3 + 0x18]\n 17020: a1 = u64 [a3 + 0x10]\n 17023: a2 = u64 [a3 + 0x8]\n 17026: a3 = u64 [a3]\n 17028: a0 = reverse a0\n 17030: a1 = reverse a1\n 17032: a2 = reverse a2\n 17034: a3 = reverse a3\n 17036: a4 = s1 + 0x2218\n 17040: u64 [a4 + 0x200] = a3\n 17044: u64 [a4 + 0x1f8] = a2\n 17048: u64 [a4 + 0x1f0] = a1\n 17052: u64 [a4 + 0x1e8] = a0\n 17056: u64 [a4 + 544] = 0\n 17060: u64 [a4 + 536] = 0\n 17064: u64 [a4 + 528] = 0\n 17068: u64 [a4 + 520] = 0\n 17072: u32 [a4 + 552] = 0x20\n 17077: a0 = s1 + 0x2000\n 17081: i32 a1 = a0 + 0x400\n 17085: a0 = s1 + 0x2000\n 17089: i32 a3 = a0 + 0x420\n 17093: a0 = s1 + 0x2000\n 17097: i32 a4 = a0 + 0x440\n 17101: a2 = 0xffffffffffffffff\n 17104: a0 = 0\n 17106: ecalli 9 // 'get_storage'\n 17108: a0 = u64 [s1 + 0x288]\n 17112: a0 = a0 + 0x1\n 17115: a1 = a0 <u 0x1\n 17118: a2 = u64 [s1 + 0x290]\n 17122: a1 = a1 + a2\n 17125: a2 = a0 | a1\n 17128: a2 = a2 <u 0x1\n 17131: a3 = u64 [s1 + 0x280]\n 17135: a2 = a2 + a3\n 17138: a3 = a2 <u a3\n 17141: a4 = u64 [s1 + 0x298]\n 17145: a3 = a3 + a4\n 17148: a4 = s1 + 0x2218\n 17152: u64 [a4 + 0x200] = a3\n 17156: a3 = u64 [a4 + 0x220]\n 17160: u64 [s1 + 0x210] = a3\n 17164: u64 [a4 + 0x1f8] = a2\n 17168: a2 = u64 [a4 + 0x218]\n 17172: u64 [s1 + 0x208] = a2\n 17176: u64 [a4 + 0x1f0] = a1\n 17180: a1 = u64 [a4 + 0x210]\n 17184: u64 [s1 + 0x200] = a1\n 17188: u64 [a4 + 0x1e8] = a0\n 17192: a0 = u64 [a4 + 0x208]\n 17196: u64 [s1 + 0x1f8] = a0\n 17200: u64 [a4 + 544] = 0\n 17204: u64 [a4 + 536] = 0\n 17208: u64 [a4 + 528] = 0\n 17212: u64 [a4 + 520] = 0\n 17216: u32 [a4 + 552] = 0x20\n 17221: a0 = s1 + 0x2000\n 17225: i32 a1 = a0 + 0x400\n 17229: a0 = s1 + 0x2000\n 17233: i32 a3 = a0 + 0x420\n 17237: a0 = s1 + 0x2000\n 17241: i32 a4 = a0 + 0x440\n 17245: a2 = 0xffffffffffffffff\n 17248: a0 = 0\n 17250: ecalli 9 // 'get_storage'\n 17252: a1 = u64 [s1 + 0x288]\n 17256: a0 = a1 + 0x3\n 17259: a1 = a0 <u a1\n 17262: a3 = u64 [s1 + 0x290]\n 17266: a2 = a3 + a1\n 17269: a3 = a2 <u a3\n 17272: a3 = a1 if a1 == 0\n 17275: a1 = u64 [s1 + 0x280]\n 17279: a3 = a3 + a1\n 17282: a1 = a3 <u a1\n 17285: a4 = u64 [s1 + 0x298]\n 17289: a1 = a1 + a4\n 17292: a4 = s1 + 0x2218\n 17296: u64 [a4 + 0x200] = a1\n 17300: a1 = u64 [a4 + 0x220]\n 17304: u64 [s1 + 0x258] = a1\n 17308: u64 [a4 + 0x1f8] = a3\n 17312: a1 = u64 [a4 + 0x218]\n 17316: u64 [s1 + 0x250] = a1\n 17320: u64 [a4 + 0x1f0] = a2\n 17324: a1 = u64 [a4 + 0x210]\n 17328: u64 [s1 + 0x248] = a1\n 17332: u64 [a4 + 0x1e8] = a0\n 17336: a0 = u64 [a4 + 0x208]\n 17340: u64 [s1 + 0x240] = a0\n 17344: u64 [a4 + 544] = 0\n 17348: u64 [a4 + 536] = 0\n 17352: u64 [a4 + 528] = 0\n 17356: u64 [a4 + 520] = 0\n 17360: u32 [a4 + 552] = 0x20\n 17365: a0 = s1 + 0x2000\n 17369: i32 a1 = a0 + 0x400\n 17373: a0 = s1 + 0x2000\n 17377: i32 a3 = a0 + 0x420\n 17381: a0 = s1 + 0x2000\n 17385: i32 a4 = a0 + 0x440\n 17389: a2 = 0xffffffffffffffff\n 17392: a0 = 0\n 17394: ecalli 9 // 'get_storage'\n 17396: a1 = u64 [s1 + 0x288]\n 17400: a0 = a1 + 0x2\n 17403: a1 = a0 <u a1\n 17406: a3 = u64 [s1 + 0x290]\n 17410: a2 = a3 + a1\n 17413: a3 = a2 <u a3\n 17416: a3 = a1 if a1 == 0\n 17419: a1 = u64 [s1 + 0x280]\n 17423: a3 = a3 + a1\n 17426: a1 = a3 <u a1\n 17429: a4 = u64 [s1 + 0x298]\n 17433: a1 = a1 + a4\n 17436: a4 = s1 + 0x2218\n 17440: u64 [a4 + 0x200] = a1\n 17444: u64 [a4 + 0x1f8] = a3\n 17448: u64 [a4 + 0x1f0] = a2\n 17452: u64 [a4 + 0x1e8] = a0\n 17456: u32 [a4 + 552] = 0x20\n 17461: a0 = u8 [a4 + 0x208]\n 17465: u64 [s1 + 0x238] = a0\n 17469: u64 [a4 + 544] = 0\n 17473: u64 [a4 + 536] = 0\n 17477: u64 [a4 + 528] = 0\n 17481: u64 [a4 + 520] = 0\n 17485: a0 = s1 + 0x2000\n 17489: i32 a1 = a0 + 0x400\n 17493: a0 = s1 + 0x2000\n 17497: i32 a3 = a0 + 0x420\n 17501: a0 = s1 + 0x2000\n 17505: i32 a4 = a0 + 0x440\n 17509: a2 = 0xffffffffffffffff\n 17512: a0 = 0\n 17514: ecalli 9 // 'get_storage'\n 17516: a1 = s1 + 0x2218\n 17520: a0 = u64 [a1 + 0x220]\n 17524: u64 [s1 + 0x218] = a0\n 17528: a0 = u64 [a1 + 0x218]\n 17532: u64 [s1 + 0x220] = a0\n 17536: a0 = u64 [a1 + 0x210]\n 17540: u64 [s1 + 0x228] = a0\n 17544: a0 = u64 [a1 + 0x208]\n 17548: u64 [s1 + 0x230] = a0\n 17552: a0 = u64 [s1 + 0x298]\n 17556: u64 [s1 + 0x658] = a0\n 17560: a0 = u64 [s1 + 0x280]\n 17564: u64 [s1 + 0x650] = a0\n 17568: a0 = u64 [s1 + 0x290]\n 17572: u64 [s1 + 0x648] = a0\n 17576: a0 = s1 + 0x660\n 17580: a1 = s1 + 0x640\n 17584: a2 = u64 [s1 + 0x288]\n 17588: u64 [s1 + 0x640] = a2\n 17592: ra = 156, jump @1018\n      : @284 [@dyn 78] (gas: 11)\n 17599: a0 = u64 [s1 + 0x678]\n 17603: u64 [s1 + 0x260] = a0\n 17607: a0 = u64 [s1 + 0x670]\n 17611: u64 [s1 + 0x268] = a0\n 17615: a0 = u64 [s1 + 0x668]\n 17619: u64 [s1 + 0x270] = a0\n 17623: a0 = u64 [s1 + 0x660]\n 17627: u64 [s1 + 0x278] = a0\n 17631: a0 = 0x40\n 17634: a1 = 0x20\n 17637: ra = 158, jump @0\n      : @285 [@dyn 79] (gas: 101)\n 17643: a1 = u8 [a0 + 0x11]\n 17646: a2 = u8 [a0 + 0x10]\n 17649: a3 = u8 [a0 + 0x12]\n 17652: a4 = u8 [a0 + 0x13]\n 17655: a1 = a1 << 0x8\n 17658: a1 = a1 | a2\n 17661: a3 = a3 << 0x10\n 17664: a4 = a4 << 0x18\n 17667: a3 = a3 | a4\n 17670: a1 = a1 | a3\n 17673: a2 = u8 [a0 + 0x15]\n 17676: a3 = u8 [a0 + 0x14]\n 17679: a4 = u8 [a0 + 0x16]\n 17682: a5 = u8 [a0 + 0x17]\n 17685: a2 = a2 << 0x8\n 17688: a2 = a2 | a3\n 17691: a4 = a4 << 0x10\n 17694: a5 = a5 << 0x18\n 17697: a4 = a4 | a5\n 17700: a2 = a2 | a4\n 17703: a2 = a2 << 0x20\n 17706: t0 = a2 | a1\n 17709: a2 = u8 [a0 + 0x1]\n 17712: a3 = u8 [a0]\n 17714: a4 = u8 [a0 + 0x2]\n 17717: a5 = u8 [a0 + 0x3]\n 17720: a2 = a2 << 0x8\n 17723: a2 = a2 | a3\n 17726: a4 = a4 << 0x10\n 17729: a5 = a5 << 0x18\n 17732: a4 = a4 | a5\n 17735: a2 = a2 | a4\n 17738: a3 = u8 [a0 + 0x5]\n 17741: a4 = u8 [a0 + 0x4]\n 17744: a5 = u8 [a0 + 0x6]\n 17747: a1 = u8 [a0 + 0x7]\n 17750: a3 = a3 << 0x8\n 17753: a3 = a3 | a4\n 17756: a5 = a5 << 0x10\n 17759: a1 = a1 << 0x18\n 17762: a1 = a1 | a5\n 17765: a1 = a1 | a3\n 17768: a1 = a1 << 0x20\n 17771: t1 = a1 | a2\n 17774: a1 = u8 [a0 + 0x19]\n 17777: a3 = u8 [a0 + 0x18]\n 17780: a4 = u8 [a0 + 0x1a]\n 17783: a5 = u8 [a0 + 0x1b]\n 17786: a1 = a1 << 0x8\n 17789: a1 = a1 | a3\n 17792: a4 = a4 << 0x10\n 17795: a5 = a5 << 0x18\n 17798: a4 = a4 | a5\n 17801: a1 = a1 | a4\n 17804: a3 = u8 [a0 + 0x1d]\n 17807: a4 = u8 [a0 + 0x1c]\n 17810: a5 = u8 [a0 + 0x1e]\n 17813: a2 = u8 [a0 + 0x1f]\n 17816: a3 = a3 << 0x8\n 17819: a3 = a3 | a4\n 17822: a5 = a5 << 0x10\n 17825: a2 = a2 << 0x18\n 17828: a2 = a2 | a5\n 17831: a2 = a2 | a3\n 17834: a2 = a2 << 0x20\n 17837: a3 = a2 | a1\n 17840: a1 = u8 [a0 + 0x9]\n 17843: a2 = u8 [a0 + 0x8]\n 17846: a4 = u8 [a0 + 0xa]\n 17849: a5 = u8 [a0 + 0xb]\n 17852: a1 = a1 << 0x8\n 17855: a1 = a1 | a2\n 17858: a4 = a4 << 0x10\n 17861: a5 = a5 << 0x18\n 17864: a4 = a4 | a5\n 17867: a1 = a1 | a4\n 17870: a2 = u8 [a0 + 0xd]\n 17873: a4 = u8 [a0 + 0xc]\n 17876: a5 = u8 [a0 + 0xe]\n 17879: a0 = u8 [a0 + 0xf]\n 17882: a2 = a2 << 0x8\n 17885: a2 = a2 | a4\n 17888: a5 = a5 << 0x10\n 17891: a0 = a0 << 0x18\n 17894: a0 = a0 | a5\n 17897: a0 = a0 | a2\n 17900: a0 = a0 << 0x20\n 17903: a0 = a0 | a1\n 17906: a4 = reverse a0\n 17908: a2 = reverse a3\n 17910: a3 = reverse t1\n 17912: a0 = reverse t0\n 17914: u64 [s1 + 0x290] = a0\n 17918: a0 = a0 | a3\n 17921: a1 = a2 | a4\n 17924: a1 = a1 | a0\n 17927: a1 = a1 >> 0x20\n 17930: a0 = a0 | a4\n 17933: a0 = a0 << 0x20\n 17936: a0 = a0 | a1\n 17939: jump @287 if a0 == 0\n      : @286 (gas: 1)\n 17942: jump @799\n      : @287 (gas: 7)\n 17946: i32 a0 = a2 + 0\n 17948: a1 = 0x20\n 17951: u64 [s1 + 0x1f0] = a0\n 17955: u64 [s1 + 0x298] = a2\n 17959: u64 [s1 + 0x288] = a4\n 17963: u64 [s1 + 0x280] = a3\n 17967: ra = 160, jump @0\n      : @288 [@dyn 80] (gas: 62)\n 17973: u8 [a0 + 31] = 0xa0\n 17978: u8 [a0 + 30] = 0\n 17981: u8 [a0 + 29] = 0\n 17984: u8 [a0 + 28] = 0\n 17987: u8 [a0 + 27] = 0\n 17990: u8 [a0 + 26] = 0\n 17993: u8 [a0 + 25] = 0\n 17996: u8 [a0 + 24] = 0\n 17999: u8 [a0 + 23] = 0\n 18002: u8 [a0 + 22] = 0\n 18005: u8 [a0 + 21] = 0\n 18008: u8 [a0 + 20] = 0\n 18011: u8 [a0 + 19] = 0\n 18014: u8 [a0 + 18] = 0\n 18017: u8 [a0 + 17] = 0\n 18020: u8 [a0 + 16] = 0\n 18023: u8 [a0 + 15] = 0\n 18026: u8 [a0 + 14] = 0\n 18029: u8 [a0 + 13] = 0\n 18032: u8 [a0 + 12] = 0\n 18035: u8 [a0 + 11] = 0\n 18038: u8 [a0 + 10] = 0\n 18041: u8 [a0 + 9] = 0\n 18044: u8 [a0 + 8] = 0\n 18047: u8 [a0 + 7] = 0\n 18050: u8 [a0 + 6] = 0\n 18053: u8 [a0 + 5] = 0\n 18056: u8 [a0 + 4] = 0\n 18059: u8 [a0 + 3] = 0\n 18062: u8 [a0 + 2] = 0\n 18065: u8 [a0 + 1] = 0\n 18068: u8 [a0 + 0] = 0\n 18070: a0 = u64 [s1 + 0x298]\n 18074: a0 = a0 + 0xa0\n 18078: a1 = u64 [s1 + 0x298]\n 18082: a1 = a0 <u a1\n 18085: a3 = u64 [s1 + 0x290]\n 18089: a2 = a3 + a1\n 18092: a3 = a2 <u a3\n 18095: a3 = a1 if a1 == 0\n 18098: a1 = u64 [s1 + 0x288]\n 18102: a3 = a3 + a1\n 18105: a1 = u64 [s1 + 0x288]\n 18109: a1 = a3 <u a1\n 18112: a4 = u64 [s1 + 0x280]\n 18116: a4 = a4 + a1\n 18119: u64 [s1 + 0x5e8] = a2\n 18123: u64 [s1 + 0x5e0] = a0\n 18127: a0 = u64 [s1 + 0x260]\n 18131: u64 [s1 + 0x618] = a0\n 18135: a0 = u64 [s1 + 0x268]\n 18139: u64 [s1 + 0x610] = a0\n 18143: a0 = u64 [s1 + 0x270]\n 18147: u64 [s1 + 0x608] = a0\n 18151: a0 = u64 [s1 + 0x278]\n 18155: u64 [s1 + 0x600] = a0\n 18159: u64 [s1 + 0x5f0] = a3\n 18163: a0 = s1 + 0x620\n 18167: a1 = s1 + 0x600\n 18171: a2 = s1 + 0x5e0\n 18175: u64 [s1 + 0x5f8] = a4\n 18179: ra = 162, jump @964\n      : @289 [@dyn 81] (gas: 11)\n 18186: a0 = u64 [s1 + 0x288]\n 18190: a1 = u64 [s1 + 0x280]\n 18194: a2 = a0 | a1\n 18197: a3 = 0x100000000\n 18207: a0 = 0xffffffe0\n 18217: a1 = u64 [s1 + 0x298]\n 18221: a0 = a1 <u a0\n 18224: a1 = u64 [s1 + 0x290]\n 18228: a0 = 0 if a1 != 0\n 18230: a0 = 0 if a2 != 0\n 18232: jump @291 if a0 != 0\n      : @290 (gas: 1)\n 18235: jump @799\n      : @291 (gas: 14)\n 18239: a0 = u64 [s1 + 0x638]\n 18243: u64 [s1 + 0x1e8] = a0\n 18247: a0 = u64 [s1 + 0x630]\n 18251: u64 [s1 + 0x1e0] = a0\n 18255: a0 = u64 [s1 + 0x628]\n 18259: u64 [s1 + 0x260] = a0\n 18263: a0 = u64 [s1 + 0x620]\n 18267: u64 [s1 + 0x268] = a0\n 18271: a0 = u64 [s1 + 0x1f0]\n 18275: i32 a0 = a0 + 0x20\n 18278: a1 = 0x20\n 18281: u64 [s1 + 0x278] = a2\n 18285: u64 [s1 + 0x270] = a3\n 18289: ra = 164, jump @0\n      : @292 [@dyn 82] (gas: 77)\n 18295: a1 = u64 [s1 + 0x258]\n 18299: a1 = reverse a1\n 18301: a2 = u64 [s1 + 0x250]\n 18305: a2 = reverse a2\n 18307: a3 = u64 [s1 + 0x248]\n 18311: a3 = reverse a3\n 18313: a4 = u64 [s1 + 0x240]\n 18317: a4 = reverse a4\n 18319: a5 = a4 >> 0x38\n 18322: u8 [a0 + 0x1f] = a5\n 18325: a5 = a4 >> 0x30\n 18328: u8 [a0 + 0x1e] = a5\n 18331: a5 = a4 >> 0x28\n 18334: u8 [a0 + 0x1d] = a5\n 18337: a5 = a4 >> 0x20\n 18340: u8 [a0 + 0x1c] = a5\n 18343: a5 = a4 >> 0x18\n 18346: u8 [a0 + 0x1b] = a5\n 18349: a5 = a4 >> 0x10\n 18352: u8 [a0 + 0x1a] = a5\n 18355: a5 = a4 >> 0x8\n 18358: u8 [a0 + 0x19] = a5\n 18361: u8 [a0 + 0x18] = a4\n 18364: u8 [a0 + 0x10] = a3\n 18367: a4 = a3 >> 0x38\n 18370: u8 [a0 + 0x17] = a4\n 18373: a4 = a3 >> 0x30\n 18376: u8 [a0 + 0x16] = a4\n 18379: a4 = a3 >> 0x28\n 18382: u8 [a0 + 0x15] = a4\n 18385: a4 = a3 >> 0x20\n 18388: u8 [a0 + 0x14] = a4\n 18391: a4 = a3 >> 0x18\n 18394: u8 [a0 + 0x13] = a4\n 18397: a4 = a3 >> 0x10\n 18400: u8 [a0 + 0x12] = a4\n 18403: a3 = a3 >> 0x8\n 18406: u8 [a0 + 0x11] = a3\n 18409: u8 [a0 + 0x8] = a2\n 18412: a3 = a2 >> 0x38\n 18415: u8 [a0 + 0xf] = a3\n 18418: a3 = a2 >> 0x30\n 18421: u8 [a0 + 0xe] = a3\n 18424: a3 = a2 >> 0x28\n 18427: u8 [a0 + 0xd] = a3\n 18430: a3 = a2 >> 0x20\n 18433: u8 [a0 + 0xc] = a3\n 18436: a3 = a2 >> 0x18\n 18439: u8 [a0 + 0xb] = a3\n 18442: a3 = a2 >> 0x10\n 18445: u8 [a0 + 0xa] = a3\n 18448: a2 = a2 >> 0x8\n 18451: u8 [a0 + 0x9] = a2\n 18454: u8 [a0] = a1\n 18456: a2 = a1 >> 0x38\n 18459: u8 [a0 + 0x7] = a2\n 18462: a2 = a1 >> 0x30\n 18465: u8 [a0 + 0x6] = a2\n 18468: a2 = a1 >> 0x28\n 18471: u8 [a0 + 0x5] = a2\n 18474: a2 = a1 >> 0x20\n 18477: u8 [a0 + 0x4] = a2\n 18480: a2 = a1 >> 0x18\n 18483: u8 [a0 + 0x3] = a2\n 18486: a2 = a1 >> 0x10\n 18489: u8 [a0 + 0x2] = a2\n 18492: a1 = a1 >> 0x8\n 18495: a2 = u64 [s1 + 0x270]\n 18499: a2 = a2 + 0xffffffffffffffc0\n 18502: a3 = u64 [s1 + 0x298]\n 18506: a2 = a3 <u a2\n 18509: a3 = u64 [s1 + 0x290]\n 18513: a2 = 0 if a3 != 0\n 18515: a3 = u64 [s1 + 0x278]\n 18519: a2 = 0 if a3 != 0\n 18521: u8 [a0 + 0x1] = a1\n 18524: jump @294 if a2 != 0\n      : @293 (gas: 1)\n 18527: jump @799\n      : @294 (gas: 7)\n 18531: a0 = u64 [s1 + 0x238]\n 18535: a0 = a0 >u 0\n 18537: u64 [s1 + 0x270] = a0\n 18541: a0 = u64 [s1 + 0x1f0]\n 18545: i32 a0 = a0 + 0x40\n 18548: a1 = 0x20\n 18551: ra = 166, jump @0\n      : @295 [@dyn 83] (gas: 42)\n 18557: a3 = u64 [s1 + 0x278]\n 18561: a1 = u64 [s1 + 0x270]\n 18565: u8 [a0 + 0x1f] = a1\n 18568: u8 [a0 + 30] = 0\n 18571: u8 [a0 + 29] = 0\n 18574: u8 [a0 + 28] = 0\n 18577: u8 [a0 + 27] = 0\n 18580: u8 [a0 + 26] = 0\n 18583: u8 [a0 + 25] = 0\n 18586: u8 [a0 + 24] = 0\n 18589: u8 [a0 + 23] = 0\n 18592: u8 [a0 + 22] = 0\n 18595: u8 [a0 + 21] = 0\n 18598: u8 [a0 + 20] = 0\n 18601: u8 [a0 + 19] = 0\n 18604: u8 [a0 + 18] = 0\n 18607: u8 [a0 + 17] = 0\n 18610: u8 [a0 + 16] = 0\n 18613: u8 [a0 + 15] = 0\n 18616: u8 [a0 + 14] = 0\n 18619: u8 [a0 + 13] = 0\n 18622: u8 [a0 + 12] = 0\n 18625: u8 [a0 + 11] = 0\n 18628: u8 [a0 + 10] = 0\n 18631: u8 [a0 + 9] = 0\n 18634: u8 [a0 + 8] = 0\n 18637: u8 [a0 + 7] = 0\n 18640: u8 [a0 + 6] = 0\n 18643: u8 [a0 + 5] = 0\n 18646: u8 [a0 + 4] = 0\n 18649: u8 [a0 + 3] = 0\n 18652: u8 [a0 + 2] = 0\n 18655: u8 [a0 + 1] = 0\n 18658: a4 = 0x100000000\n 18668: a1 = 0xffffffa0\n 18678: a2 = u64 [s1 + 0x298]\n 18682: a1 = a2 <u a1\n 18685: a2 = u64 [s1 + 0x290]\n 18689: a1 = 0 if a2 != 0\n 18691: a1 = 0 if a3 != 0\n 18693: u8 [a0 + 0] = 0\n 18695: jump @297 if a1 != 0\n      : @296 (gas: 1)\n 18698: jump @799\n      : @297 (gas: 5)\n 18702: a0 = u64 [s1 + 0x1f0]\n 18706: i32 a0 = a0 + 0x60\n 18709: a1 = 0x20\n 18712: u64 [s1 + 0x270] = a4\n 18716: ra = 168, jump @0\n      : @298 [@dyn 84] (gas: 77)\n 18722: a1 = u64 [s1 + 0x218]\n 18726: a1 = reverse a1\n 18728: a2 = u64 [s1 + 0x220]\n 18732: a2 = reverse a2\n 18734: a3 = u64 [s1 + 0x228]\n 18738: a3 = reverse a3\n 18740: a4 = u64 [s1 + 0x230]\n 18744: a4 = reverse a4\n 18746: a5 = a4 >> 0x38\n 18749: u8 [a0 + 0x1f] = a5\n 18752: a5 = a4 >> 0x30\n 18755: u8 [a0 + 0x1e] = a5\n 18758: a5 = a4 >> 0x28\n 18761: u8 [a0 + 0x1d] = a5\n 18764: a5 = a4 >> 0x20\n 18767: u8 [a0 + 0x1c] = a5\n 18770: a5 = a4 >> 0x18\n 18773: u8 [a0 + 0x1b] = a5\n 18776: a5 = a4 >> 0x10\n 18779: u8 [a0 + 0x1a] = a5\n 18782: a5 = a4 >> 0x8\n 18785: u8 [a0 + 0x19] = a5\n 18788: u8 [a0 + 0x18] = a4\n 18791: u8 [a0 + 0x10] = a3\n 18794: a4 = a3 >> 0x38\n 18797: u8 [a0 + 0x17] = a4\n 18800: a4 = a3 >> 0x30\n 18803: u8 [a0 + 0x16] = a4\n 18806: a4 = a3 >> 0x28\n 18809: u8 [a0 + 0x15] = a4\n 18812: a4 = a3 >> 0x20\n 18815: u8 [a0 + 0x14] = a4\n 18818: a4 = a3 >> 0x18\n 18821: u8 [a0 + 0x13] = a4\n 18824: a4 = a3 >> 0x10\n 18827: u8 [a0 + 0x12] = a4\n 18830: a3 = a3 >> 0x8\n 18833: u8 [a0 + 0x11] = a3\n 18836: u8 [a0 + 0x8] = a2\n 18839: a3 = a2 >> 0x38\n 18842: u8 [a0 + 0xf] = a3\n 18845: a3 = a2 >> 0x30\n 18848: u8 [a0 + 0xe] = a3\n 18851: a3 = a2 >> 0x28\n 18854: u8 [a0 + 0xd] = a3\n 18857: a3 = a2 >> 0x20\n 18860: u8 [a0 + 0xc] = a3\n 18863: a3 = a2 >> 0x18\n 18866: u8 [a0 + 0xb] = a3\n 18869: a3 = a2 >> 0x10\n 18872: u8 [a0 + 0xa] = a3\n 18875: a3 = u64 [s1 + 0x298]\n 18879: a2 = a2 >> 0x8\n 18882: u8 [a0 + 0x9] = a2\n 18885: u8 [a0] = a1\n 18887: a2 = a1 >> 0x38\n 18890: u8 [a0 + 0x7] = a2\n 18893: a2 = a1 >> 0x30\n 18896: u8 [a0 + 0x6] = a2\n 18899: a2 = a1 >> 0x28\n 18902: u8 [a0 + 0x5] = a2\n 18905: a2 = a1 >> 0x20\n 18908: u8 [a0 + 0x4] = a2\n 18911: a2 = a1 >> 0x18\n 18914: u8 [a0 + 0x3] = a2\n 18917: a2 = a1 >> 0x10\n 18920: u8 [a0 + 0x2] = a2\n 18923: a1 = a1 >> 0x8\n 18926: a2 = u64 [s1 + 0x270]\n 18930: a2 = a2 + 0xffffffffffffff80\n 18933: a2 = a3 <u a2\n 18936: a4 = u64 [s1 + 0x290]\n 18940: a2 = 0 if a4 != 0\n 18942: a4 = u64 [s1 + 0x278]\n 18946: a2 = 0 if a4 != 0\n 18948: u8 [a0 + 0x1] = a1\n 18951: jump @300 if a2 != 0\n      : @299 (gas: 1)\n 18954: jump @799\n      : @300 (gas: 4)\n 18958: a0 = u64 [s1 + 0x1f0]\n 18962: i32 a0 = a0 + 0x80\n 18966: a1 = 0x20\n 18969: ra = 170, jump @0\n      : @301 [@dyn 85] (gas: 102)\n 18975: a1 = u64 [s1 + 0x1f8]\n 18979: a1 = reverse a1\n 18981: a2 = a1 >> 0x38\n 18984: u8 [a0 + 0x1f] = a2\n 18987: a2 = a1 >> 0x30\n 18990: u8 [a0 + 0x1e] = a2\n 18993: a2 = a1 >> 0x28\n 18996: u8 [a0 + 0x1d] = a2\n 18999: a2 = a1 >> 0x20\n 19002: u8 [a0 + 0x1c] = a2\n 19005: a2 = a1 >> 0x18\n 19008: u8 [a0 + 0x1b] = a2\n 19011: a2 = a1 >> 0x10\n 19014: u8 [a0 + 0x1a] = a2\n 19017: a2 = a1 >> 0x8\n 19020: u8 [a0 + 0x19] = a2\n 19023: u8 [a0 + 0x18] = a1\n 19026: a1 = u64 [s1 + 0x200]\n 19030: a1 = reverse a1\n 19032: a2 = a1 >> 0x38\n 19035: u8 [a0 + 0x17] = a2\n 19038: a2 = a1 >> 0x30\n 19041: u8 [a0 + 0x16] = a2\n 19044: a2 = a1 >> 0x28\n 19047: u8 [a0 + 0x15] = a2\n 19050: a2 = a1 >> 0x20\n 19053: u8 [a0 + 0x14] = a2\n 19056: a2 = a1 >> 0x18\n 19059: u8 [a0 + 0x13] = a2\n 19062: a2 = a1 >> 0x10\n 19065: u8 [a0 + 0x12] = a2\n 19068: u8 [a0 + 0x10] = a1\n 19071: a1 = a1 >> 0x8\n 19074: u8 [a0 + 0x11] = a1\n 19077: a1 = u64 [s1 + 0x208]\n 19081: a1 = reverse a1\n 19083: a2 = a1 >> 0x38\n 19086: u8 [a0 + 0xf] = a2\n 19089: a2 = a1 >> 0x30\n 19092: u8 [a0 + 0xe] = a2\n 19095: a2 = a1 >> 0x28\n 19098: u8 [a0 + 0xd] = a2\n 19101: a2 = a1 >> 0x20\n 19104: u8 [a0 + 0xc] = a2\n 19107: a2 = a1 >> 0x18\n 19110: u8 [a0 + 0xb] = a2\n 19113: a2 = a1 >> 0x10\n 19116: u8 [a0 + 0xa] = a2\n 19119: u8 [a0 + 0x8] = a1\n 19122: a1 = a1 >> 0x8\n 19125: u8 [a0 + 0x9] = a1\n 19128: a1 = u64 [s1 + 0x210]\n 19132: a1 = reverse a1\n 19134: a2 = a1 >> 0x38\n 19137: u8 [a0 + 0x7] = a2\n 19140: a2 = a1 >> 0x30\n 19143: u8 [a0 + 0x6] = a2\n 19146: a2 = a1 >> 0x28\n 19149: u8 [a0 + 0x5] = a2\n 19152: a2 = a1 >> 0x20\n 19155: u8 [a0 + 0x4] = a2\n 19158: a2 = a1 >> 0x18\n 19161: u8 [a0 + 0x3] = a2\n 19164: a2 = a1 >> 0x10\n 19167: u8 [a0 + 0x2] = a2\n 19170: a2 = u64 [s1 + 0x298]\n 19174: a3 = u64 [s1 + 0x268]\n 19178: t2 = a3 <u a2\n 19181: t1 = u64 [s1 + 0x290]\n 19185: a3 = u64 [s1 + 0x260]\n 19189: a5 = a3 ^ t1\n 19192: a4 = a3 <u t1\n 19195: a4 = t2 if a5 == 0\n 19198: t0 = u64 [s1 + 0x288]\n 19202: a5 = u64 [s1 + 0x1e0]\n 19206: ra = a5 - t0\n 19209: a2 = a5 <u t0\n 19212: u64 [s1 + 0x288] = a2\n 19216: a5 = u64 [s1 + 0x280]\n 19220: t0 = u64 [s1 + 0x1e8]\n 19224: a5 = t0 - a5\n 19227: a2 = u64 [s1 + 0x288]\n 19231: t0 = a5 - a2\n 19234: a5 = ra <u a4\n 19237: a5 = t0 - a5\n 19240: t0 = ra - a4\n 19243: a4 = a3 - t1\n 19246: a4 = a4 - t2\n 19249: a2 = u64 [s1 + 0x298]\n 19253: a3 = u64 [s1 + 0x268]\n 19257: a2 = a3 - a2\n 19260: a4 = a4 | a5\n 19263: a5 = a2 | t0\n 19266: a5 = a5 | a4\n 19269: a3 = a4 | t0\n 19272: a5 = a5 >> 0x20\n 19275: a3 = a3 << 0x20\n 19278: a3 = a3 | a5\n 19281: u8 [a0] = a1\n 19283: a1 = a1 >> 0x8\n 19286: u8 [a0 + 0x1] = a1\n 19289: jump @303 if a3 == 0\n      : @302 (gas: 1)\n 19292: jump @799\n      : @303 (gas: 5)\n 19296: i32 a1 = a2 + 0\n 19298: u64 [s1 + 0x298] = a1\n 19302: a0 = u64 [s1 + 0x1f0]\n 19306: ra = 0xfe\n 19310: jump @0\n      : @304 (gas: 1)\n 19313: jump @306 if a0 == 1313301581\n      : @305 (gas: 1)\n 19320: jump @918\n      : @306 (gas: 11)\n 19324: a0 = sp + 0xffffffffffffffe0\n 19327: a0 = a0 & 0xffffffffffffffe0\n 19330: u64 [s1 + 0x298] = a0\n 19334: sp = a0\n 19336: u64 [a0 + 24] = 0\n 19339: u64 [a0 + 16] = 0\n 19342: u64 [a0 + 8] = 0\n 19345: u64 [a0 + 0] = 0\n 19347: i32 a0 = a0 + 0\n 19349: ecalli 18 // 'value_transferred'\n 19351: fallthrough\n      : @307 (gas: 9)\n 19352: a3 = u64 [s1 + 0x298]\n 19356: a0 = u64 [a3 + 0x10]\n 19359: a1 = u64 [a3 + 0x18]\n 19362: a2 = u64 [a3 + 0x8]\n 19365: a3 = u64 [a3]\n 19367: a1 = a1 | a2\n 19370: a0 = a0 | a3\n 19373: a0 = a0 | a1\n 19376: jump @309 if a0 == 0\n      : @308 (gas: 1)\n 19379: jump @918\n      : @309 (gas: 3)\n 19383: a0 = u64 [s1 + 0x1a8]\n 19387: a0 = i32 [a0]\n 19389: jump @311 if a0 >u 99\n      : @310 (gas: 1)\n 19393: jump @918\n      : @311 (gas: 5)\n 19397: a0 = s1 + 0x2000\n 19401: i32 a0 = a0 + 0x80\n 19405: a1 = 0x4\n 19408: ecalli 5 // 'call_data_load'\n 19410: fallthrough\n      : @312 (gas: 8)\n 19411: a5 = s1 + 0x1a18\n 19415: a0 = u64 [a5 + 0x680]\n 19419: a1 = u64 [a5 + 0x678]\n 19423: a2 = u64 [a5 + 0x670]\n 19427: a3 = a1 | a0\n 19430: a4 = a2 <u 0x1\n 19433: a4 = 0 if a3 != 0\n 19435: jump @314 if a4 != 0\n      : @313 (gas: 1)\n 19438: jump @918\n      : @314 (gas: 29)\n 19442: a3 = u64 [a5 + 0x668]\n 19446: a4 = u64 [s1 + 0x1a8]\n 19450: t0 = u32 [a4]\n 19452: a5 = a3 + 0x4\n 19455: a3 = a5 <u a3\n 19458: a4 = a2 + a3\n 19461: a2 = a4 <u a2\n 19464: a2 = a3 if a3 == 0\n 19467: a2 = a2 + a1\n 19470: a1 = a2 <u a1\n 19473: a3 = a0 + a1\n 19476: a0 = s1 + 0x7ff\n 19480: a0 = a0 + 0x219\n 19484: u64 [a0 + 1184] = 0\n 19488: u64 [a0 + 1176] = 0\n 19492: u64 [a0 + 1168] = 0\n 19496: u64 [a0 + 0x488] = t0\n 19500: u64 [a0 + 0x4a8] = a5\n 19504: u64 [a0 + 0x4b0] = a4\n 19508: u64 [a0 + 0x4b8] = a2\n 19512: a4 = a0\n 19514: a0 = s1 + 0x7ff\n 19518: a0 = a0 + 0x6e1\n 19522: a1 = s1 + 0x7ff\n 19526: a1 = a1 + 0x6c1\n 19530: a2 = s1 + 0x7ff\n 19534: a2 = a2 + 0x6a1\n 19538: u64 [a4 + 0x4c0] = a3\n 19542: ra = 172, jump @978\n      : @315 [@dyn 86] (gas: 39)\n 19549: a1 = s1 + 0x7ff\n 19553: a1 = a1 + 0x219\n 19557: a0 = u64 [a1 + 0x4e0]\n 19561: u64 [s1 + 0x70] = a0\n 19564: a0 = u64 [a1 + 0x4d8]\n 19568: u64 [s1 + 0x78] = a0\n 19571: a0 = u64 [a1 + 0x4d0]\n 19575: u64 [s1 + 0x80] = a0\n 19579: a0 = u64 [a1 + 0x4c8]\n 19583: u64 [s1 + 0x88] = a0\n 19587: a0 = u64 [a1 + 0x500]\n 19591: u64 [s1 + 0x50] = a0\n 19594: a0 = u64 [a1 + 0x4f8]\n 19598: u64 [s1 + 0x58] = a0\n 19601: a0 = u64 [a1 + 0x4f0]\n 19605: u64 [s1 + 0x60] = a0\n 19608: a0 = u64 [a1 + 0x4e8]\n 19612: u64 [s1 + 0x68] = a0\n 19615: a0 = s1 + 0x2000\n 19619: i32 a0 = a0 + 0xa0\n 19623: a1 = 0x24\n 19626: ecalli 5 // 'call_data_load'\n 19628: a0 = s1 + 0x1a18\n 19632: a0 = u64 [a0 + 0x6a0]\n 19636: u64 [s1 + 0x30] = a0\n 19639: a0 = s1 + 0x1a18\n 19643: a0 = u64 [a0 + 0x698]\n 19647: u64 [s1 + 0x38] = a0\n 19650: a0 = s1 + 0x1a18\n 19654: a0 = u64 [a0 + 0x690]\n 19658: u64 [s1 + 0x40] = a0\n 19661: a0 = s1 + 0x1a18\n 19665: a0 = u64 [a0 + 0x688]\n 19669: u64 [s1 + 0x48] = a0\n 19672: a0 = s1 + 0x2000\n 19676: i32 a0 = a0 + 0xc0\n 19680: a1 = 0x44\n 19683: ecalli 5 // 'call_data_load'\n 19685: fallthrough\n      : @316 (gas: 8)\n 19686: a2 = s1 + 0x1a18\n 19690: a5 = u64 [a2 + 0x6c0]\n 19694: a3 = u64 [a2 + 0x6b8]\n 19698: a4 = u64 [a2 + 0x6b0]\n 19702: a0 = a3 | a5\n 19705: a1 = a4 <u 0x1\n 19708: a1 = 0 if a0 != 0\n 19710: jump @318 if a1 != 0\n      : @317 (gas: 1)\n 19713: jump @910\n      : @318 (gas: 19)\n 19717: a1 = u64 [a2 + 0x6a8]\n 19721: a0 = u64 [s1 + 0x1a8]\n 19725: t2 = u32 [a0]\n 19727: a0 = a1 + 0x23\n 19730: a2 = a0 <u a1\n 19733: t1 = a4 + a2\n 19736: u64 [s1 + 0x288] = a4\n 19740: a4 = t1 <u a4\n 19743: a4 = a2 if a2 == 0\n 19746: a4 = a4 + a3\n 19749: u64 [s1 + 0x290] = a3\n 19753: a2 = a4 <u a3\n 19756: u64 [s1 + 0x298] = a5\n 19760: a2 = a2 + a5\n 19763: a2 = a2 | a4\n 19766: a0 = a0 <u t2\n 19769: a0 = 0 if t1 != 0\n 19771: a0 = 0 if a2 != 0\n 19773: jump @320 if a0 != 0\n      : @319 (gas: 1)\n 19776: jump @919\n      : @320 (gas: 6)\n 19780: u64 [s1 + 0x280] = a1\n 19784: i32 a1 = a1 + 0x4\n 19787: a0 = s1 + 0x2000\n 19791: i32 a0 = a0 + 0xe0\n 19795: ecalli 5 // 'call_data_load'\n 19797: fallthrough\n      : @321 (gas: 8)\n 19798: a2 = s1 + 0x1a18\n 19802: a5 = u64 [a2 + 0x6e0]\n 19806: t1 = u64 [a2 + 0x6d8]\n 19810: t2 = u64 [a2 + 0x6d0]\n 19814: a0 = t1 | a5\n 19817: a1 = t2 <u 0x1\n 19820: a1 = 0 if a0 != 0\n 19822: jump @323 if a1 != 0\n      : @322 (gas: 1)\n 19825: jump @910\n      : @323 (gas: 57)\n 19829: a3 = u64 [a2 + 0x6c8]\n 19833: a0 = u64 [s1 + 0x280]\n 19837: a2 = a0 + 0x24\n 19840: a0 = a2 <u a0\n 19843: a1 = u64 [s1 + 0x288]\n 19847: a4 = a1 + a0\n 19850: a1 = a4 <u a1\n 19853: a1 = a0 if a0 == 0\n 19856: a0 = u64 [s1 + 0x290]\n 19860: ra = a0 + a1\n 19863: a0 = ra <u a0\n 19866: t0 = u64 [s1 + 0x298]\n 19870: t0 = t0 + a0\n 19873: a0 = a3 >> 0x3a\n 19876: a1 = t2 << 0x6\n 19879: a0 = a0 | a1\n 19882: u64 [s1 + 0x258] = a3\n 19886: a1 = a3 << 0x6\n 19889: a0 = a0 + a4\n 19892: a1 = a1 + a2\n 19895: u64 [s1 + 0x250] = a2\n 19899: a2 = a1 <u a2\n 19902: a0 = a0 + a2\n 19905: a3 = a0 ^ a4\n 19908: u64 [s1 + 0x1c0] = a4\n 19912: a4 = a0 <u a4\n 19915: a4 = a2 if a3 == 0\n 19918: a2 = t1 >> 0x3a\n 19921: a3 = a5 << 0x6\n 19924: a2 = a2 | a3\n 19927: a3 = t2 >> 0x3a\n 19930: u64 [s1 + 0x270] = a5\n 19934: a5 = t1 << 0x6\n 19937: a3 = a3 | a5\n 19940: a3 = a3 + ra\n 19943: u64 [s1 + 0x1b0] = t0\n 19947: a2 = a2 + t0\n 19950: u64 [s1 + 0x1b8] = ra\n 19954: a5 = a3 <u ra\n 19957: a2 = a2 + a5\n 19960: a5 = u64 [s1 + 0x1a8]\n 19964: a5 = u32 [a5]\n 19966: a4 = a4 + a3\n 19969: a3 = a4 <u a3\n 19972: a2 = a2 + a3\n 19975: a1 = a5 <u a1\n 19978: a3 = a0 <u 0x1\n 19981: a1 = a1 ^ 0x1\n 19984: a1 = a3 if a0 != 0\n 19987: a0 = a2 <u 0x1\n 19990: a3 = a4 <u 0x1\n 19993: a3 = a0 if a2 != 0\n 19996: a2 = a2 | a4\n 19999: a1 = a3 if a2 != 0\n 20002: u64 [s1 + 0x268] = t1\n 20006: u64 [s1 + 0x260] = t2\n 20010: jump @325 if a1 != 0\n      : @324 (gas: 1)\n 20013: jump @910\n      : @325 (gas: 61)\n 20017: a1 = s1 + 0x2218\n 20021: u64 [a1 + 512] = 0\n 20025: u64 [a1 + 504] = 0\n 20029: u64 [a1 + 496] = 0\n 20033: u64 [a1 + 488] = 0\n 20037: u64 [a1 + 544] = 0\n 20041: u64 [a1 + 536] = 0\n 20045: u64 [a1 + 528] = 0\n 20049: u64 [a1 + 520] = 0\n 20053: u32 [a1 + 552] = 0x20\n 20058: a0 = s1 + 0x2000\n 20062: i32 a1 = a0 + 0x400\n 20066: a0 = s1 + 0x2000\n 20070: i32 a3 = a0 + 0x420\n 20074: a0 = s1 + 0x2000\n 20078: i32 a4 = a0 + 0x440\n 20082: a2 = 0xffffffffffffffff\n 20085: a0 = 0\n 20087: ecalli 9 // 'get_storage'\n 20089: a1 = s1 + 0x2218\n 20093: a0 = u64 [a1 + 0x210]\n 20097: u64 [s1 + 0x298] = a0\n 20101: a0 = u64 [a1 + 0x208]\n 20105: u64 [s1 + 0x290] = a0\n 20109: a0 = u32 [a1 + 0x218]\n 20113: u64 [s1 + 0x288] = a0\n 20117: a0 = s1 + 0x2000\n 20121: i32 a0 = a0 + 0x100\n 20125: ecalli 7 // 'caller'\n 20127: a2 = s1 + 0x1a18\n 20131: a0 = u64 [a2 + 0x6f0]\n 20135: a1 = u64 [a2 + 0x6e8]\n 20139: a2 = i32 [a2 + 0x6f8]\n 20143: a0 = reverse a0\n 20145: a3 = a0 >> 0x20\n 20148: a1 = reverse a1\n 20150: a4 = a1 << 0x20\n 20153: a3 = a3 | a4\n 20156: a0 = a0 << 0x20\n 20159: a2 = reverse a2\n 20161: a2 = a2 >> 0x20\n 20164: a0 = a0 | a2\n 20167: a1 = a1 >> 0x20\n 20170: a2 = u64 [s1 + 0x288]\n 20174: a1 = a1 ^ a2\n 20177: a2 = u64 [s1 + 0x290]\n 20181: a0 = a0 ^ a2\n 20184: a0 = a0 | a1\n 20187: a1 = u64 [s1 + 0x298]\n 20191: a1 = a1 ^ a3\n 20194: a0 = a0 | a1\n 20197: a0 = a0 <u 0x1\n 20200: a1 = s1 + 0x7ff\n 20204: a1 = a1 + 0x219\n 20208: u64 [a1 + 1152] = 0\n 20212: u64 [a1 + 1144] = 0\n 20216: u64 [a1 + 0x468] = a0\n 20220: a0 = s1 + 0x7ff\n 20224: a0 = a0 + 0x681\n 20228: u64 [a1 + 1136] = 0\n 20232: ra = 174, jump @1057\n      : @326 [@dyn 87] (gas: 8)\n 20239: a2 = u64 [s1 + 0x258]\n 20243: a0 = u64 [s1 + 0x268]\n 20247: a0 = a0 | a2\n 20250: a3 = u64 [s1 + 0x270]\n 20254: a1 = u64 [s1 + 0x260]\n 20258: a1 = a1 | a3\n 20261: a0 = a0 | a1\n 20264: jump @328 if a0 == 0\n      : @327 (gas: 1)\n 20267: jump @517\n      : @328 (gas: 3)\n 20270: a0 = 0x40\n 20273: a1 = 0x20\n 20276: ra = 176, jump @0\n      : @329 [@dyn 88] (gas: 100)\n 20282: a1 = u8 [a0 + 0x11]\n 20285: a2 = u8 [a0 + 0x10]\n 20288: a3 = u8 [a0 + 0x12]\n 20291: a4 = u8 [a0 + 0x13]\n 20294: a1 = a1 << 0x8\n 20297: a1 = a1 | a2\n 20300: a3 = a3 << 0x10\n 20303: a4 = a4 << 0x18\n 20306: a3 = a3 | a4\n 20309: a1 = a1 | a3\n 20312: a2 = u8 [a0 + 0x15]\n 20315: a3 = u8 [a0 + 0x14]\n 20318: a4 = u8 [a0 + 0x16]\n 20321: a5 = u8 [a0 + 0x17]\n 20324: a2 = a2 << 0x8\n 20327: a2 = a2 | a3\n 20330: a4 = a4 << 0x10\n 20333: a5 = a5 << 0x18\n 20336: a4 = a4 | a5\n 20339: a2 = a2 | a4\n 20342: a2 = a2 << 0x20\n 20345: t0 = a2 | a1\n 20348: a2 = u8 [a0 + 0x1]\n 20351: a3 = u8 [a0]\n 20353: a4 = u8 [a0 + 0x2]\n 20356: a5 = u8 [a0 + 0x3]\n 20359: a2 = a2 << 0x8\n 20362: a2 = a2 | a3\n 20365: a4 = a4 << 0x10\n 20368: a5 = a5 << 0x18\n 20371: a4 = a4 | a5\n 20374: a2 = a2 | a4\n 20377: a3 = u8 [a0 + 0x5]\n 20380: a4 = u8 [a0 + 0x4]\n 20383: a5 = u8 [a0 + 0x6]\n 20386: a1 = u8 [a0 + 0x7]\n 20389: a3 = a3 << 0x8\n 20392: a3 = a3 | a4\n 20395: a5 = a5 << 0x10\n 20398: a1 = a1 << 0x18\n 20401: a1 = a1 | a5\n 20404: a1 = a1 | a3\n 20407: a1 = a1 << 0x20\n 20410: t1 = a1 | a2\n 20413: a1 = u8 [a0 + 0x19]\n 20416: a3 = u8 [a0 + 0x18]\n 20419: a4 = u8 [a0 + 0x1a]\n 20422: a5 = u8 [a0 + 0x1b]\n 20425: a1 = a1 << 0x8\n 20428: a1 = a1 | a3\n 20431: a4 = a4 << 0x10\n 20434: a5 = a5 << 0x18\n 20437: a4 = a4 | a5\n 20440: a1 = a1 | a4\n 20443: a3 = u8 [a0 + 0x1d]\n 20446: a4 = u8 [a0 + 0x1c]\n 20449: a5 = u8 [a0 + 0x1e]\n 20452: a2 = u8 [a0 + 0x1f]\n 20455: a3 = a3 << 0x8\n 20458: a3 = a3 | a4\n 20461: a5 = a5 << 0x10\n 20464: a2 = a2 << 0x18\n 20467: a2 = a2 | a5\n 20470: a2 = a2 | a3\n 20473: a2 = a2 << 0x20\n 20476: a3 = a2 | a1\n 20479: a1 = u8 [a0 + 0x9]\n 20482: a2 = u8 [a0 + 0x8]\n 20485: a4 = u8 [a0 + 0xa]\n 20488: a5 = u8 [a0 + 0xb]\n 20491: a1 = a1 << 0x8\n 20494: a1 = a1 | a2\n 20497: a4 = a4 << 0x10\n 20500: a5 = a5 << 0x18\n 20503: a4 = a4 | a5\n 20506: a1 = a1 | a4\n 20509: a2 = u8 [a0 + 0xd]\n 20512: a4 = u8 [a0 + 0xc]\n 20515: a5 = u8 [a0 + 0xe]\n 20518: a0 = u8 [a0 + 0xf]\n 20521: a2 = a2 << 0x8\n 20524: a2 = a2 | a4\n 20527: a5 = a5 << 0x10\n 20530: a0 = a0 << 0x18\n 20533: a0 = a0 | a5\n 20536: a0 = a0 | a2\n 20539: a0 = a0 << 0x20\n 20542: a0 = a0 | a1\n 20545: a4 = reverse a0\n 20547: a2 = reverse a3\n 20549: a5 = reverse t1\n 20551: a3 = reverse t0\n 20553: a0 = a3 | a5\n 20556: a1 = a2 | a4\n 20559: a1 = a1 | a0\n 20562: a1 = a1 >> 0x20\n 20565: a0 = a0 | a4\n 20568: a0 = a0 << 0x20\n 20571: a0 = a0 | a1\n 20574: jump @331 if a0 == 0\n      : @330 (gas: 1)\n 20577: jump @799\n      : @331 (gas: 8)\n 20581: i32 a0 = a2 + 0\n 20583: a1 = 0x20\n 20586: u64 [s1 + 0x278] = a0\n 20590: u64 [s1 + 0x298] = a2\n 20594: u64 [s1 + 0x290] = a3\n 20598: u64 [s1 + 0x288] = a4\n 20602: u64 [s1 + 0x280] = a5\n 20606: ra = 178, jump @0\n      : @332 [@dyn 89] (gas: 43)\n 20612: u8 [a0 + 31] = 0\n 20615: u8 [a0 + 30] = 0\n 20618: u8 [a0 + 29] = 0\n 20621: u8 [a0 + 28] = 0\n 20624: u8 [a0 + 27] = 0\n 20627: u8 [a0 + 26] = 0\n 20630: u8 [a0 + 25] = 0\n 20633: u8 [a0 + 24] = 0\n 20636: u8 [a0 + 23] = 0\n 20639: u8 [a0 + 22] = 0\n 20642: u8 [a0 + 21] = 0\n 20645: u8 [a0 + 20] = 0\n 20648: u8 [a0 + 19] = 0\n 20651: u8 [a0 + 18] = 0\n 20654: u8 [a0 + 17] = 0\n 20657: u8 [a0 + 16] = 0\n 20660: u8 [a0 + 15] = 0\n 20663: u8 [a0 + 14] = 0\n 20666: u8 [a0 + 13] = 0\n 20669: u8 [a0 + 12] = 0\n 20672: u8 [a0 + 11] = 0\n 20675: u8 [a0 + 10] = 0\n 20678: u8 [a0 + 9] = 0\n 20681: u8 [a0 + 8] = 0\n 20684: u8 [a0 + 7] = 0\n 20687: u8 [a0 + 6] = 0\n 20690: u8 [a0 + 5] = 0\n 20693: u8 [a0 + 3] = 0xa0\n 20698: u8 [a0 + 2] = 0x79\n 20702: u8 [a0 + 1] = 0xc3\n 20707: u8 [a0 + 0] = 0x8\n 20710: a1 = u64 [s1 + 0x288]\n 20714: a3 = u64 [s1 + 0x280]\n 20718: a3 = a3 | a1\n 20721: a4 = 0x100000000\n 20731: a1 = 0xfffffffc\n 20741: a2 = u64 [s1 + 0x298]\n 20745: a1 = a2 <u a1\n 20748: a2 = u64 [s1 + 0x290]\n 20752: a1 = 0 if a2 != 0\n 20754: a1 = 0 if a3 != 0\n 20756: u8 [a0 + 4] = 0\n 20759: jump @334 if a1 != 0\n      : @333 (gas: 1)\n 20762: jump @799\n      : @334 (gas: 6)\n 20766: a0 = u64 [s1 + 0x278]\n 20770: i32 a0 = a0 + 0x4\n 20773: a1 = 0x20\n 20776: u64 [s1 + 0x288] = a3\n 20780: u64 [s1 + 0x280] = a4\n 20784: ra = 180, jump @0\n      : @335 [@dyn 90] (gas: 41)\n 20790: a4 = u64 [s1 + 0x288]\n 20794: a3 = u64 [s1 + 0x290]\n 20798: a2 = u64 [s1 + 0x298]\n 20802: u8 [a0 + 31] = 0x20\n 20806: u8 [a0 + 30] = 0\n 20809: u8 [a0 + 29] = 0\n 20812: u8 [a0 + 28] = 0\n 20815: u8 [a0 + 27] = 0\n 20818: u8 [a0 + 26] = 0\n 20821: u8 [a0 + 25] = 0\n 20824: u8 [a0 + 24] = 0\n 20827: u8 [a0 + 23] = 0\n 20830: u8 [a0 + 22] = 0\n 20833: u8 [a0 + 21] = 0\n 20836: u8 [a0 + 20] = 0\n 20839: u8 [a0 + 19] = 0\n 20842: u8 [a0 + 18] = 0\n 20845: u8 [a0 + 17] = 0\n 20848: u8 [a0 + 16] = 0\n 20851: u8 [a0 + 15] = 0\n 20854: u8 [a0 + 14] = 0\n 20857: u8 [a0 + 13] = 0\n 20860: u8 [a0 + 12] = 0\n 20863: u8 [a0 + 11] = 0\n 20866: u8 [a0 + 10] = 0\n 20869: u8 [a0 + 9] = 0\n 20872: u8 [a0 + 8] = 0\n 20875: u8 [a0 + 7] = 0\n 20878: u8 [a0 + 6] = 0\n 20881: u8 [a0 + 5] = 0\n 20884: u8 [a0 + 4] = 0\n 20887: u8 [a0 + 3] = 0\n 20890: u8 [a0 + 2] = 0\n 20893: u8 [a0 + 1] = 0\n 20896: a1 = u64 [s1 + 0x280]\n 20900: a1 = a1 + 0xffffffffffffffdc\n 20903: a1 = a2 <u a1\n 20906: a1 = 0 if a3 != 0\n 20908: a1 = 0 if a4 != 0\n 20910: u8 [a0 + 0] = 0\n 20912: jump @337 if a1 != 0\n      : @336 (gas: 1)\n 20915: jump @799\n      : @337 (gas: 4)\n 20919: a0 = u64 [s1 + 0x278]\n 20923: i32 a0 = a0 + 0x24\n 20926: a1 = 0x20\n 20929: ra = 182, jump @0\n      : @338 [@dyn 91] (gas: 40)\n 20935: u8 [a0 + 31] = 0x11\n 20939: u8 [a0 + 30] = 0\n 20942: u8 [a0 + 29] = 0\n 20945: u8 [a0 + 28] = 0\n 20948: u8 [a0 + 27] = 0\n 20951: u8 [a0 + 26] = 0\n 20954: u8 [a0 + 25] = 0\n 20957: u8 [a0 + 24] = 0\n 20960: u8 [a0 + 23] = 0\n 20963: u8 [a0 + 22] = 0\n 20966: u8 [a0 + 21] = 0\n 20969: u8 [a0 + 20] = 0\n 20972: u8 [a0 + 19] = 0\n 20975: u8 [a0 + 18] = 0\n 20978: u8 [a0 + 17] = 0\n 20981: u8 [a0 + 16] = 0\n 20984: u8 [a0 + 15] = 0\n 20987: u8 [a0 + 14] = 0\n 20990: u8 [a0 + 13] = 0\n 20993: u8 [a0 + 12] = 0\n 20996: u8 [a0 + 11] = 0\n 20999: u8 [a0 + 10] = 0\n 21002: u8 [a0 + 9] = 0\n 21005: u8 [a0 + 8] = 0\n 21008: u8 [a0 + 7] = 0\n 21011: u8 [a0 + 6] = 0\n 21014: u8 [a0 + 5] = 0\n 21017: u8 [a0 + 4] = 0\n 21020: u8 [a0 + 3] = 0\n 21023: u8 [a0 + 2] = 0\n 21026: u8 [a0 + 1] = 0\n 21029: a1 = 0xffffffbc\n 21039: a2 = u64 [s1 + 0x298]\n 21043: a1 = a2 <u a1\n 21046: a2 = u64 [s1 + 0x290]\n 21050: a1 = 0 if a2 != 0\n 21052: a2 = u64 [s1 + 0x288]\n 21056: a1 = 0 if a2 != 0\n 21058: u8 [a0 + 0] = 0\n 21060: jump @340 if a1 != 0\n      : @339 (gas: 1)\n 21063: jump @799\n      : @340 (gas: 4)\n 21067: a0 = u64 [s1 + 0x278]\n 21071: i32 a0 = a0 + 0x44\n 21074: a1 = 0x20\n 21077: ra = 184, jump @0\n      : @341 [@dyn 92] (gas: 35)\n 21083: u8 [a0 + 31] = 0\n 21086: u8 [a0 + 30] = 0\n 21089: u8 [a0 + 29] = 0\n 21092: u8 [a0 + 28] = 0\n 21095: u8 [a0 + 27] = 0\n 21098: u8 [a0 + 26] = 0\n 21101: u8 [a0 + 25] = 0\n 21104: u8 [a0 + 24] = 0\n 21107: u8 [a0 + 23] = 0\n 21110: u8 [a0 + 22] = 0\n 21113: u8 [a0 + 21] = 0\n 21116: u8 [a0 + 20] = 0\n 21119: u8 [a0 + 19] = 0\n 21122: u8 [a0 + 18] = 0\n 21125: u8 [a0 + 17] = 0\n 21128: u8 [a0 + 16] = 0x64\n 21132: u8 [a0 + 15] = 0x65\n 21136: u8 [a0 + 14] = 0x64\n 21140: u8 [a0 + 13] = 0x69\n 21144: u8 [a0 + 12] = 0x76\n 21148: u8 [a0 + 11] = 0x6f\n 21152: u8 [a0 + 10] = 0x72\n 21156: u8 [a0 + 9] = 0x70\n 21160: a5 = 0x20\n 21163: u8 [a0 + 0x8] = a5\n 21166: u8 [a0 + 7] = 0x73\n 21170: a4 = 0x6d\n 21173: u8 [a0 + 0x6] = a4\n 21176: u8 [a0 + 5] = 0x65\n 21180: u8 [a0 + 4] = 0x74\n 21184: u8 [a0 + 3] = 0x69\n 21188: u8 [a0 + 0x2] = a5\n 21191: u8 [a0 + 1] = 0x6f\n 21195: u8 [a0 + 0] = 0x4e\n 21198: jump @747\n      : @342 (gas: 1)\n 21201: jump @344 if a0 == 1699727411\n      : @343 (gas: 1)\n 21208: jump @918\n      : @344 (gas: 11)\n 21212: a0 = sp + 0xffffffffffffffe0\n 21215: a0 = a0 & 0xffffffffffffffe0\n 21218: u64 [s1 + 0x298] = a0\n 21222: sp = a0\n 21224: u64 [a0 + 24] = 0\n 21227: u64 [a0 + 16] = 0\n 21230: u64 [a0 + 8] = 0\n 21233: u64 [a0 + 0] = 0\n 21235: i32 a0 = a0 + 0\n 21237: ecalli 18 // 'value_transferred'\n 21239: fallthrough\n      : @345 (gas: 9)\n 21240: a3 = u64 [s1 + 0x298]\n 21244: a0 = u64 [a3 + 0x10]\n 21247: a1 = u64 [a3 + 0x18]\n 21250: a2 = u64 [a3 + 0x8]\n 21253: a3 = u64 [a3]\n 21255: a1 = a1 | a2\n 21258: a0 = a0 | a3\n 21261: a0 = a0 | a1\n 21264: jump @347 if a0 == 0\n      : @346 (gas: 1)\n 21267: jump @918\n      : @347 (gas: 3)\n 21271: a0 = u64 [s1 + 0x1a8]\n 21275: a0 = i32 [a0]\n 21277: jump @349 if a0 >u 35\n      : @348 (gas: 1)\n 21281: jump @918\n      : @349 (gas: 71)\n 21285: a0 = s1 + 0x2000\n 21289: i32 a0 = a0 + 0x260\n 21293: a1 = 0x4\n 21296: ecalli 5 // 'call_data_load'\n 21298: a1 = s1 + 0x2218\n 21302: a0 = u64 [a1 + 0x60]\n 21305: u64 [s1 + 0x298] = a0\n 21309: a0 = u64 [a1 + 0x58]\n 21312: u64 [s1 + 0x290] = a0\n 21316: a0 = u64 [a1 + 0x50]\n 21319: u64 [s1 + 0x288] = a0\n 21323: a0 = u64 [a1 + 0x48]\n 21326: u64 [s1 + 0x280] = a0\n 21330: u64 [a1 + 512] = 0\n 21334: u64 [a1 + 504] = 0\n 21338: u64 [a1 + 496] = 0\n 21342: u64 [a1 + 488] = 0\n 21346: u64 [a1 + 544] = 0\n 21350: u64 [a1 + 536] = 0\n 21354: u64 [a1 + 528] = 0\n 21358: u64 [a1 + 520] = 0\n 21362: u32 [a1 + 552] = 0x20\n 21367: a0 = s1 + 0x2000\n 21371: i32 a1 = a0 + 0x400\n 21375: a0 = s1 + 0x2000\n 21379: i32 a3 = a0 + 0x420\n 21383: a0 = s1 + 0x2000\n 21387: i32 a4 = a0 + 0x440\n 21391: a2 = 0xffffffffffffffff\n 21394: a0 = 0\n 21396: ecalli 9 // 'get_storage'\n 21398: a1 = s1 + 0x2218\n 21402: a0 = u64 [a1 + 0x210]\n 21406: u64 [s1 + 0x278] = a0\n 21410: a0 = u64 [a1 + 0x208]\n 21414: u64 [s1 + 0x270] = a0\n 21418: a0 = u32 [a1 + 0x218]\n 21422: u64 [s1 + 0x268] = a0\n 21426: a0 = s1 + 0x2000\n 21430: i32 a0 = a0 + 0x280\n 21434: ecalli 7 // 'caller'\n 21436: a2 = s1 + 0x2218\n 21440: a0 = u64 [a2 + 0x70]\n 21443: a1 = u64 [a2 + 0x68]\n 21446: a2 = i32 [a2 + 0x78]\n 21449: a0 = reverse a0\n 21451: a3 = a0 >> 0x20\n 21454: a1 = reverse a1\n 21456: a4 = a1 << 0x20\n 21459: a3 = a3 | a4\n 21462: a0 = a0 << 0x20\n 21465: a2 = reverse a2\n 21467: a2 = a2 >> 0x20\n 21470: a0 = a0 | a2\n 21473: a1 = a1 >> 0x20\n 21476: a2 = u64 [s1 + 0x268]\n 21480: a1 = a1 ^ a2\n 21483: a2 = u64 [s1 + 0x270]\n 21487: a0 = a0 ^ a2\n 21490: a0 = a0 | a1\n 21493: a1 = u64 [s1 + 0x278]\n 21497: a1 = a1 ^ a3\n 21500: a0 = a0 | a1\n 21503: a0 = a0 <u 0x1\n 21506: a1 = s1 + 0x1218\n 21510: u64 [a1 + 1120] = 0\n 21514: u64 [a1 + 1112] = 0\n 21518: u64 [a1 + 0x448] = a0\n 21522: a0 = s1 + 0x1660\n 21526: u64 [a1 + 1104] = 0\n 21530: ra = 186, jump @1057\n      : @350 [@dyn 93] (gas: 20)\n 21537: a1 = s1 + 0x2218\n 21541: u64 [a1 + 512] = 0\n 21545: u64 [a1 + 504] = 0\n 21549: u64 [a1 + 496] = 0\n 21553: u64 [a1 + 488] = 0x1\n 21558: u64 [a1 + 544] = 0\n 21562: u64 [a1 + 536] = 0\n 21566: u64 [a1 + 528] = 0\n 21570: u64 [a1 + 520] = 0\n 21574: u32 [a1 + 552] = 0x20\n 21579: a0 = s1 + 0x2000\n 21583: i32 a1 = a0 + 0x400\n 21587: a0 = s1 + 0x2000\n 21591: i32 a3 = a0 + 0x420\n 21595: a0 = s1 + 0x2000\n 21599: i32 a4 = a0 + 0x440\n 21603: a2 = 0xffffffffffffffff\n 21606: a0 = 0\n 21608: ecalli 9 // 'get_storage'\n 21610: fallthrough\n      : @351 (gas: 21)\n 21611: t1 = u64 [s1 + 0x280]\n 21615: t0 = u64 [s1 + 0x288]\n 21619: t2 = u64 [s1 + 0x298]\n 21623: a3 = s1 + 0x2218\n 21627: a0 = u64 [a3 + 0x210]\n 21631: a1 = u64 [a3 + 0x208]\n 21635: a2 = u64 [a3 + 0x218]\n 21639: a3 = u64 [a3 + 0x220]\n 21643: a4 = t0 ^ a0\n 21646: a0 = t0 <u a0\n 21649: a1 = t1 <u a1\n 21652: a1 = a0 if a4 != 0\n 21655: a0 = t2 ^ a3\n 21658: a5 = t2 <u a3\n 21661: a3 = u64 [s1 + 0x290]\n 21665: a4 = a3 <u a2\n 21668: a4 = a5 if a0 != 0\n 21671: a2 = a2 ^ a3\n 21674: a0 = a0 | a2\n 21677: a1 = a4 if a0 != 0\n 21680: jump @353 if a1 != 0\n      : @352 (gas: 1)\n 21683: jump @503\n      : @353 (gas: 8)\n 21686: a2 = s1 + 0x1218\n 21690: u64 [a2 + 0x3e8] = t1\n 21694: u64 [a2 + 0x3f0] = t0\n 21698: u64 [a2 + 0x3f8] = a3\n 21702: a0 = s1 + 0x1620\n 21706: a1 = s1 + 0x1600\n 21710: u64 [a2 + 0x400] = t2\n 21714: ra = 188, jump @1048\n      : @354 [@dyn 94] (gas: 33)\n 21721: a3 = s1 + 0x1218\n 21725: a0 = u64 [a3 + 0x408]\n 21729: a1 = u64 [a3 + 0x420]\n 21733: a2 = u64 [a3 + 0x410]\n 21737: a3 = u64 [a3 + 0x418]\n 21741: a4 = a0 + 0x2\n 21744: a0 = a4 <u a0\n 21747: a5 = a2 + a0\n 21750: a2 = a5 <u a2\n 21753: a2 = a0 if a0 == 0\n 21756: a2 = a2 + a3\n 21759: a0 = a2 <u a3\n 21762: a0 = a0 + a1\n 21765: a1 = s1 + 0x2218\n 21769: u64 [a1 + 0x1f0] = a5\n 21773: u64 [a1 + 0x1e8] = a4\n 21777: u64 [a1 + 0x1f8] = a2\n 21781: u64 [a1 + 0x200] = a0\n 21785: u64 [a1 + 544] = 0\n 21789: u64 [a1 + 536] = 0\n 21793: u64 [a1 + 528] = 0\n 21797: u64 [a1 + 520] = 0\n 21801: u32 [a1 + 552] = 0x20\n 21806: a0 = s1 + 0x2000\n 21810: i32 a1 = a0 + 0x400\n 21814: a0 = s1 + 0x2000\n 21818: i32 a3 = a0 + 0x420\n 21822: a0 = s1 + 0x2000\n 21826: i32 a4 = a0 + 0x440\n 21830: a2 = 0xffffffffffffffff\n 21833: a0 = 0\n 21835: ecalli 9 // 'get_storage'\n 21837: fallthrough\n      : @355 (gas: 3)\n 21838: a0 = s1 + 0x2218\n 21842: a0 = u8 [a0 + 0x208]\n 21846: jump @357 if a0 == 0\n      : @356 (gas: 1)\n 21849: jump @610\n      : @357 (gas: 2)\n 21852: a1 = 0x20\n 21855: ra = 190, jump @0\n      : @358 [@dyn 95] (gas: 103)\n 21861: a1 = u64 [s1 + 0x288]\n 21865: a3 = reverse a1\n 21867: a1 = u64 [s1 + 0x280]\n 21871: a2 = reverse a1\n 21873: u8 [a0 + 0x18] = a2\n 21876: a1 = a2 >> 0x38\n 21879: u64 [s1 + 0x270] = a1\n 21883: u8 [a0 + 0x1f] = a1\n 21886: a1 = a2 >> 0x30\n 21889: u64 [s1 + 0x268] = a1\n 21893: u8 [a0 + 0x1e] = a1\n 21896: a1 = a2 >> 0x28\n 21899: u64 [s1 + 0x260] = a1\n 21903: u8 [a0 + 0x1d] = a1\n 21906: a1 = a2 >> 0x20\n 21909: u64 [s1 + 0x258] = a1\n 21913: u8 [a0 + 0x1c] = a1\n 21916: a1 = a2 >> 0x18\n 21919: u64 [s1 + 0x250] = a1\n 21923: u8 [a0 + 0x1b] = a1\n 21926: a1 = a2 >> 0x10\n 21929: u64 [s1 + 0x248] = a1\n 21933: u8 [a0 + 0x1a] = a1\n 21936: u64 [s1 + 0x240] = a2\n 21940: a2 = a2 >> 0x8\n 21943: u64 [s1 + 0x238] = a2\n 21947: u8 [a0 + 0x19] = a2\n 21950: u8 [a0 + 0x10] = a3\n 21953: a1 = a3 >> 0x38\n 21956: u64 [s1 + 0x228] = a1\n 21960: u8 [a0 + 0x17] = a1\n 21963: a1 = a3 >> 0x30\n 21966: u64 [s1 + 0x220] = a1\n 21970: u8 [a0 + 0x16] = a1\n 21973: a1 = a3 >> 0x28\n 21976: u64 [s1 + 0x218] = a1\n 21980: u8 [a0 + 0x15] = a1\n 21983: a1 = a3 >> 0x20\n 21986: u64 [s1 + 0x210] = a1\n 21990: u8 [a0 + 0x14] = a1\n 21993: a1 = a3 >> 0x18\n 21996: u64 [s1 + 0x208] = a1\n 22000: u8 [a0 + 0x13] = a1\n 22003: a1 = a3 >> 0x10\n 22006: u64 [s1 + 0x200] = a1\n 22010: u8 [a0 + 0x12] = a1\n 22013: u64 [s1 + 0x230] = a3\n 22017: a3 = a3 >> 0x8\n 22020: u64 [s1 + 0x1f8] = a3\n 22024: u8 [a0 + 0x11] = a3\n 22027: a1 = u64 [s1 + 0x290]\n 22031: a2 = reverse a1\n 22033: u8 [a0 + 0x8] = a2\n 22036: a1 = a2 >> 0x38\n 22039: u64 [s1 + 0x1f0] = a1\n 22043: u8 [a0 + 0xf] = a1\n 22046: a1 = a2 >> 0x30\n 22049: u64 [s1 + 0x1e8] = a1\n 22053: u8 [a0 + 0xe] = a1\n 22056: a1 = a2 >> 0x28\n 22059: u64 [s1 + 0x1e0] = a1\n 22063: u8 [a0 + 0xd] = a1\n 22066: a1 = a2 >> 0x20\n 22069: u64 [s1 + 0x1d8] = a1\n 22073: u8 [a0 + 0xc] = a1\n 22076: a1 = a2 >> 0x18\n 22079: u64 [s1 + 0x1d0] = a1\n 22083: u8 [a0 + 0xb] = a1\n 22086: a1 = a2 >> 0x10\n 22089: u64 [s1 + 0x1c8] = a1\n 22093: u8 [a0 + 0xa] = a1\n 22096: u64 [s1 + 0x1b8] = a2\n 22100: a1 = a2 >> 0x8\n 22103: u64 [s1 + 0x1c0] = a1\n 22107: u8 [a0 + 0x9] = a1\n 22110: a1 = u64 [s1 + 0x298]\n 22114: a1 = reverse a1\n 22116: u8 [a0] = a1\n 22118: a2 = a1 >> 0x38\n 22121: u64 [s1 + 0x1a8] = a2\n 22125: u8 [a0 + 0x7] = a2\n 22128: a2 = a1 >> 0x30\n 22131: u64 [s1 + 0x1a0] = a2\n 22135: u8 [a0 + 0x6] = a2\n 22138: a2 = a1 >> 0x28\n 22141: u64 [s1 + 0x198] = a2\n 22145: u8 [a0 + 0x5] = a2\n 22148: a2 = a1 >> 0x20\n 22151: u64 [s1 + 0x190] = a2\n 22155: u8 [a0 + 0x4] = a2\n 22158: a2 = a1 >> 0x18\n 22161: u64 [s1 + 0x188] = a2\n 22165: u8 [a0 + 0x3] = a2\n 22168: a2 = a1 >> 0x10\n 22171: u64 [s1 + 0x180] = a2\n 22175: u8 [a0 + 0x2] = a2\n 22178: u64 [s1 + 0x1b0] = a1\n 22182: a1 = a1 >> 0x8\n 22185: u64 [s1 + 0x178] = a1\n 22189: u8 [a0 + 0x1] = a1\n 22192: a0 = 0x20\n 22195: a1 = 0x20\n 22198: ra = 192, jump @0\n      : @359 [@dyn 96] (gas: 35)\n 22204: u8 [a0 + 31] = 0x2\n 22208: u8 [a0 + 30] = 0\n 22211: u8 [a0 + 29] = 0\n 22214: u8 [a0 + 28] = 0\n 22217: u8 [a0 + 27] = 0\n 22220: u8 [a0 + 26] = 0\n 22223: u8 [a0 + 25] = 0\n 22226: u8 [a0 + 24] = 0\n 22229: u8 [a0 + 23] = 0\n 22232: u8 [a0 + 22] = 0\n 22235: u8 [a0 + 21] = 0\n 22238: u8 [a0 + 20] = 0\n 22241: u8 [a0 + 19] = 0\n 22244: u8 [a0 + 18] = 0\n 22247: u8 [a0 + 17] = 0\n 22250: u8 [a0 + 16] = 0\n 22253: u8 [a0 + 15] = 0\n 22256: u8 [a0 + 14] = 0\n 22259: u8 [a0 + 13] = 0\n 22262: u8 [a0 + 12] = 0\n 22265: u8 [a0 + 11] = 0\n 22268: u8 [a0 + 10] = 0\n 22271: u8 [a0 + 9] = 0\n 22274: u8 [a0 + 8] = 0\n 22277: u8 [a0 + 7] = 0\n 22280: u8 [a0 + 6] = 0\n 22283: u8 [a0 + 5] = 0\n 22286: u8 [a0 + 4] = 0\n 22289: u8 [a0 + 3] = 0\n 22292: u8 [a0 + 2] = 0\n 22295: u8 [a0 + 1] = 0\n 22298: u8 [a0 + 0] = 0\n 22300: a1 = 0x40\n 22303: a0 = 0\n 22305: ra = 194, jump @0\n      : @360 [@dyn 97] (gas: 25)\n 22311: a1 = sp + 0xffffffffffffffe0\n 22314: a1 = a1 & 0xffffffffffffffe0\n 22317: u64 [s1 + 0x278] = a1\n 22321: sp = a1\n 22323: i32 a0 = a0 + 0\n 22325: i32 a2 = a1 + 0\n 22327: a1 = 0x40\n 22330: ecalli 10 // 'hash_keccak_256'\n 22332: a3 = u64 [s1 + 0x278]\n 22336: a0 = u64 [a3 + 0x18]\n 22339: a1 = u64 [a3 + 0x10]\n 22342: a2 = u64 [a3 + 0x8]\n 22345: a3 = u64 [a3]\n 22347: a4 = reverse a0\n 22349: a0 = reverse a1\n 22351: a1 = reverse a2\n 22353: a2 = reverse a3\n 22355: a3 = s1 + 0x1218\n 22359: u64 [a3 + 0x3c0] = a2\n 22363: u64 [a3 + 0x3b8] = a1\n 22367: u64 [a3 + 0x3b0] = a0\n 22371: a0 = s1 + 0x15e0\n 22375: a2 = s1 + 0x15c0\n 22379: u64 [a3 + 0x3a8] = a4\n 22383: ra = 196, jump @25\n      : @361 [@dyn 98] (gas: 3)\n 22389: a0 = s1 + 0x1218\n 22393: a0 = u8 [a0 + 0x3c8]\n 22397: jump @363 if a0 == 0\n      : @362 (gas: 1)\n 22400: jump @691\n      : @363 (gas: 2)\n 22403: a1 = 0x20\n 22406: ra = 198, jump @0\n      : @364 [@dyn 99] (gas: 67)\n 22412: a1 = u64 [s1 + 0x1b8]\n 22416: u8 [a0 + 0x8] = a1\n 22419: a1 = u64 [s1 + 0x1a8]\n 22423: u8 [a0 + 0x7] = a1\n 22426: a1 = u64 [s1 + 0x1a0]\n 22430: u8 [a0 + 0x6] = a1\n 22433: a1 = u64 [s1 + 0x198]\n 22437: u8 [a0 + 0x5] = a1\n 22440: a1 = u64 [s1 + 0x190]\n 22444: u8 [a0 + 0x4] = a1\n 22447: a1 = u64 [s1 + 0x188]\n 22451: u8 [a0 + 0x3] = a1\n 22454: a1 = u64 [s1 + 0x180]\n 22458: u8 [a0 + 0x2] = a1\n 22461: a1 = u64 [s1 + 0x178]\n 22465: u8 [a0 + 0x1] = a1\n 22468: a1 = u64 [s1 + 0x1b0]\n 22472: u8 [a0] = a1\n 22474: a1 = u64 [s1 + 0x230]\n 22478: u8 [a0 + 0x10] = a1\n 22481: a1 = u64 [s1 + 0x1f0]\n 22485: u8 [a0 + 0xf] = a1\n 22488: a1 = u64 [s1 + 0x1e8]\n 22492: u8 [a0 + 0xe] = a1\n 22495: a1 = u64 [s1 + 0x1e0]\n 22499: u8 [a0 + 0xd] = a1\n 22502: a1 = u64 [s1 + 0x1d8]\n 22506: u8 [a0 + 0xc] = a1\n 22509: a1 = u64 [s1 + 0x1d0]\n 22513: u8 [a0 + 0xb] = a1\n 22516: a1 = u64 [s1 + 0x1c8]\n 22520: u8 [a0 + 0xa] = a1\n 22523: a1 = u64 [s1 + 0x1c0]\n 22527: u8 [a0 + 0x9] = a1\n 22530: a1 = u64 [s1 + 0x240]\n 22534: u8 [a0 + 0x18] = a1\n 22537: a1 = u64 [s1 + 0x228]\n 22541: u8 [a0 + 0x17] = a1\n 22544: a1 = u64 [s1 + 0x220]\n 22548: u8 [a0 + 0x16] = a1\n 22551: a1 = u64 [s1 + 0x218]\n 22555: u8 [a0 + 0x15] = a1\n 22558: a1 = u64 [s1 + 0x210]\n 22562: u8 [a0 + 0x14] = a1\n 22565: a1 = u64 [s1 + 0x208]\n 22569: u8 [a0 + 0x13] = a1\n 22572: a1 = u64 [s1 + 0x200]\n 22576: u8 [a0 + 0x12] = a1\n 22579: a1 = u64 [s1 + 0x1f8]\n 22583: u8 [a0 + 0x11] = a1\n 22586: a1 = u64 [s1 + 0x270]\n 22590: u8 [a0 + 0x1f] = a1\n 22593: a1 = u64 [s1 + 0x268]\n 22597: u8 [a0 + 0x1e] = a1\n 22600: a1 = u64 [s1 + 0x260]\n 22604: u8 [a0 + 0x1d] = a1\n 22607: a1 = u64 [s1 + 0x258]\n 22611: u8 [a0 + 0x1c] = a1\n 22614: a1 = u64 [s1 + 0x250]\n 22618: u8 [a0 + 0x1b] = a1\n 22621: a1 = u64 [s1 + 0x248]\n 22625: u8 [a0 + 0x1a] = a1\n 22628: a1 = u64 [s1 + 0x238]\n 22632: u8 [a0 + 0x19] = a1\n 22635: a0 = 0x20\n 22638: a1 = 0x20\n 22641: ra = 200, jump @0\n      : @365 [@dyn 100] (gas: 35)\n 22647: u8 [a0 + 31] = 0x2\n 22651: u8 [a0 + 30] = 0\n 22654: u8 [a0 + 29] = 0\n 22657: u8 [a0 + 28] = 0\n 22660: u8 [a0 + 27] = 0\n 22663: u8 [a0 + 26] = 0\n 22666: u8 [a0 + 25] = 0\n 22669: u8 [a0 + 24] = 0\n 22672: u8 [a0 + 23] = 0\n 22675: u8 [a0 + 22] = 0\n 22678: u8 [a0 + 21] = 0\n 22681: u8 [a0 + 20] = 0\n 22684: u8 [a0 + 19] = 0\n 22687: u8 [a0 + 18] = 0\n 22690: u8 [a0 + 17] = 0\n 22693: u8 [a0 + 16] = 0\n 22696: u8 [a0 + 15] = 0\n 22699: u8 [a0 + 14] = 0\n 22702: u8 [a0 + 13] = 0\n 22705: u8 [a0 + 12] = 0\n 22708: u8 [a0 + 11] = 0\n 22711: u8 [a0 + 10] = 0\n 22714: u8 [a0 + 9] = 0\n 22717: u8 [a0 + 8] = 0\n 22720: u8 [a0 + 7] = 0\n 22723: u8 [a0 + 6] = 0\n 22726: u8 [a0 + 5] = 0\n 22729: u8 [a0 + 4] = 0\n 22732: u8 [a0 + 3] = 0\n 22735: u8 [a0 + 2] = 0\n 22738: u8 [a0 + 1] = 0\n 22741: u8 [a0 + 0] = 0\n 22743: a1 = 0x40\n 22746: a0 = 0\n 22748: ra = 202, jump @0\n      : @366 [@dyn 101] (gas: 30)\n 22754: a1 = sp + 0xffffffffffffffe0\n 22757: a1 = a1 & 0xffffffffffffffe0\n 22760: u64 [s1 + 0x278] = a1\n 22764: sp = a1\n 22766: i32 a0 = a0 + 0\n 22768: i32 a2 = a1 + 0\n 22770: a1 = 0x40\n 22773: ecalli 10 // 'hash_keccak_256'\n 22775: a3 = u64 [s1 + 0x278]\n 22779: a0 = u64 [a3 + 0x18]\n 22782: a1 = u64 [a3 + 0x10]\n 22785: a2 = u64 [a3 + 0x8]\n 22788: a3 = u64 [a3]\n 22790: a4 = reverse a0\n 22792: u64 [s1 + 0x260] = a4\n 22796: a1 = reverse a1\n 22798: u64 [s1 + 0x278] = a1\n 22802: a2 = reverse a2\n 22804: u64 [s1 + 0x270] = a2\n 22808: a3 = reverse a3\n 22810: u64 [s1 + 0x268] = a3\n 22814: a0 = s1 + 0x1218\n 22818: u64 [a0 + 0x380] = a3\n 22822: u64 [a0 + 0x378] = a2\n 22826: u64 [a0 + 0x370] = a1\n 22830: a1 = a0\n 22832: a0 = s1 + 0x15a0\n 22836: a2 = s1 + 0x1580\n 22840: u64 [a1 + 0x368] = a4\n 22844: ra = 204, jump @25\n      : @367 [@dyn 102] (gas: 40)\n 22850: a3 = s1 + 0x1218\n 22854: a0 = u64 [a3 + 0x388]\n 22858: a1 = u64 [a3 + 0x390]\n 22862: a2 = u64 [a3 + 0x398]\n 22866: a3 = u64 [a3 + 0x3a0]\n 22870: a0 = a0 & 0xffffffffffffff00\n 22874: a0 = a0 | 0x1\n 22877: a4 = s1 + 0x2218\n 22881: a5 = u64 [s1 + 0x268]\n 22885: u64 [a4 + 0x200] = a5\n 22889: a5 = u64 [s1 + 0x270]\n 22893: u64 [a4 + 0x1f8] = a5\n 22897: a5 = u64 [s1 + 0x278]\n 22901: u64 [a4 + 0x1f0] = a5\n 22905: a5 = u64 [s1 + 0x260]\n 22909: u64 [a4 + 0x1e8] = a5\n 22913: u64 [a4 + 0x220] = a3\n 22917: u64 [a4 + 0x218] = a2\n 22921: u64 [a4 + 0x210] = a1\n 22925: u64 [a4 + 0x208] = a0\n 22929: a0 = s1 + 0x2000\n 22933: i32 a1 = a0 + 0x400\n 22937: a0 = s1 + 0x2000\n 22941: i32 a3 = a0 + 0x420\n 22945: a2 = 0xffffffffffffffff\n 22948: a4 = 0x20\n 22951: a0 = 0\n 22953: ecalli 17 // 'set_storage'\n 22955: a0 = u64 [s1 + 0x298]\n 22959: a3 = s1 + 0x1218\n 22963: u64 [a3 + 0x320] = a0\n 22967: a0 = u64 [s1 + 0x290]\n 22971: u64 [a3 + 0x318] = a0\n 22975: a0 = u64 [s1 + 0x288]\n 22979: u64 [a3 + 0x310] = a0\n 22983: a0 = s1 + 0x1540\n 22987: a1 = s1 + 0x1520\n 22991: a2 = u64 [s1 + 0x280]\n 22995: u64 [a3 + 0x308] = a2\n 22999: ra = 206, jump @1048\n      : @368 [@dyn 103] (gas: 12)\n 23006: a1 = s1 + 0x1218\n 23010: a0 = u64 [a1 + 0x340]\n 23014: u64 [s1 + 0x260] = a0\n 23018: a0 = u64 [a1 + 0x338]\n 23022: u64 [s1 + 0x268] = a0\n 23026: a0 = u64 [a1 + 0x330]\n 23030: u64 [s1 + 0x270] = a0\n 23034: a0 = u64 [a1 + 0x328]\n 23038: u64 [s1 + 0x278] = a0\n 23042: a0 = 0x40\n 23045: a1 = 0x20\n 23048: ra = 208, jump @0\n      : @369 [@dyn 104] (gas: 100)\n 23054: a1 = u8 [a0 + 0x11]\n 23057: a2 = u8 [a0 + 0x10]\n 23060: a3 = u8 [a0 + 0x12]\n 23063: a4 = u8 [a0 + 0x13]\n 23066: a1 = a1 << 0x8\n 23069: a1 = a1 | a2\n 23072: a3 = a3 << 0x10\n 23075: a4 = a4 << 0x18\n 23078: a3 = a3 | a4\n 23081: a1 = a1 | a3\n 23084: a2 = u8 [a0 + 0x15]\n 23087: a3 = u8 [a0 + 0x14]\n 23090: a4 = u8 [a0 + 0x16]\n 23093: a5 = u8 [a0 + 0x17]\n 23096: a2 = a2 << 0x8\n 23099: a2 = a2 | a3\n 23102: a4 = a4 << 0x10\n 23105: a5 = a5 << 0x18\n 23108: a4 = a4 | a5\n 23111: a2 = a2 | a4\n 23114: a2 = a2 << 0x20\n 23117: t0 = a2 | a1\n 23120: a2 = u8 [a0 + 0x1]\n 23123: a3 = u8 [a0]\n 23125: a4 = u8 [a0 + 0x2]\n 23128: a5 = u8 [a0 + 0x3]\n 23131: a2 = a2 << 0x8\n 23134: a2 = a2 | a3\n 23137: a4 = a4 << 0x10\n 23140: a5 = a5 << 0x18\n 23143: a4 = a4 | a5\n 23146: a2 = a2 | a4\n 23149: a3 = u8 [a0 + 0x5]\n 23152: a4 = u8 [a0 + 0x4]\n 23155: a5 = u8 [a0 + 0x6]\n 23158: a1 = u8 [a0 + 0x7]\n 23161: a3 = a3 << 0x8\n 23164: a3 = a3 | a4\n 23167: a5 = a5 << 0x10\n 23170: a1 = a1 << 0x18\n 23173: a1 = a1 | a5\n 23176: a1 = a1 | a3\n 23179: a1 = a1 << 0x20\n 23182: t1 = a1 | a2\n 23185: a1 = u8 [a0 + 0x19]\n 23188: a3 = u8 [a0 + 0x18]\n 23191: a4 = u8 [a0 + 0x1a]\n 23194: a5 = u8 [a0 + 0x1b]\n 23197: a1 = a1 << 0x8\n 23200: a1 = a1 | a3\n 23203: a4 = a4 << 0x10\n 23206: a5 = a5 << 0x18\n 23209: a4 = a4 | a5\n 23212: a1 = a1 | a4\n 23215: a3 = u8 [a0 + 0x1d]\n 23218: a4 = u8 [a0 + 0x1c]\n 23221: a5 = u8 [a0 + 0x1e]\n 23224: a2 = u8 [a0 + 0x1f]\n 23227: a3 = a3 << 0x8\n 23230: a3 = a3 | a4\n 23233: a5 = a5 << 0x10\n 23236: a2 = a2 << 0x18\n 23239: a2 = a2 | a5\n 23242: a2 = a2 | a3\n 23245: a2 = a2 << 0x20\n 23248: a3 = a2 | a1\n 23251: a1 = u8 [a0 + 0x9]\n 23254: a2 = u8 [a0 + 0x8]\n 23257: a4 = u8 [a0 + 0xa]\n 23260: a5 = u8 [a0 + 0xb]\n 23263: a1 = a1 << 0x8\n 23266: a1 = a1 | a2\n 23269: a4 = a4 << 0x10\n 23272: a5 = a5 << 0x18\n 23275: a4 = a4 | a5\n 23278: a1 = a1 | a4\n 23281: a2 = u8 [a0 + 0xd]\n 23284: a4 = u8 [a0 + 0xc]\n 23287: a5 = u8 [a0 + 0xe]\n 23290: a0 = u8 [a0 + 0xf]\n 23293: a2 = a2 << 0x8\n 23296: a2 = a2 | a4\n 23299: a5 = a5 << 0x10\n 23302: a0 = a0 << 0x18\n 23305: a0 = a0 | a5\n 23308: a0 = a0 | a2\n 23311: a0 = a0 << 0x20\n 23314: a0 = a0 | a1\n 23317: a4 = reverse a0\n 23319: a2 = reverse a3\n 23321: a5 = reverse t1\n 23323: a3 = reverse t0\n 23325: a0 = a3 | a5\n 23328: a1 = a2 | a4\n 23331: a1 = a1 | a0\n 23334: a1 = a1 >> 0x20\n 23337: a0 = a0 | a4\n 23340: a0 = a0 << 0x20\n 23343: a0 = a0 | a1\n 23346: jump @371 if a0 == 0\n      : @370 (gas: 1)\n 23349: jump @799\n      : @371 (gas: 8)\n 23353: i32 a0 = a2 + 0\n 23355: a1 = 0x20\n 23358: u64 [s1 + 0x238] = a0\n 23362: u64 [s1 + 0x240] = a2\n 23366: u64 [s1 + 0x248] = a3\n 23370: u64 [s1 + 0x250] = a4\n 23374: u64 [s1 + 0x258] = a5\n 23378: ra = 210, jump @0\n      : @372 [@dyn 105] (gas: 62)\n 23384: u8 [a0 + 31] = 0x20\n 23388: u8 [a0 + 30] = 0\n 23391: u8 [a0 + 29] = 0\n 23394: u8 [a0 + 28] = 0\n 23397: u8 [a0 + 27] = 0\n 23400: u8 [a0 + 26] = 0\n 23403: u8 [a0 + 25] = 0\n 23406: u8 [a0 + 24] = 0\n 23409: u8 [a0 + 23] = 0\n 23412: u8 [a0 + 22] = 0\n 23415: u8 [a0 + 21] = 0\n 23418: u8 [a0 + 20] = 0\n 23421: u8 [a0 + 19] = 0\n 23424: u8 [a0 + 18] = 0\n 23427: u8 [a0 + 17] = 0\n 23430: u8 [a0 + 16] = 0\n 23433: u8 [a0 + 15] = 0\n 23436: u8 [a0 + 14] = 0\n 23439: u8 [a0 + 13] = 0\n 23442: u8 [a0 + 12] = 0\n 23445: u8 [a0 + 11] = 0\n 23448: u8 [a0 + 10] = 0\n 23451: u8 [a0 + 9] = 0\n 23454: u8 [a0 + 8] = 0\n 23457: u8 [a0 + 7] = 0\n 23460: u8 [a0 + 6] = 0\n 23463: u8 [a0 + 5] = 0\n 23466: u8 [a0 + 4] = 0\n 23469: u8 [a0 + 3] = 0\n 23472: u8 [a0 + 2] = 0\n 23475: u8 [a0 + 1] = 0\n 23478: u8 [a0 + 0] = 0\n 23480: a1 = u64 [s1 + 0x240]\n 23484: a0 = a1 + 0x20\n 23487: a1 = a0 <u a1\n 23490: a3 = u64 [s1 + 0x248]\n 23494: a2 = a3 + a1\n 23497: a3 = a2 <u a3\n 23500: a3 = a1 if a1 == 0\n 23503: a1 = u64 [s1 + 0x250]\n 23507: a3 = a3 + a1\n 23510: a1 = a3 <u a1\n 23513: a4 = u64 [s1 + 0x258]\n 23517: a4 = a4 + a1\n 23520: a1 = s1 + 0x1218\n 23524: u64 [a1 + 0x2b0] = a2\n 23528: u64 [a1 + 0x2a8] = a0\n 23532: a0 = u64 [s1 + 0x260]\n 23536: u64 [a1 + 0x2e0] = a0\n 23540: a0 = u64 [s1 + 0x268]\n 23544: u64 [a1 + 0x2d8] = a0\n 23548: a0 = u64 [s1 + 0x270]\n 23552: u64 [a1 + 0x2d0] = a0\n 23556: a0 = u64 [s1 + 0x278]\n 23560: u64 [a1 + 0x2c8] = a0\n 23564: u64 [a1 + 0x2b8] = a3\n 23568: a3 = a1\n 23570: a0 = s1 + 0x1500\n 23574: a1 = s1 + 0x14e0\n 23578: a2 = s1 + 0x14c0\n 23582: u64 [a3 + 0x2c0] = a4\n 23586: ra = 212, jump @1086\n      : @373 [@dyn 106] (gas: 32)\n 23593: a1 = s1 + 0x1218\n 23597: a0 = u64 [a1 + 0x2f0]\n 23601: t0 = u64 [a1 + 0x300]\n 23605: t1 = u64 [a1 + 0x2e8]\n 23609: a3 = u64 [a1 + 0x2f8]\n 23613: a1 = u64 [s1 + 0x248]\n 23617: a4 = a0 ^ a1\n 23620: a5 = a0 <u a1\n 23623: t2 = a1\n 23625: ra = u64 [s1 + 0x240]\n 23629: a1 = t1 <u ra\n 23632: a5 = a1 if a4 == 0\n 23635: a2 = u64 [s1 + 0x250]\n 23639: a4 = a3 - a2\n 23642: a3 = a3 <u a2\n 23645: a2 = u64 [s1 + 0x258]\n 23649: a2 = t0 - a2\n 23652: a2 = a2 - a3\n 23655: a3 = a4 <u a5\n 23658: a2 = a2 - a3\n 23661: a4 = a4 - a5\n 23664: a0 = a0 - t2\n 23667: a0 = a0 - a1\n 23670: a1 = t1 - ra\n 23673: a0 = a0 | a2\n 23676: a2 = a1 | a4\n 23679: a2 = a2 | a0\n 23682: a0 = a0 | a4\n 23685: a2 = a2 >> 0x20\n 23688: a0 = a0 << 0x20\n 23691: a0 = a0 | a2\n 23694: jump @375 if a0 == 0\n      : @374 (gas: 1)\n 23697: jump @799\n      : @375 (gas: 22)\n 23701: a0 = u64 [s1 + 0x280]\n 23705: a5 = s1 + 0x1218\n 23709: u64 [a5 + 0x268] = a0\n 23713: a0 = u64 [s1 + 0x288]\n 23717: u64 [a5 + 0x270] = a0\n 23721: a0 = u64 [0x20020]\n 23726: a2 = u64 [0x20028]\n 23731: a3 = u64 [0x20030]\n 23736: a4 = u64 [0x20038]\n 23741: u64 [a5 + 0x2a0] = a0\n 23745: u64 [a5 + 0x298] = a2\n 23749: u64 [a5 + 0x290] = a3\n 23753: u64 [a5 + 0x288] = a4\n 23757: a0 = u64 [s1 + 0x290]\n 23761: u64 [a5 + 0x278] = a0\n 23765: a2 = s1 + 0x14a0\n 23769: a3 = s1 + 0x1480\n 23773: a0 = u64 [s1 + 0x298]\n 23777: u64 [a5 + 0x280] = a0\n 23781: a0 = u64 [s1 + 0x238]\n 23785: ra = 0x110\n 23789: jump @26\n      : @376 (gas: 1)\n 23792: jump @378 if a0 == 3870939527\n      : @377 (gas: 1)\n 23799: jump @918\n      : @378 (gas: 3)\n 23803: a0 = u64 [s1 + 0x1a8]\n 23807: a0 = i32 [a0]\n 23809: jump @380 if a0 >u 35\n      : @379 (gas: 1)\n 23813: jump @918\n      : @380 (gas: 58)\n 23817: a0 = s1 + 0x2000\n 23821: i32 a0 = a0 + 0x2c0\n 23825: a1 = 0x4\n 23828: ecalli 5 // 'call_data_load'\n 23830: a1 = s1 + 0x2218\n 23834: a0 = u64 [a1 + 0xc0]\n 23838: u64 [s1 + 0x1b0] = a0\n 23842: a0 = u64 [a1 + 0xb8]\n 23846: u64 [s1 + 0x1a8] = a0\n 23850: a0 = u64 [a1 + 0xb0]\n 23854: u64 [s1 + 0x1a0] = a0\n 23858: a0 = u64 [a1 + 0xa8]\n 23862: u64 [s1 + 0x198] = a0\n 23866: u64 [a1 + 512] = 0\n 23870: u64 [a1 + 504] = 0\n 23874: u64 [a1 + 496] = 0\n 23878: u64 [a1 + 488] = 0x3\n 23883: u64 [a1 + 544] = 0\n 23887: u64 [a1 + 536] = 0\n 23891: u64 [a1 + 528] = 0\n 23895: u64 [a1 + 520] = 0\n 23899: u32 [a1 + 552] = 0x20\n 23904: a0 = s1 + 0x2000\n 23908: i32 a1 = a0 + 0x400\n 23912: a0 = s1 + 0x2000\n 23916: i32 a3 = a0 + 0x420\n 23920: a0 = s1 + 0x2000\n 23924: i32 a4 = a0 + 0x440\n 23928: a2 = 0xffffffffffffffff\n 23931: a0 = 0\n 23933: ecalli 9 // 'get_storage'\n 23935: a3 = s1 + 0x2218\n 23939: a0 = u64 [a3 + 0x210]\n 23943: a1 = u64 [a3 + 0x208]\n 23947: a2 = u64 [a3 + 0x218]\n 23951: a3 = u64 [a3 + 0x220]\n 23955: a5 = u64 [s1 + 0x1a0]\n 23959: a4 = a5 ^ a0\n 23962: a0 = a5 <u a0\n 23965: a5 = u64 [s1 + 0x198]\n 23969: a1 = a5 <u a1\n 23972: a1 = a0 if a4 != 0\n 23975: a4 = u64 [s1 + 0x1b0]\n 23979: a0 = a4 ^ a3\n 23982: a3 = a4 <u a3\n 23985: a5 = u64 [s1 + 0x1a8]\n 23989: a4 = a5 <u a2\n 23992: a4 = a3 if a0 != 0\n 23995: a2 = a2 ^ a5\n 23998: a0 = a0 | a2\n 24001: a1 = a4 if a0 != 0\n 24004: a2 = s1 + 0x1a18\n 24008: u64 [a2 + 672] = 0\n 24012: u64 [a2 + 664] = 0\n 24016: u64 [a2 + 0x288] = a1\n 24020: a0 = s1 + 0x1ca0\n 24024: u64 [a2 + 656] = 0\n 24028: ra = 214, jump @1071\n      : @381 [@dyn 107] (gas: 12)\n 24035: a0 = u64 [s1 + 0x1b0]\n 24039: a3 = s1 + 0x1a18\n 24043: u64 [a3 + 0x240] = a0\n 24047: a0 = u64 [s1 + 0x1a8]\n 24051: u64 [a3 + 0x238] = a0\n 24055: a0 = u64 [s1 + 0x1a0]\n 24059: u64 [a3 + 0x230] = a0\n 24063: a0 = s1 + 0x1c60\n 24067: a1 = s1 + 0x1c40\n 24071: a2 = u64 [s1 + 0x198]\n 24075: u64 [a3 + 0x228] = a2\n 24079: ra = 216, jump @988\n      : @382 [@dyn 108] (gas: 38)\n 24086: a0 = s1 + 0x1a18\n 24090: a1 = u64 [a0 + 0x248]\n 24094: a3 = u64 [a0 + 0x250]\n 24098: a4 = u64 [a0 + 0x258]\n 24102: a5 = a0\n 24104: a0 = a1 + 0x3\n 24107: u64 [s1 + 0x190] = a1\n 24111: a1 = a0 <u a1\n 24114: a2 = a3 + a1\n 24117: u64 [s1 + 0x188] = a3\n 24121: a3 = a2 <u a3\n 24124: a3 = a1 if a1 == 0\n 24127: a5 = u64 [a5 + 0x260]\n 24131: a1 = s1 + 0x2218\n 24135: u64 [a1 + 0x1f0] = a2\n 24139: u64 [a1 + 0x1e8] = a0\n 24143: a3 = a3 + a4\n 24146: u64 [a1 + 0x1f8] = a3\n 24150: u64 [s1 + 0x180] = a4\n 24154: a0 = a3 <u a4\n 24157: u64 [s1 + 0x178] = a5\n 24161: a0 = a0 + a5\n 24164: u64 [a1 + 0x200] = a0\n 24168: u64 [a1 + 544] = 0\n 24172: u64 [a1 + 536] = 0\n 24176: u64 [a1 + 528] = 0\n 24180: u64 [a1 + 520] = 0\n 24184: u32 [a1 + 552] = 0x20\n 24189: a0 = s1 + 0x2000\n 24193: i32 a1 = a0 + 0x400\n 24197: a0 = s1 + 0x2000\n 24201: i32 a3 = a0 + 0x420\n 24205: a0 = s1 + 0x2000\n 24209: i32 a4 = a0 + 0x440\n 24213: a2 = 0xffffffffffffffff\n 24216: a0 = 0\n 24218: ecalli 9 // 'get_storage'\n 24220: fallthrough\n      : @383 (gas: 3)\n 24221: a4 = s1 + 0x2218\n 24225: a0 = u8 [a4 + 0x208]\n 24229: jump @385 if a0 == 0\n      : @384 (gas: 1)\n 24232: jump @461\n      : @385 (gas: 3)\n 24235: a0 = 0x40\n 24238: a1 = 0x20\n 24241: ra = 218, jump @0\n      : @386 [@dyn 109] (gas: 100)\n 24247: a1 = u8 [a0 + 0x11]\n 24250: a2 = u8 [a0 + 0x10]\n 24253: a3 = u8 [a0 + 0x12]\n 24256: a4 = u8 [a0 + 0x13]\n 24259: a1 = a1 << 0x8\n 24262: a1 = a1 | a2\n 24265: a3 = a3 << 0x10\n 24268: a4 = a4 << 0x18\n 24271: a3 = a3 | a4\n 24274: a1 = a1 | a3\n 24277: a2 = u8 [a0 + 0x15]\n 24280: a3 = u8 [a0 + 0x14]\n 24283: a4 = u8 [a0 + 0x16]\n 24286: a5 = u8 [a0 + 0x17]\n 24289: a2 = a2 << 0x8\n 24292: a2 = a2 | a3\n 24295: a4 = a4 << 0x10\n 24298: a5 = a5 << 0x18\n 24301: a4 = a4 | a5\n 24304: a2 = a2 | a4\n 24307: a2 = a2 << 0x20\n 24310: t0 = a2 | a1\n 24313: a2 = u8 [a0 + 0x1]\n 24316: a3 = u8 [a0]\n 24318: a4 = u8 [a0 + 0x2]\n 24321: a5 = u8 [a0 + 0x3]\n 24324: a2 = a2 << 0x8\n 24327: a2 = a2 | a3\n 24330: a4 = a4 << 0x10\n 24333: a5 = a5 << 0x18\n 24336: a4 = a4 | a5\n 24339: a2 = a2 | a4\n 24342: a3 = u8 [a0 + 0x5]\n 24345: a4 = u8 [a0 + 0x4]\n 24348: a5 = u8 [a0 + 0x6]\n 24351: a1 = u8 [a0 + 0x7]\n 24354: a3 = a3 << 0x8\n 24357: a3 = a3 | a4\n 24360: a5 = a5 << 0x10\n 24363: a1 = a1 << 0x18\n 24366: a1 = a1 | a5\n 24369: a1 = a1 | a3\n 24372: a1 = a1 << 0x20\n 24375: t1 = a1 | a2\n 24378: a1 = u8 [a0 + 0x19]\n 24381: a3 = u8 [a0 + 0x18]\n 24384: a4 = u8 [a0 + 0x1a]\n 24387: a5 = u8 [a0 + 0x1b]\n 24390: a1 = a1 << 0x8\n 24393: a1 = a1 | a3\n 24396: a4 = a4 << 0x10\n 24399: a5 = a5 << 0x18\n 24402: a4 = a4 | a5\n 24405: a1 = a1 | a4\n 24408: a3 = u8 [a0 + 0x1d]\n 24411: a4 = u8 [a0 + 0x1c]\n 24414: a5 = u8 [a0 + 0x1e]\n 24417: a2 = u8 [a0 + 0x1f]\n 24420: a3 = a3 << 0x8\n 24423: a3 = a3 | a4\n 24426: a5 = a5 << 0x10\n 24429: a2 = a2 << 0x18\n 24432: a2 = a2 | a5\n 24435: a2 = a2 | a3\n 24438: a2 = a2 << 0x20\n 24441: a3 = a2 | a1\n 24444: a1 = u8 [a0 + 0x9]\n 24447: a2 = u8 [a0 + 0x8]\n 24450: a4 = u8 [a0 + 0xa]\n 24453: a5 = u8 [a0 + 0xb]\n 24456: a1 = a1 << 0x8\n 24459: a1 = a1 | a2\n 24462: a4 = a4 << 0x10\n 24465: a5 = a5 << 0x18\n 24468: a4 = a4 | a5\n 24471: a1 = a1 | a4\n 24474: a2 = u8 [a0 + 0xd]\n 24477: a4 = u8 [a0 + 0xc]\n 24480: a5 = u8 [a0 + 0xe]\n 24483: a0 = u8 [a0 + 0xf]\n 24486: a2 = a2 << 0x8\n 24489: a2 = a2 | a4\n 24492: a5 = a5 << 0x10\n 24495: a0 = a0 << 0x18\n 24498: a0 = a0 | a5\n 24501: a0 = a0 | a2\n 24504: a0 = a0 << 0x20\n 24507: a0 = a0 | a1\n 24510: a4 = reverse a0\n 24512: a2 = reverse a3\n 24514: a5 = reverse t1\n 24516: a3 = reverse t0\n 24518: a0 = a3 | a5\n 24521: a1 = a2 | a4\n 24524: a1 = a1 | a0\n 24527: a1 = a1 >> 0x20\n 24530: a0 = a0 | a4\n 24533: a0 = a0 << 0x20\n 24536: a0 = a0 | a1\n 24539: jump @388 if a0 == 0\n      : @387 (gas: 1)\n 24542: jump @799\n      : @388 (gas: 8)\n 24546: i32 a0 = a2 + 0\n 24548: a1 = 0x20\n 24551: u64 [s1 + 0x278] = a0\n 24555: u64 [s1 + 0x298] = a2\n 24559: u64 [s1 + 0x290] = a3\n 24563: u64 [s1 + 0x288] = a4\n 24567: u64 [s1 + 0x280] = a5\n 24571: ra = 220, jump @0\n      : @389 [@dyn 110] (gas: 43)\n 24577: u8 [a0 + 31] = 0\n 24580: u8 [a0 + 30] = 0\n 24583: u8 [a0 + 29] = 0\n 24586: u8 [a0 + 28] = 0\n 24589: u8 [a0 + 27] = 0\n 24592: u8 [a0 + 26] = 0\n 24595: u8 [a0 + 25] = 0\n 24598: u8 [a0 + 24] = 0\n 24601: u8 [a0 + 23] = 0\n 24604: u8 [a0 + 22] = 0\n 24607: u8 [a0 + 21] = 0\n 24610: u8 [a0 + 20] = 0\n 24613: u8 [a0 + 19] = 0\n 24616: u8 [a0 + 18] = 0\n 24619: u8 [a0 + 17] = 0\n 24622: u8 [a0 + 16] = 0\n 24625: u8 [a0 + 15] = 0\n 24628: u8 [a0 + 14] = 0\n 24631: u8 [a0 + 13] = 0\n 24634: u8 [a0 + 12] = 0\n 24637: u8 [a0 + 11] = 0\n 24640: u8 [a0 + 10] = 0\n 24643: u8 [a0 + 9] = 0\n 24646: u8 [a0 + 8] = 0\n 24649: u8 [a0 + 7] = 0\n 24652: u8 [a0 + 6] = 0\n 24655: u8 [a0 + 5] = 0\n 24658: u8 [a0 + 3] = 0xa0\n 24663: u8 [a0 + 2] = 0x79\n 24667: u8 [a0 + 1] = 0xc3\n 24672: u8 [a0 + 0] = 0x8\n 24675: a1 = u64 [s1 + 0x288]\n 24679: a3 = u64 [s1 + 0x280]\n 24683: a3 = a3 | a1\n 24686: a4 = 0x100000000\n 24696: a1 = 0xfffffffc\n 24706: a2 = u64 [s1 + 0x298]\n 24710: a1 = a2 <u a1\n 24713: a2 = u64 [s1 + 0x290]\n 24717: a1 = 0 if a2 != 0\n 24719: a1 = 0 if a3 != 0\n 24721: u8 [a0 + 4] = 0\n 24724: jump @391 if a1 != 0\n      : @390 (gas: 1)\n 24727: jump @799\n      : @391 (gas: 6)\n 24731: a0 = u64 [s1 + 0x278]\n 24735: i32 a0 = a0 + 0x4\n 24738: a1 = 0x20\n 24741: u64 [s1 + 0x288] = a3\n 24745: u64 [s1 + 0x280] = a4\n 24749: ra = 222, jump @0\n      : @392 [@dyn 111] (gas: 41)\n 24755: a4 = u64 [s1 + 0x288]\n 24759: a3 = u64 [s1 + 0x290]\n 24763: a2 = u64 [s1 + 0x298]\n 24767: u8 [a0 + 31] = 0x20\n 24771: u8 [a0 + 30] = 0\n 24774: u8 [a0 + 29] = 0\n 24777: u8 [a0 + 28] = 0\n 24780: u8 [a0 + 27] = 0\n 24783: u8 [a0 + 26] = 0\n 24786: u8 [a0 + 25] = 0\n 24789: u8 [a0 + 24] = 0\n 24792: u8 [a0 + 23] = 0\n 24795: u8 [a0 + 22] = 0\n 24798: u8 [a0 + 21] = 0\n 24801: u8 [a0 + 20] = 0\n 24804: u8 [a0 + 19] = 0\n 24807: u8 [a0 + 18] = 0\n 24810: u8 [a0 + 17] = 0\n 24813: u8 [a0 + 16] = 0\n 24816: u8 [a0 + 15] = 0\n 24819: u8 [a0 + 14] = 0\n 24822: u8 [a0 + 13] = 0\n 24825: u8 [a0 + 12] = 0\n 24828: u8 [a0 + 11] = 0\n 24831: u8 [a0 + 10] = 0\n 24834: u8 [a0 + 9] = 0\n 24837: u8 [a0 + 8] = 0\n 24840: u8 [a0 + 7] = 0\n 24843: u8 [a0 + 6] = 0\n 24846: u8 [a0 + 5] = 0\n 24849: u8 [a0 + 4] = 0\n 24852: u8 [a0 + 3] = 0\n 24855: u8 [a0 + 2] = 0\n 24858: u8 [a0 + 1] = 0\n 24861: a1 = u64 [s1 + 0x280]\n 24865: a1 = a1 + 0xffffffffffffffdc\n 24868: a1 = a2 <u a1\n 24871: a1 = 0 if a3 != 0\n 24873: a1 = 0 if a4 != 0\n 24875: u8 [a0 + 0] = 0\n 24877: jump @394 if a1 != 0\n      : @393 (gas: 1)\n 24880: jump @799\n      : @394 (gas: 4)\n 24884: a0 = u64 [s1 + 0x278]\n 24888: i32 a0 = a0 + 0x24\n 24891: a1 = 0x20\n 24894: ra = 224, jump @0\n      : @395 [@dyn 112] (gas: 40)\n 24900: u8 [a0 + 31] = 0x16\n 24904: u8 [a0 + 30] = 0\n 24907: u8 [a0 + 29] = 0\n 24910: u8 [a0 + 28] = 0\n 24913: u8 [a0 + 27] = 0\n 24916: u8 [a0 + 26] = 0\n 24919: u8 [a0 + 25] = 0\n 24922: u8 [a0 + 24] = 0\n 24925: u8 [a0 + 23] = 0\n 24928: u8 [a0 + 22] = 0\n 24931: u8 [a0 + 21] = 0\n 24934: u8 [a0 + 20] = 0\n 24937: u8 [a0 + 19] = 0\n 24940: u8 [a0 + 18] = 0\n 24943: u8 [a0 + 17] = 0\n 24946: u8 [a0 + 16] = 0\n 24949: u8 [a0 + 15] = 0\n 24952: u8 [a0 + 14] = 0\n 24955: u8 [a0 + 13] = 0\n 24958: u8 [a0 + 12] = 0\n 24961: u8 [a0 + 11] = 0\n 24964: u8 [a0 + 10] = 0\n 24967: u8 [a0 + 9] = 0\n 24970: u8 [a0 + 8] = 0\n 24973: u8 [a0 + 7] = 0\n 24976: u8 [a0 + 6] = 0\n 24979: u8 [a0 + 5] = 0\n 24982: u8 [a0 + 4] = 0\n 24985: u8 [a0 + 3] = 0\n 24988: u8 [a0 + 2] = 0\n 24991: u8 [a0 + 1] = 0\n 24994: a1 = 0xffffffbc\n 25004: a2 = u64 [s1 + 0x298]\n 25008: a1 = a2 <u a1\n 25011: a2 = u64 [s1 + 0x290]\n 25015: a1 = 0 if a2 != 0\n 25017: a2 = u64 [s1 + 0x288]\n 25021: a1 = 0 if a2 != 0\n 25023: u8 [a0 + 0] = 0\n 25025: jump @397 if a1 != 0\n      : @396 (gas: 1)\n 25028: jump @799\n      : @397 (gas: 4)\n 25032: a0 = u64 [s1 + 0x278]\n 25036: i32 a0 = a0 + 0x44\n 25039: a1 = 0x20\n 25042: ra = 226, jump @0\n      : @398 [@dyn 113] (gas: 37)\n 25048: u8 [a0 + 31] = 0\n 25051: u8 [a0 + 30] = 0\n 25054: u8 [a0 + 29] = 0\n 25057: u8 [a0 + 28] = 0\n 25060: u8 [a0 + 27] = 0\n 25063: u8 [a0 + 26] = 0\n 25066: u8 [a0 + 25] = 0\n 25069: u8 [a0 + 24] = 0\n 25072: u8 [a0 + 23] = 0\n 25075: u8 [a0 + 22] = 0\n 25078: t1 = 0x74\n 25081: u8 [a0 + 0x15] = t1\n 25084: u8 [a0 + 20] = 0x73\n 25088: u8 [a0 + 19] = 0x69\n 25092: t0 = 0x78\n 25095: u8 [a0 + 0x12] = t0\n 25098: a4 = 0x65\n 25101: u8 [a0 + 0x11] = a4\n 25104: u8 [a0 + 16] = 0x20\n 25108: u8 [a0 + 0xf] = t1\n 25111: a5 = 0x6f\n 25114: u8 [a0 + 0xe] = a5\n 25117: u8 [a0 + 13] = 0x6e\n 25121: u8 [a0 + 12] = 0x20\n 25125: u8 [a0 + 11] = 0x73\n 25129: u8 [a0 + 0xa] = a4\n 25132: u8 [a0 + 0x9] = a5\n 25135: u8 [a0 + 8] = 0x64\n 25139: u8 [a0 + 7] = 0x20\n 25143: u8 [a0 + 0x6] = t0\n 25146: u8 [a0 + 0x5] = a5\n 25149: u8 [a0 + 4] = 0x42\n 25153: u8 [a0 + 0x3] = t1\n 25156: u8 [a0 + 0x2] = a5\n 25159: u8 [a0 + 0x1] = a5\n 25162: u8 [a0 + 0] = 0x4c\n 25165: jump @747\n      : @399 (gas: 1)\n 25168: jump @401 if a0 == 4241487387\n      : @400 (gas: 1)\n 25175: jump @918\n      : @401 (gas: 11)\n 25179: a0 = sp + 0xffffffffffffffe0\n 25182: a0 = a0 & 0xffffffffffffffe0\n 25185: u64 [s1 + 0x298] = a0\n 25189: sp = a0\n 25191: u64 [a0 + 24] = 0\n 25194: u64 [a0 + 16] = 0\n 25197: u64 [a0 + 8] = 0\n 25200: u64 [a0 + 0] = 0\n 25202: i32 a0 = a0 + 0\n 25204: ecalli 18 // 'value_transferred'\n 25206: fallthrough\n      : @402 (gas: 9)\n 25207: a3 = u64 [s1 + 0x298]\n 25211: a0 = u64 [a3 + 0x10]\n 25214: a1 = u64 [a3 + 0x18]\n 25217: a2 = u64 [a3 + 0x8]\n 25220: a3 = u64 [a3]\n 25222: a1 = a1 | a2\n 25225: a0 = a0 | a3\n 25228: a0 = a0 | a1\n 25231: jump @404 if a0 == 0\n      : @403 (gas: 1)\n 25234: jump @918\n      : @404 (gas: 3)\n 25238: a0 = u64 [s1 + 0x1a8]\n 25242: a0 = i32 [a0]\n 25244: jump @406 if a0 >u 35\n      : @405 (gas: 1)\n 25248: jump @918\n      : @406 (gas: 58)\n 25252: a0 = s1 + 0x2000\n 25256: i32 a0 = a0 + 0x3c0\n 25260: a1 = 0x4\n 25263: ecalli 5 // 'call_data_load'\n 25265: a1 = s1 + 0x2218\n 25269: a0 = u64 [a1 + 0x1a8]\n 25273: u64 [s1 + 0x298] = a0\n 25277: a0 = u64 [a1 + 0x1b0]\n 25281: u64 [s1 + 0x280] = a0\n 25285: a0 = u64 [a1 + 0x1b8]\n 25289: u64 [s1 + 0x290] = a0\n 25293: a0 = u64 [a1 + 0x1c0]\n 25297: u64 [s1 + 0x288] = a0\n 25301: u64 [a1 + 512] = 0\n 25305: u64 [a1 + 504] = 0\n 25309: u64 [a1 + 496] = 0\n 25313: u64 [a1 + 488] = 0x3\n 25318: u64 [a1 + 544] = 0\n 25322: u64 [a1 + 536] = 0\n 25326: u64 [a1 + 528] = 0\n 25330: u64 [a1 + 520] = 0\n 25334: u32 [a1 + 552] = 0x20\n 25339: a0 = s1 + 0x2000\n 25343: i32 a1 = a0 + 0x400\n 25347: a0 = s1 + 0x2000\n 25351: i32 a3 = a0 + 0x420\n 25355: a0 = s1 + 0x2000\n 25359: i32 a4 = a0 + 0x440\n 25363: a2 = 0xffffffffffffffff\n 25366: a0 = 0\n 25368: ecalli 9 // 'get_storage'\n 25370: a3 = s1 + 0x2218\n 25374: a0 = u64 [a3 + 0x210]\n 25378: a1 = u64 [a3 + 0x208]\n 25382: a2 = u64 [a3 + 0x218]\n 25386: a3 = u64 [a3 + 0x220]\n 25390: a5 = u64 [s1 + 0x280]\n 25394: a4 = a5 ^ a0\n 25397: a0 = a5 <u a0\n 25400: a5 = u64 [s1 + 0x298]\n 25404: a1 = a5 <u a1\n 25407: a1 = a0 if a4 != 0\n 25410: a4 = u64 [s1 + 0x288]\n 25414: a0 = a4 ^ a3\n 25417: a3 = a4 <u a3\n 25420: a5 = u64 [s1 + 0x290]\n 25424: a4 = a5 <u a2\n 25427: a4 = a3 if a0 != 0\n 25430: a2 = a2 ^ a5\n 25433: a0 = a0 | a2\n 25436: a1 = a4 if a0 != 0\n 25439: a2 = s1 + 0x1a18\n 25443: u64 [a2 + 896] = 0\n 25447: u64 [a2 + 888] = 0\n 25451: u64 [a2 + 0x368] = a1\n 25455: a0 = s1 + 0x1d80\n 25459: u64 [a2 + 880] = 0\n 25463: ra = 228, jump @1071\n      : @407 [@dyn 114] (gas: 3)\n 25470: a1 = 0x20\n 25473: a0 = 0\n 25475: ra = 230, jump @0\n      : @408 [@dyn 115] (gas: 71)\n 25481: a1 = u64 [s1 + 0x288]\n 25485: a1 = reverse a1\n 25487: a2 = u64 [s1 + 0x290]\n 25491: a2 = reverse a2\n 25493: a3 = u64 [s1 + 0x280]\n 25497: a3 = reverse a3\n 25499: a4 = u64 [s1 + 0x298]\n 25503: a4 = reverse a4\n 25505: a5 = a4 >> 0x38\n 25508: u8 [a0 + 0x1f] = a5\n 25511: a5 = a4 >> 0x30\n 25514: u8 [a0 + 0x1e] = a5\n 25517: a5 = a4 >> 0x28\n 25520: u8 [a0 + 0x1d] = a5\n 25523: a5 = a4 >> 0x20\n 25526: u8 [a0 + 0x1c] = a5\n 25529: a5 = a4 >> 0x18\n 25532: u8 [a0 + 0x1b] = a5\n 25535: a5 = a4 >> 0x10\n 25538: u8 [a0 + 0x1a] = a5\n 25541: a5 = a4 >> 0x8\n 25544: u8 [a0 + 0x19] = a5\n 25547: u8 [a0 + 0x18] = a4\n 25550: a4 = a3 >> 0x38\n 25553: u8 [a0 + 0x17] = a4\n 25556: a4 = a3 >> 0x30\n 25559: u8 [a0 + 0x16] = a4\n 25562: a4 = a3 >> 0x28\n 25565: u8 [a0 + 0x15] = a4\n 25568: a4 = a3 >> 0x20\n 25571: u8 [a0 + 0x14] = a4\n 25574: a4 = a3 >> 0x18\n 25577: u8 [a0 + 0x13] = a4\n 25580: a4 = a3 >> 0x10\n 25583: u8 [a0 + 0x12] = a4\n 25586: a4 = a3 >> 0x8\n 25589: u8 [a0 + 0x11] = a4\n 25592: u8 [a0 + 0x10] = a3\n 25595: a3 = a2 >> 0x38\n 25598: u8 [a0 + 0xf] = a3\n 25601: a3 = a2 >> 0x30\n 25604: u8 [a0 + 0xe] = a3\n 25607: a3 = a2 >> 0x28\n 25610: u8 [a0 + 0xd] = a3\n 25613: a3 = a2 >> 0x20\n 25616: u8 [a0 + 0xc] = a3\n 25619: a3 = a2 >> 0x18\n 25622: u8 [a0 + 0xb] = a3\n 25625: a3 = a2 >> 0x10\n 25628: u8 [a0 + 0xa] = a3\n 25631: a3 = a2 >> 0x8\n 25634: u8 [a0 + 0x9] = a3\n 25637: u8 [a0 + 0x8] = a2\n 25640: a2 = a1 >> 0x38\n 25643: u8 [a0 + 0x7] = a2\n 25646: a2 = a1 >> 0x30\n 25649: u8 [a0 + 0x6] = a2\n 25652: a2 = a1 >> 0x28\n 25655: u8 [a0 + 0x5] = a2\n 25658: a2 = a1 >> 0x20\n 25661: u8 [a0 + 0x4] = a2\n 25664: a2 = a1 >> 0x18\n 25667: u8 [a0 + 0x3] = a2\n 25670: a2 = a1 >> 0x10\n 25673: u8 [a0 + 0x2] = a2\n 25676: a2 = a1 >> 0x8\n 25679: u8 [a0 + 0x1] = a2\n 25682: u8 [a0] = a1\n 25684: a0 = 0x20\n 25687: a1 = 0x20\n 25690: ra = 232, jump @0\n      : @409 [@dyn 116] (gas: 35)\n 25696: u8 [a0 + 31] = 0x4\n 25700: u8 [a0 + 30] = 0\n 25703: u8 [a0 + 29] = 0\n 25706: u8 [a0 + 28] = 0\n 25709: u8 [a0 + 27] = 0\n 25712: u8 [a0 + 26] = 0\n 25715: u8 [a0 + 25] = 0\n 25718: u8 [a0 + 24] = 0\n 25721: u8 [a0 + 23] = 0\n 25724: u8 [a0 + 22] = 0\n 25727: u8 [a0 + 21] = 0\n 25730: u8 [a0 + 20] = 0\n 25733: u8 [a0 + 19] = 0\n 25736: u8 [a0 + 18] = 0\n 25739: u8 [a0 + 17] = 0\n 25742: u8 [a0 + 16] = 0\n 25745: u8 [a0 + 15] = 0\n 25748: u8 [a0 + 14] = 0\n 25751: u8 [a0 + 13] = 0\n 25754: u8 [a0 + 12] = 0\n 25757: u8 [a0 + 11] = 0\n 25760: u8 [a0 + 10] = 0\n 25763: u8 [a0 + 9] = 0\n 25766: u8 [a0 + 8] = 0\n 25769: u8 [a0 + 7] = 0\n 25772: u8 [a0 + 6] = 0\n 25775: u8 [a0 + 5] = 0\n 25778: u8 [a0 + 4] = 0\n 25781: u8 [a0 + 3] = 0\n 25784: u8 [a0 + 2] = 0\n 25787: u8 [a0 + 1] = 0\n 25790: u8 [a0 + 0] = 0\n 25792: a1 = 0x40\n 25795: a0 = 0\n 25797: ra = 234, jump @0\n      : @410 [@dyn 117] (gas: 41)\n 25803: a1 = sp + 0xffffffffffffffe0\n 25806: a1 = a1 & 0xffffffffffffffe0\n 25809: u64 [s1 + 0x298] = a1\n 25813: sp = a1\n 25815: i32 a0 = a0 + 0\n 25817: i32 a2 = a1 + 0\n 25819: a1 = 0x40\n 25822: ecalli 10 // 'hash_keccak_256'\n 25824: a3 = u64 [s1 + 0x298]\n 25828: a0 = u64 [a3 + 0x18]\n 25831: a1 = u64 [a3 + 0x10]\n 25834: a2 = u64 [a3 + 0x8]\n 25837: a3 = u64 [a3]\n 25839: u64 [s1 + 0x240] = a0\n 25843: a0 = reverse a0\n 25845: u64 [s1 + 0x248] = a1\n 25849: a1 = reverse a1\n 25851: u64 [s1 + 0x250] = a2\n 25855: a2 = reverse a2\n 25857: u64 [s1 + 0x258] = a3\n 25861: a3 = reverse a3\n 25863: a4 = s1 + 0x2218\n 25867: u64 [a4 + 0x200] = a3\n 25871: u64 [a4 + 0x1f8] = a2\n 25875: u64 [a4 + 0x1f0] = a1\n 25879: u64 [a4 + 0x1e8] = a0\n 25883: u64 [a4 + 544] = 0\n 25887: u64 [a4 + 536] = 0\n 25891: u64 [a4 + 528] = 0\n 25895: u64 [a4 + 520] = 0\n 25899: u32 [a4 + 552] = 0x20\n 25904: a0 = s1 + 0x2000\n 25908: i32 a1 = a0 + 0x400\n 25912: a0 = s1 + 0x2000\n 25916: i32 a3 = a0 + 0x420\n 25920: a0 = s1 + 0x2000\n 25924: i32 a4 = a0 + 0x440\n 25928: a2 = 0xffffffffffffffff\n 25931: a0 = 0\n 25933: ecalli 9 // 'get_storage'\n 25935: fallthrough\n      : @411 (gas: 11)\n 25936: a2 = s1 + 0x2218\n 25940: a0 = u64 [a2 + 0x220]\n 25944: a1 = u64 [a2 + 0x218]\n 25948: a3 = u64 [a2 + 0x210]\n 25952: u64 [s1 + 0x1c0] = a0\n 25956: u64 [s1 + 0x1b8] = a1\n 25960: a0 = a0 | a1\n 25963: u64 [s1 + 0x1d0] = a3\n 25967: a1 = a3 <u 0x1\n 25970: a1 = 0 if a0 != 0\n 25972: jump @413 if a1 != 0\n      : @412 (gas: 1)\n 25975: jump @921\n      : @413 (gas: 5)\n 25979: a0 = u64 [a2 + 0x208]\n 25983: u64 [s1 + 0x1c8] = a0\n 25987: a0 = 0x40\n 25990: a1 = 0x20\n 25993: ra = 236, jump @0\n      : @414 [@dyn 118] (gas: 124)\n 25999: a1 = u8 [a0 + 0x19]\n 26002: a2 = u8 [a0 + 0x18]\n 26005: a3 = u8 [a0 + 0x1a]\n 26008: a4 = u8 [a0 + 0x1b]\n 26011: a1 = a1 << 0x8\n 26014: a1 = a1 | a2\n 26017: a3 = a3 << 0x10\n 26020: a4 = a4 << 0x18\n 26023: a3 = a3 | a4\n 26026: a1 = a1 | a3\n 26029: a2 = u8 [a0 + 0x1d]\n 26032: a3 = u8 [a0 + 0x1c]\n 26035: a4 = u8 [a0 + 0x1e]\n 26038: a5 = u8 [a0 + 0x1f]\n 26041: a2 = a2 << 0x8\n 26044: a2 = a2 | a3\n 26047: a4 = a4 << 0x10\n 26050: a5 = a5 << 0x18\n 26053: a4 = a4 | a5\n 26056: a2 = a2 | a4\n 26059: a2 = a2 << 0x20\n 26062: t0 = a2 | a1\n 26065: a2 = u8 [a0 + 0x11]\n 26068: a3 = u8 [a0 + 0x10]\n 26071: a4 = u8 [a0 + 0x12]\n 26074: a5 = u8 [a0 + 0x13]\n 26077: a2 = a2 << 0x8\n 26080: a2 = a2 | a3\n 26083: a4 = a4 << 0x10\n 26086: a5 = a5 << 0x18\n 26089: a4 = a4 | a5\n 26092: a2 = a2 | a4\n 26095: a3 = u8 [a0 + 0x15]\n 26098: a4 = u8 [a0 + 0x14]\n 26101: a5 = u8 [a0 + 0x16]\n 26104: a1 = u8 [a0 + 0x17]\n 26107: a3 = a3 << 0x8\n 26110: a3 = a3 | a4\n 26113: a5 = a5 << 0x10\n 26116: a1 = a1 << 0x18\n 26119: a1 = a1 | a5\n 26122: a1 = a1 | a3\n 26125: a1 = a1 << 0x20\n 26128: t1 = a1 | a2\n 26131: a1 = u8 [a0 + 0x9]\n 26134: a3 = u8 [a0 + 0x8]\n 26137: a4 = u8 [a0 + 0xa]\n 26140: a5 = u8 [a0 + 0xb]\n 26143: a1 = a1 << 0x8\n 26146: a1 = a1 | a3\n 26149: a4 = a4 << 0x10\n 26152: a5 = a5 << 0x18\n 26155: a4 = a4 | a5\n 26158: a1 = a1 | a4\n 26161: a3 = u8 [a0 + 0xd]\n 26164: a4 = u8 [a0 + 0xc]\n 26167: a5 = u8 [a0 + 0xe]\n 26170: a2 = u8 [a0 + 0xf]\n 26173: a3 = a3 << 0x8\n 26176: a3 = a3 | a4\n 26179: a5 = a5 << 0x10\n 26182: a2 = a2 << 0x18\n 26185: a2 = a2 | a5\n 26188: a2 = a2 | a3\n 26191: a2 = a2 << 0x20\n 26194: a3 = a2 | a1\n 26197: a1 = u8 [a0 + 0x1]\n 26200: a2 = u8 [a0]\n 26202: a4 = u8 [a0 + 0x2]\n 26205: a5 = u8 [a0 + 0x3]\n 26208: a1 = a1 << 0x8\n 26211: a1 = a1 | a2\n 26214: a4 = a4 << 0x10\n 26217: a5 = a5 << 0x18\n 26220: a4 = a4 | a5\n 26223: a1 = a1 | a4\n 26226: a2 = u8 [a0 + 0x5]\n 26229: a4 = u8 [a0 + 0x4]\n 26232: a5 = u8 [a0 + 0x6]\n 26235: a0 = u8 [a0 + 0x7]\n 26238: a2 = a2 << 0x8\n 26241: a2 = a2 | a4\n 26244: a5 = a5 << 0x10\n 26247: a0 = a0 << 0x18\n 26250: a0 = a0 | a5\n 26253: a0 = a0 | a2\n 26256: a0 = a0 << 0x20\n 26259: a0 = a0 | a1\n 26262: t2 = reverse a0\n 26264: ra = reverse a3\n 26266: a3 = reverse t1\n 26268: a4 = reverse t0\n 26270: a2 = u64 [s1 + 0x1c8]\n 26274: a0 = a2 >> 0x3b\n 26277: a1 = u64 [s1 + 0x1d0]\n 26281: a1 = a1 << 0x5\n 26284: a0 = a0 | a1\n 26287: a1 = a2 << 0x5\n 26290: a2 = a1 + 0x3f\n 26293: a1 = a2 <u a1\n 26296: a0 = a0 + a1\n 26299: a0 = a0 & 0x3f\n 26302: a2 = a2 & 0xffffffffffffffe0\n 26305: a2 = a2 + a4\n 26308: u64 [s1 + 0x280] = a4\n 26312: u64 [s1 + 0x278] = a2\n 26316: a1 = a2 <u a4\n 26319: a0 = a0 + a3\n 26322: a4 = a0 + a1\n 26325: a2 = a4 ^ a3\n 26328: u64 [s1 + 0x288] = a3\n 26332: a0 = a4 <u a3\n 26335: a0 = a1 if a2 == 0\n 26338: t0 = ra + a0\n 26341: a1 = t0 <u ra\n 26344: a5 = t2 + a1\n 26347: a2 = t0 >u 0\n 26349: a3 = a5 >u 0\n 26351: a3 = a2 if a5 == 0\n 26354: a2 = t0 | a5\n 26357: u64 [s1 + 0x270] = a4\n 26361: a4 = a4 >u 0\n 26363: a4 = a3 if a2 != 0\n 26366: jump @416 if a4 == 0\n      : @415 (gas: 1)\n 26369: jump @911\n      : @416 (gas: 7)\n 26373: a2 = a5 ^ t2\n 26376: a3 = a5 <u t2\n 26379: a1 = a3 if a2 != 0\n 26382: a3 = t0 ^ ra\n 26385: a2 = a2 | a3\n 26388: a0 = a1 if a2 != 0\n 26391: jump @418 if a0 == 0\n      : @417 (gas: 1)\n 26394: jump @911\n      : @418 (gas: 7)\n 26398: a0 = 0x40\n 26401: a1 = 0x20\n 26404: u64 [s1 + 0x298] = t2\n 26408: u64 [s1 + 0x290] = ra\n 26412: u64 [s1 + 0x268] = t0\n 26416: u64 [s1 + 0x260] = a5\n 26420: ra = 238, jump @0\n      : @419 [@dyn 119] (gas: 80)\n 26426: t0 = u64 [s1 + 0x290]\n 26430: a1 = u64 [s1 + 0x260]\n 26434: a1 = reverse a1\n 26436: a2 = u64 [s1 + 0x268]\n 26440: a2 = reverse a2\n 26442: a3 = u64 [s1 + 0x270]\n 26446: a3 = reverse a3\n 26448: a4 = u64 [s1 + 0x278]\n 26452: a4 = reverse a4\n 26454: u8 [a0 + 0x18] = a4\n 26457: a5 = a4 >> 0x38\n 26460: u8 [a0 + 0x1f] = a5\n 26463: a5 = a4 >> 0x30\n 26466: u8 [a0 + 0x1e] = a5\n 26469: a5 = a4 >> 0x28\n 26472: u8 [a0 + 0x1d] = a5\n 26475: a5 = a4 >> 0x20\n 26478: u8 [a0 + 0x1c] = a5\n 26481: a5 = a4 >> 0x18\n 26484: u8 [a0 + 0x1b] = a5\n 26487: a5 = a4 >> 0x10\n 26490: u8 [a0 + 0x1a] = a5\n 26493: t1 = u64 [s1 + 0x298]\n 26497: a4 = a4 >> 0x8\n 26500: u8 [a0 + 0x19] = a4\n 26503: u8 [a0 + 0x10] = a3\n 26506: a4 = a3 >> 0x38\n 26509: u8 [a0 + 0x17] = a4\n 26512: a4 = a3 >> 0x30\n 26515: u8 [a0 + 0x16] = a4\n 26518: a4 = a3 >> 0x28\n 26521: u8 [a0 + 0x15] = a4\n 26524: a4 = a3 >> 0x20\n 26527: u8 [a0 + 0x14] = a4\n 26530: a4 = a3 >> 0x18\n 26533: u8 [a0 + 0x13] = a4\n 26536: a4 = a3 >> 0x10\n 26539: u8 [a0 + 0x12] = a4\n 26542: a3 = a3 >> 0x8\n 26545: u8 [a0 + 0x11] = a3\n 26548: u8 [a0 + 0x8] = a2\n 26551: a3 = a2 >> 0x38\n 26554: u8 [a0 + 0xf] = a3\n 26557: a3 = a2 >> 0x30\n 26560: u8 [a0 + 0xe] = a3\n 26563: a3 = a2 >> 0x28\n 26566: u8 [a0 + 0xd] = a3\n 26569: a3 = a2 >> 0x20\n 26572: u8 [a0 + 0xc] = a3\n 26575: a3 = a2 >> 0x18\n 26578: u8 [a0 + 0xb] = a3\n 26581: a3 = a2 >> 0x10\n 26584: u8 [a0 + 0xa] = a3\n 26587: a2 = a2 >> 0x8\n 26590: u8 [a0 + 0x9] = a2\n 26593: u8 [a0] = a1\n 26595: a2 = a1 >> 0x38\n 26598: u8 [a0 + 0x7] = a2\n 26601: a2 = a1 >> 0x30\n 26604: u8 [a0 + 0x6] = a2\n 26607: a2 = a1 >> 0x28\n 26610: u8 [a0 + 0x5] = a2\n 26613: a2 = a1 >> 0x20\n 26616: u8 [a0 + 0x4] = a2\n 26619: a2 = a1 >> 0x18\n 26622: u8 [a0 + 0x3] = a2\n 26625: a2 = a1 >> 0x10\n 26628: u8 [a0 + 0x2] = a2\n 26631: a1 = a1 >> 0x8\n 26634: a5 = u64 [s1 + 0x280]\n 26638: a2 = a5 | t0\n 26641: a4 = u64 [s1 + 0x288]\n 26645: a3 = a4 | t1\n 26648: a2 = a2 | a3\n 26651: a2 = a2 >> 0x20\n 26654: a3 = a3 | t0\n 26657: a3 = a3 << 0x20\n 26660: a2 = a2 | a3\n 26663: u8 [a0 + 0x1] = a1\n 26666: jump @421 if a2 == 0\n      : @420 (gas: 1)\n 26669: jump @799\n      : @421 (gas: 4)\n 26672: i32 a0 = a5 + 0\n 26674: a1 = 0x20\n 26677: u64 [s1 + 0x188] = a0\n 26681: ra = 240, jump @0\n      : @422 [@dyn 120] (gas: 87)\n 26687: a1 = u64 [s1 + 0x1c8]\n 26691: a1 = reverse a1\n 26693: a2 = a1 >> 0x38\n 26696: u8 [a0 + 0x1f] = a2\n 26699: a2 = a1 >> 0x30\n 26702: u8 [a0 + 0x1e] = a2\n 26705: a2 = a1 >> 0x28\n 26708: u8 [a0 + 0x1d] = a2\n 26711: a2 = a1 >> 0x20\n 26714: u8 [a0 + 0x1c] = a2\n 26717: a2 = a1 >> 0x18\n 26720: u8 [a0 + 0x1b] = a2\n 26723: a2 = a1 >> 0x10\n 26726: u8 [a0 + 0x1a] = a2\n 26729: a2 = a1 >> 0x8\n 26732: u8 [a0 + 0x19] = a2\n 26735: a2 = u64 [s1 + 0x1d0]\n 26739: a2 = reverse a2\n 26741: u8 [a0 + 0x18] = a1\n 26744: a1 = a2 >> 0x38\n 26747: u8 [a0 + 0x17] = a1\n 26750: a1 = a2 >> 0x30\n 26753: u8 [a0 + 0x16] = a1\n 26756: a1 = a2 >> 0x28\n 26759: u8 [a0 + 0x15] = a1\n 26762: a1 = a2 >> 0x20\n 26765: u8 [a0 + 0x14] = a1\n 26768: a1 = a2 >> 0x18\n 26771: u8 [a0 + 0x13] = a1\n 26774: a1 = a2 >> 0x10\n 26777: u8 [a0 + 0x12] = a1\n 26780: a1 = u64 [s1 + 0x1b8]\n 26784: a1 = reverse a1\n 26786: u8 [a0 + 0x10] = a2\n 26789: a2 = a2 >> 0x8\n 26792: u8 [a0 + 0x11] = a2\n 26795: a2 = a1 >> 0x38\n 26798: u8 [a0 + 0xf] = a2\n 26801: a2 = a1 >> 0x30\n 26804: u8 [a0 + 0xe] = a2\n 26807: a2 = a1 >> 0x28\n 26810: u8 [a0 + 0xd] = a2\n 26813: a2 = a1 >> 0x20\n 26816: u8 [a0 + 0xc] = a2\n 26819: a2 = a1 >> 0x18\n 26822: u8 [a0 + 0xb] = a2\n 26825: a2 = a1 >> 0x10\n 26828: u8 [a0 + 0xa] = a2\n 26831: a2 = u64 [s1 + 0x1c0]\n 26835: a2 = reverse a2\n 26837: u8 [a0 + 0x8] = a1\n 26840: a1 = a1 >> 0x8\n 26843: u8 [a0 + 0x9] = a1\n 26846: a1 = a2 >> 0x38\n 26849: u8 [a0 + 0x7] = a1\n 26852: a1 = a2 >> 0x30\n 26855: u8 [a0 + 0x6] = a1\n 26858: a1 = a2 >> 0x28\n 26861: u8 [a0 + 0x5] = a1\n 26864: a1 = a2 >> 0x20\n 26867: u8 [a0 + 0x4] = a1\n 26870: a1 = a2 >> 0x18\n 26873: u8 [a0 + 0x3] = a1\n 26876: a1 = a2 >> 0x10\n 26879: u8 [a0 + 0x2] = a1\n 26882: u8 [a0] = a2\n 26884: a2 = a2 >> 0x8\n 26887: u8 [a0 + 0x1] = a2\n 26890: a1 = u64 [s1 + 0x280]\n 26894: a0 = a1 + 0x20\n 26897: u64 [s1 + 0x1a0] = a0\n 26901: a0 = a0 <u a1\n 26904: a2 = u64 [s1 + 0x288]\n 26908: a1 = a2 + a0\n 26911: u64 [s1 + 0x198] = a1\n 26915: a1 = a1 <u a2\n 26918: a1 = a0 if a0 == 0\n 26921: a0 = u64 [s1 + 0x290]\n 26925: a1 = a1 + a0\n 26928: u64 [s1 + 0x190] = a1\n 26932: a0 = a1 <u a0\n 26935: a1 = u64 [s1 + 0x298]\n 26939: a0 = a0 + a1\n 26942: u64 [s1 + 0x1a8] = a0\n 26946: a1 = 0x20\n 26949: a0 = 0\n 26951: ra = 242, jump @0\n      : @423 [@dyn 121] (gas: 67)\n 26957: a2 = u64 [s1 + 0x240]\n 26961: a1 = a2 >> 0x38\n 26964: u8 [a0 + 0x1f] = a1\n 26967: a1 = a2 >> 0x30\n 26970: u8 [a0 + 0x1e] = a1\n 26973: a1 = a2 >> 0x28\n 26976: u8 [a0 + 0x1d] = a1\n 26979: a1 = a2 >> 0x20\n 26982: u8 [a0 + 0x1c] = a1\n 26985: a1 = a2 >> 0x18\n 26988: u8 [a0 + 0x1b] = a1\n 26991: a1 = a2 >> 0x10\n 26994: u8 [a0 + 0x1a] = a1\n 26997: a1 = a2 >> 0x8\n 27000: u8 [a0 + 0x19] = a1\n 27003: u8 [a0 + 0x18] = a2\n 27006: a2 = u64 [s1 + 0x248]\n 27010: a1 = a2 >> 0x38\n 27013: u8 [a0 + 0x17] = a1\n 27016: a1 = a2 >> 0x30\n 27019: u8 [a0 + 0x16] = a1\n 27022: a1 = a2 >> 0x28\n 27025: u8 [a0 + 0x15] = a1\n 27028: a1 = a2 >> 0x20\n 27031: u8 [a0 + 0x14] = a1\n 27034: a1 = a2 >> 0x18\n 27037: u8 [a0 + 0x13] = a1\n 27040: a1 = a2 >> 0x10\n 27043: u8 [a0 + 0x12] = a1\n 27046: a1 = a2 >> 0x8\n 27049: u8 [a0 + 0x11] = a1\n 27052: u8 [a0 + 0x10] = a2\n 27055: a2 = u64 [s1 + 0x250]\n 27059: a1 = a2 >> 0x38\n 27062: u8 [a0 + 0xf] = a1\n 27065: a1 = a2 >> 0x30\n 27068: u8 [a0 + 0xe] = a1\n 27071: a1 = a2 >> 0x28\n 27074: u8 [a0 + 0xd] = a1\n 27077: a1 = a2 >> 0x20\n 27080: u8 [a0 + 0xc] = a1\n 27083: a1 = a2 >> 0x18\n 27086: u8 [a0 + 0xb] = a1\n 27089: a1 = a2 >> 0x10\n 27092: u8 [a0 + 0xa] = a1\n 27095: a1 = a2 >> 0x8\n 27098: u8 [a0 + 0x9] = a1\n 27101: u8 [a0 + 0x8] = a2\n 27104: a2 = u64 [s1 + 0x258]\n 27108: a1 = a2 >> 0x38\n 27111: u8 [a0 + 0x7] = a1\n 27114: a1 = a2 >> 0x30\n 27117: u8 [a0 + 0x6] = a1\n 27120: a1 = a2 >> 0x28\n 27123: u8 [a0 + 0x5] = a1\n 27126: a1 = a2 >> 0x20\n 27129: u8 [a0 + 0x4] = a1\n 27132: a1 = a2 >> 0x18\n 27135: u8 [a0 + 0x3] = a1\n 27138: a1 = a2 >> 0x10\n 27141: u8 [a0 + 0x2] = a1\n 27144: a1 = a2 >> 0x8\n 27147: u8 [a0 + 0x1] = a1\n 27150: u8 [a0] = a2\n 27152: a1 = 0x20\n 27155: a0 = 0\n 27157: ra = 244, jump @0\n      : @424 [@dyn 122] (gas: 9)\n 27163: a1 = sp + 0xffffffffffffffe0\n 27166: a1 = a1 & 0xffffffffffffffe0\n 27169: sp = a1\n 27171: i32 a0 = a0 + 0\n 27173: u64 [s1 + 0x298] = a1\n 27177: i32 a2 = a1 + 0\n 27179: a1 = 0x20\n 27182: ecalli 10 // 'hash_keccak_256'\n 27184: fallthrough\n      : @425 (gas: 8)\n 27185: a0 = u64 [s1 + 0x1c8]\n 27189: a1 = u64 [s1 + 0x1b8]\n 27193: a0 = a0 | a1\n 27196: a1 = u64 [s1 + 0x1d0]\n 27200: a2 = u64 [s1 + 0x1c0]\n 27204: a1 = a1 | a2\n 27207: a0 = a0 | a1\n 27210: jump @427 if a0 == 0\n      : @426 (gas: 1)\n 27213: jump @639\n      : @427 (gas: 3)\n 27216: a0 = 0x40\n 27219: a1 = 0x20\n 27222: ra = 246, jump @0\n      : @428 [@dyn 123] (gas: 100)\n 27228: a1 = u8 [a0 + 0x19]\n 27231: a2 = u8 [a0 + 0x18]\n 27234: a3 = u8 [a0 + 0x1a]\n 27237: a4 = u8 [a0 + 0x1b]\n 27240: a1 = a1 << 0x8\n 27243: a1 = a1 | a2\n 27246: a3 = a3 << 0x10\n 27249: a4 = a4 << 0x18\n 27252: a3 = a3 | a4\n 27255: a1 = a1 | a3\n 27258: a2 = u8 [a0 + 0x1d]\n 27261: a3 = u8 [a0 + 0x1c]\n 27264: a4 = u8 [a0 + 0x1e]\n 27267: a5 = u8 [a0 + 0x1f]\n 27270: a2 = a2 << 0x8\n 27273: a2 = a2 | a3\n 27276: a4 = a4 << 0x10\n 27279: a5 = a5 << 0x18\n 27282: a4 = a4 | a5\n 27285: a2 = a2 | a4\n 27288: a2 = a2 << 0x20\n 27291: t0 = a2 | a1\n 27294: a2 = u8 [a0 + 0x11]\n 27297: a3 = u8 [a0 + 0x10]\n 27300: a4 = u8 [a0 + 0x12]\n 27303: a5 = u8 [a0 + 0x13]\n 27306: a2 = a2 << 0x8\n 27309: a2 = a2 | a3\n 27312: a4 = a4 << 0x10\n 27315: a5 = a5 << 0x18\n 27318: a4 = a4 | a5\n 27321: a2 = a2 | a4\n 27324: a3 = u8 [a0 + 0x15]\n 27327: a4 = u8 [a0 + 0x14]\n 27330: a5 = u8 [a0 + 0x16]\n 27333: a1 = u8 [a0 + 0x17]\n 27336: a3 = a3 << 0x8\n 27339: a3 = a3 | a4\n 27342: a5 = a5 << 0x10\n 27345: a1 = a1 << 0x18\n 27348: a1 = a1 | a5\n 27351: a1 = a1 | a3\n 27354: a1 = a1 << 0x20\n 27357: t1 = a1 | a2\n 27360: a1 = u8 [a0 + 0x9]\n 27363: a3 = u8 [a0 + 0x8]\n 27366: a4 = u8 [a0 + 0xa]\n 27369: a5 = u8 [a0 + 0xb]\n 27372: a1 = a1 << 0x8\n 27375: a1 = a1 | a3\n 27378: a4 = a4 << 0x10\n 27381: a5 = a5 << 0x18\n 27384: a4 = a4 | a5\n 27387: a1 = a1 | a4\n 27390: a3 = u8 [a0 + 0xd]\n 27393: a4 = u8 [a0 + 0xc]\n 27396: a5 = u8 [a0 + 0xe]\n 27399: a2 = u8 [a0 + 0xf]\n 27402: a3 = a3 << 0x8\n 27405: a3 = a3 | a4\n 27408: a5 = a5 << 0x10\n 27411: a2 = a2 << 0x18\n 27414: a2 = a2 | a5\n 27417: a2 = a2 | a3\n 27420: a2 = a2 << 0x20\n 27423: a3 = a2 | a1\n 27426: a1 = u8 [a0 + 0x1]\n 27429: a2 = u8 [a0]\n 27431: a4 = u8 [a0 + 0x2]\n 27434: a5 = u8 [a0 + 0x3]\n 27437: a1 = a1 << 0x8\n 27440: a1 = a1 | a2\n 27443: a4 = a4 << 0x10\n 27446: a5 = a5 << 0x18\n 27449: a4 = a4 | a5\n 27452: a1 = a1 | a4\n 27455: a2 = u8 [a0 + 0x5]\n 27458: a4 = u8 [a0 + 0x4]\n 27461: a5 = u8 [a0 + 0x6]\n 27464: a0 = u8 [a0 + 0x7]\n 27467: a2 = a2 << 0x8\n 27470: a2 = a2 | a4\n 27473: a5 = a5 << 0x10\n 27476: a0 = a0 << 0x18\n 27479: a0 = a0 | a5\n 27482: a0 = a0 | a2\n 27485: a0 = a0 << 0x20\n 27488: a0 = a0 | a1\n 27491: a4 = reverse a0\n 27493: a5 = reverse a3\n 27495: a3 = reverse t1\n 27497: a2 = reverse t0\n 27499: a0 = a3 | a4\n 27502: a1 = a2 | a5\n 27505: a1 = a1 | a0\n 27508: a1 = a1 >> 0x20\n 27511: a0 = a0 | a5\n 27514: a0 = a0 << 0x20\n 27517: a0 = a0 | a1\n 27520: jump @430 if a0 == 0\n      : @429 (gas: 1)\n 27523: jump @799\n      : @430 (gas: 20)\n 27526: a0 = a2 + 0x20\n 27529: u64 [s1 + 0x290] = a0\n 27533: t0 = a0 <u a2\n 27536: a0 = a3 + t0\n 27539: u64 [s1 + 0x298] = a0\n 27543: a1 = a0 <u a3\n 27546: a1 = t0 if t0 == 0\n 27549: a1 = a1 + a5\n 27552: u64 [s1 + 0x280] = a1\n 27556: a0 = a1 <u a5\n 27559: a0 = a0 + a4\n 27562: u64 [s1 + 0x288] = a0\n 27566: i32 a0 = a2 + 0\n 27568: a1 = 0x20\n 27571: u64 [s1 + 0xc0] = a0\n 27575: u64 [s1 + 0xe0] = a2\n 27579: u64 [s1 + 0xd8] = a3\n 27583: u64 [s1 + 0xd0] = a4\n 27587: u64 [s1 + 0xc8] = a5\n 27591: ra = 248, jump @0\n      : @431 [@dyn 124] (gas: 35)\n 27597: u8 [a0 + 31] = 0x20\n 27601: u8 [a0 + 30] = 0\n 27604: u8 [a0 + 29] = 0\n 27607: u8 [a0 + 28] = 0\n 27610: u8 [a0 + 27] = 0\n 27613: u8 [a0 + 26] = 0\n 27616: u8 [a0 + 25] = 0\n 27619: u8 [a0 + 24] = 0\n 27622: u8 [a0 + 23] = 0\n 27625: u8 [a0 + 22] = 0\n 27628: u8 [a0 + 21] = 0\n 27631: u8 [a0 + 20] = 0\n 27634: u8 [a0 + 19] = 0\n 27637: u8 [a0 + 18] = 0\n 27640: u8 [a0 + 17] = 0\n 27643: u8 [a0 + 16] = 0\n 27646: u8 [a0 + 15] = 0\n 27649: u8 [a0 + 14] = 0\n 27652: u8 [a0 + 13] = 0\n 27655: u8 [a0 + 12] = 0\n 27658: u8 [a0 + 11] = 0\n 27661: u8 [a0 + 10] = 0\n 27664: u8 [a0 + 9] = 0\n 27667: u8 [a0 + 8] = 0\n 27670: u8 [a0 + 7] = 0\n 27673: u8 [a0 + 6] = 0\n 27676: u8 [a0 + 5] = 0\n 27679: u8 [a0 + 4] = 0\n 27682: u8 [a0 + 3] = 0\n 27685: u8 [a0 + 2] = 0\n 27688: u8 [a0 + 1] = 0\n 27691: u8 [a0 + 0] = 0\n 27693: a1 = 0x20\n 27696: a0 = u64 [s1 + 0x188]\n 27700: ra = 250, jump @0\n      : @432 [@dyn 125] (gas: 12)\n 27706: t0 = u64 [s1 + 0x290]\n 27710: a3 = u64 [s1 + 0x280]\n 27714: a1 = t0 | a3\n 27717: a2 = u64 [s1 + 0x298]\n 27721: a4 = u64 [s1 + 0x288]\n 27725: a2 = a2 | a4\n 27728: a1 = a1 | a2\n 27731: a1 = a1 >> 0x20\n 27734: a2 = a2 | a3\n 27737: a2 = a2 << 0x20\n 27740: a1 = a1 | a2\n 27743: jump @434 if a1 == 0\n      : @433 (gas: 1)\n 27746: jump @799\n      : @434 (gas: 95)\n 27749: a1 = u8 [a0 + 0x19]\n 27752: a2 = u8 [a0 + 0x18]\n 27755: a3 = u8 [a0 + 0x1a]\n 27758: a4 = u8 [a0 + 0x1b]\n 27761: a1 = a1 << 0x8\n 27764: a1 = a1 | a2\n 27767: a3 = a3 << 0x10\n 27770: a4 = a4 << 0x18\n 27773: a3 = a3 | a4\n 27776: a1 = a1 | a3\n 27779: a2 = u8 [a0 + 0x1d]\n 27782: a3 = u8 [a0 + 0x1c]\n 27785: a4 = u8 [a0 + 0x1e]\n 27788: a5 = u8 [a0 + 0x1f]\n 27791: a2 = a2 << 0x8\n 27794: a2 = a2 | a3\n 27797: a4 = a4 << 0x10\n 27800: a5 = a5 << 0x18\n 27803: a4 = a4 | a5\n 27806: a2 = a2 | a4\n 27809: a2 = a2 << 0x20\n 27812: a1 = a1 | a2\n 27815: u64 [s1 + 0x260] = a1\n 27819: a1 = u8 [a0 + 0x11]\n 27822: a2 = u8 [a0 + 0x10]\n 27825: a3 = u8 [a0 + 0x12]\n 27828: a4 = u8 [a0 + 0x13]\n 27831: a1 = a1 << 0x8\n 27834: a1 = a1 | a2\n 27837: a3 = a3 << 0x10\n 27840: a4 = a4 << 0x18\n 27843: a3 = a3 | a4\n 27846: a1 = a1 | a3\n 27849: a2 = u8 [a0 + 0x15]\n 27852: a3 = u8 [a0 + 0x14]\n 27855: a4 = u8 [a0 + 0x16]\n 27858: a5 = u8 [a0 + 0x17]\n 27861: a2 = a2 << 0x8\n 27864: a2 = a2 | a3\n 27867: a4 = a4 << 0x10\n 27870: a5 = a5 << 0x18\n 27873: a4 = a4 | a5\n 27876: a2 = a2 | a4\n 27879: a2 = a2 << 0x20\n 27882: a1 = a1 | a2\n 27885: u64 [s1 + 0x258] = a1\n 27889: a1 = u8 [a0 + 0x9]\n 27892: a2 = u8 [a0 + 0x8]\n 27895: a3 = u8 [a0 + 0xa]\n 27898: a4 = u8 [a0 + 0xb]\n 27901: a1 = a1 << 0x8\n 27904: a1 = a1 | a2\n 27907: a3 = a3 << 0x10\n 27910: a4 = a4 << 0x18\n 27913: a3 = a3 | a4\n 27916: a1 = a1 | a3\n 27919: a2 = u8 [a0 + 0xd]\n 27922: a3 = u8 [a0 + 0xc]\n 27925: a4 = u8 [a0 + 0xe]\n 27928: a5 = u8 [a0 + 0xf]\n 27931: a2 = a2 << 0x8\n 27934: a2 = a2 | a3\n 27937: a4 = a4 << 0x10\n 27940: a5 = a5 << 0x18\n 27943: a4 = a4 | a5\n 27946: a2 = a2 | a4\n 27949: a2 = a2 << 0x20\n 27952: a1 = a1 | a2\n 27955: u64 [s1 + 0x250] = a1\n 27959: a1 = u8 [a0 + 0x1]\n 27962: a2 = u8 [a0]\n 27964: a3 = u8 [a0 + 0x2]\n 27967: a4 = u8 [a0 + 0x3]\n 27970: a1 = a1 << 0x8\n 27973: a1 = a1 | a2\n 27976: a3 = a3 << 0x10\n 27979: a4 = a4 << 0x18\n 27982: a3 = a3 | a4\n 27985: a1 = a1 | a3\n 27988: a2 = u8 [a0 + 0x5]\n 27991: a3 = u8 [a0 + 0x4]\n 27994: a4 = u8 [a0 + 0x6]\n 27997: a0 = u8 [a0 + 0x7]\n 28000: a2 = a2 << 0x8\n 28003: a2 = a2 | a3\n 28006: a4 = a4 << 0x10\n 28009: a0 = a0 << 0x18\n 28012: a0 = a0 | a4\n 28015: a0 = a0 | a2\n 28018: a0 = a0 << 0x20\n 28021: a0 = a0 | a1\n 28024: u64 [s1 + 0x248] = a0\n 28028: i32 a0 = t0 + 0\n 28030: a1 = 0x20\n 28033: ra = 252, jump @0\n      : @435 [@dyn 126] (gas: 81)\n 28039: a3 = u64 [s1 + 0x248]\n 28043: a5 = u64 [s1 + 0x250]\n 28047: a4 = u64 [s1 + 0x258]\n 28051: ra = u64 [s1 + 0x260]\n 28055: u8 [a0 + 0x10] = a4\n 28058: a1 = a5 >> 0x38\n 28061: u8 [a0 + 0xf] = a1\n 28064: a1 = a5 >> 0x30\n 28067: u8 [a0 + 0xe] = a1\n 28070: a1 = a5 >> 0x28\n 28073: u8 [a0 + 0xd] = a1\n 28076: a1 = a5 >> 0x20\n 28079: u8 [a0 + 0xc] = a1\n 28082: a1 = a5 >> 0x18\n 28085: u8 [a0 + 0xb] = a1\n 28088: a1 = a5 >> 0x10\n 28091: u8 [a0 + 0xa] = a1\n 28094: a1 = a5 >> 0x8\n 28097: u8 [a0 + 0x9] = a1\n 28100: u8 [a0 + 0x8] = a5\n 28103: a1 = a3 >> 0x38\n 28106: u8 [a0 + 0x7] = a1\n 28109: a1 = a3 >> 0x30\n 28112: u8 [a0 + 0x6] = a1\n 28115: a1 = a3 >> 0x28\n 28118: u8 [a0 + 0x5] = a1\n 28121: a1 = a3 >> 0x20\n 28124: u8 [a0 + 0x4] = a1\n 28127: a1 = a3 >> 0x18\n 28130: u8 [a0 + 0x3] = a1\n 28133: a1 = a3 >> 0x10\n 28136: u8 [a0 + 0x2] = a1\n 28139: a1 = a3 >> 0x8\n 28142: u8 [a0 + 0x1] = a1\n 28145: u8 [a0] = a3\n 28147: u8 [a0 + 0x18] = ra\n 28150: a1 = a4 >> 0x38\n 28153: u8 [a0 + 0x17] = a1\n 28156: a1 = a4 >> 0x30\n 28159: u8 [a0 + 0x16] = a1\n 28162: a1 = a4 >> 0x28\n 28165: u8 [a0 + 0x15] = a1\n 28168: a1 = a4 >> 0x20\n 28171: u8 [a0 + 0x14] = a1\n 28174: a1 = a4 >> 0x18\n 28177: u8 [a0 + 0x13] = a1\n 28180: a1 = a4 >> 0x10\n 28183: u8 [a0 + 0x12] = a1\n 28186: a1 = a4 >> 0x8\n 28189: u8 [a0 + 0x11] = a1\n 28192: a1 = ra >> 0x38\n 28195: u8 [a0 + 0x1f] = a1\n 28198: a1 = ra >> 0x30\n 28201: u8 [a0 + 0x1e] = a1\n 28204: a1 = ra >> 0x28\n 28207: u8 [a0 + 0x1d] = a1\n 28210: a1 = ra >> 0x20\n 28213: u8 [a0 + 0x1c] = a1\n 28216: a1 = ra >> 0x18\n 28219: u8 [a0 + 0x1b] = a1\n 28222: a1 = ra >> 0x10\n 28225: u8 [a0 + 0x1a] = a1\n 28228: a1 = ra >> 0x8\n 28231: u8 [a0 + 0x19] = a1\n 28234: a0 = u64 [s1 + 0xe0]\n 28238: t0 = a0 + 0x40\n 28241: a0 = t0 <u a0\n 28244: a1 = u64 [s1 + 0xd8]\n 28248: t1 = a1 + a0\n 28251: a1 = t1 <u a1\n 28254: a1 = a0 if a0 == 0\n 28257: a2 = u64 [s1 + 0xc8]\n 28261: t2 = a2 + a1\n 28264: a0 = a3 | a4\n 28267: a1 = a5 | ra\n 28270: a0 = a0 | a1\n 28273: a1 = t2 <u a2\n 28276: a2 = u64 [s1 + 0xd0]\n 28280: a1 = a1 + a2\n 28283: u64 [s1 + 0x298] = a1\n 28287: jump @437 if a0 == 0\n      : @436 (gas: 1)\n 28290: jump @749\n      : @437 (gas: 4)\n 28293: a0 = t0\n 28295: t0 = t1\n 28297: t1 = t2\n 28299: fallthrough\n      : @438 (gas: 29)\n 28300: ra = a0\n 28302: a0 = u64 [s1 + 0xe0]\n 28306: a0 = ra <u a0\n 28309: a4 = u64 [s1 + 0xd8]\n 28313: a1 = t0 ^ a4\n 28316: a2 = t0 <u a4\n 28319: a2 = a0 if a1 == 0\n 28322: a3 = u64 [s1 + 0xc8]\n 28326: a1 = t1 - a3\n 28329: t2 = t1 <u a3\n 28332: a5 = u64 [s1 + 0xd0]\n 28336: a3 = u64 [s1 + 0x298]\n 28340: t1 = a3 - a5\n 28343: a5 = a1 <u a2\n 28346: a3 = t2 + a5\n 28349: a3 = t1 - a3\n 28352: a1 = a1 - a2\n 28355: a2 = t0 - a4\n 28358: a2 = a2 - a0\n 28361: a0 = u64 [s1 + 0xe0]\n 28365: a0 = ra - a0\n 28368: a2 = a2 | a3\n 28371: a3 = a0 | a1\n 28374: a3 = a3 | a2\n 28377: a1 = a1 | a2\n 28380: a3 = a3 >> 0x20\n 28383: a1 = a1 << 0x20\n 28386: a1 = a1 | a3\n 28389: jump @440 if a1 == 0\n      : @439 (gas: 1)\n 28392: jump @799\n      : @440 (gas: 4)\n 28395: i32 a1 = a0 + 0\n 28397: u64 [s1 + 0x298] = a1\n 28401: a0 = u64 [s1 + 0xc0]\n 28405: ra = 254, jump @0\n      : @441 [@dyn 127] (gas: 5)\n 28411: i32 a1 = a0 + 0\n 28413: a0 = 0\n 28415: a2 = u64 [s1 + 0x298]\n 28419: ecalli 15 // 'seal_return'\n 28421: fallthrough\n      : @442 (gas: 3)\n 28422: a1 = 0x20\n 28425: a0 = 0\n 28427: ra = 256, jump @0\n      : @443 [@dyn 128] (gas: 71)\n 28433: a1 = u64 [s1 + 0x238]\n 28437: a1 = reverse a1\n 28439: a2 = u64 [s1 + 0x230]\n 28443: a2 = reverse a2\n 28445: a3 = u64 [s1 + 0x228]\n 28449: a3 = reverse a3\n 28451: a4 = u64 [s1 + 0x220]\n 28455: a4 = reverse a4\n 28457: u8 [a0 + 0x18] = a4\n 28460: a5 = a4 >> 0x38\n 28463: u8 [a0 + 0x1f] = a5\n 28466: a5 = a4 >> 0x30\n 28469: u8 [a0 + 0x1e] = a5\n 28472: a5 = a4 >> 0x28\n 28475: u8 [a0 + 0x1d] = a5\n 28478: a5 = a4 >> 0x20\n 28481: u8 [a0 + 0x1c] = a5\n 28484: a5 = a4 >> 0x18\n 28487: u8 [a0 + 0x1b] = a5\n 28490: a5 = a4 >> 0x10\n 28493: u8 [a0 + 0x1a] = a5\n 28496: a4 = a4 >> 0x8\n 28499: u8 [a0 + 0x19] = a4\n 28502: u8 [a0 + 0x10] = a3\n 28505: a4 = a3 >> 0x38\n 28508: u8 [a0 + 0x17] = a4\n 28511: a4 = a3 >> 0x30\n 28514: u8 [a0 + 0x16] = a4\n 28517: a4 = a3 >> 0x28\n 28520: u8 [a0 + 0x15] = a4\n 28523: a4 = a3 >> 0x20\n 28526: u8 [a0 + 0x14] = a4\n 28529: a4 = a3 >> 0x18\n 28532: u8 [a0 + 0x13] = a4\n 28535: a4 = a3 >> 0x10\n 28538: u8 [a0 + 0x12] = a4\n 28541: a3 = a3 >> 0x8\n 28544: u8 [a0 + 0x11] = a3\n 28547: u8 [a0 + 0x8] = a2\n 28550: a3 = a2 >> 0x38\n 28553: u8 [a0 + 0xf] = a3\n 28556: a3 = a2 >> 0x30\n 28559: u8 [a0 + 0xe] = a3\n 28562: a3 = a2 >> 0x28\n 28565: u8 [a0 + 0xd] = a3\n 28568: a3 = a2 >> 0x20\n 28571: u8 [a0 + 0xc] = a3\n 28574: a3 = a2 >> 0x18\n 28577: u8 [a0 + 0xb] = a3\n 28580: a3 = a2 >> 0x10\n 28583: u8 [a0 + 0xa] = a3\n 28586: a2 = a2 >> 0x8\n 28589: u8 [a0 + 0x9] = a2\n 28592: u8 [a0] = a1\n 28594: a2 = a1 >> 0x38\n 28597: u8 [a0 + 0x7] = a2\n 28600: a2 = a1 >> 0x30\n 28603: u8 [a0 + 0x6] = a2\n 28606: a2 = a1 >> 0x28\n 28609: u8 [a0 + 0x5] = a2\n 28612: a2 = a1 >> 0x20\n 28615: u8 [a0 + 0x4] = a2\n 28618: a2 = a1 >> 0x18\n 28621: u8 [a0 + 0x3] = a2\n 28624: a2 = a1 >> 0x10\n 28627: u8 [a0 + 0x2] = a2\n 28630: a1 = a1 >> 0x8\n 28633: u8 [a0 + 0x1] = a1\n 28636: a0 = 0x20\n 28639: a1 = 0x20\n 28642: ra = 258, jump @0\n      : @444 [@dyn 129] (gas: 35)\n 28648: u8 [a0 + 31] = 0x4\n 28652: u8 [a0 + 30] = 0\n 28655: u8 [a0 + 29] = 0\n 28658: u8 [a0 + 28] = 0\n 28661: u8 [a0 + 27] = 0\n 28664: u8 [a0 + 26] = 0\n 28667: u8 [a0 + 25] = 0\n 28670: u8 [a0 + 24] = 0\n 28673: u8 [a0 + 23] = 0\n 28676: u8 [a0 + 22] = 0\n 28679: u8 [a0 + 21] = 0\n 28682: u8 [a0 + 20] = 0\n 28685: u8 [a0 + 19] = 0\n 28688: u8 [a0 + 18] = 0\n 28691: u8 [a0 + 17] = 0\n 28694: u8 [a0 + 16] = 0\n 28697: u8 [a0 + 15] = 0\n 28700: u8 [a0 + 14] = 0\n 28703: u8 [a0 + 13] = 0\n 28706: u8 [a0 + 12] = 0\n 28709: u8 [a0 + 11] = 0\n 28712: u8 [a0 + 10] = 0\n 28715: u8 [a0 + 9] = 0\n 28718: u8 [a0 + 8] = 0\n 28721: u8 [a0 + 7] = 0\n 28724: u8 [a0 + 6] = 0\n 28727: u8 [a0 + 5] = 0\n 28730: u8 [a0 + 4] = 0\n 28733: u8 [a0 + 3] = 0\n 28736: u8 [a0 + 2] = 0\n 28739: u8 [a0 + 1] = 0\n 28742: u8 [a0 + 0] = 0\n 28744: a1 = 0x40\n 28747: a0 = 0\n 28749: ra = 260, jump @0\n      : @445 [@dyn 130] (gas: 26)\n 28755: a1 = sp + 0xffffffffffffffe0\n 28758: a1 = a1 & 0xffffffffffffffe0\n 28761: u64 [s1 + 0x278] = a1\n 28765: sp = a1\n 28767: i32 a0 = a0 + 0\n 28769: i32 a2 = a1 + 0\n 28771: a1 = 0x40\n 28774: ecalli 10 // 'hash_keccak_256'\n 28776: u64 [s1 + 664] = 0\n 28780: u64 [s1 + 656] = 0\n 28784: u64 [s1 + 640] = 0\n 28788: u64 [s1 + 648] = 0\n 28792: a3 = u64 [s1 + 0x278]\n 28796: a0 = u64 [a3]\n 28798: a1 = u64 [a3 + 0x8]\n 28801: a2 = u64 [a3 + 0x10]\n 28804: a3 = u64 [a3 + 0x18]\n 28807: a0 = reverse a0\n 28809: u64 [s1 + 0x278] = a0\n 28813: a0 = reverse a1\n 28815: u64 [s1 + 0x270] = a0\n 28819: a0 = reverse a2\n 28821: u64 [s1 + 0x268] = a0\n 28825: a0 = reverse a3\n 28827: u64 [s1 + 0x260] = a0\n 28831: fallthrough\n      : @446 (gas: 24)\n 28832: a1 = s1 + 0x2218\n 28836: a0 = u64 [s1 + 0x270]\n 28840: u64 [a1 + 0x1f8] = a0\n 28844: a0 = u64 [s1 + 0x268]\n 28848: u64 [a1 + 0x1f0] = a0\n 28852: a0 = u64 [s1 + 0x260]\n 28856: u64 [a1 + 0x1e8] = a0\n 28860: a0 = u64 [s1 + 0x278]\n 28864: u64 [a1 + 0x200] = a0\n 28868: u64 [a1 + 544] = 0\n 28872: u64 [a1 + 536] = 0\n 28876: u64 [a1 + 528] = 0\n 28880: u64 [a1 + 520] = 0\n 28884: u32 [a1 + 552] = 0x20\n 28889: a0 = s1 + 0x2000\n 28893: i32 a1 = a0 + 0x400\n 28897: a0 = s1 + 0x2000\n 28901: i32 a3 = a0 + 0x420\n 28905: a0 = s1 + 0x2000\n 28909: i32 a4 = a0 + 0x440\n 28913: a2 = 0xffffffffffffffff\n 28916: a0 = 0\n 28918: ecalli 9 // 'get_storage'\n 28920: fallthrough\n      : @447 (gas: 21)\n 28921: a3 = s1 + 0x2218\n 28925: a0 = u64 [a3 + 0x210]\n 28929: a1 = u64 [a3 + 0x208]\n 28933: a2 = u64 [a3 + 0x218]\n 28937: a3 = u64 [a3 + 0x220]\n 28941: a5 = u64 [s1 + 0x290]\n 28945: a4 = a5 ^ a0\n 28948: a0 = a5 <u a0\n 28951: a5 = u64 [s1 + 0x298]\n 28955: a1 = a5 <u a1\n 28958: a1 = a0 if a4 != 0\n 28961: a4 = u64 [s1 + 0x288]\n 28965: a0 = a4 ^ a3\n 28968: a3 = a4 <u a3\n 28971: a5 = u64 [s1 + 0x280]\n 28975: a4 = a5 <u a2\n 28978: a4 = a3 if a0 != 0\n 28981: a2 = a2 ^ a5\n 28984: a0 = a0 | a2\n 28987: a1 = a4 if a0 != 0\n 28990: jump @451 if a1 == 0\n      : @448 (gas: 20)\n 28994: a0 = u64 [s1 + 0x298]\n 28998: u64 [s1 + 0x420] = a0\n 29002: a0 = u64 [s1 + 0x260]\n 29006: u64 [s1 + 0x440] = a0\n 29010: a0 = u64 [s1 + 0x290]\n 29014: u64 [s1 + 0x428] = a0\n 29018: a0 = u64 [s1 + 0x268]\n 29022: u64 [s1 + 0x448] = a0\n 29026: a0 = u64 [s1 + 0x280]\n 29030: u64 [s1 + 0x430] = a0\n 29034: a0 = u64 [s1 + 0x270]\n 29038: u64 [s1 + 0x450] = a0\n 29042: a0 = u64 [s1 + 0x288]\n 29046: u64 [s1 + 0x438] = a0\n 29050: a0 = s1 + 0x460\n 29054: a1 = s1 + 0x440\n 29058: a2 = s1 + 0x420\n 29062: a3 = u64 [s1 + 0x278]\n 29066: u64 [s1 + 0x458] = a3\n 29070: ra = 262, jump @955\n      : @449 [@dyn 131] (gas: 35)\n 29077: a0 = u64 [s1 + 0x478]\n 29081: a1 = u64 [s1 + 0x470]\n 29085: a2 = u64 [s1 + 0x468]\n 29089: a3 = u64 [s1 + 0x460]\n 29093: a4 = s1 + 0x2218\n 29097: u64 [a4 + 0x200] = a0\n 29101: u64 [a4 + 0x1f8] = a1\n 29105: u64 [a4 + 0x1f0] = a2\n 29109: u64 [a4 + 0x1e8] = a3\n 29113: u64 [a4 + 544] = 0\n 29117: u64 [a4 + 536] = 0\n 29121: u64 [a4 + 528] = 0\n 29125: u64 [a4 + 520] = 0\n 29129: u32 [a4 + 552] = 0x20\n 29134: a0 = s1 + 0x2000\n 29138: i32 a1 = a0 + 0x400\n 29142: a0 = s1 + 0x2000\n 29146: i32 a3 = a0 + 0x420\n 29150: a0 = s1 + 0x2000\n 29154: i32 a4 = a0 + 0x440\n 29158: a2 = 0xffffffffffffffff\n 29161: a0 = 0\n 29163: ecalli 9 // 'get_storage'\n 29165: a3 = s1 + 0x2218\n 29169: a2 = u64 [a3 + 0x208]\n 29173: a0 = u64 [a3 + 0x210]\n 29177: a1 = u64 [a3 + 0x218]\n 29181: a3 = u64 [a3 + 0x220]\n 29185: u64 [s1 + 0x3d8] = a3\n 29189: u64 [s1 + 0x3d0] = a1\n 29193: u64 [s1 + 0x3c8] = a0\n 29197: a0 = s1 + 0x3e0\n 29201: a1 = s1 + 0x3c0\n 29205: u64 [s1 + 0x3c0] = a2\n 29209: ra = 264, jump @1048\n      : @450 [@dyn 132] (gas: 78)\n 29216: a0 = u64 [s1 + 0x3e0]\n 29220: a1 = u64 [s1 + 0x3f8]\n 29224: a2 = u64 [s1 + 0x3e8]\n 29228: a3 = u64 [s1 + 0x3f0]\n 29232: a4 = a0 + 0x2\n 29235: u64 [s1 + 0x258] = a4\n 29239: a0 = a4 <u a0\n 29242: a5 = a2 + a0\n 29245: u64 [s1 + 0x250] = a5\n 29249: a2 = a5 <u a2\n 29252: a2 = a0 if a0 == 0\n 29255: a2 = a2 + a3\n 29258: u64 [s1 + 0x248] = a2\n 29262: a0 = a2 <u a3\n 29265: a1 = a1 + a0\n 29268: u64 [s1 + 0x240] = a1\n 29272: a0 = s1 + 0x2218\n 29276: u64 [a0 + 0x1f0] = a5\n 29280: u64 [a0 + 0x1e8] = a4\n 29284: u64 [a0 + 0x1f8] = a2\n 29288: u64 [a0 + 0x200] = a1\n 29292: u64 [a0 + 544] = 0\n 29296: u64 [a0 + 536] = 0\n 29300: u64 [a0 + 528] = 0\n 29304: u64 [a0 + 520] = 0\n 29308: u32 [a0 + 552] = 0x20\n 29313: a0 = s1 + 0x2000\n 29317: i32 a1 = a0 + 0x400\n 29321: a0 = s1 + 0x2000\n 29325: i32 a3 = a0 + 0x420\n 29329: a0 = s1 + 0x2000\n 29333: i32 a4 = a0 + 0x440\n 29337: a2 = 0xffffffffffffffff\n 29340: a0 = 0\n 29342: ecalli 9 // 'get_storage'\n 29344: a4 = s1 + 0x2218\n 29348: a0 = u64 [a4 + 0x208]\n 29352: a1 = u64 [a4 + 0x210]\n 29356: a2 = u64 [a4 + 0x218]\n 29360: a3 = u64 [a4 + 0x220]\n 29364: a0 = a0 & 0xffffffffffffff00\n 29368: a5 = u64 [s1 + 0x240]\n 29372: u64 [a4 + 0x200] = a5\n 29376: a5 = u64 [s1 + 0x248]\n 29380: u64 [a4 + 0x1f8] = a5\n 29384: a5 = u64 [s1 + 0x250]\n 29388: u64 [a4 + 0x1f0] = a5\n 29392: a5 = u64 [s1 + 0x258]\n 29396: u64 [a4 + 0x1e8] = a5\n 29400: u64 [a4 + 0x220] = a3\n 29404: u64 [a4 + 0x218] = a2\n 29408: u64 [a4 + 0x210] = a1\n 29412: u64 [a4 + 0x208] = a0\n 29416: a0 = s1 + 0x2000\n 29420: i32 a1 = a0 + 0x400\n 29424: a0 = s1 + 0x2000\n 29428: i32 a3 = a0 + 0x420\n 29432: a2 = 0xffffffffffffffff\n 29435: a4 = 0x20\n 29438: a0 = 0\n 29440: ecalli 17 // 'set_storage'\n 29442: a1 = u64 [s1 + 0x298]\n 29446: a1 = a1 + 0x1\n 29449: a0 = a1 <u 0x1\n 29452: a2 = u64 [s1 + 0x290]\n 29456: a2 = a2 + a0\n 29459: u64 [s1 + 0x298] = a1\n 29463: u64 [s1 + 0x290] = a2\n 29467: a0 = a1 | a2\n 29470: a0 = a0 <u 0x1\n 29473: a1 = u64 [s1 + 0x280]\n 29477: a0 = a0 + a1\n 29480: a1 = a0 <u a1\n 29483: a2 = u64 [s1 + 0x288]\n 29487: a2 = a2 + a1\n 29490: u64 [s1 + 0x288] = a2\n 29494: u64 [s1 + 0x280] = a0\n 29498: jump @446\n      : @451 (gas: 52)\n 29501: a1 = s1 + 0x2218\n 29505: a0 = u64 [s1 + 0x208]\n 29509: u64 [a1 + 0x1f8] = a0\n 29513: a0 = u64 [s1 + 0x210]\n 29517: u64 [a1 + 0x1f0] = a0\n 29521: a0 = u64 [s1 + 0x218]\n 29525: u64 [a1 + 0x1e8] = a0\n 29529: a0 = u64 [s1 + 0x200]\n 29533: u64 [a1 + 0x200] = a0\n 29537: u64 [a1 + 544] = 0\n 29541: u64 [a1 + 536] = 0\n 29545: u64 [a1 + 528] = 0\n 29549: u64 [a1 + 520] = 0\n 29553: u32 [a1 + 552] = 0x20\n 29558: a0 = s1 + 0x2000\n 29562: i32 a1 = a0 + 0x400\n 29566: a0 = s1 + 0x2000\n 29570: i32 a3 = a0 + 0x420\n 29574: a0 = s1 + 0x2000\n 29578: i32 a4 = a0 + 0x440\n 29582: a2 = 0xffffffffffffffff\n 29585: a0 = 0\n 29587: ecalli 9 // 'get_storage'\n 29589: a4 = s1 + 0x2218\n 29593: a0 = u64 [a4 + 0x208]\n 29597: a1 = u64 [a4 + 0x210]\n 29601: a2 = u64 [a4 + 0x218]\n 29605: a3 = u64 [a4 + 0x220]\n 29609: a0 = a0 & 0xffffffffffffff00\n 29613: a5 = u64 [s1 + 0x200]\n 29617: u64 [a4 + 0x200] = a5\n 29621: a5 = u64 [s1 + 0x208]\n 29625: u64 [a4 + 0x1f8] = a5\n 29629: a5 = u64 [s1 + 0x210]\n 29633: u64 [a4 + 0x1f0] = a5\n 29637: a5 = u64 [s1 + 0x218]\n 29641: u64 [a4 + 0x1e8] = a5\n 29645: u64 [a4 + 0x220] = a3\n 29649: u64 [a4 + 0x218] = a2\n 29653: u64 [a4 + 0x210] = a1\n 29657: u64 [a4 + 0x208] = a0\n 29661: a0 = s1 + 0x2000\n 29665: i32 a1 = a0 + 0x400\n 29669: a0 = s1 + 0x2000\n 29673: i32 a3 = a0 + 0x420\n 29677: a2 = 0xffffffffffffffff\n 29680: a4 = 0x20\n 29683: a0 = 0\n 29685: ecalli 17 // 'set_storage'\n 29687: a0 = 0x40\n 29690: a1 = 0x20\n 29693: ra = 266, jump @0\n      : @452 [@dyn 133] (gas: 100)\n 29699: a1 = u8 [a0 + 0x11]\n 29702: a2 = u8 [a0 + 0x10]\n 29705: a3 = u8 [a0 + 0x12]\n 29708: a4 = u8 [a0 + 0x13]\n 29711: a1 = a1 << 0x8\n 29714: a1 = a1 | a2\n 29717: a3 = a3 << 0x10\n 29720: a4 = a4 << 0x18\n 29723: a3 = a3 | a4\n 29726: a1 = a1 | a3\n 29729: a2 = u8 [a0 + 0x15]\n 29732: a3 = u8 [a0 + 0x14]\n 29735: a4 = u8 [a0 + 0x16]\n 29738: a5 = u8 [a0 + 0x17]\n 29741: a2 = a2 << 0x8\n 29744: a2 = a2 | a3\n 29747: a4 = a4 << 0x10\n 29750: a5 = a5 << 0x18\n 29753: a4 = a4 | a5\n 29756: a2 = a2 | a4\n 29759: a2 = a2 << 0x20\n 29762: t0 = a2 | a1\n 29765: a2 = u8 [a0 + 0x1]\n 29768: a3 = u8 [a0]\n 29770: a4 = u8 [a0 + 0x2]\n 29773: a5 = u8 [a0 + 0x3]\n 29776: a2 = a2 << 0x8\n 29779: a2 = a2 | a3\n 29782: a4 = a4 << 0x10\n 29785: a5 = a5 << 0x18\n 29788: a4 = a4 | a5\n 29791: a2 = a2 | a4\n 29794: a3 = u8 [a0 + 0x5]\n 29797: a4 = u8 [a0 + 0x4]\n 29800: a5 = u8 [a0 + 0x6]\n 29803: a1 = u8 [a0 + 0x7]\n 29806: a3 = a3 << 0x8\n 29809: a3 = a3 | a4\n 29812: a5 = a5 << 0x10\n 29815: a1 = a1 << 0x18\n 29818: a1 = a1 | a5\n 29821: a1 = a1 | a3\n 29824: a1 = a1 << 0x20\n 29827: t1 = a1 | a2\n 29830: a1 = u8 [a0 + 0x19]\n 29833: a3 = u8 [a0 + 0x18]\n 29836: a4 = u8 [a0 + 0x1a]\n 29839: a5 = u8 [a0 + 0x1b]\n 29842: a1 = a1 << 0x8\n 29845: a1 = a1 | a3\n 29848: a4 = a4 << 0x10\n 29851: a5 = a5 << 0x18\n 29854: a4 = a4 | a5\n 29857: a1 = a1 | a4\n 29860: a3 = u8 [a0 + 0x1d]\n 29863: a4 = u8 [a0 + 0x1c]\n 29866: a5 = u8 [a0 + 0x1e]\n 29869: a2 = u8 [a0 + 0x1f]\n 29872: a3 = a3 << 0x8\n 29875: a3 = a3 | a4\n 29878: a5 = a5 << 0x10\n 29881: a2 = a2 << 0x18\n 29884: a2 = a2 | a5\n 29887: a2 = a2 | a3\n 29890: a2 = a2 << 0x20\n 29893: a3 = a2 | a1\n 29896: a1 = u8 [a0 + 0x9]\n 29899: a2 = u8 [a0 + 0x8]\n 29902: a4 = u8 [a0 + 0xa]\n 29905: a5 = u8 [a0 + 0xb]\n 29908: a1 = a1 << 0x8\n 29911: a1 = a1 | a2\n 29914: a4 = a4 << 0x10\n 29917: a5 = a5 << 0x18\n 29920: a4 = a4 | a5\n 29923: a1 = a1 | a4\n 29926: a2 = u8 [a0 + 0xd]\n 29929: a4 = u8 [a0 + 0xc]\n 29932: a5 = u8 [a0 + 0xe]\n 29935: a0 = u8 [a0 + 0xf]\n 29938: a2 = a2 << 0x8\n 29941: a2 = a2 | a4\n 29944: a5 = a5 << 0x10\n 29947: a0 = a0 << 0x18\n 29950: a0 = a0 | a5\n 29953: a0 = a0 | a2\n 29956: a0 = a0 << 0x20\n 29959: a0 = a0 | a1\n 29962: a4 = reverse a0\n 29964: a2 = reverse a3\n 29966: a5 = reverse t1\n 29968: a3 = reverse t0\n 29970: a0 = a3 | a5\n 29973: a1 = a2 | a4\n 29976: a1 = a1 | a0\n 29979: a1 = a1 >> 0x20\n 29982: a0 = a0 | a4\n 29985: a0 = a0 << 0x20\n 29988: a0 = a0 | a1\n 29991: jump @454 if a0 == 0\n      : @453 (gas: 1)\n 29994: jump @799\n      : @454 (gas: 8)\n 29997: i32 a0 = a2 + 0\n 29999: a1 = 0x20\n 30002: u64 [s1 + 0x278] = a0\n 30006: u64 [s1 + 0x280] = a2\n 30010: u64 [s1 + 0x288] = a3\n 30014: u64 [s1 + 0x290] = a4\n 30018: u64 [s1 + 0x298] = a5\n 30022: ra = 268, jump @0\n      : @455 [@dyn 134] (gas: 60)\n 30028: u8 [a0 + 31] = 0x20\n 30032: u8 [a0 + 30] = 0\n 30035: u8 [a0 + 29] = 0\n 30038: u8 [a0 + 28] = 0\n 30041: u8 [a0 + 27] = 0\n 30044: u8 [a0 + 26] = 0\n 30047: u8 [a0 + 25] = 0\n 30050: u8 [a0 + 24] = 0\n 30053: u8 [a0 + 23] = 0\n 30056: u8 [a0 + 22] = 0\n 30059: u8 [a0 + 21] = 0\n 30062: u8 [a0 + 20] = 0\n 30065: u8 [a0 + 19] = 0\n 30068: u8 [a0 + 18] = 0\n 30071: u8 [a0 + 17] = 0\n 30074: u8 [a0 + 16] = 0\n 30077: u8 [a0 + 15] = 0\n 30080: u8 [a0 + 14] = 0\n 30083: u8 [a0 + 13] = 0\n 30086: u8 [a0 + 12] = 0\n 30089: u8 [a0 + 11] = 0\n 30092: u8 [a0 + 10] = 0\n 30095: u8 [a0 + 9] = 0\n 30098: u8 [a0 + 8] = 0\n 30101: u8 [a0 + 7] = 0\n 30104: u8 [a0 + 6] = 0\n 30107: u8 [a0 + 5] = 0\n 30110: u8 [a0 + 4] = 0\n 30113: u8 [a0 + 3] = 0\n 30116: u8 [a0 + 2] = 0\n 30119: u8 [a0 + 1] = 0\n 30122: u8 [a0 + 0] = 0\n 30124: a1 = u64 [s1 + 0x280]\n 30128: a0 = a1 + 0x20\n 30131: a1 = a0 <u a1\n 30134: a3 = u64 [s1 + 0x288]\n 30138: a2 = a3 + a1\n 30141: a3 = a2 <u a3\n 30144: a3 = a1 if a1 == 0\n 30147: a1 = u64 [s1 + 0x290]\n 30151: a3 = a3 + a1\n 30154: a1 = a3 <u a1\n 30157: a4 = u64 [s1 + 0x298]\n 30161: a4 = a4 + a1\n 30164: u64 [s1 + 0x4e8] = a2\n 30168: u64 [s1 + 0x4e0] = a0\n 30172: a0 = u64 [s1 + 0x1e8]\n 30176: u64 [s1 + 0x518] = a0\n 30180: a0 = u64 [s1 + 0x1e0]\n 30184: u64 [s1 + 0x510] = a0\n 30188: a0 = u64 [s1 + 0x1f0]\n 30192: u64 [s1 + 0x508] = a0\n 30196: a0 = u64 [s1 + 0x1f8]\n 30200: u64 [s1 + 0x500] = a0\n 30204: u64 [s1 + 0x4f0] = a3\n 30208: a0 = s1 + 0x520\n 30212: a1 = s1 + 0x500\n 30216: a2 = s1 + 0x4e0\n 30220: u64 [s1 + 0x4f8] = a4\n 30224: ra = 270, jump @1086\n      : @456 [@dyn 135] (gas: 31)\n 30231: a0 = u64 [s1 + 0x528]\n 30235: t0 = u64 [s1 + 0x538]\n 30239: t1 = u64 [s1 + 0x520]\n 30243: a3 = u64 [s1 + 0x530]\n 30247: a1 = u64 [s1 + 0x288]\n 30251: a4 = a0 ^ a1\n 30254: a5 = a0 <u a1\n 30257: t2 = a1\n 30259: ra = u64 [s1 + 0x280]\n 30263: a1 = t1 <u ra\n 30266: a5 = a1 if a4 == 0\n 30269: a2 = u64 [s1 + 0x290]\n 30273: a4 = a3 - a2\n 30276: a3 = a3 <u a2\n 30279: a2 = u64 [s1 + 0x298]\n 30283: a2 = t0 - a2\n 30286: a2 = a2 - a3\n 30289: a3 = a4 <u a5\n 30292: a2 = a2 - a3\n 30295: a4 = a4 - a5\n 30298: a0 = a0 - t2\n 30301: a0 = a0 - a1\n 30304: a1 = t1 - ra\n 30307: a0 = a0 | a2\n 30310: a2 = a1 | a4\n 30313: a2 = a2 | a0\n 30316: a0 = a0 | a4\n 30319: a2 = a2 >> 0x20\n 30322: a0 = a0 << 0x20\n 30325: a0 = a0 | a2\n 30328: jump @458 if a0 == 0\n      : @457 (gas: 1)\n 30331: jump @799\n      : @458 (gas: 20)\n 30334: a0 = u64 [s1 + 0x220]\n 30338: u64 [s1 + 0x4a0] = a0\n 30342: a0 = u64 [s1 + 0x228]\n 30346: u64 [s1 + 0x4a8] = a0\n 30350: a0 = u64 [0x20080]\n 30355: a2 = u64 [0x20088]\n 30360: a3 = u64 [0x20090]\n 30365: a4 = u64 [0x20098]\n 30370: u64 [s1 + 0x4d8] = a0\n 30374: u64 [s1 + 0x4d0] = a2\n 30378: u64 [s1 + 0x4c8] = a3\n 30382: u64 [s1 + 0x4c0] = a4\n 30386: a0 = u64 [s1 + 0x230]\n 30390: u64 [s1 + 0x4b0] = a0\n 30394: a2 = s1 + 0x4c0\n 30398: a3 = s1 + 0x4a0\n 30402: a0 = u64 [s1 + 0x238]\n 30406: u64 [s1 + 0x4b8] = a0\n 30410: a0 = u64 [s1 + 0x278]\n 30414: ra = 272, jump @26\n      : @459 [@dyn 136] (gas: 3)\n 30420: a0 = 0\n 30422: a1 = 0\n 30424: ra = 274, jump @0\n      : @460 [@dyn 137] (gas: 5)\n 30430: i32 a1 = a0 + 0\n 30432: a0 = 0\n 30434: a2 = 0\n 30436: ecalli 15 // 'seal_return'\n 30438: fallthrough\n      : @461 (gas: 50)\n 30439: a0 = u64 [s1 + 0x190]\n 30443: a0 = a0 + 0x1\n 30446: a1 = a0 <u 0x1\n 30449: a2 = u64 [s1 + 0x188]\n 30453: a1 = a1 + a2\n 30456: a2 = a0 | a1\n 30459: a2 = a2 <u 0x1\n 30462: a3 = u64 [s1 + 0x180]\n 30466: a2 = a2 + a3\n 30469: a3 = a2 <u a3\n 30472: a5 = u64 [s1 + 0x178]\n 30476: a3 = a3 + a5\n 30479: u64 [a4 + 0x1e8] = a0\n 30483: u64 [a4 + 0x1f0] = a1\n 30487: u64 [a4 + 0x1f8] = a2\n 30491: u64 [a4 + 0x200] = a3\n 30495: u64 [a4 + 544] = 0\n 30499: u64 [a4 + 536] = 0\n 30503: u64 [a4 + 528] = 0\n 30507: u64 [a4 + 520] = 0\n 30511: u32 [a4 + 552] = 0x20\n 30516: a0 = s1 + 0x2000\n 30520: i32 a1 = a0 + 0x400\n 30524: a0 = s1 + 0x2000\n 30528: i32 a3 = a0 + 0x420\n 30532: a0 = s1 + 0x2000\n 30536: i32 a4 = a0 + 0x440\n 30540: a2 = 0xffffffffffffffff\n 30543: a0 = 0\n 30545: ecalli 9 // 'get_storage'\n 30547: a1 = s1 + 0x2218\n 30551: a0 = u64 [a1 + 0x208]\n 30555: u64 [s1 + 0x298] = a0\n 30559: a0 = u64 [a1 + 0x210]\n 30563: u64 [s1 + 0x290] = a0\n 30567: a0 = u64 [a1 + 0x218]\n 30571: u64 [s1 + 0x288] = a0\n 30575: a0 = u64 [a1 + 0x220]\n 30579: u64 [s1 + 0x280] = a0\n 30583: a0 = sp + 0xffffffffffffffe0\n 30586: a0 = a0 & 0xffffffffffffffe0\n 30589: u64 [s1 + 0x278] = a0\n 30593: sp = a0\n 30595: u64 [a0 + 24] = 0\n 30598: u64 [a0 + 16] = 0\n 30601: u64 [a0 + 8] = 0\n 30604: u64 [a0 + 0] = 0\n 30606: i32 a0 = a0 + 0\n 30608: ecalli 18 // 'value_transferred'\n 30610: fallthrough\n      : @462 (gas: 21)\n 30611: a1 = u64 [s1 + 0x278]\n 30615: a0 = u64 [a1 + 0x18]\n 30618: t0 = u64 [a1]\n 30620: a2 = u64 [a1 + 0x10]\n 30623: a3 = u64 [a1 + 0x8]\n 30626: a1 = u64 [s1 + 0x280]\n 30630: a4 = a0 ^ a1\n 30633: a1 = a0 <u a1\n 30636: a0 = u64 [s1 + 0x288]\n 30640: a5 = a2 <u a0\n 30643: a5 = a1 if a4 != 0\n 30646: a1 = u64 [s1 + 0x290]\n 30650: t1 = a3 ^ a1\n 30653: a3 = a3 <u a1\n 30656: a1 = u64 [s1 + 0x298]\n 30660: a1 = t0 <u a1\n 30663: a1 = a3 if t1 != 0\n 30666: a0 = a0 ^ a2\n 30669: a0 = a0 | a4\n 30672: a1 = a5 if a0 != 0\n 30675: jump @464 if a1 != 0\n      : @463 (gas: 1)\n 30678: jump @590\n      : @464 (gas: 3)\n 30681: a0 = 0x40\n 30684: a1 = 0x20\n 30687: ra = 276, jump @0\n      : @465 [@dyn 138] (gas: 100)\n 30693: a1 = u8 [a0 + 0x11]\n 30696: a2 = u8 [a0 + 0x10]\n 30699: a3 = u8 [a0 + 0x12]\n 30702: a4 = u8 [a0 + 0x13]\n 30705: a1 = a1 << 0x8\n 30708: a1 = a1 | a2\n 30711: a3 = a3 << 0x10\n 30714: a4 = a4 << 0x18\n 30717: a3 = a3 | a4\n 30720: a1 = a1 | a3\n 30723: a2 = u8 [a0 + 0x15]\n 30726: a3 = u8 [a0 + 0x14]\n 30729: a4 = u8 [a0 + 0x16]\n 30732: a5 = u8 [a0 + 0x17]\n 30735: a2 = a2 << 0x8\n 30738: a2 = a2 | a3\n 30741: a4 = a4 << 0x10\n 30744: a5 = a5 << 0x18\n 30747: a4 = a4 | a5\n 30750: a2 = a2 | a4\n 30753: a2 = a2 << 0x20\n 30756: t0 = a2 | a1\n 30759: a2 = u8 [a0 + 0x1]\n 30762: a3 = u8 [a0]\n 30764: a4 = u8 [a0 + 0x2]\n 30767: a5 = u8 [a0 + 0x3]\n 30770: a2 = a2 << 0x8\n 30773: a2 = a2 | a3\n 30776: a4 = a4 << 0x10\n 30779: a5 = a5 << 0x18\n 30782: a4 = a4 | a5\n 30785: a2 = a2 | a4\n 30788: a3 = u8 [a0 + 0x5]\n 30791: a4 = u8 [a0 + 0x4]\n 30794: a5 = u8 [a0 + 0x6]\n 30797: a1 = u8 [a0 + 0x7]\n 30800: a3 = a3 << 0x8\n 30803: a3 = a3 | a4\n 30806: a5 = a5 << 0x10\n 30809: a1 = a1 << 0x18\n 30812: a1 = a1 | a5\n 30815: a1 = a1 | a3\n 30818: a1 = a1 << 0x20\n 30821: t1 = a1 | a2\n 30824: a1 = u8 [a0 + 0x19]\n 30827: a3 = u8 [a0 + 0x18]\n 30830: a4 = u8 [a0 + 0x1a]\n 30833: a5 = u8 [a0 + 0x1b]\n 30836: a1 = a1 << 0x8\n 30839: a1 = a1 | a3\n 30842: a4 = a4 << 0x10\n 30845: a5 = a5 << 0x18\n 30848: a4 = a4 | a5\n 30851: a1 = a1 | a4\n 30854: a3 = u8 [a0 + 0x1d]\n 30857: a4 = u8 [a0 + 0x1c]\n 30860: a5 = u8 [a0 + 0x1e]\n 30863: a2 = u8 [a0 + 0x1f]\n 30866: a3 = a3 << 0x8\n 30869: a3 = a3 | a4\n 30872: a5 = a5 << 0x10\n 30875: a2 = a2 << 0x18\n 30878: a2 = a2 | a5\n 30881: a2 = a2 | a3\n 30884: a2 = a2 << 0x20\n 30887: a3 = a2 | a1\n 30890: a1 = u8 [a0 + 0x9]\n 30893: a2 = u8 [a0 + 0x8]\n 30896: a4 = u8 [a0 + 0xa]\n 30899: a5 = u8 [a0 + 0xb]\n 30902: a1 = a1 << 0x8\n 30905: a1 = a1 | a2\n 30908: a4 = a4 << 0x10\n 30911: a5 = a5 << 0x18\n 30914: a4 = a4 | a5\n 30917: a1 = a1 | a4\n 30920: a2 = u8 [a0 + 0xd]\n 30923: a4 = u8 [a0 + 0xc]\n 30926: a5 = u8 [a0 + 0xe]\n 30929: a0 = u8 [a0 + 0xf]\n 30932: a2 = a2 << 0x8\n 30935: a2 = a2 | a4\n 30938: a5 = a5 << 0x10\n 30941: a0 = a0 << 0x18\n 30944: a0 = a0 | a5\n 30947: a0 = a0 | a2\n 30950: a0 = a0 << 0x20\n 30953: a0 = a0 | a1\n 30956: a4 = reverse a0\n 30958: a3 = reverse a3\n 30960: a5 = reverse t1\n 30962: a2 = reverse t0\n 30964: a0 = a2 | a5\n 30967: a1 = a3 | a4\n 30970: a1 = a1 | a0\n 30973: a1 = a1 >> 0x20\n 30976: a0 = a0 | a4\n 30979: a0 = a0 << 0x20\n 30982: a0 = a0 | a1\n 30985: jump @467 if a0 == 0\n      : @466 (gas: 1)\n 30988: jump @799\n      : @467 (gas: 8)\n 30991: i32 a0 = a3 + 0\n 30993: a1 = 0x20\n 30996: u64 [s1 + 0x278] = a0\n 31000: u64 [s1 + 0x298] = a2\n 31004: u64 [s1 + 0x290] = a3\n 31008: u64 [s1 + 0x288] = a4\n 31012: u64 [s1 + 0x280] = a5\n 31016: ra = 278, jump @0\n      : @468 [@dyn 139] (gas: 43)\n 31022: u8 [a0 + 31] = 0\n 31025: u8 [a0 + 30] = 0\n 31028: u8 [a0 + 29] = 0\n 31031: u8 [a0 + 28] = 0\n 31034: u8 [a0 + 27] = 0\n 31037: u8 [a0 + 26] = 0\n 31040: u8 [a0 + 25] = 0\n 31043: u8 [a0 + 24] = 0\n 31046: u8 [a0 + 23] = 0\n 31049: u8 [a0 + 22] = 0\n 31052: u8 [a0 + 21] = 0\n 31055: u8 [a0 + 20] = 0\n 31058: u8 [a0 + 19] = 0\n 31061: u8 [a0 + 18] = 0\n 31064: u8 [a0 + 17] = 0\n 31067: u8 [a0 + 16] = 0\n 31070: u8 [a0 + 15] = 0\n 31073: u8 [a0 + 14] = 0\n 31076: u8 [a0 + 13] = 0\n 31079: u8 [a0 + 12] = 0\n 31082: u8 [a0 + 11] = 0\n 31085: u8 [a0 + 10] = 0\n 31088: u8 [a0 + 9] = 0\n 31091: u8 [a0 + 8] = 0\n 31094: u8 [a0 + 7] = 0\n 31097: u8 [a0 + 6] = 0\n 31100: u8 [a0 + 5] = 0\n 31103: u8 [a0 + 3] = 0xa0\n 31108: u8 [a0 + 2] = 0x79\n 31112: u8 [a0 + 1] = 0xc3\n 31117: u8 [a0 + 0] = 0x8\n 31120: a1 = u64 [s1 + 0x288]\n 31124: a3 = u64 [s1 + 0x280]\n 31128: a3 = a3 | a1\n 31131: a4 = 0x100000000\n 31141: a1 = 0xfffffffc\n 31151: a2 = u64 [s1 + 0x290]\n 31155: a1 = a2 <u a1\n 31158: a2 = u64 [s1 + 0x298]\n 31162: a1 = 0 if a2 != 0\n 31164: a1 = 0 if a3 != 0\n 31166: u8 [a0 + 4] = 0\n 31169: jump @470 if a1 != 0\n      : @469 (gas: 1)\n 31172: jump @799\n      : @470 (gas: 6)\n 31175: a0 = u64 [s1 + 0x278]\n 31179: i32 a0 = a0 + 0x4\n 31182: a1 = 0x20\n 31185: u64 [s1 + 0x288] = a3\n 31189: u64 [s1 + 0x280] = a4\n 31193: ra = 280, jump @0\n      : @471 [@dyn 140] (gas: 41)\n 31199: u8 [a0 + 31] = 0x20\n 31203: u8 [a0 + 30] = 0\n 31206: u8 [a0 + 29] = 0\n 31209: u8 [a0 + 28] = 0\n 31212: u8 [a0 + 27] = 0\n 31215: u8 [a0 + 26] = 0\n 31218: u8 [a0 + 25] = 0\n 31221: u8 [a0 + 24] = 0\n 31224: u8 [a0 + 23] = 0\n 31227: u8 [a0 + 22] = 0\n 31230: u8 [a0 + 21] = 0\n 31233: u8 [a0 + 20] = 0\n 31236: u8 [a0 + 19] = 0\n 31239: u8 [a0 + 18] = 0\n 31242: u8 [a0 + 17] = 0\n 31245: u8 [a0 + 16] = 0\n 31248: u8 [a0 + 15] = 0\n 31251: u8 [a0 + 14] = 0\n 31254: u8 [a0 + 13] = 0\n 31257: u8 [a0 + 12] = 0\n 31260: u8 [a0 + 11] = 0\n 31263: u8 [a0 + 10] = 0\n 31266: u8 [a0 + 9] = 0\n 31269: u8 [a0 + 8] = 0\n 31272: u8 [a0 + 7] = 0\n 31275: u8 [a0 + 6] = 0\n 31278: u8 [a0 + 5] = 0\n 31281: u8 [a0 + 4] = 0\n 31284: u8 [a0 + 3] = 0\n 31287: u8 [a0 + 2] = 0\n 31290: u8 [a0 + 1] = 0\n 31293: a1 = u64 [s1 + 0x280]\n 31297: a1 = a1 + 0xffffffffffffffdc\n 31300: a2 = u64 [s1 + 0x290]\n 31304: a1 = a2 <u a1\n 31307: a2 = u64 [s1 + 0x298]\n 31311: a1 = 0 if a2 != 0\n 31313: a2 = u64 [s1 + 0x288]\n 31317: a1 = 0 if a2 != 0\n 31319: u8 [a0 + 0] = 0\n 31321: jump @473 if a1 != 0\n      : @472 (gas: 1)\n 31324: jump @799\n      : @473 (gas: 4)\n 31327: a0 = u64 [s1 + 0x278]\n 31331: i32 a0 = a0 + 0x24\n 31334: a1 = 0x20\n 31337: ra = 282, jump @0\n      : @474 [@dyn 141] (gas: 41)\n 31343: a4 = u64 [s1 + 0x288]\n 31347: a3 = u64 [s1 + 0x290]\n 31351: a2 = u64 [s1 + 0x298]\n 31355: u8 [a0 + 31] = 0x24\n 31359: u8 [a0 + 30] = 0\n 31362: u8 [a0 + 29] = 0\n 31365: u8 [a0 + 28] = 0\n 31368: u8 [a0 + 27] = 0\n 31371: u8 [a0 + 26] = 0\n 31374: u8 [a0 + 25] = 0\n 31377: u8 [a0 + 24] = 0\n 31380: u8 [a0 + 23] = 0\n 31383: u8 [a0 + 22] = 0\n 31386: u8 [a0 + 21] = 0\n 31389: u8 [a0 + 20] = 0\n 31392: u8 [a0 + 19] = 0\n 31395: u8 [a0 + 18] = 0\n 31398: u8 [a0 + 17] = 0\n 31401: u8 [a0 + 16] = 0\n 31404: u8 [a0 + 15] = 0\n 31407: u8 [a0 + 14] = 0\n 31410: u8 [a0 + 13] = 0\n 31413: u8 [a0 + 12] = 0\n 31416: u8 [a0 + 11] = 0\n 31419: u8 [a0 + 10] = 0\n 31422: u8 [a0 + 9] = 0\n 31425: u8 [a0 + 8] = 0\n 31428: u8 [a0 + 7] = 0\n 31431: u8 [a0 + 6] = 0\n 31434: u8 [a0 + 5] = 0\n 31437: u8 [a0 + 4] = 0\n 31440: u8 [a0 + 3] = 0\n 31443: u8 [a0 + 2] = 0\n 31446: u8 [a0 + 1] = 0\n 31449: a5 = 0x100000000\n 31459: a1 = 0xffffffbc\n 31469: a1 = a3 <u a1\n 31472: a1 = 0 if a2 != 0\n 31474: a1 = 0 if a4 != 0\n 31476: u8 [a0 + 0] = 0\n 31478: jump @476 if a1 != 0\n      : @475 (gas: 1)\n 31481: jump @799\n      : @476 (gas: 5)\n 31484: a0 = u64 [s1 + 0x278]\n 31488: i32 a0 = a0 + 0x44\n 31491: a1 = 0x20\n 31494: u64 [s1 + 0x280] = a5\n 31498: ra = 284, jump @0\n      : @477 [@dyn 142] (gas: 42)\n 31504: u8 [a0 + 29] = 0x6c\n 31508: u8 [a0 + 27] = 0x73\n 31512: u8 [a0 + 26] = 0x69\n 31516: u8 [a0 + 22] = 0x79\n 31520: u8 [a0 + 15] = 0x72\n 31524: u8 [a0 + 11] = 0x45\n 31528: u8 [a0 + 25] = 0x68\n 31532: u8 [a0 + 13] = 0x68\n 31536: u8 [a0 + 9] = 0x68\n 31540: u8 [a0 + 8] = 0x67\n 31544: u8 [a0 + 21] = 0x75\n 31548: u8 [a0 + 7] = 0x75\n 31552: u8 [a0 + 5] = 0x6e\n 31556: u8 [a0 + 14] = 0x65\n 31560: u8 [a0 + 4] = 0x65\n 31564: u8 [a0 + 28] = 0x20\n 31568: u8 [a0 + 23] = 0x20\n 31572: u8 [a0 + 19] = 0x20\n 31576: u8 [a0 + 16] = 0x20\n 31580: u8 [a0 + 10] = 0x20\n 31584: u8 [a0 + 3] = 0x20\n 31588: u8 [a0 + 0] = 0x4e\n 31591: a1 = u64 [s1 + 0x280]\n 31595: a1 = a1 + 0xffffffffffffff9c\n 31598: a2 = u64 [s1 + 0x290]\n 31602: a1 = a2 <u a1\n 31605: u8 [a0 + 31] = 0x6f\n 31609: u8 [a0 + 30] = 0x6f\n 31613: a2 = u64 [s1 + 0x298]\n 31617: a1 = 0 if a2 != 0\n 31619: a4 = 0x74\n 31622: u8 [a0 + 0x18] = a4\n 31625: a2 = u64 [s1 + 0x288]\n 31629: a1 = 0 if a2 != 0\n 31631: u8 [a0 + 20] = 0x62\n 31635: u8 [a0 + 18] = 0x6f\n 31639: u8 [a0 + 0x11] = a4\n 31642: u8 [a0 + 0xc] = a4\n 31645: u8 [a0 + 6] = 0x6f\n 31649: u8 [a0 + 0x2] = a4\n 31652: u8 [a0 + 1] = 0x6f\n 31656: jump @479 if a1 != 0\n      : @478 (gas: 1)\n 31659: jump @799\n      : @479 (gas: 4)\n 31662: a0 = u64 [s1 + 0x278]\n 31666: i32 a0 = a0 + 0x64\n 31669: a1 = 0x20\n 31672: ra = 286, jump @0\n      : @480 [@dyn 143] (gas: 35)\n 31678: u8 [a0 + 31] = 0\n 31681: u8 [a0 + 30] = 0\n 31684: u8 [a0 + 29] = 0\n 31687: u8 [a0 + 28] = 0\n 31690: u8 [a0 + 27] = 0\n 31693: u8 [a0 + 26] = 0\n 31696: u8 [a0 + 25] = 0\n 31699: u8 [a0 + 24] = 0\n 31702: u8 [a0 + 23] = 0\n 31705: u8 [a0 + 22] = 0\n 31708: u8 [a0 + 21] = 0\n 31711: u8 [a0 + 20] = 0\n 31714: u8 [a0 + 19] = 0\n 31717: u8 [a0 + 18] = 0\n 31720: u8 [a0 + 17] = 0\n 31723: u8 [a0 + 16] = 0\n 31726: u8 [a0 + 15] = 0\n 31729: u8 [a0 + 14] = 0\n 31732: u8 [a0 + 13] = 0\n 31735: u8 [a0 + 12] = 0\n 31738: u8 [a0 + 11] = 0\n 31741: u8 [a0 + 10] = 0\n 31744: u8 [a0 + 9] = 0\n 31747: u8 [a0 + 8] = 0\n 31750: u8 [a0 + 7] = 0\n 31753: u8 [a0 + 6] = 0\n 31756: u8 [a0 + 5] = 0\n 31759: u8 [a0 + 4] = 0\n 31762: u8 [a0 + 3] = 0x78\n 31766: u8 [a0 + 2] = 0x6f\n 31770: u8 [a0 + 1] = 0x62\n 31774: u8 [a0 + 0] = 0x74\n 31777: a1 = 0x84\n 31781: a0 = u64 [s1 + 0x278]\n 31785: ra = 288, jump @0\n      : @481 [@dyn 144] (gas: 6)\n 31791: i32 a1 = a0 + 0\n 31793: a0 = 0x1\n 31796: a2 = 0x84\n 31800: ecalli 15 // 'seal_return'\n 31802: ecalli 12 // 'ref_time_left'\n 31804: jump @483\n      : @482 (gas: 2)\n 31806: ecalli 12 // 'ref_time_left'\n 31808: fallthrough\n      : @483 (gas: 29)\n 31809: u64 [s1 + 0x278] = a0\n 31813: a0 = u64 [s1 + 0x250]\n 31817: a0 = reverse a0\n 31819: a1 = a0 << 0x20\n 31822: a2 = u64 [s1 + 0x260]\n 31826: a2 = reverse a2\n 31828: a2 = a2 >> 0x20\n 31831: a1 = a1 | a2\n 31834: a2 = u64 [s1 + 0x258]\n 31838: a2 = reverse a2\n 31840: a3 = a2 << 0x20\n 31843: a0 = a0 >> 0x20\n 31846: a0 = a0 | a3\n 31849: a2 = a2 >> 0x20\n 31852: a3 = s1 + 0x1a18\n 31856: u32 [a3 + 0x5d8] = a2\n 31860: u64 [a3 + 0x5d0] = a0\n 31864: u64 [a3 + 0x5c8] = a1\n 31868: a0 = u64 [s1 + 0x280]\n 31872: u64 [a3 + 0x5f0] = a0\n 31876: a0 = u64 [s1 + 0x288]\n 31880: u64 [a3 + 0x5e8] = a0\n 31884: a0 = u64 [s1 + 0x290]\n 31888: u64 [a3 + 0x5f8] = a0\n 31892: a0 = u64 [s1 + 0x298]\n 31896: u64 [a3 + 0x600] = a0\n 31900: a0 = 0\n 31902: a1 = 0\n 31904: ra = 290, jump @0\n      : @484 [@dyn 145] (gas: 4)\n 31910: u64 [s1 + 0x298] = a0\n 31914: a0 = 0\n 31916: a1 = 0\n 31918: ra = 292, jump @0\n      : @485 [@dyn 146] (gas: 35)\n 31924: a3 = s1 + 0x1a18\n 31928: u32 [a3 + 1544] = 0\n 31932: a2 = u64 [s1 + 0x278]\n 31936: a1 = a2 >u 0x8fc\n 31940: a2 = -a1\n 31942: u64 [a3 + 0x640] = a2\n 31946: u64 [a3 + 0x638] = a2\n 31950: u64 [a3 + 0x630] = a2\n 31954: u64 [a3 + 0x628] = a2\n 31958: a2 = s1 + 0x1fe0\n 31962: a2 = a2 << 0x20\n 31965: a2 = a2 >> 0x20\n 31968: a1 = a1 << 0x23\n 31971: t0 = a1 | a2\n 31974: a1 = s1 + 0x2000\n 31978: a1 = a1 << 0x20\n 31981: a1 = a1 >> 0x20\n 31984: a2 = s1 + 0x2040\n 31988: a2 = a2 << 0x20\n 31991: a3 = a2 | a1\n 31994: a4 = u64 [s1 + 0x298]\n 31998: a4 = a4 << 0x20\n 32001: a4 = a4 >> 0x20\n 32004: a0 = a0 << 0x20\n 32007: a0 = a0 >> 0x20\n 32010: a1 = s1 + 0x2020\n 32014: a1 = a1 << 0x20\n 32017: a5 = a1 | a0\n 32020: a1 = 0xffffffffffffffff\n 32023: a2 = 0xffffffffffffffff\n 32026: a0 = t0\n 32028: ecalli 3 // 'call'\n 32030: u64 [s1 + 0x298] = a0\n 32034: ecalli 14 // 'return_data_size'\n 32036: fallthrough\n      : @486 (gas: 2)\n 32037: a2 = u64 [s1 + 0x298]\n 32041: jump @488 if a0 == 0\n      : @487 (gas: 1)\n 32044: jump @624\n      : @488 (gas: 1)\n 32047: jump @459 if a2 == 0\n      : @489 (gas: 3)\n 32051: a0 = 0x40\n 32054: a1 = 0x20\n 32057: ra = 294, jump @0\n      : @490 [@dyn 147] (gas: 100)\n 32063: a1 = u8 [a0 + 0x11]\n 32066: a2 = u8 [a0 + 0x10]\n 32069: a3 = u8 [a0 + 0x12]\n 32072: a4 = u8 [a0 + 0x13]\n 32075: a1 = a1 << 0x8\n 32078: a1 = a1 | a2\n 32081: a3 = a3 << 0x10\n 32084: a4 = a4 << 0x18\n 32087: a3 = a3 | a4\n 32090: a1 = a1 | a3\n 32093: a2 = u8 [a0 + 0x15]\n 32096: a3 = u8 [a0 + 0x14]\n 32099: a4 = u8 [a0 + 0x16]\n 32102: a5 = u8 [a0 + 0x17]\n 32105: a2 = a2 << 0x8\n 32108: a2 = a2 | a3\n 32111: a4 = a4 << 0x10\n 32114: a5 = a5 << 0x18\n 32117: a4 = a4 | a5\n 32120: a2 = a2 | a4\n 32123: a2 = a2 << 0x20\n 32126: t0 = a2 | a1\n 32129: a2 = u8 [a0 + 0x1]\n 32132: a3 = u8 [a0]\n 32134: a4 = u8 [a0 + 0x2]\n 32137: a5 = u8 [a0 + 0x3]\n 32140: a2 = a2 << 0x8\n 32143: a2 = a2 | a3\n 32146: a4 = a4 << 0x10\n 32149: a5 = a5 << 0x18\n 32152: a4 = a4 | a5\n 32155: a2 = a2 | a4\n 32158: a3 = u8 [a0 + 0x5]\n 32161: a4 = u8 [a0 + 0x4]\n 32164: a5 = u8 [a0 + 0x6]\n 32167: a1 = u8 [a0 + 0x7]\n 32170: a3 = a3 << 0x8\n 32173: a3 = a3 | a4\n 32176: a5 = a5 << 0x10\n 32179: a1 = a1 << 0x18\n 32182: a1 = a1 | a5\n 32185: a1 = a1 | a3\n 32188: a1 = a1 << 0x20\n 32191: t1 = a1 | a2\n 32194: a1 = u8 [a0 + 0x19]\n 32197: a3 = u8 [a0 + 0x18]\n 32200: a4 = u8 [a0 + 0x1a]\n 32203: a5 = u8 [a0 + 0x1b]\n 32206: a1 = a1 << 0x8\n 32209: a1 = a1 | a3\n 32212: a4 = a4 << 0x10\n 32215: a5 = a5 << 0x18\n 32218: a4 = a4 | a5\n 32221: a1 = a1 | a4\n 32224: a3 = u8 [a0 + 0x1d]\n 32227: a4 = u8 [a0 + 0x1c]\n 32230: a5 = u8 [a0 + 0x1e]\n 32233: a2 = u8 [a0 + 0x1f]\n 32236: a3 = a3 << 0x8\n 32239: a3 = a3 | a4\n 32242: a5 = a5 << 0x10\n 32245: a2 = a2 << 0x18\n 32248: a2 = a2 | a5\n 32251: a2 = a2 | a3\n 32254: a2 = a2 << 0x20\n 32257: a3 = a2 | a1\n 32260: a1 = u8 [a0 + 0x9]\n 32263: a2 = u8 [a0 + 0x8]\n 32266: a4 = u8 [a0 + 0xa]\n 32269: a5 = u8 [a0 + 0xb]\n 32272: a1 = a1 << 0x8\n 32275: a1 = a1 | a2\n 32278: a4 = a4 << 0x10\n 32281: a5 = a5 << 0x18\n 32284: a4 = a4 | a5\n 32287: a1 = a1 | a4\n 32290: a2 = u8 [a0 + 0xd]\n 32293: a4 = u8 [a0 + 0xc]\n 32296: a5 = u8 [a0 + 0xe]\n 32299: a0 = u8 [a0 + 0xf]\n 32302: a2 = a2 << 0x8\n 32305: a2 = a2 | a4\n 32308: a5 = a5 << 0x10\n 32311: a0 = a0 << 0x18\n 32314: a0 = a0 | a5\n 32317: a0 = a0 | a2\n 32320: a0 = a0 << 0x20\n 32323: a0 = a0 | a1\n 32326: a4 = reverse a0\n 32328: a2 = reverse a3\n 32330: a5 = reverse t1\n 32332: a3 = reverse t0\n 32334: a0 = a3 | a5\n 32337: a1 = a2 | a4\n 32340: a1 = a1 | a0\n 32343: a1 = a1 >> 0x20\n 32346: a0 = a0 | a4\n 32349: a0 = a0 << 0x20\n 32352: a0 = a0 | a1\n 32355: jump @492 if a0 == 0\n      : @491 (gas: 1)\n 32358: jump @799\n      : @492 (gas: 8)\n 32361: i32 a0 = a2 + 0\n 32363: a1 = 0x20\n 32366: u64 [s1 + 0x278] = a0\n 32370: u64 [s1 + 0x298] = a2\n 32374: u64 [s1 + 0x290] = a3\n 32378: u64 [s1 + 0x288] = a4\n 32382: u64 [s1 + 0x280] = a5\n 32386: ra = 296, jump @0\n      : @493 [@dyn 148] (gas: 43)\n 32392: u8 [a0 + 31] = 0\n 32395: u8 [a0 + 30] = 0\n 32398: u8 [a0 + 29] = 0\n 32401: u8 [a0 + 28] = 0\n 32404: u8 [a0 + 27] = 0\n 32407: u8 [a0 + 26] = 0\n 32410: u8 [a0 + 25] = 0\n 32413: u8 [a0 + 24] = 0\n 32416: u8 [a0 + 23] = 0\n 32419: u8 [a0 + 22] = 0\n 32422: u8 [a0 + 21] = 0\n 32425: u8 [a0 + 20] = 0\n 32428: u8 [a0 + 19] = 0\n 32431: u8 [a0 + 18] = 0\n 32434: u8 [a0 + 17] = 0\n 32437: u8 [a0 + 16] = 0\n 32440: u8 [a0 + 15] = 0\n 32443: u8 [a0 + 14] = 0\n 32446: u8 [a0 + 13] = 0\n 32449: u8 [a0 + 12] = 0\n 32452: u8 [a0 + 11] = 0\n 32455: u8 [a0 + 10] = 0\n 32458: u8 [a0 + 9] = 0\n 32461: u8 [a0 + 8] = 0\n 32464: u8 [a0 + 7] = 0\n 32467: u8 [a0 + 6] = 0\n 32470: u8 [a0 + 5] = 0\n 32473: u8 [a0 + 3] = 0xa0\n 32478: u8 [a0 + 2] = 0x79\n 32482: u8 [a0 + 1] = 0xc3\n 32487: u8 [a0 + 0] = 0x8\n 32490: a1 = u64 [s1 + 0x288]\n 32494: a3 = u64 [s1 + 0x280]\n 32498: a3 = a3 | a1\n 32501: a4 = 0x100000000\n 32511: a1 = 0xfffffffc\n 32521: a2 = u64 [s1 + 0x298]\n 32525: a1 = a2 <u a1\n 32528: a2 = u64 [s1 + 0x290]\n 32532: a1 = 0 if a2 != 0\n 32534: a1 = 0 if a3 != 0\n 32536: u8 [a0 + 4] = 0\n 32539: jump @495 if a1 != 0\n      : @494 (gas: 1)\n 32542: jump @799\n      : @495 (gas: 6)\n 32545: a0 = u64 [s1 + 0x278]\n 32549: i32 a0 = a0 + 0x4\n 32552: a1 = 0x20\n 32555: u64 [s1 + 0x288] = a3\n 32559: u64 [s1 + 0x280] = a4\n 32563: ra = 298, jump @0\n      : @496 [@dyn 149] (gas: 41)\n 32569: a4 = u64 [s1 + 0x288]\n 32573: a3 = u64 [s1 + 0x290]\n 32577: a2 = u64 [s1 + 0x298]\n 32581: u8 [a0 + 31] = 0x20\n 32585: u8 [a0 + 30] = 0\n 32588: u8 [a0 + 29] = 0\n 32591: u8 [a0 + 28] = 0\n 32594: u8 [a0 + 27] = 0\n 32597: u8 [a0 + 26] = 0\n 32600: u8 [a0 + 25] = 0\n 32603: u8 [a0 + 24] = 0\n 32606: u8 [a0 + 23] = 0\n 32609: u8 [a0 + 22] = 0\n 32612: u8 [a0 + 21] = 0\n 32615: u8 [a0 + 20] = 0\n 32618: u8 [a0 + 19] = 0\n 32621: u8 [a0 + 18] = 0\n 32624: u8 [a0 + 17] = 0\n 32627: u8 [a0 + 16] = 0\n 32630: u8 [a0 + 15] = 0\n 32633: u8 [a0 + 14] = 0\n 32636: u8 [a0 + 13] = 0\n 32639: u8 [a0 + 12] = 0\n 32642: u8 [a0 + 11] = 0\n 32645: u8 [a0 + 10] = 0\n 32648: u8 [a0 + 9] = 0\n 32651: u8 [a0 + 8] = 0\n 32654: u8 [a0 + 7] = 0\n 32657: u8 [a0 + 6] = 0\n 32660: u8 [a0 + 5] = 0\n 32663: u8 [a0 + 4] = 0\n 32666: u8 [a0 + 3] = 0\n 32669: u8 [a0 + 2] = 0\n 32672: u8 [a0 + 1] = 0\n 32675: a1 = u64 [s1 + 0x280]\n 32679: a1 = a1 + 0xffffffffffffffdc\n 32682: a1 = a2 <u a1\n 32685: a1 = 0 if a3 != 0\n 32687: a1 = 0 if a4 != 0\n 32689: u8 [a0 + 0] = 0\n 32691: jump @498 if a1 != 0\n      : @497 (gas: 1)\n 32694: jump @799\n      : @498 (gas: 4)\n 32697: a0 = u64 [s1 + 0x278]\n 32701: i32 a0 = a0 + 0x24\n 32704: a1 = 0x20\n 32707: ra = 300, jump @0\n      : @499 [@dyn 150] (gas: 40)\n 32713: u8 [a0 + 31] = 0x18\n 32717: u8 [a0 + 30] = 0\n 32720: u8 [a0 + 29] = 0\n 32723: u8 [a0 + 28] = 0\n 32726: u8 [a0 + 27] = 0\n 32729: u8 [a0 + 26] = 0\n 32732: u8 [a0 + 25] = 0\n 32735: u8 [a0 + 24] = 0\n 32738: u8 [a0 + 23] = 0\n 32741: u8 [a0 + 22] = 0\n 32744: u8 [a0 + 21] = 0\n 32747: u8 [a0 + 20] = 0\n 32750: u8 [a0 + 19] = 0\n 32753: u8 [a0 + 18] = 0\n 32756: u8 [a0 + 17] = 0\n 32759: u8 [a0 + 16] = 0\n 32762: u8 [a0 + 15] = 0\n 32765: u8 [a0 + 14] = 0\n 32768: u8 [a0 + 13] = 0\n 32771: u8 [a0 + 12] = 0\n 32774: u8 [a0 + 11] = 0\n 32777: u8 [a0 + 10] = 0\n 32780: u8 [a0 + 9] = 0\n 32783: u8 [a0 + 8] = 0\n 32786: u8 [a0 + 7] = 0\n 32789: u8 [a0 + 6] = 0\n 32792: u8 [a0 + 5] = 0\n 32795: u8 [a0 + 4] = 0\n 32798: u8 [a0 + 3] = 0\n 32801: u8 [a0 + 2] = 0\n 32804: u8 [a0 + 1] = 0\n 32807: a1 = 0xffffffbc\n 32817: a2 = u64 [s1 + 0x298]\n 32821: a1 = a2 <u a1\n 32824: a2 = u64 [s1 + 0x290]\n 32828: a1 = 0 if a2 != 0\n 32830: a2 = u64 [s1 + 0x288]\n 32834: a1 = 0 if a2 != 0\n 32836: u8 [a0 + 0] = 0\n 32838: jump @501 if a1 != 0\n      : @500 (gas: 1)\n 32841: jump @799\n      : @501 (gas: 4)\n 32844: a0 = u64 [s1 + 0x278]\n 32848: i32 a0 = a0 + 0x44\n 32851: a1 = 0x20\n 32854: ra = 302, jump @0\n      : @502 [@dyn 151] (gas: 37)\n 32861: u8 [a0 + 31] = 0\n 32864: u8 [a0 + 30] = 0\n 32867: u8 [a0 + 29] = 0\n 32870: u8 [a0 + 28] = 0\n 32873: u8 [a0 + 27] = 0\n 32876: u8 [a0 + 26] = 0\n 32879: u8 [a0 + 25] = 0\n 32882: u8 [a0 + 24] = 0\n 32885: t0 = 0x64\n 32888: u8 [a0 + 0x17] = t0\n 32891: u8 [a0 + 22] = 0x65\n 32895: u8 [a0 + 21] = 0x6c\n 32899: t1 = 0x69\n 32902: u8 [a0 + 0x14] = t1\n 32905: a4 = 0x61\n 32908: u8 [a0 + 0x13] = a4\n 32911: u8 [a0 + 18] = 0x66\n 32915: u8 [a0 + 17] = 0x20\n 32919: u8 [a0 + 16] = 0x72\n 32923: u8 [a0 + 15] = 0x65\n 32927: u8 [a0 + 14] = 0x66\n 32931: u8 [a0 + 13] = 0x73\n 32935: u8 [a0 + 12] = 0x6e\n 32939: u8 [a0 + 0xb] = a4\n 32942: u8 [a0 + 10] = 0x72\n 32946: u8 [a0 + 9] = 0x74\n 32950: u8 [a0 + 8] = 0x20\n 32954: a5 = 0x77\n 32957: u8 [a0 + 0x7] = a5\n 32960: u8 [a0 + 0x6] = a4\n 32963: u8 [a0 + 5] = 0x72\n 32967: u8 [a0 + 0x4] = t0\n 32970: u8 [a0 + 3] = 0x68\n 32974: u8 [a0 + 2] = 0x74\n 32978: u8 [a0 + 0x1] = t1\n 32981: u8 [a0 + 0] = 0x57\n 32984: jump @747\n      : @503 (gas: 3)\n 32987: a0 = 0x40\n 32990: a1 = 0x20\n 32993: ra = 304, jump @0\n      : @504 [@dyn 152] (gas: 100)\n 33000: a1 = u8 [a0 + 0x11]\n 33003: a2 = u8 [a0 + 0x10]\n 33006: a3 = u8 [a0 + 0x12]\n 33009: a4 = u8 [a0 + 0x13]\n 33012: a1 = a1 << 0x8\n 33015: a1 = a1 | a2\n 33018: a3 = a3 << 0x10\n 33021: a4 = a4 << 0x18\n 33024: a3 = a3 | a4\n 33027: a1 = a1 | a3\n 33030: a2 = u8 [a0 + 0x15]\n 33033: a3 = u8 [a0 + 0x14]\n 33036: a4 = u8 [a0 + 0x16]\n 33039: a5 = u8 [a0 + 0x17]\n 33042: a2 = a2 << 0x8\n 33045: a2 = a2 | a3\n 33048: a4 = a4 << 0x10\n 33051: a5 = a5 << 0x18\n 33054: a4 = a4 | a5\n 33057: a2 = a2 | a4\n 33060: a2 = a2 << 0x20\n 33063: t0 = a2 | a1\n 33066: a2 = u8 [a0 + 0x1]\n 33069: a3 = u8 [a0]\n 33071: a4 = u8 [a0 + 0x2]\n 33074: a5 = u8 [a0 + 0x3]\n 33077: a2 = a2 << 0x8\n 33080: a2 = a2 | a3\n 33083: a4 = a4 << 0x10\n 33086: a5 = a5 << 0x18\n 33089: a4 = a4 | a5\n 33092: a2 = a2 | a4\n 33095: a3 = u8 [a0 + 0x5]\n 33098: a4 = u8 [a0 + 0x4]\n 33101: a5 = u8 [a0 + 0x6]\n 33104: a1 = u8 [a0 + 0x7]\n 33107: a3 = a3 << 0x8\n 33110: a3 = a3 | a4\n 33113: a5 = a5 << 0x10\n 33116: a1 = a1 << 0x18\n 33119: a1 = a1 | a5\n 33122: a1 = a1 | a3\n 33125: a1 = a1 << 0x20\n 33128: t1 = a1 | a2\n 33131: a1 = u8 [a0 + 0x19]\n 33134: a3 = u8 [a0 + 0x18]\n 33137: a4 = u8 [a0 + 0x1a]\n 33140: a5 = u8 [a0 + 0x1b]\n 33143: a1 = a1 << 0x8\n 33146: a1 = a1 | a3\n 33149: a4 = a4 << 0x10\n 33152: a5 = a5 << 0x18\n 33155: a4 = a4 | a5\n 33158: a1 = a1 | a4\n 33161: a3 = u8 [a0 + 0x1d]\n 33164: a4 = u8 [a0 + 0x1c]\n 33167: a5 = u8 [a0 + 0x1e]\n 33170: a2 = u8 [a0 + 0x1f]\n 33173: a3 = a3 << 0x8\n 33176: a3 = a3 | a4\n 33179: a5 = a5 << 0x10\n 33182: a2 = a2 << 0x18\n 33185: a2 = a2 | a5\n 33188: a2 = a2 | a3\n 33191: a2 = a2 << 0x20\n 33194: a3 = a2 | a1\n 33197: a1 = u8 [a0 + 0x9]\n 33200: a2 = u8 [a0 + 0x8]\n 33203: a4 = u8 [a0 + 0xa]\n 33206: a5 = u8 [a0 + 0xb]\n 33209: a1 = a1 << 0x8\n 33212: a1 = a1 | a2\n 33215: a4 = a4 << 0x10\n 33218: a5 = a5 << 0x18\n 33221: a4 = a4 | a5\n 33224: a1 = a1 | a4\n 33227: a2 = u8 [a0 + 0xd]\n 33230: a4 = u8 [a0 + 0xc]\n 33233: a5 = u8 [a0 + 0xe]\n 33236: a0 = u8 [a0 + 0xf]\n 33239: a2 = a2 << 0x8\n 33242: a2 = a2 | a4\n 33245: a5 = a5 << 0x10\n 33248: a0 = a0 << 0x18\n 33251: a0 = a0 | a5\n 33254: a0 = a0 | a2\n 33257: a0 = a0 << 0x20\n 33260: a0 = a0 | a1\n 33263: a4 = reverse a0\n 33265: a2 = reverse a3\n 33267: a5 = reverse t1\n 33269: a3 = reverse t0\n 33271: a0 = a3 | a5\n 33274: a1 = a2 | a4\n 33277: a1 = a1 | a0\n 33280: a1 = a1 >> 0x20\n 33283: a0 = a0 | a4\n 33286: a0 = a0 << 0x20\n 33289: a0 = a0 | a1\n 33292: jump @506 if a0 == 0\n      : @505 (gas: 1)\n 33295: jump @799\n      : @506 (gas: 8)\n 33298: i32 a0 = a2 + 0\n 33300: a1 = 0x20\n 33303: u64 [s1 + 0x278] = a0\n 33307: u64 [s1 + 0x298] = a2\n 33311: u64 [s1 + 0x290] = a3\n 33315: u64 [s1 + 0x288] = a4\n 33319: u64 [s1 + 0x280] = a5\n 33323: ra = 306, jump @0\n      : @507 [@dyn 153] (gas: 43)\n 33330: u8 [a0 + 31] = 0\n 33333: u8 [a0 + 30] = 0\n 33336: u8 [a0 + 29] = 0\n 33339: u8 [a0 + 28] = 0\n 33342: u8 [a0 + 27] = 0\n 33345: u8 [a0 + 26] = 0\n 33348: u8 [a0 + 25] = 0\n 33351: u8 [a0 + 24] = 0\n 33354: u8 [a0 + 23] = 0\n 33357: u8 [a0 + 22] = 0\n 33360: u8 [a0 + 21] = 0\n 33363: u8 [a0 + 20] = 0\n 33366: u8 [a0 + 19] = 0\n 33369: u8 [a0 + 18] = 0\n 33372: u8 [a0 + 17] = 0\n 33375: u8 [a0 + 16] = 0\n 33378: u8 [a0 + 15] = 0\n 33381: u8 [a0 + 14] = 0\n 33384: u8 [a0 + 13] = 0\n 33387: u8 [a0 + 12] = 0\n 33390: u8 [a0 + 11] = 0\n 33393: u8 [a0 + 10] = 0\n 33396: u8 [a0 + 9] = 0\n 33399: u8 [a0 + 8] = 0\n 33402: u8 [a0 + 7] = 0\n 33405: u8 [a0 + 6] = 0\n 33408: u8 [a0 + 5] = 0\n 33411: u8 [a0 + 3] = 0xa0\n 33416: u8 [a0 + 2] = 0x79\n 33420: u8 [a0 + 1] = 0xc3\n 33425: u8 [a0 + 0] = 0x8\n 33428: a1 = u64 [s1 + 0x288]\n 33432: a3 = u64 [s1 + 0x280]\n 33436: a3 = a3 | a1\n 33439: a4 = 0x100000000\n 33449: a1 = 0xfffffffc\n 33459: a2 = u64 [s1 + 0x298]\n 33463: a1 = a2 <u a1\n 33466: a2 = u64 [s1 + 0x290]\n 33470: a1 = 0 if a2 != 0\n 33472: a1 = 0 if a3 != 0\n 33474: u8 [a0 + 4] = 0\n 33477: jump @509 if a1 != 0\n      : @508 (gas: 1)\n 33480: jump @799\n      : @509 (gas: 6)\n 33483: a0 = u64 [s1 + 0x278]\n 33487: i32 a0 = a0 + 0x4\n 33490: a1 = 0x20\n 33493: u64 [s1 + 0x288] = a3\n 33497: u64 [s1 + 0x280] = a4\n 33501: ra = 308, jump @0\n      : @510 [@dyn 154] (gas: 41)\n 33508: a4 = u64 [s1 + 0x288]\n 33512: a3 = u64 [s1 + 0x290]\n 33516: a2 = u64 [s1 + 0x298]\n 33520: u8 [a0 + 31] = 0x20\n 33524: u8 [a0 + 30] = 0\n 33527: u8 [a0 + 29] = 0\n 33530: u8 [a0 + 28] = 0\n 33533: u8 [a0 + 27] = 0\n 33536: u8 [a0 + 26] = 0\n 33539: u8 [a0 + 25] = 0\n 33542: u8 [a0 + 24] = 0\n 33545: u8 [a0 + 23] = 0\n 33548: u8 [a0 + 22] = 0\n 33551: u8 [a0 + 21] = 0\n 33554: u8 [a0 + 20] = 0\n 33557: u8 [a0 + 19] = 0\n 33560: u8 [a0 + 18] = 0\n 33563: u8 [a0 + 17] = 0\n 33566: u8 [a0 + 16] = 0\n 33569: u8 [a0 + 15] = 0\n 33572: u8 [a0 + 14] = 0\n 33575: u8 [a0 + 13] = 0\n 33578: u8 [a0 + 12] = 0\n 33581: u8 [a0 + 11] = 0\n 33584: u8 [a0 + 10] = 0\n 33587: u8 [a0 + 9] = 0\n 33590: u8 [a0 + 8] = 0\n 33593: u8 [a0 + 7] = 0\n 33596: u8 [a0 + 6] = 0\n 33599: u8 [a0 + 5] = 0\n 33602: u8 [a0 + 4] = 0\n 33605: u8 [a0 + 3] = 0\n 33608: u8 [a0 + 2] = 0\n 33611: u8 [a0 + 1] = 0\n 33614: a1 = u64 [s1 + 0x280]\n 33618: a1 = a1 + 0xffffffffffffffdc\n 33621: a1 = a2 <u a1\n 33624: a1 = 0 if a3 != 0\n 33626: a1 = 0 if a4 != 0\n 33628: u8 [a0 + 0] = 0\n 33630: jump @512 if a1 != 0\n      : @511 (gas: 1)\n 33633: jump @799\n      : @512 (gas: 4)\n 33636: a0 = u64 [s1 + 0x278]\n 33640: i32 a0 = a0 + 0x24\n 33643: a1 = 0x20\n 33646: ra = 310, jump @0\n      : @513 [@dyn 155] (gas: 40)\n 33653: u8 [a0 + 31] = 0xe\n 33657: u8 [a0 + 30] = 0\n 33660: u8 [a0 + 29] = 0\n 33663: u8 [a0 + 28] = 0\n 33666: u8 [a0 + 27] = 0\n 33669: u8 [a0 + 26] = 0\n 33672: u8 [a0 + 25] = 0\n 33675: u8 [a0 + 24] = 0\n 33678: u8 [a0 + 23] = 0\n 33681: u8 [a0 + 22] = 0\n 33684: u8 [a0 + 21] = 0\n 33687: u8 [a0 + 20] = 0\n 33690: u8 [a0 + 19] = 0\n 33693: u8 [a0 + 18] = 0\n 33696: u8 [a0 + 17] = 0\n 33699: u8 [a0 + 16] = 0\n 33702: u8 [a0 + 15] = 0\n 33705: u8 [a0 + 14] = 0\n 33708: u8 [a0 + 13] = 0\n 33711: u8 [a0 + 12] = 0\n 33714: u8 [a0 + 11] = 0\n 33717: u8 [a0 + 10] = 0\n 33720: u8 [a0 + 9] = 0\n 33723: u8 [a0 + 8] = 0\n 33726: u8 [a0 + 7] = 0\n 33729: u8 [a0 + 6] = 0\n 33732: u8 [a0 + 5] = 0\n 33735: u8 [a0 + 4] = 0\n 33738: u8 [a0 + 3] = 0\n 33741: u8 [a0 + 2] = 0\n 33744: u8 [a0 + 1] = 0\n 33747: a1 = 0xffffffbc\n 33757: a2 = u64 [s1 + 0x298]\n 33761: a1 = a2 <u a1\n 33764: a2 = u64 [s1 + 0x290]\n 33768: a1 = 0 if a2 != 0\n 33770: a2 = u64 [s1 + 0x288]\n 33774: a1 = 0 if a2 != 0\n 33776: u8 [a0 + 0] = 0\n 33778: jump @515 if a1 != 0\n      : @514 (gas: 1)\n 33781: jump @799\n      : @515 (gas: 4)\n 33784: a0 = u64 [s1 + 0x278]\n 33788: i32 a0 = a0 + 0x44\n 33791: a1 = 0x20\n 33794: ra = 312, jump @0\n      : @516 [@dyn 156] (gas: 34)\n 33801: u8 [a0 + 31] = 0\n 33804: u8 [a0 + 30] = 0\n 33807: u8 [a0 + 29] = 0\n 33810: u8 [a0 + 28] = 0\n 33813: u8 [a0 + 27] = 0\n 33816: u8 [a0 + 26] = 0\n 33819: u8 [a0 + 25] = 0\n 33822: u8 [a0 + 24] = 0\n 33825: u8 [a0 + 23] = 0\n 33828: u8 [a0 + 22] = 0\n 33831: u8 [a0 + 21] = 0\n 33834: u8 [a0 + 20] = 0\n 33837: u8 [a0 + 19] = 0\n 33840: u8 [a0 + 18] = 0\n 33843: u8 [a0 + 17] = 0\n 33846: u8 [a0 + 16] = 0\n 33849: u8 [a0 + 15] = 0\n 33852: u8 [a0 + 14] = 0\n 33855: u8 [a0 + 13] = 0x64\n 33859: u8 [a0 + 12] = 0x49\n 33863: u8 [a0 + 11] = 0x6d\n 33867: u8 [a0 + 10] = 0x65\n 33871: u8 [a0 + 9] = 0x74\n 33875: u8 [a0 + 8] = 0x69\n 33879: a4 = 0x20\n 33882: u8 [a0 + 0x7] = a4\n 33885: u8 [a0 + 6] = 0x64\n 33889: u8 [a0 + 5] = 0x69\n 33893: u8 [a0 + 4] = 0x6c\n 33897: u8 [a0 + 3] = 0x61\n 33901: u8 [a0 + 2] = 0x76\n 33905: u8 [a0 + 1] = 0x6e\n 33909: u8 [a0 + 0] = 0x49\n 33912: jump @747\n      : @517 (gas: 9)\n 33915: ra = 0\n 33917: a3 = 0\n 33919: a2 = 0\n 33921: a1 = 0\n 33923: u64 [s1 + 496] = 0\n 33927: u64 [s1 + 504] = 0\n 33931: u64 [s1 + 520] = 0\n 33935: u64 [s1 + 512] = 0\n 33939: fallthrough\n      : @518 (gas: 46)\n 33940: a0 = a2 >> 0x3a\n 33943: u64 [s1 + 0x280] = a1\n 33947: a1 = a1 << 0x6\n 33950: a0 = a0 | a1\n 33953: u64 [s1 + 0x298] = a0\n 33957: a1 = a3 >> 0x3a\n 33960: u64 [s1 + 0x278] = a2\n 33964: a2 = a2 << 0x6\n 33967: a0 = a2 | a1\n 33970: a2 = ra >> 0x3a\n 33973: u64 [s1 + 0x288] = a3\n 33977: a3 = a3 << 0x6\n 33980: t2 = a3 | a2\n 33983: u64 [s1 + 0x290] = ra\n 33987: ra = ra << 0x6\n 33990: a2 = u64 [s1 + 0x250]\n 33994: t1 = ra + a2\n 33997: a2 = t1 <u ra\n 34000: a3 = u64 [s1 + 0x1c0]\n 34004: t0 = t2 + a3\n 34007: a5 = t0 + a2\n 34010: a3 = a5 ^ t2\n 34013: a4 = a5 <u t2\n 34016: a4 = a2 if a3 == 0\n 34019: a2 = u64 [s1 + 0x1b8]\n 34023: a2 = a2 + a0\n 34026: a1 = a2 + a4\n 34029: a3 = a1 <u a2\n 34032: u64 [s1 + 0x248] = a3\n 34036: a4 = a2 <u a0\n 34039: a3 = u64 [s1 + 0x1b0]\n 34043: a0 = u64 [s1 + 0x298]\n 34047: a0 = a0 + a3\n 34050: a3 = a0 + a4\n 34053: a4 = u64 [s1 + 0x248]\n 34057: a4 = a4 + a3\n 34060: a0 = t1 | a1\n 34063: u64 [s1 + 0x220] = a4\n 34067: a4 = a4 | a5\n 34070: a0 = a0 | a4\n 34073: a0 = a0 >> 0x20\n 34076: u64 [s1 + 0x228] = a1\n 34080: a1 = a1 | a4\n 34083: a1 = a1 << 0x20\n 34086: a0 = a0 | a1\n 34089: jump @520 if a0 == 0\n      : @519 (gas: 1)\n 34092: jump @799\n      : @520 (gas: 41)\n 34095: u64 [s1 + 0x210] = a5\n 34099: u64 [s1 + 0x1c8] = a3\n 34103: u64 [s1 + 0x1d0] = a2\n 34107: u64 [s1 + 0x1d8] = t0\n 34111: u64 [s1 + 0x1e0] = ra\n 34115: u64 [s1 + 0x1e8] = t2\n 34119: u64 [s1 + 0x218] = t1\n 34123: i32 a1 = t1 + 0\n 34125: a0 = s1 + 0x2000\n 34129: i32 a0 = a0 + 0x120\n 34133: u64 [s1 + 0x298] = a1\n 34137: ecalli 5 // 'call_data_load'\n 34139: a1 = s1 + 0x1a18\n 34143: a0 = u64 [a1 + 0x708]\n 34147: u64 [s1 + 0x248] = a0\n 34151: a0 = u64 [a1 + 0x710]\n 34155: u64 [s1 + 0x240] = a0\n 34159: a0 = u64 [a1 + 0x718]\n 34163: u64 [s1 + 0x238] = a0\n 34167: a0 = u64 [a1 + 0x720]\n 34171: u64 [s1 + 0x230] = a0\n 34175: a1 = s1 + 0x2218\n 34179: u64 [a1 + 512] = 0\n 34183: u64 [a1 + 504] = 0\n 34187: u64 [a1 + 496] = 0\n 34191: u64 [a1 + 488] = 0x1\n 34196: u64 [a1 + 544] = 0\n 34200: u64 [a1 + 536] = 0\n 34204: u64 [a1 + 528] = 0\n 34208: u64 [a1 + 520] = 0\n 34212: u32 [a1 + 552] = 0x20\n 34217: a0 = s1 + 0x2000\n 34221: i32 a1 = a0 + 0x400\n 34225: a0 = s1 + 0x2000\n 34229: i32 a3 = a0 + 0x420\n 34233: a0 = s1 + 0x2000\n 34237: i32 a4 = a0 + 0x440\n 34241: a2 = 0xffffffffffffffff\n 34244: a0 = 0\n 34246: ecalli 9 // 'get_storage'\n 34248: fallthrough\n      : @521 (gas: 21)\n 34249: a1 = s1 + 0x2218\n 34253: a0 = u64 [a1 + 0x220]\n 34257: t0 = u64 [a1 + 0x208]\n 34261: a2 = u64 [a1 + 0x218]\n 34265: a3 = u64 [a1 + 0x210]\n 34269: a1 = u64 [s1 + 0x230]\n 34273: a4 = a1 ^ a0\n 34276: a1 = a1 <u a0\n 34279: a0 = u64 [s1 + 0x238]\n 34283: a5 = a0 <u a2\n 34286: a5 = a1 if a4 != 0\n 34289: a1 = u64 [s1 + 0x240]\n 34293: t1 = a1 ^ a3\n 34296: a3 = a1 <u a3\n 34299: a1 = u64 [s1 + 0x248]\n 34303: a1 = a1 <u t0\n 34306: a1 = a3 if t1 != 0\n 34309: a0 = a0 ^ a2\n 34312: a0 = a0 | a4\n 34315: a1 = a5 if a0 != 0\n 34318: jump @523 if a1 != 0\n      : @522 (gas: 1)\n 34321: jump @705\n      : @523 (gas: 16)\n 34324: a0 = s1 + 0x2000\n 34328: i32 a0 = a0 + 0x140\n 34332: a1 = u64 [s1 + 0x298]\n 34336: ecalli 5 // 'call_data_load'\n 34338: a0 = s1 + 0x1a18\n 34342: a1 = u64 [a0 + 0x728]\n 34346: u64 [s1 + 0x248] = a1\n 34350: a1 = u64 [a0 + 0x730]\n 34354: u64 [s1 + 0x240] = a1\n 34358: a1 = u64 [a0 + 0x738]\n 34362: u64 [s1 + 0x238] = a1\n 34366: a0 = u64 [a0 + 0x740]\n 34370: u64 [s1 + 0x230] = a0\n 34374: a1 = 0x20\n 34377: a0 = 0\n 34379: ra = 314, jump @0\n      : @524 [@dyn 157] (gas: 71)\n 34386: a1 = u64 [s1 + 0x230]\n 34390: a1 = reverse a1\n 34392: a2 = u64 [s1 + 0x238]\n 34396: a2 = reverse a2\n 34398: a3 = u64 [s1 + 0x240]\n 34402: a3 = reverse a3\n 34404: a4 = u64 [s1 + 0x248]\n 34408: a4 = reverse a4\n 34410: a5 = a4 >> 0x38\n 34413: u8 [a0 + 0x1f] = a5\n 34416: a5 = a4 >> 0x30\n 34419: u8 [a0 + 0x1e] = a5\n 34422: a5 = a4 >> 0x28\n 34425: u8 [a0 + 0x1d] = a5\n 34428: a5 = a4 >> 0x20\n 34431: u8 [a0 + 0x1c] = a5\n 34434: a5 = a4 >> 0x18\n 34437: u8 [a0 + 0x1b] = a5\n 34440: a5 = a4 >> 0x10\n 34443: u8 [a0 + 0x1a] = a5\n 34446: a5 = a4 >> 0x8\n 34449: u8 [a0 + 0x19] = a5\n 34452: u8 [a0 + 0x18] = a4\n 34455: a4 = a3 >> 0x38\n 34458: u8 [a0 + 0x17] = a4\n 34461: a4 = a3 >> 0x30\n 34464: u8 [a0 + 0x16] = a4\n 34467: a4 = a3 >> 0x28\n 34470: u8 [a0 + 0x15] = a4\n 34473: a4 = a3 >> 0x20\n 34476: u8 [a0 + 0x14] = a4\n 34479: a4 = a3 >> 0x18\n 34482: u8 [a0 + 0x13] = a4\n 34485: a4 = a3 >> 0x10\n 34488: u8 [a0 + 0x12] = a4\n 34491: a4 = a3 >> 0x8\n 34494: u8 [a0 + 0x11] = a4\n 34497: u8 [a0 + 0x10] = a3\n 34500: a3 = a2 >> 0x38\n 34503: u8 [a0 + 0xf] = a3\n 34506: a3 = a2 >> 0x30\n 34509: u8 [a0 + 0xe] = a3\n 34512: a3 = a2 >> 0x28\n 34515: u8 [a0 + 0xd] = a3\n 34518: a3 = a2 >> 0x20\n 34521: u8 [a0 + 0xc] = a3\n 34524: a3 = a2 >> 0x18\n 34527: u8 [a0 + 0xb] = a3\n 34530: a3 = a2 >> 0x10\n 34533: u8 [a0 + 0xa] = a3\n 34536: a3 = a2 >> 0x8\n 34539: u8 [a0 + 0x9] = a3\n 34542: u8 [a0 + 0x8] = a2\n 34545: a2 = a1 >> 0x38\n 34548: u8 [a0 + 0x7] = a2\n 34551: a2 = a1 >> 0x30\n 34554: u8 [a0 + 0x6] = a2\n 34557: a2 = a1 >> 0x28\n 34560: u8 [a0 + 0x5] = a2\n 34563: a2 = a1 >> 0x20\n 34566: u8 [a0 + 0x4] = a2\n 34569: a2 = a1 >> 0x18\n 34572: u8 [a0 + 0x3] = a2\n 34575: a2 = a1 >> 0x10\n 34578: u8 [a0 + 0x2] = a2\n 34581: a2 = a1 >> 0x8\n 34584: u8 [a0 + 0x1] = a2\n 34587: u8 [a0] = a1\n 34589: a0 = 0x20\n 34592: a1 = 0x20\n 34595: ra = 316, jump @0\n      : @525 [@dyn 158] (gas: 35)\n 34602: u8 [a0 + 31] = 0x2\n 34606: u8 [a0 + 30] = 0\n 34609: u8 [a0 + 29] = 0\n 34612: u8 [a0 + 28] = 0\n 34615: u8 [a0 + 27] = 0\n 34618: u8 [a0 + 26] = 0\n 34621: u8 [a0 + 25] = 0\n 34624: u8 [a0 + 24] = 0\n 34627: u8 [a0 + 23] = 0\n 34630: u8 [a0 + 22] = 0\n 34633: u8 [a0 + 21] = 0\n 34636: u8 [a0 + 20] = 0\n 34639: u8 [a0 + 19] = 0\n 34642: u8 [a0 + 18] = 0\n 34645: u8 [a0 + 17] = 0\n 34648: u8 [a0 + 16] = 0\n 34651: u8 [a0 + 15] = 0\n 34654: u8 [a0 + 14] = 0\n 34657: u8 [a0 + 13] = 0\n 34660: u8 [a0 + 12] = 0\n 34663: u8 [a0 + 11] = 0\n 34666: u8 [a0 + 10] = 0\n 34669: u8 [a0 + 9] = 0\n 34672: u8 [a0 + 8] = 0\n 34675: u8 [a0 + 7] = 0\n 34678: u8 [a0 + 6] = 0\n 34681: u8 [a0 + 5] = 0\n 34684: u8 [a0 + 4] = 0\n 34687: u8 [a0 + 3] = 0\n 34690: u8 [a0 + 2] = 0\n 34693: u8 [a0 + 1] = 0\n 34696: u8 [a0 + 0] = 0\n 34698: a1 = 0x40\n 34701: a0 = 0\n 34703: ra = 318, jump @0\n      : @526 [@dyn 159] (gas: 37)\n 34710: a1 = sp + 0xffffffffffffffe0\n 34713: a1 = a1 & 0xffffffffffffffe0\n 34716: u64 [s1 + 0x248] = a1\n 34720: sp = a1\n 34722: i32 a0 = a0 + 0\n 34724: i32 a2 = a1 + 0\n 34726: a1 = 0x40\n 34729: ecalli 10 // 'hash_keccak_256'\n 34731: a3 = u64 [s1 + 0x248]\n 34735: a0 = u64 [a3 + 0x18]\n 34738: a1 = u64 [a3 + 0x10]\n 34741: a2 = u64 [a3 + 0x8]\n 34744: a3 = u64 [a3]\n 34746: a0 = reverse a0\n 34748: a1 = reverse a1\n 34750: a2 = reverse a2\n 34752: a3 = reverse a3\n 34754: a4 = s1 + 0x2218\n 34758: u64 [a4 + 0x200] = a3\n 34762: u64 [a4 + 0x1f8] = a2\n 34766: u64 [a4 + 0x1f0] = a1\n 34770: u64 [a4 + 0x1e8] = a0\n 34774: u64 [a4 + 544] = 0\n 34778: u64 [a4 + 536] = 0\n 34782: u64 [a4 + 528] = 0\n 34786: u64 [a4 + 520] = 0\n 34790: u32 [a4 + 552] = 0x20\n 34795: a0 = s1 + 0x2000\n 34799: i32 a1 = a0 + 0x400\n 34803: a0 = s1 + 0x2000\n 34807: i32 a3 = a0 + 0x420\n 34811: a0 = s1 + 0x2000\n 34815: i32 a4 = a0 + 0x440\n 34819: a2 = 0xffffffffffffffff\n 34822: a0 = 0\n 34824: ecalli 9 // 'get_storage'\n 34826: fallthrough\n      : @527 (gas: 3)\n 34827: a0 = s1 + 0x2218\n 34831: a0 = u8 [a0 + 0x208]\n 34835: jump @529 if a0 == 0\n      : @528 (gas: 1)\n 34838: jump @719\n      : @529 (gas: 10)\n 34841: a0 = u64 [s1 + 0x228]\n 34845: a1 = u64 [s1 + 0x220]\n 34849: a0 = a0 | a1\n 34852: a1 = 0xffffffe0\n 34862: a2 = u64 [s1 + 0x218]\n 34866: a1 = a2 <u a1\n 34869: a2 = u64 [s1 + 0x210]\n 34873: a1 = 0 if a2 != 0\n 34875: a1 = 0 if a0 != 0\n 34877: jump @531 if a1 != 0\n      : @530 (gas: 1)\n 34880: jump @799\n      : @531 (gas: 6)\n 34883: a0 = u64 [s1 + 0x298]\n 34887: i32 a1 = a0 + 0x20\n 34890: a0 = s1 + 0x2000\n 34894: i32 a0 = a0 + 0x160\n 34898: ecalli 5 // 'call_data_load'\n 34900: fallthrough\n      : @532 (gas: 9)\n 34901: a3 = s1 + 0x1a18\n 34905: a0 = u64 [a3 + 0x758]\n 34909: a1 = u64 [a3 + 0x760]\n 34913: a2 = u64 [a3 + 0x750]\n 34917: a3 = u64 [a3 + 0x748]\n 34921: a1 = a1 | a2\n 34924: a0 = a0 | a3\n 34927: a0 = a0 | a1\n 34930: jump @534 if a0 != 0\n      : @533 (gas: 1)\n 34933: jump @733\n      : @534 (gas: 20)\n 34936: a0 = s1 + 0x2000\n 34940: i32 a0 = a0 + 0x180\n 34944: a1 = u64 [s1 + 0x298]\n 34948: ecalli 5 // 'call_data_load'\n 34950: a3 = s1 + 0x1a18\n 34954: a2 = u64 [a3 + 0x768]\n 34958: a0 = u64 [a3 + 0x770]\n 34962: a1 = u64 [a3 + 0x778]\n 34966: a3 = u64 [a3 + 0x780]\n 34970: a4 = s1 + 0x7ff\n 34974: a4 = a4 + 0x219\n 34978: u64 [a4 + 0x420] = a3\n 34982: u64 [a4 + 0x418] = a1\n 34986: u64 [a4 + 0x410] = a0\n 34990: a0 = s1 + 0x7ff\n 34994: a0 = a0 + 0x641\n 34998: a1 = s1 + 0x7ff\n 35002: a1 = a1 + 0x621\n 35006: u64 [a4 + 0x408] = a2\n 35010: ra = 320, jump @1048\n      : @535 [@dyn 160] (gas: 65)\n 35017: a3 = s1 + 0x7ff\n 35021: a3 = a3 + 0x219\n 35025: a0 = u64 [a3 + 0x428]\n 35029: a1 = u64 [a3 + 0x440]\n 35033: a2 = u64 [a3 + 0x430]\n 35037: a3 = u64 [a3 + 0x438]\n 35041: a4 = a0 + 0x2\n 35044: u64 [s1 + 0x298] = a4\n 35048: a0 = a4 <u a0\n 35051: a5 = a2 + a0\n 35054: u64 [s1 + 0x248] = a5\n 35058: a2 = a5 <u a2\n 35061: a2 = a0 if a0 == 0\n 35064: a2 = a2 + a3\n 35067: u64 [s1 + 0x240] = a2\n 35071: a0 = a2 <u a3\n 35074: a1 = a1 + a0\n 35077: u64 [s1 + 0x238] = a1\n 35081: a3 = s1 + 0x2218\n 35085: u64 [a3 + 0x1f0] = a5\n 35089: u64 [a3 + 0x1e8] = a4\n 35093: u64 [a3 + 0x1f8] = a2\n 35097: u64 [a3 + 0x200] = a1\n 35101: u64 [a3 + 544] = 0\n 35105: u64 [a3 + 536] = 0\n 35109: u64 [a3 + 528] = 0\n 35113: u64 [a3 + 520] = 0\n 35117: u32 [a3 + 552] = 0x20\n 35122: a0 = s1 + 0x2000\n 35126: i32 a1 = a0 + 0x400\n 35130: a0 = s1 + 0x2000\n 35134: i32 a3 = a0 + 0x420\n 35138: a0 = s1 + 0x2000\n 35142: i32 a4 = a0 + 0x440\n 35146: a2 = 0xffffffffffffffff\n 35149: a0 = 0\n 35151: ecalli 9 // 'get_storage'\n 35153: a4 = s1 + 0x2218\n 35157: a0 = u64 [a4 + 0x208]\n 35161: a1 = u64 [a4 + 0x210]\n 35165: a2 = u64 [a4 + 0x218]\n 35169: a3 = u64 [a4 + 0x220]\n 35173: a0 = a0 & 0xffffffffffffff00\n 35177: a0 = a0 | 0x1\n 35180: a5 = u64 [s1 + 0x238]\n 35184: u64 [a4 + 0x200] = a5\n 35188: a5 = u64 [s1 + 0x240]\n 35192: u64 [a4 + 0x1f8] = a5\n 35196: a5 = u64 [s1 + 0x248]\n 35200: u64 [a4 + 0x1f0] = a5\n 35204: a5 = u64 [s1 + 0x298]\n 35208: u64 [a4 + 0x1e8] = a5\n 35212: u64 [a4 + 0x220] = a3\n 35216: u64 [a4 + 0x218] = a2\n 35220: u64 [a4 + 0x210] = a1\n 35224: u64 [a4 + 0x208] = a0\n 35228: a0 = s1 + 0x2000\n 35232: i32 a1 = a0 + 0x400\n 35236: a0 = s1 + 0x2000\n 35240: i32 a3 = a0 + 0x420\n 35244: a2 = 0xffffffffffffffff\n 35247: a4 = 0x20\n 35250: a0 = 0\n 35252: ecalli 17 // 'set_storage'\n 35254: fallthrough\n      : @536 (gas: 20)\n 35255: a0 = u64 [s1 + 0x258]\n 35259: a1 = u64 [s1 + 0x290]\n 35263: a0 = a1 <u a0\n 35266: a2 = u64 [s1 + 0x260]\n 35270: a3 = u64 [s1 + 0x288]\n 35274: a1 = a3 ^ a2\n 35277: a2 = a3 <u a2\n 35280: a2 = a0 if a1 == 0\n 35283: a4 = u64 [s1 + 0x268]\n 35287: a0 = u64 [s1 + 0x278]\n 35291: t0 = a0 <u a4\n 35294: a3 = u64 [s1 + 0x270]\n 35298: a5 = u64 [s1 + 0x280]\n 35302: a1 = a5 ^ a3\n 35305: a3 = a5 <u a3\n 35308: a3 = t0 if a1 == 0\n 35311: a0 = a0 ^ a4\n 35314: a0 = a0 | a1\n 35317: a3 = a2 if a0 == 0\n 35320: jump @538 if a3 != 0\n      : @537 (gas: 1)\n 35323: jump @896\n      : @538 (gas: 24)\n 35327: a0 = u64 [s1 + 0x1e0]\n 35331: a0 = a0 | 0x20\n 35334: a1 = u64 [s1 + 0x250]\n 35338: a1 = a1 + a0\n 35341: a0 = a1 <u a0\n 35344: a2 = u64 [s1 + 0x1d8]\n 35348: a2 = a2 + a0\n 35351: a4 = u64 [s1 + 0x1e8]\n 35355: a3 = a2 ^ a4\n 35358: a4 = a2 <u a4\n 35361: a4 = a0 if a3 == 0\n 35364: a0 = u64 [s1 + 0x1d0]\n 35368: a4 = a4 + a0\n 35371: a0 = a4 <u a0\n 35374: a3 = u64 [s1 + 0x1c8]\n 35378: a0 = a0 + a3\n 35381: a3 = a1 | a4\n 35384: a0 = a0 | a2\n 35387: a3 = a3 | a0\n 35390: a3 = a3 >> 0x20\n 35393: a0 = a0 | a4\n 35396: a0 = a0 << 0x20\n 35399: a0 = a0 | a3\n 35402: jump @540 if a0 == 0\n      : @539 (gas: 1)\n 35405: jump @799\n      : @540 (gas: 5)\n 35408: i32 a1 = a1 + 0\n 35410: a0 = s1 + 0x2000\n 35414: i32 a0 = a0 + 0x1a0\n 35418: ecalli 5 // 'call_data_load'\n 35420: fallthrough\n      : @541 (gas: 39)\n 35421: t0 = s1 + 0x1a18\n 35425: a0 = u64 [t0 + 0x790]\n 35429: a1 = u64 [t0 + 0x788]\n 35433: a5 = u64 [t0 + 0x7a0]\n 35437: a4 = u64 [t0 + 0x798]\n 35441: a2 = u64 [s1 + 0x1f8]\n 35445: a0 = a0 + a2\n 35448: a3 = u64 [s1 + 0x1f0]\n 35452: a1 = a1 + a3\n 35455: u64 [s1 + 0x298] = a1\n 35459: a1 = a1 <u a3\n 35462: t2 = a0 + a1\n 35465: t0 = t2 ^ a2\n 35468: ra = t2 <u a2\n 35471: a0 = u64 [s1 + 0x208]\n 35475: a4 = a4 + a0\n 35478: a3 = u64 [s1 + 0x200]\n 35482: a2 = a3 + a5\n 35485: a5 = a4 <u a0\n 35488: a2 = a2 + a5\n 35491: a5 = a1\n 35493: a5 = ra if t0 != 0\n 35496: a5 = a5 + a4\n 35499: a4 = a5 <u a4\n 35502: a4 = a4 + a2\n 35505: a1 = a1 ^ 0x1\n 35508: a2 = ra ^ 0x1\n 35511: a1 = a2 if t0 != 0\n 35514: t0 = a5 <u a0\n 35517: a2 = a4 ^ a3\n 35520: u64 [s1 + 0x240] = a4\n 35524: a3 = a4 <u a3\n 35527: a3 = t0 if a2 == 0\n 35530: u64 [s1 + 0x248] = a5\n 35534: a0 = a0 ^ a5\n 35537: a0 = a0 | a2\n 35540: a2 = a3 ^ 0x1\n 35543: a1 = a2 if a0 != 0\n 35546: jump @543 if a1 != 0\n      : @542 (gas: 1)\n 35549: jump @894\n      : @543 (gas: 37)\n 35553: ra = u64 [s1 + 0x290]\n 35557: ra = ra + 0x1\n 35560: a0 = ra <u 0x1\n 35563: a3 = u64 [s1 + 0x288]\n 35567: a3 = a3 + a0\n 35570: a0 = ra | a3\n 35573: a0 = a0 <u 0x1\n 35576: a1 = u64 [s1 + 0x278]\n 35580: a0 = a0 + a1\n 35583: a1 = a0 <u a1\n 35586: a2 = u64 [s1 + 0x280]\n 35590: a2 = a2 + a1\n 35593: a1 = u64 [s1 + 0x258]\n 35597: a1 = ra <u a1\n 35600: a5 = u64 [s1 + 0x260]\n 35604: a4 = a3 ^ a5\n 35607: t0 = a3 <u a5\n 35610: t0 = a1 if a4 == 0\n 35613: a1 = u64 [s1 + 0x268]\n 35617: t1 = a0 <u a1\n 35620: a4 = u64 [s1 + 0x270]\n 35624: a5 = a2 ^ a4\n 35627: a4 = a2 <u a4\n 35630: a4 = t1 if a5 == 0\n 35633: a1 = a1 ^ a0\n 35636: a1 = a1 | a5\n 35639: a4 = t0 if a1 == 0\n 35642: a1 = a2\n 35644: a2 = a0\n 35646: a0 = u64 [s1 + 0x298]\n 35650: u64 [s1 + 0x1f0] = a0\n 35654: u64 [s1 + 0x1f8] = t2\n 35658: a0 = u64 [s1 + 0x248]\n 35662: u64 [s1 + 0x208] = a0\n 35666: a0 = u64 [s1 + 0x240]\n 35670: u64 [s1 + 0x200] = a0\n 35674: jump @518 if a4 != 0\n      : @544 (gas: 4)\n 35678: u64 [s1 + 0x210] = t2\n 35682: a0 = 0x40\n 35685: a1 = 0x20\n 35688: ra = 322, jump @0\n      : @545 [@dyn 161] (gas: 105)\n 35695: a1 = u8 [a0 + 0x1]\n 35698: a2 = u8 [a0]\n 35700: a3 = u8 [a0 + 0x2]\n 35703: a4 = u8 [a0 + 0x3]\n 35706: a1 = a1 << 0x8\n 35709: a1 = a1 | a2\n 35712: a3 = a3 << 0x10\n 35715: a4 = a4 << 0x18\n 35718: a3 = a3 | a4\n 35721: a1 = a1 | a3\n 35724: a2 = u8 [a0 + 0x5]\n 35727: a3 = u8 [a0 + 0x4]\n 35730: a4 = u8 [a0 + 0x6]\n 35733: a5 = u8 [a0 + 0x7]\n 35736: a2 = a2 << 0x8\n 35739: a2 = a2 | a3\n 35742: a4 = a4 << 0x10\n 35745: a5 = a5 << 0x18\n 35748: a4 = a4 | a5\n 35751: a2 = a2 | a4\n 35754: a2 = a2 << 0x20\n 35757: t0 = a2 | a1\n 35760: a2 = u8 [a0 + 0x9]\n 35763: a3 = u8 [a0 + 0x8]\n 35766: a4 = u8 [a0 + 0xa]\n 35769: a5 = u8 [a0 + 0xb]\n 35772: a2 = a2 << 0x8\n 35775: a2 = a2 | a3\n 35778: a4 = a4 << 0x10\n 35781: a5 = a5 << 0x18\n 35784: a4 = a4 | a5\n 35787: a2 = a2 | a4\n 35790: a3 = u8 [a0 + 0xd]\n 35793: a4 = u8 [a0 + 0xc]\n 35796: a5 = u8 [a0 + 0xe]\n 35799: a1 = u8 [a0 + 0xf]\n 35802: a3 = a3 << 0x8\n 35805: a3 = a3 | a4\n 35808: a5 = a5 << 0x10\n 35811: a1 = a1 << 0x18\n 35814: a1 = a1 | a5\n 35817: a1 = a1 | a3\n 35820: a1 = a1 << 0x20\n 35823: t1 = a1 | a2\n 35826: a1 = u8 [a0 + 0x11]\n 35829: a3 = u8 [a0 + 0x10]\n 35832: a4 = u8 [a0 + 0x12]\n 35835: a5 = u8 [a0 + 0x13]\n 35838: a1 = a1 << 0x8\n 35841: a1 = a1 | a3\n 35844: a4 = a4 << 0x10\n 35847: a5 = a5 << 0x18\n 35850: a4 = a4 | a5\n 35853: a1 = a1 | a4\n 35856: a3 = u8 [a0 + 0x15]\n 35859: a4 = u8 [a0 + 0x14]\n 35862: a5 = u8 [a0 + 0x16]\n 35865: a2 = u8 [a0 + 0x17]\n 35868: a3 = a3 << 0x8\n 35871: a3 = a3 | a4\n 35874: a5 = a5 << 0x10\n 35877: a2 = a2 << 0x18\n 35880: a2 = a2 | a5\n 35883: a2 = a2 | a3\n 35886: a2 = a2 << 0x20\n 35889: a3 = a2 | a1\n 35892: a1 = u8 [a0 + 0x19]\n 35895: a2 = u8 [a0 + 0x18]\n 35898: a4 = u8 [a0 + 0x1a]\n 35901: a5 = u8 [a0 + 0x1b]\n 35904: a1 = a1 << 0x8\n 35907: a1 = a1 | a2\n 35910: a4 = a4 << 0x10\n 35913: a5 = a5 << 0x18\n 35916: a4 = a4 | a5\n 35919: a1 = a1 | a4\n 35922: a2 = u8 [a0 + 0x1d]\n 35925: a4 = u8 [a0 + 0x1c]\n 35928: a5 = u8 [a0 + 0x1e]\n 35931: a0 = u8 [a0 + 0x1f]\n 35934: a2 = a2 << 0x8\n 35937: a2 = a2 | a4\n 35940: a5 = a5 << 0x10\n 35943: a0 = a0 << 0x18\n 35946: a0 = a0 | a5\n 35949: a0 = a0 | a2\n 35952: a0 = a0 << 0x20\n 35955: a0 = a0 | a1\n 35958: a2 = reverse a0\n 35960: a3 = reverse a3\n 35962: a4 = reverse t1\n 35964: a5 = reverse t0\n 35966: a0 = a5 >u 0\n 35968: a1 = a4 >u 0\n 35970: a1 = a0 if a5 != 0\n 35973: a0 = a3 >u 0\n 35975: u64 [s1 + 0x290] = a2\n 35979: a2 = a2 <u 0xffffffffffffff80\n 35982: a2 = a2 ^ 0x1\n 35985: u64 [s1 + 0x288] = a3\n 35989: a2 = a0 if a3 != 0\n 35992: a0 = a4 | a5\n 35995: u64 [s1 + 0x218] = a0\n 35999: a2 = a1 if a0 != 0\n 36002: jump @547 if a2 == 0\n      : @546 (gas: 1)\n 36005: jump @938\n      : @547 (gas: 19)\n 36009: a0 = u64 [s1 + 0x290]\n 36013: a1 = a0 + 0x80\n 36017: u64 [s1 + 0x238] = a1\n 36021: a0 = a1 <u a0\n 36024: a1 = u64 [s1 + 0x288]\n 36028: a2 = a1 + a0\n 36031: u64 [s1 + 0x230] = a2\n 36035: a1 = a2 <u a1\n 36038: a1 = a0 if a0 == 0\n 36041: a1 = a1 + a4\n 36044: u64 [s1 + 0x228] = a1\n 36048: a0 = a1 <u a4\n 36051: a0 = a0 + a5\n 36054: u64 [s1 + 0x220] = a0\n 36058: a0 = 0x40\n 36061: a1 = 0x20\n 36064: u64 [s1 + 0x278] = a4\n 36068: u64 [s1 + 0x280] = a5\n 36072: ra = 324, jump @0\n      : @548 [@dyn 162] (gas: 101)\n 36079: a1 = u64 [s1 + 0x220]\n 36083: a1 = reverse a1\n 36085: a2 = u64 [s1 + 0x228]\n 36089: a2 = reverse a2\n 36091: a3 = u64 [s1 + 0x230]\n 36095: a3 = reverse a3\n 36097: a4 = u64 [s1 + 0x238]\n 36101: a4 = reverse a4\n 36103: u8 [a0 + 0x18] = a4\n 36106: a5 = a4 >> 0x38\n 36109: u8 [a0 + 0x1f] = a5\n 36112: a5 = a4 >> 0x30\n 36115: u8 [a0 + 0x1e] = a5\n 36118: a5 = a4 >> 0x28\n 36121: u8 [a0 + 0x1d] = a5\n 36124: a5 = a4 >> 0x20\n 36127: u8 [a0 + 0x1c] = a5\n 36130: a5 = a4 >> 0x18\n 36133: u8 [a0 + 0x1b] = a5\n 36136: a5 = a4 >> 0x10\n 36139: u8 [a0 + 0x1a] = a5\n 36142: a4 = a4 >> 0x8\n 36145: u8 [a0 + 0x19] = a4\n 36148: u8 [a0 + 0x10] = a3\n 36151: a4 = a3 >> 0x38\n 36154: u8 [a0 + 0x17] = a4\n 36157: a4 = a3 >> 0x30\n 36160: u8 [a0 + 0x16] = a4\n 36163: a4 = a3 >> 0x28\n 36166: u8 [a0 + 0x15] = a4\n 36169: a4 = a3 >> 0x20\n 36172: u8 [a0 + 0x14] = a4\n 36175: a4 = a3 >> 0x18\n 36178: u8 [a0 + 0x13] = a4\n 36181: a4 = a3 >> 0x10\n 36184: u8 [a0 + 0x12] = a4\n 36187: a3 = a3 >> 0x8\n 36190: u8 [a0 + 0x11] = a3\n 36193: u8 [a0 + 0x8] = a2\n 36196: a3 = a2 >> 0x38\n 36199: u8 [a0 + 0xf] = a3\n 36202: a3 = a2 >> 0x30\n 36205: u8 [a0 + 0xe] = a3\n 36208: a3 = a2 >> 0x28\n 36211: u8 [a0 + 0xd] = a3\n 36214: a3 = a2 >> 0x20\n 36217: u8 [a0 + 0xc] = a3\n 36220: a3 = a2 >> 0x18\n 36223: u8 [a0 + 0xb] = a3\n 36226: a3 = a2 >> 0x10\n 36229: u8 [a0 + 0xa] = a3\n 36232: a2 = a2 >> 0x8\n 36235: u8 [a0 + 0x9] = a2\n 36238: u8 [a0] = a1\n 36240: a2 = a1 >> 0x38\n 36243: u8 [a0 + 0x7] = a2\n 36246: a2 = a1 >> 0x30\n 36249: u8 [a0 + 0x6] = a2\n 36252: a2 = a1 >> 0x28\n 36255: a3 = a1 >> 0x18\n 36258: u8 [a0 + 0x3] = a3\n 36261: a3 = a1 >> 0x10\n 36264: u8 [a0 + 0x2] = a3\n 36267: a3 = a1 >> 0x8\n 36270: u8 [a0 + 0x1] = a3\n 36273: a3 = u64 [s1 + 0x1a8]\n 36277: a3 = u32 [a3]\n 36279: u8 [a0 + 0x5] = a2\n 36282: a1 = a1 >> 0x20\n 36285: u8 [a0 + 0x4] = a1\n 36288: a5 = s1 + 0x7ff\n 36292: a5 = a5 + 0x219\n 36296: u64 [a5 + 864] = 0\n 36300: u64 [a5 + 856] = 0\n 36304: u64 [a5 + 848] = 0\n 36308: u64 [a5 + 0x348] = a3\n 36312: a0 = u64 [s1 + 0x50]\n 36315: u64 [a5 + 0x380] = a0\n 36319: a0 = u64 [s1 + 0x58]\n 36322: u64 [a5 + 0x378] = a0\n 36326: a0 = u64 [s1 + 0x60]\n 36329: u64 [a5 + 0x370] = a0\n 36333: a0 = u64 [s1 + 0x68]\n 36336: u64 [a5 + 0x368] = a0\n 36340: a0 = u64 [s1 + 0x70]\n 36343: u64 [a5 + 0x3a0] = a0\n 36347: a0 = u64 [s1 + 0x78]\n 36350: u64 [a5 + 0x398] = a0\n 36354: a0 = u64 [s1 + 0x80]\n 36358: u64 [a5 + 0x390] = a0\n 36362: a0 = s1 + 0x7ff\n 36366: a0 = a0 + 0x5c1\n 36370: a1 = s1 + 0x7ff\n 36374: a1 = a1 + 0x5a1\n 36378: a2 = s1 + 0x7ff\n 36382: a2 = a2 + 0x581\n 36386: a3 = s1 + 0x7ff\n 36390: a3 = a3 + 0x561\n 36394: a4 = u64 [s1 + 0x88]\n 36398: u64 [a5 + 0x388] = a4\n 36402: ra = 326, jump @1128\n      : @549 [@dyn 163] (gas: 12)\n 36409: a0 = u64 [s1 + 0x290]\n 36413: a2 = u64 [s1 + 0x278]\n 36417: a0 = a0 | a2\n 36420: a1 = u64 [s1 + 0x288]\n 36424: a3 = u64 [s1 + 0x280]\n 36428: a1 = a1 | a3\n 36431: a0 = a0 | a1\n 36434: a0 = a0 >> 0x20\n 36437: a1 = a1 | a2\n 36440: a1 = a1 << 0x20\n 36443: a0 = a0 | a1\n 36446: jump @551 if a0 == 0\n      : @550 (gas: 1)\n 36449: jump @799\n      : @551 (gas: 14)\n 36452: a0 = s1 + 0x7ff\n 36456: a0 = a0 + 0x219\n 36460: a1 = u64 [a0 + 0x3c0]\n 36464: u64 [s1 + 0x230] = a1\n 36468: a1 = u64 [a0 + 0x3b8]\n 36472: u64 [s1 + 0x238] = a1\n 36476: a1 = u64 [a0 + 0x3b0]\n 36480: u64 [s1 + 0x278] = a1\n 36484: a0 = u64 [a0 + 0x3a8]\n 36488: u64 [s1 + 0x280] = a0\n 36492: a0 = i32 [s1 + 0x290]\n 36496: a1 = 0x20\n 36499: u64 [s1 + 0x228] = a0\n 36503: ra = 328, jump @0\n      : @552 [@dyn 164] (gas: 77)\n 36510: a1 = u64 [s1 + 0x230]\n 36514: a1 = reverse a1\n 36516: a2 = u64 [s1 + 0x238]\n 36520: a2 = reverse a2\n 36522: a3 = u64 [s1 + 0x278]\n 36526: a3 = reverse a3\n 36528: a4 = u64 [s1 + 0x280]\n 36532: a4 = reverse a4\n 36534: a5 = a4 >> 0x38\n 36537: u8 [a0 + 0x1f] = a5\n 36540: a5 = a4 >> 0x30\n 36543: u8 [a0 + 0x1e] = a5\n 36546: a5 = a4 >> 0x28\n 36549: u8 [a0 + 0x1d] = a5\n 36552: a5 = a4 >> 0x20\n 36555: u8 [a0 + 0x1c] = a5\n 36558: a5 = a4 >> 0x18\n 36561: u8 [a0 + 0x1b] = a5\n 36564: a5 = a4 >> 0x10\n 36567: u8 [a0 + 0x1a] = a5\n 36570: a5 = a4 >> 0x8\n 36573: u8 [a0 + 0x19] = a5\n 36576: u8 [a0 + 0x18] = a4\n 36579: u8 [a0 + 0x10] = a3\n 36582: a4 = a3 >> 0x38\n 36585: u8 [a0 + 0x17] = a4\n 36588: a4 = a3 >> 0x30\n 36591: u8 [a0 + 0x16] = a4\n 36594: a4 = a3 >> 0x28\n 36597: u8 [a0 + 0x15] = a4\n 36600: a4 = a3 >> 0x20\n 36603: u8 [a0 + 0x14] = a4\n 36606: a4 = a3 >> 0x18\n 36609: u8 [a0 + 0x13] = a4\n 36612: a4 = a3 >> 0x10\n 36615: u8 [a0 + 0x12] = a4\n 36618: a3 = a3 >> 0x8\n 36621: u8 [a0 + 0x11] = a3\n 36624: u8 [a0 + 0x8] = a2\n 36627: a3 = a2 >> 0x38\n 36630: u8 [a0 + 0xf] = a3\n 36633: a3 = a2 >> 0x30\n 36636: u8 [a0 + 0xe] = a3\n 36639: a3 = a2 >> 0x28\n 36642: u8 [a0 + 0xd] = a3\n 36645: a3 = a2 >> 0x20\n 36648: u8 [a0 + 0xc] = a3\n 36651: a3 = a2 >> 0x18\n 36654: u8 [a0 + 0xb] = a3\n 36657: a3 = a2 >> 0x10\n 36660: u8 [a0 + 0xa] = a3\n 36663: a2 = a2 >> 0x8\n 36666: u8 [a0 + 0x9] = a2\n 36669: u8 [a0] = a1\n 36671: a2 = a1 >> 0x38\n 36674: u8 [a0 + 0x7] = a2\n 36677: a2 = a1 >> 0x30\n 36680: u8 [a0 + 0x6] = a2\n 36683: a2 = a1 >> 0x28\n 36686: u8 [a0 + 0x5] = a2\n 36689: a2 = a1 >> 0x20\n 36692: u8 [a0 + 0x4] = a2\n 36695: a2 = a1 >> 0x18\n 36698: u8 [a0 + 0x3] = a2\n 36701: a2 = a1 >> 0x10\n 36704: u8 [a0 + 0x2] = a2\n 36707: a1 = a1 >> 0x8\n 36710: a4 = 0x100000000\n 36720: a2 = 0xffffffe0\n 36730: a3 = u64 [s1 + 0x290]\n 36734: a2 = a3 <u a2\n 36737: a3 = u64 [s1 + 0x288]\n 36741: a2 = 0 if a3 != 0\n 36743: a3 = u64 [s1 + 0x218]\n 36747: a2 = 0 if a3 != 0\n 36749: u8 [a0 + 0x1] = a1\n 36752: jump @554 if a2 != 0\n      : @553 (gas: 1)\n 36755: jump @799\n      : @554 (gas: 6)\n 36758: a0 = u64 [s1 + 0x290]\n 36762: i32 a0 = a0 + 0x20\n 36765: a1 = 0x20\n 36768: u64 [s1 + 0x1f0] = a0\n 36772: u64 [s1 + 0x280] = a4\n 36776: ra = 330, jump @0\n      : @555 [@dyn 165] (gas: 77)\n 36783: a1 = u64 [s1 + 0x48]\n 36786: a1 = reverse a1\n 36788: a2 = a1 >> 0x38\n 36791: u8 [a0 + 0x1f] = a2\n 36794: a2 = a1 >> 0x30\n 36797: u8 [a0 + 0x1e] = a2\n 36800: a2 = a1 >> 0x28\n 36803: u8 [a0 + 0x1d] = a2\n 36806: a2 = a1 >> 0x20\n 36809: u8 [a0 + 0x1c] = a2\n 36812: a2 = a1 >> 0x18\n 36815: u8 [a0 + 0x1b] = a2\n 36818: a2 = a1 >> 0x10\n 36821: u8 [a0 + 0x1a] = a2\n 36824: a2 = a1 >> 0x8\n 36827: u8 [a0 + 0x19] = a2\n 36830: a2 = u64 [s1 + 0x40]\n 36833: a2 = reverse a2\n 36835: u8 [a0 + 0x18] = a1\n 36838: a1 = a2 >> 0x38\n 36841: u8 [a0 + 0x17] = a1\n 36844: a1 = a2 >> 0x30\n 36847: u8 [a0 + 0x16] = a1\n 36850: a1 = a2 >> 0x28\n 36853: u8 [a0 + 0x15] = a1\n 36856: a1 = a2 >> 0x20\n 36859: u8 [a0 + 0x14] = a1\n 36862: a1 = a2 >> 0x18\n 36865: u8 [a0 + 0x13] = a1\n 36868: a1 = a2 >> 0x10\n 36871: u8 [a0 + 0x12] = a1\n 36874: a1 = u64 [s1 + 0x38]\n 36877: a1 = reverse a1\n 36879: u8 [a0 + 0x10] = a2\n 36882: a2 = a2 >> 0x8\n 36885: u8 [a0 + 0x11] = a2\n 36888: a2 = a1 >> 0x38\n 36891: u8 [a0 + 0xf] = a2\n 36894: a2 = a1 >> 0x30\n 36897: u8 [a0 + 0xe] = a2\n 36900: a2 = a1 >> 0x28\n 36903: u8 [a0 + 0xd] = a2\n 36906: a2 = a1 >> 0x20\n 36909: u8 [a0 + 0xc] = a2\n 36912: a2 = a1 >> 0x18\n 36915: u8 [a0 + 0xb] = a2\n 36918: a2 = a1 >> 0x10\n 36921: u8 [a0 + 0xa] = a2\n 36924: a2 = u64 [s1 + 0x30]\n 36927: a2 = reverse a2\n 36929: u8 [a0 + 0x8] = a1\n 36932: a1 = a1 >> 0x8\n 36935: u8 [a0 + 0x9] = a1\n 36938: a1 = a2 >> 0x38\n 36941: u8 [a0 + 0x7] = a1\n 36944: a1 = a2 >> 0x30\n 36947: u8 [a0 + 0x6] = a1\n 36950: a1 = a2 >> 0x28\n 36953: u8 [a0 + 0x5] = a1\n 36956: a1 = a2 >> 0x20\n 36959: u8 [a0 + 0x4] = a1\n 36962: a1 = a2 >> 0x18\n 36965: u8 [a0 + 0x3] = a1\n 36968: a1 = a2 >> 0x10\n 36971: u8 [a0 + 0x2] = a1\n 36974: u8 [a0] = a2\n 36976: a2 = a2 >> 0x8\n 36979: a1 = u64 [s1 + 0x280]\n 36983: a1 = a1 + 0xffffffffffffffc0\n 36986: a3 = u64 [s1 + 0x290]\n 36990: a1 = a3 <u a1\n 36993: a3 = u64 [s1 + 0x288]\n 36997: a1 = 0 if a3 != 0\n 36999: a3 = u64 [s1 + 0x218]\n 37003: a1 = 0 if a3 != 0\n 37005: u8 [a0 + 0x1] = a2\n 37008: jump @557 if a1 != 0\n      : @556 (gas: 1)\n 37011: jump @799\n      : @557 (gas: 5)\n 37014: a0 = u64 [s1 + 0x290]\n 37018: i32 a0 = a0 + 0x40\n 37021: a1 = 0x20\n 37024: u64 [s1 + 0x1c8] = a0\n 37028: ra = 332, jump @0\n      : @558 [@dyn 166] (gas: 76)\n 37035: a1 = u64 [s1 + 0x240]\n 37039: a1 = reverse a1\n 37041: a2 = u64 [s1 + 0x248]\n 37045: a2 = reverse a2\n 37047: a3 = u64 [s1 + 0x210]\n 37051: a3 = reverse a3\n 37053: a4 = u64 [s1 + 0x298]\n 37057: a4 = reverse a4\n 37059: a5 = a4 >> 0x38\n 37062: u8 [a0 + 0x1f] = a5\n 37065: a5 = a4 >> 0x30\n 37068: u8 [a0 + 0x1e] = a5\n 37071: a5 = a4 >> 0x28\n 37074: u8 [a0 + 0x1d] = a5\n 37077: a5 = a4 >> 0x20\n 37080: u8 [a0 + 0x1c] = a5\n 37083: a5 = a4 >> 0x18\n 37086: u8 [a0 + 0x1b] = a5\n 37089: a5 = a4 >> 0x10\n 37092: u8 [a0 + 0x1a] = a5\n 37095: a5 = a4 >> 0x8\n 37098: u8 [a0 + 0x19] = a5\n 37101: u8 [a0 + 0x18] = a4\n 37104: u8 [a0 + 0x10] = a3\n 37107: a4 = a3 >> 0x38\n 37110: u8 [a0 + 0x17] = a4\n 37113: a4 = a3 >> 0x30\n 37116: u8 [a0 + 0x16] = a4\n 37119: a4 = a3 >> 0x28\n 37122: u8 [a0 + 0x15] = a4\n 37125: a4 = a3 >> 0x20\n 37128: u8 [a0 + 0x14] = a4\n 37131: a4 = a3 >> 0x18\n 37134: u8 [a0 + 0x13] = a4\n 37137: a4 = a3 >> 0x10\n 37140: u8 [a0 + 0x12] = a4\n 37143: a3 = a3 >> 0x8\n 37146: u8 [a0 + 0x11] = a3\n 37149: u8 [a0 + 0x8] = a2\n 37152: a3 = a2 >> 0x38\n 37155: u8 [a0 + 0xf] = a3\n 37158: a3 = a2 >> 0x30\n 37161: u8 [a0 + 0xe] = a3\n 37164: a3 = a2 >> 0x28\n 37167: u8 [a0 + 0xd] = a3\n 37170: a3 = a2 >> 0x20\n 37173: u8 [a0 + 0xc] = a3\n 37176: a3 = a2 >> 0x18\n 37179: u8 [a0 + 0xb] = a3\n 37182: a3 = a2 >> 0x10\n 37185: u8 [a0 + 0xa] = a3\n 37188: a2 = a2 >> 0x8\n 37191: u8 [a0 + 0x9] = a2\n 37194: u8 [a0] = a1\n 37196: a2 = a1 >> 0x38\n 37199: u8 [a0 + 0x7] = a2\n 37202: a2 = a1 >> 0x30\n 37205: u8 [a0 + 0x6] = a2\n 37208: a2 = a1 >> 0x28\n 37211: u8 [a0 + 0x5] = a2\n 37214: a2 = a1 >> 0x20\n 37217: u8 [a0 + 0x4] = a2\n 37220: a2 = a1 >> 0x18\n 37223: u8 [a0 + 0x3] = a2\n 37226: a2 = a1 >> 0x10\n 37229: u8 [a0 + 0x2] = a2\n 37232: a1 = a1 >> 0x8\n 37235: a2 = 0xffffffa0\n 37245: a3 = u64 [s1 + 0x290]\n 37249: a2 = a3 <u a2\n 37252: a3 = u64 [s1 + 0x288]\n 37256: a2 = 0 if a3 != 0\n 37258: a3 = u64 [s1 + 0x218]\n 37262: a2 = 0 if a3 != 0\n 37264: u8 [a0 + 0x1] = a1\n 37267: jump @560 if a2 != 0\n      : @559 (gas: 1)\n 37270: jump @799\n      : @560 (gas: 5)\n 37273: a0 = u64 [s1 + 0x290]\n 37277: i32 a0 = a0 + 0x60\n 37280: a1 = 0x20\n 37283: u64 [s1 + 0x188] = a0\n 37287: ra = 334, jump @0\n      : @561 [@dyn 167] (gas: 44)\n 37294: u8 [a0 + 31] = 0x1\n 37298: u8 [a0 + 30] = 0\n 37301: u8 [a0 + 29] = 0\n 37304: u8 [a0 + 28] = 0\n 37307: u8 [a0 + 27] = 0\n 37310: u8 [a0 + 26] = 0\n 37313: u8 [a0 + 25] = 0\n 37316: u8 [a0 + 24] = 0\n 37319: u8 [a0 + 23] = 0\n 37322: u8 [a0 + 22] = 0\n 37325: u8 [a0 + 21] = 0\n 37328: u8 [a0 + 20] = 0\n 37331: u8 [a0 + 19] = 0\n 37334: u8 [a0 + 18] = 0\n 37337: u8 [a0 + 17] = 0\n 37340: u8 [a0 + 16] = 0\n 37343: u8 [a0 + 15] = 0\n 37346: u8 [a0 + 14] = 0\n 37349: u8 [a0 + 13] = 0\n 37352: u8 [a0 + 12] = 0\n 37355: u8 [a0 + 11] = 0\n 37358: u8 [a0 + 10] = 0\n 37361: u8 [a0 + 9] = 0\n 37364: u8 [a0 + 8] = 0\n 37367: u8 [a0 + 7] = 0\n 37370: u8 [a0 + 6] = 0\n 37373: u8 [a0 + 5] = 0\n 37376: u8 [a0 + 4] = 0\n 37379: u8 [a0 + 3] = 0\n 37382: u8 [a0 + 2] = 0\n 37385: u8 [a0 + 1] = 0\n 37388: u8 [a0 + 0] = 0\n 37390: a0 = s1 + 0x7ff\n 37394: a0 = a0 + 0x219\n 37398: u64 [a0 + 800] = 0\n 37402: u64 [a0 + 792] = 0\n 37406: u64 [a0 + 784] = 0\n 37410: a3 = a0\n 37412: a0 = s1 + 0x7ff\n 37416: a0 = a0 + 0x541\n 37420: a2 = s1 + 0x7ff\n 37424: a2 = a2 + 0x521\n 37428: u64 [a3 + 776] = 0x3\n 37433: ra = 336, jump @25\n      : @562 [@dyn 168] (gas: 9)\n 37440: a2 = s1 + 0x7ff\n 37444: a2 = a2 + 0x219\n 37448: a5 = u64 [a2 + 0x340]\n 37452: a4 = u64 [a2 + 0x338]\n 37456: a3 = u64 [a2 + 0x330]\n 37460: a0 = a4 | a5\n 37463: a1 = a3 <u 0x1\n 37466: a1 = 0 if a0 != 0\n 37468: jump @564 if a1 != 0\n      : @563 (gas: 1)\n 37471: jump @940\n      : @564 (gas: 51)\n 37475: a0 = u64 [a2 + 0x328]\n 37479: u64 [s1 + 0x298] = a0\n 37483: a0 = a0 + 0x1\n 37486: a2 = s1 + 0x2218\n 37490: u64 [a2 + 488] = 0x3\n 37495: a1 = a0 <u 0x1\n 37498: a1 = a1 + a3\n 37501: u64 [a2 + 0x208] = a0\n 37505: a0 = a0 | a1\n 37508: u64 [a2 + 0x210] = a1\n 37512: a0 = a0 <u 0x1\n 37515: a0 = a0 + a4\n 37518: u64 [a2 + 0x218] = a0\n 37522: a0 = a0 <u a4\n 37525: a0 = a0 + a5\n 37528: u64 [a2 + 0x220] = a0\n 37532: u64 [a2 + 512] = 0\n 37536: u64 [a2 + 504] = 0\n 37540: u64 [a2 + 496] = 0\n 37544: a0 = s1 + 0x2000\n 37548: i32 a1 = a0 + 0x400\n 37552: u64 [s1 + 0x290] = a3\n 37556: a0 = s1 + 0x2000\n 37560: i32 a3 = a0 + 0x420\n 37564: a2 = 0xffffffffffffffff\n 37567: u64 [s1 + 0x288] = a4\n 37571: a4 = 0x20\n 37574: a0 = 0\n 37576: u64 [s1 + 0x280] = a5\n 37580: ecalli 17 // 'set_storage'\n 37582: a0 = s1 + 0x7ff\n 37586: a0 = a0 + 0x219\n 37590: a1 = u64 [s1 + 0x280]\n 37594: u64 [a0 + 0x2c0] = a1\n 37598: a0 = s1 + 0x7ff\n 37602: a0 = a0 + 0x219\n 37606: a1 = u64 [s1 + 0x288]\n 37610: u64 [a0 + 0x2b8] = a1\n 37614: a0 = s1 + 0x7ff\n 37618: a0 = a0 + 0x219\n 37622: a1 = u64 [s1 + 0x290]\n 37626: u64 [a0 + 0x2b0] = a1\n 37630: a0 = s1 + 0x7ff\n 37634: a0 = a0 + 0x4e1\n 37638: a1 = s1 + 0x7ff\n 37642: a1 = a1 + 0x4c1\n 37646: a2 = s1 + 0x7ff\n 37650: a2 = a2 + 0x219\n 37654: a3 = u64 [s1 + 0x298]\n 37658: u64 [a2 + 0x2a8] = a3\n 37662: ra = 338, jump @988\n      : @565 [@dyn 169] (gas: 10)\n 37669: a4 = s1 + 0x7ff\n 37673: a4 = a4 + 0x219\n 37677: a0 = u64 [a4 + 0x2f8]\n 37681: a1 = u64 [a4 + 0x300]\n 37685: a2 = u64 [a4 + 0x2f0]\n 37689: a3 = u64 [a4 + 0x2e8]\n 37693: a1 = a1 | a2\n 37696: a0 = a0 | a3\n 37699: a0 = a0 | a1\n 37702: jump @567 if a0 == 0\n      : @566 (gas: 1)\n 37705: jump @942\n      : @567 (gas: 11)\n 37709: a0 = u64 [a4 + 0x2e0]\n 37713: u64 [s1 + 0x1e8] = a0\n 37717: a0 = u64 [a4 + 0x2d8]\n 37721: u64 [s1 + 0x1e0] = a0\n 37725: a0 = u64 [a4 + 0x2d0]\n 37729: u64 [s1 + 0x1d8] = a0\n 37733: a0 = u64 [a4 + 0x2c8]\n 37737: u64 [s1 + 0x1d0] = a0\n 37741: a1 = 0x20\n 37744: a0 = u64 [s1 + 0x228]\n 37748: ra = 340, jump @0\n      : @568 [@dyn 170] (gas: 103)\n 37755: a1 = u8 [a0 + 0x11]\n 37758: a2 = u8 [a0 + 0x10]\n 37761: a3 = u8 [a0 + 0x12]\n 37764: a4 = u8 [a0 + 0x13]\n 37767: a1 = a1 << 0x8\n 37770: a1 = a1 | a2\n 37773: a3 = a3 << 0x10\n 37776: a4 = a4 << 0x18\n 37779: a3 = a3 | a4\n 37782: a1 = a1 | a3\n 37785: a2 = u8 [a0 + 0x15]\n 37788: a3 = u8 [a0 + 0x14]\n 37791: a4 = u8 [a0 + 0x16]\n 37794: a5 = u8 [a0 + 0x17]\n 37797: a2 = a2 << 0x8\n 37800: a2 = a2 | a3\n 37803: a4 = a4 << 0x10\n 37806: a5 = a5 << 0x18\n 37809: a4 = a4 | a5\n 37812: a2 = a2 | a4\n 37815: a2 = a2 << 0x20\n 37818: t0 = a2 | a1\n 37821: a2 = u8 [a0 + 0x1]\n 37824: a3 = u8 [a0]\n 37826: a4 = u8 [a0 + 0x2]\n 37829: a5 = u8 [a0 + 0x3]\n 37832: a2 = a2 << 0x8\n 37835: a2 = a2 | a3\n 37838: a4 = a4 << 0x10\n 37841: a5 = a5 << 0x18\n 37844: a4 = a4 | a5\n 37847: a2 = a2 | a4\n 37850: a3 = u8 [a0 + 0x5]\n 37853: a4 = u8 [a0 + 0x4]\n 37856: a5 = u8 [a0 + 0x6]\n 37859: a1 = u8 [a0 + 0x7]\n 37862: a3 = a3 << 0x8\n 37865: a3 = a3 | a4\n 37868: a5 = a5 << 0x10\n 37871: a1 = a1 << 0x18\n 37874: a1 = a1 | a5\n 37877: a1 = a1 | a3\n 37880: a1 = a1 << 0x20\n 37883: t1 = a1 | a2\n 37886: a1 = u8 [a0 + 0x19]\n 37889: a3 = u8 [a0 + 0x18]\n 37892: a4 = u8 [a0 + 0x1a]\n 37895: a5 = u8 [a0 + 0x1b]\n 37898: a1 = a1 << 0x8\n 37901: a1 = a1 | a3\n 37904: a4 = a4 << 0x10\n 37907: a5 = a5 << 0x18\n 37910: a4 = a4 | a5\n 37913: a1 = a1 | a4\n 37916: a3 = u8 [a0 + 0x1d]\n 37919: a4 = u8 [a0 + 0x1c]\n 37922: a5 = u8 [a0 + 0x1e]\n 37925: a2 = u8 [a0 + 0x1f]\n 37928: a3 = a3 << 0x8\n 37931: a3 = a3 | a4\n 37934: a5 = a5 << 0x10\n 37937: a2 = a2 << 0x18\n 37940: a2 = a2 | a5\n 37943: a2 = a2 | a3\n 37946: a2 = a2 << 0x20\n 37949: a3 = a2 | a1\n 37952: a1 = u8 [a0 + 0x9]\n 37955: a2 = u8 [a0 + 0x8]\n 37958: a4 = u8 [a0 + 0xa]\n 37961: a5 = u8 [a0 + 0xb]\n 37964: a1 = a1 << 0x8\n 37967: a1 = a1 | a2\n 37970: a4 = a4 << 0x10\n 37973: a5 = a5 << 0x18\n 37976: a4 = a4 | a5\n 37979: a1 = a1 | a4\n 37982: a2 = u8 [a0 + 0xd]\n 37985: a4 = u8 [a0 + 0xc]\n 37988: a5 = u8 [a0 + 0xe]\n 37991: a0 = u8 [a0 + 0xf]\n 37994: a2 = a2 << 0x8\n 37997: a2 = a2 | a4\n 38000: a5 = a5 << 0x10\n 38003: a0 = a0 << 0x18\n 38006: a0 = a0 | a5\n 38009: a0 = a0 | a2\n 38012: a0 = a0 << 0x20\n 38015: a0 = a0 | a1\n 38018: a2 = reverse a0\n 38020: a3 = reverse a3\n 38022: a0 = reverse t1\n 38024: a1 = reverse t0\n 38026: u64 [s1 + 0x230] = a0\n 38030: u64 [s1 + 0x220] = a1\n 38034: a0 = a0 | a1\n 38037: a1 = a3 | a2\n 38040: a1 = a1 | a0\n 38043: a1 = a1 >> 0x20\n 38046: u64 [s1 + 0x228] = a2\n 38050: a0 = a0 | a2\n 38053: a0 = a0 << 0x20\n 38056: a0 = a0 | a1\n 38059: jump @570 if a0 == 0\n      : @569 (gas: 1)\n 38062: jump @799\n      : @570 (gas: 5)\n 38065: u64 [s1 + 0x218] = a3\n 38069: i32 a0 = a3 + 0\n 38071: a1 = 0x20\n 38074: u64 [s1 + 0x150] = a0\n 38078: ra = 342, jump @0\n      : @571 [@dyn 171] (gas: 80)\n 38085: a1 = u8 [a0 + 0x9]\n 38088: a2 = u8 [a0 + 0x8]\n 38091: a3 = u8 [a0 + 0xa]\n 38094: a4 = u8 [a0 + 0xb]\n 38097: a1 = a1 << 0x8\n 38100: a1 = a1 | a2\n 38103: a3 = a3 << 0x10\n 38106: a4 = a4 << 0x18\n 38109: a3 = a3 | a4\n 38112: a1 = a1 | a3\n 38115: a2 = u8 [a0 + 0xd]\n 38118: a3 = u8 [a0 + 0xc]\n 38121: a4 = u8 [a0 + 0xe]\n 38124: a5 = u8 [a0 + 0xf]\n 38127: a2 = a2 << 0x8\n 38130: a2 = a2 | a3\n 38133: a4 = a4 << 0x10\n 38136: a5 = a5 << 0x18\n 38139: a4 = a4 | a5\n 38142: a2 = a2 | a4\n 38145: a2 = a2 << 0x20\n 38148: t0 = a2 | a1\n 38151: a1 = u8 [a0 + 0x1]\n 38154: a2 = u8 [a0]\n 38156: a3 = u8 [a0 + 0x2]\n 38159: a4 = u8 [a0 + 0x3]\n 38162: a1 = a1 << 0x8\n 38165: a1 = a1 | a2\n 38168: a3 = a3 << 0x10\n 38171: a4 = a4 << 0x18\n 38174: a3 = a3 | a4\n 38177: a1 = a1 | a3\n 38180: a2 = u8 [a0 + 0x5]\n 38183: a3 = u8 [a0 + 0x4]\n 38186: a4 = u8 [a0 + 0x6]\n 38189: a5 = u8 [a0 + 0x7]\n 38192: a2 = a2 << 0x8\n 38195: a2 = a2 | a3\n 38198: a4 = a4 << 0x10\n 38201: a5 = a5 << 0x18\n 38204: a4 = a4 | a5\n 38207: a2 = a2 | a4\n 38210: a2 = a2 << 0x20\n 38213: t1 = a2 | a1\n 38216: a1 = u8 [a0 + 0x11]\n 38219: a2 = u8 [a0 + 0x10]\n 38222: a3 = u8 [a0 + 0x12]\n 38225: a4 = u8 [a0 + 0x13]\n 38228: a1 = a1 << 0x8\n 38231: a1 = a1 | a2\n 38234: a3 = a3 << 0x10\n 38237: a4 = a4 << 0x18\n 38240: a3 = a3 | a4\n 38243: a1 = a1 | a3\n 38246: a2 = u8 [a0 + 0x15]\n 38249: a3 = u8 [a0 + 0x14]\n 38252: a4 = u8 [a0 + 0x16]\n 38255: a5 = u8 [a0 + 0x17]\n 38258: a2 = a2 << 0x8\n 38261: a2 = a2 | a3\n 38264: a4 = a4 << 0x10\n 38267: a5 = a5 << 0x18\n 38270: a4 = a4 | a5\n 38273: a2 = a2 | a4\n 38276: a2 = a2 << 0x20\n 38279: a1 = a1 | a2\n 38282: u64 [s1 + 0x160] = a1\n 38286: a1 = reverse a1\n 38288: u64 [s1 + 0x168] = t1\n 38292: a3 = reverse t1\n 38294: u64 [s1 + 0x170] = t0\n 38298: a2 = reverse t0\n 38300: u64 [s1 + 0x1a0] = a2\n 38304: u64 [s1 + 0x190] = a3\n 38308: a2 = a2 | a3\n 38311: u64 [s1 + 0x198] = a1\n 38315: a1 = a1 <u 0x1\n 38318: u64 [s1 + 0x210] = a2\n 38322: a1 = 0 if a2 != 0\n 38324: jump @573 if a1 != 0\n      : @572 (gas: 1)\n 38327: jump @944\n      : @573 (gas: 40)\n 38331: a1 = u8 [a0 + 0x19]\n 38334: a2 = u8 [a0 + 0x18]\n 38337: a3 = u8 [a0 + 0x1a]\n 38340: a4 = u8 [a0 + 0x1b]\n 38343: a1 = a1 << 0x8\n 38346: a1 = a1 | a2\n 38349: a3 = a3 << 0x10\n 38352: a4 = a4 << 0x18\n 38355: a3 = a3 | a4\n 38358: a1 = a1 | a3\n 38361: a2 = u8 [a0 + 0x1d]\n 38364: a3 = u8 [a0 + 0x1c]\n 38367: a4 = u8 [a0 + 0x1e]\n 38370: a0 = u8 [a0 + 0x1f]\n 38373: a2 = a2 << 0x8\n 38376: a2 = a2 | a3\n 38379: a4 = a4 << 0x10\n 38382: a0 = a0 << 0x18\n 38385: a0 = a0 | a4\n 38388: a0 = a0 | a2\n 38391: a0 = a0 << 0x20\n 38394: a0 = a0 | a1\n 38397: u64 [s1 + 0x158] = a0\n 38401: a0 = reverse a0\n 38403: u64 [s1 + 0x1a8] = a0\n 38407: a3 = s1 + 0x7ff\n 38411: a3 = a3 + 0x219\n 38415: a0 = u64 [s1 + 0x1d0]\n 38419: u64 [a3 + 0x228] = a0\n 38423: a0 = u64 [s1 + 0x1d8]\n 38427: u64 [a3 + 0x230] = a0\n 38431: a0 = u64 [s1 + 0x1e0]\n 38435: u64 [a3 + 0x238] = a0\n 38439: a0 = s1 + 0x7ff\n 38443: a0 = a0 + 0x461\n 38447: a2 = s1 + 0x7ff\n 38451: a2 = a2 + 0x441\n 38455: a1 = u64 [s1 + 0x1e8]\n 38459: u64 [a3 + 0x240] = a1\n 38463: ra = 344, jump @25\n      : @574 [@dyn 172] (gas: 15)\n 38470: a4 = s1 + 0x7ff\n 38474: a4 = a4 + 0x219\n 38478: a2 = u64 [a4 + 0x248]\n 38482: a0 = u64 [a4 + 0x250]\n 38486: a1 = u64 [a4 + 0x258]\n 38490: a3 = u64 [a4 + 0x260]\n 38494: u64 [a4 + 0x200] = a3\n 38498: u64 [a4 + 0x1f8] = a1\n 38502: u64 [a4 + 0x1f0] = a0\n 38506: a0 = s1 + 0x7ff\n 38510: a0 = a0 + 0x421\n 38514: a1 = s1 + 0x7ff\n 38518: a1 = a1 + 0x401\n 38522: u64 [a4 + 0x1e8] = a2\n 38526: ra = 346, jump @997\n      : @575 [@dyn 173] (gas: 30)\n 38533: a2 = s1 + 0x7ff\n 38537: a2 = a2 + 0x219\n 38541: a0 = u64 [a2 + 0x220]\n 38545: a1 = u64 [a2 + 0x218]\n 38549: a3 = u64 [a2 + 0x208]\n 38553: a2 = u64 [a2 + 0x210]\n 38557: u64 [s1 + 0x288] = a0\n 38561: u64 [s1 + 0x290] = a1\n 38565: a0 = a0 | a1\n 38568: u64 [s1 + 0x280] = a3\n 38572: a1 = a3 <u 0x20\n 38575: u64 [s1 + 0x298] = a2\n 38579: a1 = 0 if a2 != 0\n 38581: a1 = 0 if a0 != 0\n 38583: a0 = u64 [s1 + 0x1e8]\n 38587: a0 = reverse a0\n 38589: u64 [s1 + 0x200] = a0\n 38593: a0 = u64 [s1 + 0x1e0]\n 38597: a0 = reverse a0\n 38599: u64 [s1 + 0x1f8] = a0\n 38603: a0 = u64 [s1 + 0x1d8]\n 38607: a0 = reverse a0\n 38609: u64 [s1 + 0x180] = a0\n 38613: a0 = u64 [s1 + 0x1d0]\n 38617: a0 = reverse a0\n 38619: u64 [s1 + 0x178] = a0\n 38623: a0 = u64 [s1 + 0x1a8]\n 38627: a0 = a0 <u 0x20\n 38630: u64 [s1 + 0x208] = a0\n 38634: jump @582 if a1 != 0\n      : @576 (gas: 3)\n 38638: a1 = 0x20\n 38641: a0 = 0\n 38643: ra = 348, jump @0\n      : @577 [@dyn 174] (gas: 67)\n 38650: a2 = u64 [s1 + 0x178]\n 38654: u8 [a0 + 0x18] = a2\n 38657: a1 = a2 >> 0x38\n 38660: u8 [a0 + 0x1f] = a1\n 38663: a1 = a2 >> 0x30\n 38666: u8 [a0 + 0x1e] = a1\n 38669: a1 = a2 >> 0x28\n 38672: u8 [a0 + 0x1d] = a1\n 38675: a1 = a2 >> 0x20\n 38678: u8 [a0 + 0x1c] = a1\n 38681: a1 = a2 >> 0x18\n 38684: u8 [a0 + 0x1b] = a1\n 38687: a1 = a2 >> 0x10\n 38690: u8 [a0 + 0x1a] = a1\n 38693: a1 = a2 >> 0x8\n 38696: u8 [a0 + 0x19] = a1\n 38699: a2 = u64 [s1 + 0x180]\n 38703: u8 [a0 + 0x10] = a2\n 38706: a1 = a2 >> 0x38\n 38709: u8 [a0 + 0x17] = a1\n 38712: a1 = a2 >> 0x30\n 38715: u8 [a0 + 0x16] = a1\n 38718: a1 = a2 >> 0x28\n 38721: u8 [a0 + 0x15] = a1\n 38724: a1 = a2 >> 0x20\n 38727: u8 [a0 + 0x14] = a1\n 38730: a1 = a2 >> 0x18\n 38733: u8 [a0 + 0x13] = a1\n 38736: a1 = a2 >> 0x10\n 38739: u8 [a0 + 0x12] = a1\n 38742: a1 = a2 >> 0x8\n 38745: u8 [a0 + 0x11] = a1\n 38748: a2 = u64 [s1 + 0x1f8]\n 38752: u8 [a0 + 0x8] = a2\n 38755: a1 = a2 >> 0x38\n 38758: u8 [a0 + 0xf] = a1\n 38761: a1 = a2 >> 0x30\n 38764: u8 [a0 + 0xe] = a1\n 38767: a1 = a2 >> 0x28\n 38770: u8 [a0 + 0xd] = a1\n 38773: a1 = a2 >> 0x20\n 38776: u8 [a0 + 0xc] = a1\n 38779: a1 = a2 >> 0x18\n 38782: u8 [a0 + 0xb] = a1\n 38785: a1 = a2 >> 0x10\n 38788: u8 [a0 + 0xa] = a1\n 38791: a1 = a2 >> 0x8\n 38794: u8 [a0 + 0x9] = a1\n 38797: a2 = u64 [s1 + 0x200]\n 38801: u8 [a0] = a2\n 38803: a1 = a2 >> 0x38\n 38806: u8 [a0 + 0x7] = a1\n 38809: a1 = a2 >> 0x30\n 38812: u8 [a0 + 0x6] = a1\n 38815: a1 = a2 >> 0x28\n 38818: u8 [a0 + 0x5] = a1\n 38821: a1 = a2 >> 0x20\n 38824: u8 [a0 + 0x4] = a1\n 38827: a1 = a2 >> 0x18\n 38830: u8 [a0 + 0x3] = a1\n 38833: a1 = a2 >> 0x10\n 38836: u8 [a0 + 0x2] = a1\n 38839: a1 = a2 >> 0x8\n 38842: u8 [a0 + 0x1] = a1\n 38845: a1 = 0x20\n 38848: a0 = 0\n 38850: ra = 350, jump @0\n      : @578 [@dyn 175] (gas: 9)\n 38857: a1 = sp + 0xffffffffffffffe0\n 38860: a1 = a1 & 0xffffffffffffffe0\n 38863: u64 [s1 + 0x240] = a1\n 38867: sp = a1\n 38869: i32 a0 = a0 + 0\n 38871: i32 a2 = a1 + 0\n 38873: a1 = 0x20\n 38876: ecalli 10 // 'hash_keccak_256'\n 38878: fallthrough\n      : @579 (gas: 117)\n 38879: a0 = u64 [s1 + 0x1a8]\n 38883: a1 = a0 + 0x1f\n 38886: a0 = a1 <u a0\n 38889: a5 = u64 [s1 + 0x198]\n 38893: a3 = a5 + a0\n 38896: a2 = a3 <u a5\n 38899: a2 = a0 if a0 == 0\n 38902: a4 = u64 [s1 + 0x1a0]\n 38906: a2 = a2 + a4\n 38909: u64 [s1 + 0x238] = a2\n 38913: a2 = a2 << 0x3b\n 38916: a4 = a3 >> 0x5\n 38919: a2 = a2 | a4\n 38922: a0 = u64 [s1 + 0x240]\n 38926: t0 = u64 [a0 + 0x18]\n 38929: a3 = a3 << 0x3b\n 38932: a0 = u64 [a0 + 0x10]\n 38935: a1 = a1 >> 0x5\n 38938: a3 = a3 | a1\n 38941: t2 = reverse t0\n 38943: a4 = reverse a0\n 38945: a1 = u64 [s1 + 0x208]\n 38949: a1 = 0 if a5 != 0\n 38951: a0 = u64 [s1 + 0x210]\n 38955: a1 = 0 if a0 != 0\n 38957: a2 = 0 if a1 != 0\n 38959: a3 = 0 if a1 != 0\n 38961: t1 = t2 + a3\n 38964: a0 = t1 <u t2\n 38967: a3 = a4 + a0\n 38970: t0 = a3 + a2\n 38973: a3 = t0 ^ a4\n 38976: a2 = t0 <u a4\n 38979: a2 = a0 if a3 == 0\n 38982: u64 [s1 + 0x148] = a2\n 38986: a0 = u64 [s1 + 0x280]\n 38990: ra = a0 + 0x1f\n 38993: a2 = ra <u a0\n 38996: a3 = u64 [s1 + 0x298]\n 39000: a0 = a3 + a2\n 39003: a3 = a0 <u a3\n 39006: a3 = a2 if a2 == 0\n 39009: a2 = u64 [s1 + 0x290]\n 39013: a2 = a2 + a3\n 39016: u64 [s1 + 0x280] = a2\n 39020: a2 = a2 << 0x3b\n 39023: a5 = a0 >> 0x5\n 39026: a2 = a2 | a5\n 39029: a0 = a0 << 0x3b\n 39032: a5 = ra >> 0x5\n 39035: ra = t1\n 39037: a0 = a0 | a5\n 39040: a3 = t2 + a0\n 39043: a0 = a3 <u t2\n 39046: a5 = a4 + a0\n 39049: a5 = a5 + a2\n 39052: a2 = a5 ^ a4\n 39055: t2 = a5 <u a4\n 39058: t2 = a0 if a2 == 0\n 39061: a0 = t0 ^ a5\n 39064: u64 [s1 + 0x248] = a5\n 39068: a2 = t0 <u a5\n 39071: u64 [s1 + 0x278] = a3\n 39075: t1 = t1 <u a3\n 39078: t1 = a2 if a0 != 0\n 39081: a2 = u64 [s1 + 0x238]\n 39085: a0 = u64 [s1 + 0x1a0]\n 39089: a0 = a2 <u a0\n 39092: a4 = u64 [s1 + 0x190]\n 39096: a4 = a4 + a0\n 39099: a2 = a2 >> 0x5\n 39102: a0 = a4 << 0x3b\n 39105: a0 = a0 | a2\n 39108: a2 = u64 [s1 + 0x240]\n 39112: a3 = u64 [a2]\n 39114: a2 = u64 [a2 + 0x8]\n 39117: a4 = a4 >> 0x5\n 39120: a0 = 0 if a1 != 0\n 39122: a4 = 0 if a1 != 0\n 39124: a1 = reverse a2\n 39126: a2 = reverse a3\n 39128: a4 = a4 + a2\n 39131: a0 = a0 + a1\n 39134: a3 = a0 <u a1\n 39137: a3 = a3 + a4\n 39140: a4 = u64 [s1 + 0x148]\n 39144: a4 = a4 + a0\n 39147: u64 [s1 + 0x298] = a4\n 39151: a0 = a4 <u a0\n 39154: a5 = a3 + a0\n 39157: a4 = u64 [s1 + 0x280]\n 39161: a0 = u64 [s1 + 0x290]\n 39165: a0 = a4 <u a0\n 39168: a3 = u64 [s1 + 0x288]\n 39172: a0 = a0 + a3\n 39175: a3 = a4 >> 0x5\n 39178: a4 = a0 << 0x3b\n 39181: a3 = a3 | a4\n 39184: a0 = a0 >> 0x5\n 39187: a0 = a0 + a2\n 39190: a3 = a3 + a1\n 39193: a1 = a3 <u a1\n 39196: a0 = a0 + a1\n 39199: t2 = t2 + a3\n 39202: a1 = t2 <u a3\n 39205: a3 = u64 [s1 + 0x298]\n 39209: a2 = a0 + a1\n 39212: a0 = a3 <u t2\n 39215: a1 = a5 ^ a2\n 39218: u64 [s1 + 0x238] = a2\n 39222: a2 = a5 <u a2\n 39225: a2 = a0 if a1 == 0\n 39228: u64 [s1 + 0x240] = t2\n 39232: a0 = a3 ^ t2\n 39235: a0 = a0 | a1\n 39238: t1 = a2 if a0 != 0\n 39241: jump @582 if t1 == 0\n      : @580 (gas: 22)\n 39245: u64 [s1 + 0x298] = a3\n 39249: u64 [s1 + 0x280] = a5\n 39253: u64 [s1 + 0x288] = t0\n 39257: u64 [s1 + 0x290] = ra\n 39261: a0 = s1 + 0x2218\n 39265: u64 [a0 + 0x1f0] = t0\n 39269: u64 [a0 + 0x1e8] = ra\n 39273: u64 [a0 + 0x1f8] = a3\n 39277: u64 [a0 + 0x200] = a5\n 39281: u64 [a0 + 544] = 0\n 39285: u64 [a0 + 536] = 0\n 39289: u64 [a0 + 528] = 0\n 39293: u64 [a0 + 520] = 0\n 39297: a0 = s1 + 0x2000\n 39301: i32 a1 = a0 + 0x400\n 39305: a0 = s1 + 0x2000\n 39309: i32 a3 = a0 + 0x420\n 39313: a2 = 0xffffffffffffffff\n 39316: a4 = 0x20\n 39319: a0 = 0\n 39321: ecalli 17 // 'set_storage'\n 39323: fallthrough\n      : @581 (gas: 29)\n 39324: a5 = u64 [s1 + 0x280]\n 39328: t0 = u64 [s1 + 0x288]\n 39332: ra = u64 [s1 + 0x290]\n 39336: ra = ra + 0x1\n 39339: a0 = ra <u 0x1\n 39342: t0 = t0 + a0\n 39345: a0 = ra | t0\n 39348: a0 = a0 <u 0x1\n 39351: a1 = u64 [s1 + 0x298]\n 39355: a0 = a0 + a1\n 39358: a1 = a0 <u a1\n 39361: a5 = a5 + a1\n 39364: a1 = u64 [s1 + 0x278]\n 39368: a1 = ra <u a1\n 39371: a3 = u64 [s1 + 0x248]\n 39375: a2 = t0 ^ a3\n 39378: a3 = t0 <u a3\n 39381: a3 = a1 if a2 == 0\n 39384: a1 = u64 [s1 + 0x240]\n 39388: t1 = a0 <u a1\n 39391: a4 = u64 [s1 + 0x238]\n 39395: a2 = a5 ^ a4\n 39398: a4 = a5 <u a4\n 39401: a4 = t1 if a2 == 0\n 39404: a1 = a1 ^ a0\n 39407: a1 = a1 | a2\n 39410: a4 = a3 if a1 == 0\n 39413: a3 = a0\n 39415: jump @580 if a4 != 0\n      : @582 (gas: 13)\n 39419: a2 = u64 [s1 + 0x198]\n 39423: a0 = a2 >u 0\n 39425: a1 = u64 [s1 + 0x208]\n 39429: a1 = a1 ^ 0x1\n 39432: a1 = a0 if a2 != 0\n 39435: a0 = u64 [s1 + 0x1a0]\n 39439: a0 = a0 >u 0\n 39441: a3 = u64 [s1 + 0x190]\n 39445: a2 = a3 >u 0\n 39447: a2 = a0 if a3 == 0\n 39450: a0 = u64 [s1 + 0x210]\n 39454: a2 = a1 if a0 == 0\n 39457: jump @584 if a2 != 0\n      : @583 (gas: 1)\n 39460: jump @800\n      : @584 (gas: 6)\n 39463: a0 = u64 [s1 + 0x1a8]\n 39467: a0 = a0 & 0xffffffffffffffe0\n 39470: u64 [s1 + 0x170] = a0\n 39474: a1 = 0x20\n 39477: a0 = 0\n 39479: ra = 352, jump @0\n      : @585 [@dyn 176] (gas: 67)\n 39486: a2 = u64 [s1 + 0x178]\n 39490: u8 [a0 + 0x18] = a2\n 39493: a1 = a2 >> 0x38\n 39496: u8 [a0 + 0x1f] = a1\n 39499: a1 = a2 >> 0x30\n 39502: u8 [a0 + 0x1e] = a1\n 39505: a1 = a2 >> 0x28\n 39508: u8 [a0 + 0x1d] = a1\n 39511: a1 = a2 >> 0x20\n 39514: u8 [a0 + 0x1c] = a1\n 39517: a1 = a2 >> 0x18\n 39520: u8 [a0 + 0x1b] = a1\n 39523: a1 = a2 >> 0x10\n 39526: u8 [a0 + 0x1a] = a1\n 39529: a1 = a2 >> 0x8\n 39532: u8 [a0 + 0x19] = a1\n 39535: a2 = u64 [s1 + 0x180]\n 39539: u8 [a0 + 0x10] = a2\n 39542: a1 = a2 >> 0x38\n 39545: u8 [a0 + 0x17] = a1\n 39548: a1 = a2 >> 0x30\n 39551: u8 [a0 + 0x16] = a1\n 39554: a1 = a2 >> 0x28\n 39557: u8 [a0 + 0x15] = a1\n 39560: a1 = a2 >> 0x20\n 39563: u8 [a0 + 0x14] = a1\n 39566: a1 = a2 >> 0x18\n 39569: u8 [a0 + 0x13] = a1\n 39572: a1 = a2 >> 0x10\n 39575: u8 [a0 + 0x12] = a1\n 39578: a1 = a2 >> 0x8\n 39581: u8 [a0 + 0x11] = a1\n 39584: a2 = u64 [s1 + 0x1f8]\n 39588: u8 [a0 + 0x8] = a2\n 39591: a1 = a2 >> 0x38\n 39594: u8 [a0 + 0xf] = a1\n 39597: a1 = a2 >> 0x30\n 39600: u8 [a0 + 0xe] = a1\n 39603: a1 = a2 >> 0x28\n 39606: u8 [a0 + 0xd] = a1\n 39609: a1 = a2 >> 0x20\n 39612: u8 [a0 + 0xc] = a1\n 39615: a1 = a2 >> 0x18\n 39618: u8 [a0 + 0xb] = a1\n 39621: a1 = a2 >> 0x10\n 39624: u8 [a0 + 0xa] = a1\n 39627: a1 = a2 >> 0x8\n 39630: u8 [a0 + 0x9] = a1\n 39633: a2 = u64 [s1 + 0x200]\n 39637: u8 [a0] = a2\n 39639: a1 = a2 >> 0x38\n 39642: u8 [a0 + 0x7] = a1\n 39645: a1 = a2 >> 0x30\n 39648: u8 [a0 + 0x6] = a1\n 39651: a1 = a2 >> 0x28\n 39654: u8 [a0 + 0x5] = a1\n 39657: a1 = a2 >> 0x20\n 39660: u8 [a0 + 0x4] = a1\n 39663: a1 = a2 >> 0x18\n 39666: u8 [a0 + 0x3] = a1\n 39669: a1 = a2 >> 0x10\n 39672: u8 [a0 + 0x2] = a1\n 39675: a1 = a2 >> 0x8\n 39678: u8 [a0 + 0x1] = a1\n 39681: a1 = 0x20\n 39684: a0 = 0\n 39686: ra = 354, jump @0\n      : @586 [@dyn 177] (gas: 9)\n 39693: a1 = sp + 0xffffffffffffffe0\n 39696: a1 = a1 & 0xffffffffffffffe0\n 39699: u64 [s1 + 0x298] = a1\n 39703: sp = a1\n 39705: i32 a0 = a0 + 0\n 39707: i32 a2 = a1 + 0\n 39709: a1 = 0x20\n 39712: ecalli 10 // 'hash_keccak_256'\n 39714: fallthrough\n      : @587 (gas: 15)\n 39715: a3 = u64 [s1 + 0x298]\n 39719: a0 = u64 [a3]\n 39721: a1 = u64 [a3 + 0x8]\n 39724: a2 = u64 [a3 + 0x10]\n 39727: a3 = u64 [a3 + 0x18]\n 39730: a0 = reverse a0\n 39732: u64 [s1 + 0x288] = a0\n 39736: a0 = reverse a1\n 39738: u64 [s1 + 0x280] = a0\n 39742: a0 = reverse a2\n 39744: u64 [s1 + 0x290] = a0\n 39748: a0 = reverse a3\n 39750: u64 [s1 + 0x298] = a0\n 39754: a0 = u64 [s1 + 0x170]\n 39758: jump @589 if a0 == 0\n      : @588 (gas: 1)\n 39761: jump @831\n      : @589 (gas: 6)\n 39764: ra = 0\n 39766: t2 = 0\n 39768: t0 = 0\n 39770: a2 = u64 [s1 + 0x280]\n 39774: t1 = 0x20\n 39777: jump @837\n      : @590 (gas: 3)\n 39780: a1 = 0x20\n 39783: a0 = 0\n 39785: ra = 356, jump @0\n      : @591 [@dyn 178] (gas: 71)\n 39792: a1 = u64 [s1 + 0x1b0]\n 39796: a1 = reverse a1\n 39798: a2 = u64 [s1 + 0x1a8]\n 39802: a2 = reverse a2\n 39804: a3 = u64 [s1 + 0x1a0]\n 39808: a3 = reverse a3\n 39810: a4 = u64 [s1 + 0x198]\n 39814: a4 = reverse a4\n 39816: u8 [a0 + 0x18] = a4\n 39819: a5 = a4 >> 0x38\n 39822: u8 [a0 + 0x1f] = a5\n 39825: a5 = a4 >> 0x30\n 39828: u8 [a0 + 0x1e] = a5\n 39831: a5 = a4 >> 0x28\n 39834: u8 [a0 + 0x1d] = a5\n 39837: a5 = a4 >> 0x20\n 39840: u8 [a0 + 0x1c] = a5\n 39843: a5 = a4 >> 0x18\n 39846: u8 [a0 + 0x1b] = a5\n 39849: a5 = a4 >> 0x10\n 39852: u8 [a0 + 0x1a] = a5\n 39855: a4 = a4 >> 0x8\n 39858: u8 [a0 + 0x19] = a4\n 39861: u8 [a0 + 0x10] = a3\n 39864: a4 = a3 >> 0x38\n 39867: u8 [a0 + 0x17] = a4\n 39870: a4 = a3 >> 0x30\n 39873: u8 [a0 + 0x16] = a4\n 39876: a4 = a3 >> 0x28\n 39879: u8 [a0 + 0x15] = a4\n 39882: a4 = a3 >> 0x20\n 39885: u8 [a0 + 0x14] = a4\n 39888: a4 = a3 >> 0x18\n 39891: u8 [a0 + 0x13] = a4\n 39894: a4 = a3 >> 0x10\n 39897: u8 [a0 + 0x12] = a4\n 39900: a3 = a3 >> 0x8\n 39903: u8 [a0 + 0x11] = a3\n 39906: u8 [a0 + 0x8] = a2\n 39909: a3 = a2 >> 0x38\n 39912: u8 [a0 + 0xf] = a3\n 39915: a3 = a2 >> 0x30\n 39918: u8 [a0 + 0xe] = a3\n 39921: a3 = a2 >> 0x28\n 39924: u8 [a0 + 0xd] = a3\n 39927: a3 = a2 >> 0x20\n 39930: u8 [a0 + 0xc] = a3\n 39933: a3 = a2 >> 0x18\n 39936: u8 [a0 + 0xb] = a3\n 39939: a3 = a2 >> 0x10\n 39942: u8 [a0 + 0xa] = a3\n 39945: a2 = a2 >> 0x8\n 39948: u8 [a0 + 0x9] = a2\n 39951: u8 [a0] = a1\n 39953: a2 = a1 >> 0x38\n 39956: u8 [a0 + 0x7] = a2\n 39959: a2 = a1 >> 0x30\n 39962: u8 [a0 + 0x6] = a2\n 39965: a2 = a1 >> 0x28\n 39968: u8 [a0 + 0x5] = a2\n 39971: a2 = a1 >> 0x20\n 39974: u8 [a0 + 0x4] = a2\n 39977: a2 = a1 >> 0x18\n 39980: u8 [a0 + 0x3] = a2\n 39983: a2 = a1 >> 0x10\n 39986: u8 [a0 + 0x2] = a2\n 39989: a1 = a1 >> 0x8\n 39992: u8 [a0 + 0x1] = a1\n 39995: a0 = 0x20\n 39998: a1 = 0x20\n 40001: ra = 358, jump @0\n      : @592 [@dyn 179] (gas: 35)\n 40008: u8 [a0 + 31] = 0x4\n 40012: u8 [a0 + 30] = 0\n 40015: u8 [a0 + 29] = 0\n 40018: u8 [a0 + 28] = 0\n 40021: u8 [a0 + 27] = 0\n 40024: u8 [a0 + 26] = 0\n 40027: u8 [a0 + 25] = 0\n 40030: u8 [a0 + 24] = 0\n 40033: u8 [a0 + 23] = 0\n 40036: u8 [a0 + 22] = 0\n 40039: u8 [a0 + 21] = 0\n 40042: u8 [a0 + 20] = 0\n 40045: u8 [a0 + 19] = 0\n 40048: u8 [a0 + 18] = 0\n 40051: u8 [a0 + 17] = 0\n 40054: u8 [a0 + 16] = 0\n 40057: u8 [a0 + 15] = 0\n 40060: u8 [a0 + 14] = 0\n 40063: u8 [a0 + 13] = 0\n 40066: u8 [a0 + 12] = 0\n 40069: u8 [a0 + 11] = 0\n 40072: u8 [a0 + 10] = 0\n 40075: u8 [a0 + 9] = 0\n 40078: u8 [a0 + 8] = 0\n 40081: u8 [a0 + 7] = 0\n 40084: u8 [a0 + 6] = 0\n 40087: u8 [a0 + 5] = 0\n 40090: u8 [a0 + 4] = 0\n 40093: u8 [a0 + 3] = 0\n 40096: u8 [a0 + 2] = 0\n 40099: u8 [a0 + 1] = 0\n 40102: u8 [a0 + 0] = 0\n 40104: a1 = 0x40\n 40107: a0 = 0\n 40109: ra = 360, jump @0\n      : @593 [@dyn 180] (gas: 30)\n 40116: a1 = sp + 0xffffffffffffffe0\n 40119: a1 = a1 & 0xffffffffffffffe0\n 40122: u64 [s1 + 0x298] = a1\n 40126: sp = a1\n 40128: i32 a0 = a0 + 0\n 40130: i32 a2 = a1 + 0\n 40132: a1 = 0x40\n 40135: ecalli 10 // 'hash_keccak_256'\n 40137: a3 = u64 [s1 + 0x298]\n 40141: a0 = u64 [a3 + 0x18]\n 40144: a1 = u64 [a3 + 0x10]\n 40147: a2 = u64 [a3 + 0x8]\n 40150: a3 = u64 [a3]\n 40152: a5 = reverse a0\n 40154: a4 = reverse a1\n 40156: a2 = reverse a2\n 40158: a1 = reverse a3\n 40160: a0 = s1 + 0x1a18\n 40164: u64 [s1 + 0x238] = a1\n 40168: u64 [a0 + 0x200] = a1\n 40172: u64 [s1 + 0x230] = a2\n 40176: u64 [a0 + 0x1f8] = a2\n 40180: u64 [s1 + 0x228] = a4\n 40184: u64 [a0 + 0x1f0] = a4\n 40188: a1 = a0\n 40190: a0 = s1 + 0x1c20\n 40194: a2 = s1 + 0x1c00\n 40198: u64 [s1 + 0x220] = a5\n 40202: u64 [a1 + 0x1e8] = a5\n 40206: ra = 362, jump @25\n      : @594 [@dyn 181] (gas: 13)\n 40213: a0 = s1 + 0x1a18\n 40217: a1 = u64 [a0 + 0x220]\n 40221: a2 = u64 [a0 + 0x218]\n 40225: a3 = u64 [a0 + 0x210]\n 40229: a4 = u64 [a0 + 0x208]\n 40233: u64 [s1 + 0x218] = a1\n 40237: u64 [s1 + 0x208] = a3\n 40241: a0 = a3 | a1\n 40244: u64 [s1 + 0x210] = a2\n 40248: u64 [s1 + 0x200] = a4\n 40252: a1 = a4 | a2\n 40255: a0 = a0 | a1\n 40258: jump @596 if a0 == 0\n      : @595 (gas: 1)\n 40261: jump @657\n      : @596 (gas: 3)\n 40264: a0 = 0x40\n 40267: a1 = 0x20\n 40270: ra = 364, jump @0\n      : @597 [@dyn 182] (gas: 100)\n 40277: a1 = u8 [a0 + 0x11]\n 40280: a2 = u8 [a0 + 0x10]\n 40283: a3 = u8 [a0 + 0x12]\n 40286: a4 = u8 [a0 + 0x13]\n 40289: a1 = a1 << 0x8\n 40292: a1 = a1 | a2\n 40295: a3 = a3 << 0x10\n 40298: a4 = a4 << 0x18\n 40301: a3 = a3 | a4\n 40304: a1 = a1 | a3\n 40307: a2 = u8 [a0 + 0x15]\n 40310: a3 = u8 [a0 + 0x14]\n 40313: a4 = u8 [a0 + 0x16]\n 40316: a5 = u8 [a0 + 0x17]\n 40319: a2 = a2 << 0x8\n 40322: a2 = a2 | a3\n 40325: a4 = a4 << 0x10\n 40328: a5 = a5 << 0x18\n 40331: a4 = a4 | a5\n 40334: a2 = a2 | a4\n 40337: a2 = a2 << 0x20\n 40340: t0 = a2 | a1\n 40343: a2 = u8 [a0 + 0x1]\n 40346: a3 = u8 [a0]\n 40348: a4 = u8 [a0 + 0x2]\n 40351: a5 = u8 [a0 + 0x3]\n 40354: a2 = a2 << 0x8\n 40357: a2 = a2 | a3\n 40360: a4 = a4 << 0x10\n 40363: a5 = a5 << 0x18\n 40366: a4 = a4 | a5\n 40369: a2 = a2 | a4\n 40372: a3 = u8 [a0 + 0x5]\n 40375: a4 = u8 [a0 + 0x4]\n 40378: a5 = u8 [a0 + 0x6]\n 40381: a1 = u8 [a0 + 0x7]\n 40384: a3 = a3 << 0x8\n 40387: a3 = a3 | a4\n 40390: a5 = a5 << 0x10\n 40393: a1 = a1 << 0x18\n 40396: a1 = a1 | a5\n 40399: a1 = a1 | a3\n 40402: a1 = a1 << 0x20\n 40405: t1 = a1 | a2\n 40408: a1 = u8 [a0 + 0x19]\n 40411: a3 = u8 [a0 + 0x18]\n 40414: a4 = u8 [a0 + 0x1a]\n 40417: a5 = u8 [a0 + 0x1b]\n 40420: a1 = a1 << 0x8\n 40423: a1 = a1 | a3\n 40426: a4 = a4 << 0x10\n 40429: a5 = a5 << 0x18\n 40432: a4 = a4 | a5\n 40435: a1 = a1 | a4\n 40438: a3 = u8 [a0 + 0x1d]\n 40441: a4 = u8 [a0 + 0x1c]\n 40444: a5 = u8 [a0 + 0x1e]\n 40447: a2 = u8 [a0 + 0x1f]\n 40450: a3 = a3 << 0x8\n 40453: a3 = a3 | a4\n 40456: a5 = a5 << 0x10\n 40459: a2 = a2 << 0x18\n 40462: a2 = a2 | a5\n 40465: a2 = a2 | a3\n 40468: a2 = a2 << 0x20\n 40471: a3 = a2 | a1\n 40474: a1 = u8 [a0 + 0x9]\n 40477: a2 = u8 [a0 + 0x8]\n 40480: a4 = u8 [a0 + 0xa]\n 40483: a5 = u8 [a0 + 0xb]\n 40486: a1 = a1 << 0x8\n 40489: a1 = a1 | a2\n 40492: a4 = a4 << 0x10\n 40495: a5 = a5 << 0x18\n 40498: a4 = a4 | a5\n 40501: a1 = a1 | a4\n 40504: a2 = u8 [a0 + 0xd]\n 40507: a4 = u8 [a0 + 0xc]\n 40510: a5 = u8 [a0 + 0xe]\n 40513: a0 = u8 [a0 + 0xf]\n 40516: a2 = a2 << 0x8\n 40519: a2 = a2 | a4\n 40522: a5 = a5 << 0x10\n 40525: a0 = a0 << 0x18\n 40528: a0 = a0 | a5\n 40531: a0 = a0 | a2\n 40534: a0 = a0 << 0x20\n 40537: a0 = a0 | a1\n 40540: a4 = reverse a0\n 40542: a2 = reverse a3\n 40544: a5 = reverse t1\n 40546: a3 = reverse t0\n 40548: a0 = a3 | a5\n 40551: a1 = a2 | a4\n 40554: a1 = a1 | a0\n 40557: a1 = a1 >> 0x20\n 40560: a0 = a0 | a4\n 40563: a0 = a0 << 0x20\n 40566: a0 = a0 | a1\n 40569: jump @599 if a0 == 0\n      : @598 (gas: 1)\n 40572: jump @799\n      : @599 (gas: 8)\n 40575: i32 a0 = a2 + 0\n 40577: a1 = 0x20\n 40580: u64 [s1 + 0x278] = a0\n 40584: u64 [s1 + 0x298] = a2\n 40588: u64 [s1 + 0x290] = a3\n 40592: u64 [s1 + 0x288] = a4\n 40596: u64 [s1 + 0x280] = a5\n 40600: ra = 366, jump @0\n      : @600 [@dyn 183] (gas: 43)\n 40607: u8 [a0 + 31] = 0\n 40610: u8 [a0 + 30] = 0\n 40613: u8 [a0 + 29] = 0\n 40616: u8 [a0 + 28] = 0\n 40619: u8 [a0 + 27] = 0\n 40622: u8 [a0 + 26] = 0\n 40625: u8 [a0 + 25] = 0\n 40628: u8 [a0 + 24] = 0\n 40631: u8 [a0 + 23] = 0\n 40634: u8 [a0 + 22] = 0\n 40637: u8 [a0 + 21] = 0\n 40640: u8 [a0 + 20] = 0\n 40643: u8 [a0 + 19] = 0\n 40646: u8 [a0 + 18] = 0\n 40649: u8 [a0 + 17] = 0\n 40652: u8 [a0 + 16] = 0\n 40655: u8 [a0 + 15] = 0\n 40658: u8 [a0 + 14] = 0\n 40661: u8 [a0 + 13] = 0\n 40664: u8 [a0 + 12] = 0\n 40667: u8 [a0 + 11] = 0\n 40670: u8 [a0 + 10] = 0\n 40673: u8 [a0 + 9] = 0\n 40676: u8 [a0 + 8] = 0\n 40679: u8 [a0 + 7] = 0\n 40682: u8 [a0 + 6] = 0\n 40685: u8 [a0 + 5] = 0\n 40688: u8 [a0 + 3] = 0xa0\n 40693: u8 [a0 + 2] = 0x79\n 40697: u8 [a0 + 1] = 0xc3\n 40702: u8 [a0 + 0] = 0x8\n 40705: a1 = u64 [s1 + 0x288]\n 40709: a3 = u64 [s1 + 0x280]\n 40713: a3 = a3 | a1\n 40716: a4 = 0x100000000\n 40726: a1 = 0xfffffffc\n 40736: a2 = u64 [s1 + 0x298]\n 40740: a1 = a2 <u a1\n 40743: a2 = u64 [s1 + 0x290]\n 40747: a1 = 0 if a2 != 0\n 40749: a1 = 0 if a3 != 0\n 40751: u8 [a0 + 4] = 0\n 40754: jump @602 if a1 != 0\n      : @601 (gas: 1)\n 40757: jump @799\n      : @602 (gas: 6)\n 40760: a0 = u64 [s1 + 0x278]\n 40764: i32 a0 = a0 + 0x4\n 40767: a1 = 0x20\n 40770: u64 [s1 + 0x288] = a3\n 40774: u64 [s1 + 0x280] = a4\n 40778: ra = 368, jump @0\n      : @603 [@dyn 184] (gas: 41)\n 40785: a4 = u64 [s1 + 0x288]\n 40789: a3 = u64 [s1 + 0x290]\n 40793: a2 = u64 [s1 + 0x298]\n 40797: u8 [a0 + 31] = 0x20\n 40801: u8 [a0 + 30] = 0\n 40804: u8 [a0 + 29] = 0\n 40807: u8 [a0 + 28] = 0\n 40810: u8 [a0 + 27] = 0\n 40813: u8 [a0 + 26] = 0\n 40816: u8 [a0 + 25] = 0\n 40819: u8 [a0 + 24] = 0\n 40822: u8 [a0 + 23] = 0\n 40825: u8 [a0 + 22] = 0\n 40828: u8 [a0 + 21] = 0\n 40831: u8 [a0 + 20] = 0\n 40834: u8 [a0 + 19] = 0\n 40837: u8 [a0 + 18] = 0\n 40840: u8 [a0 + 17] = 0\n 40843: u8 [a0 + 16] = 0\n 40846: u8 [a0 + 15] = 0\n 40849: u8 [a0 + 14] = 0\n 40852: u8 [a0 + 13] = 0\n 40855: u8 [a0 + 12] = 0\n 40858: u8 [a0 + 11] = 0\n 40861: u8 [a0 + 10] = 0\n 40864: u8 [a0 + 9] = 0\n 40867: u8 [a0 + 8] = 0\n 40870: u8 [a0 + 7] = 0\n 40873: u8 [a0 + 6] = 0\n 40876: u8 [a0 + 5] = 0\n 40879: u8 [a0 + 4] = 0\n 40882: u8 [a0 + 3] = 0\n 40885: u8 [a0 + 2] = 0\n 40888: u8 [a0 + 1] = 0\n 40891: a1 = u64 [s1 + 0x280]\n 40895: a1 = a1 + 0xffffffffffffffdc\n 40898: a1 = a2 <u a1\n 40901: a1 = 0 if a3 != 0\n 40903: a1 = 0 if a4 != 0\n 40905: u8 [a0 + 0] = 0\n 40907: jump @605 if a1 != 0\n      : @604 (gas: 1)\n 40910: jump @799\n      : @605 (gas: 4)\n 40913: a0 = u64 [s1 + 0x278]\n 40917: i32 a0 = a0 + 0x24\n 40920: a1 = 0x20\n 40923: ra = 370, jump @0\n      : @606 [@dyn 185] (gas: 40)\n 40930: u8 [a0 + 31] = 0x13\n 40934: u8 [a0 + 30] = 0\n 40937: u8 [a0 + 29] = 0\n 40940: u8 [a0 + 28] = 0\n 40943: u8 [a0 + 27] = 0\n 40946: u8 [a0 + 26] = 0\n 40949: u8 [a0 + 25] = 0\n 40952: u8 [a0 + 24] = 0\n 40955: u8 [a0 + 23] = 0\n 40958: u8 [a0 + 22] = 0\n 40961: u8 [a0 + 21] = 0\n 40964: u8 [a0 + 20] = 0\n 40967: u8 [a0 + 19] = 0\n 40970: u8 [a0 + 18] = 0\n 40973: u8 [a0 + 17] = 0\n 40976: u8 [a0 + 16] = 0\n 40979: u8 [a0 + 15] = 0\n 40982: u8 [a0 + 14] = 0\n 40985: u8 [a0 + 13] = 0\n 40988: u8 [a0 + 12] = 0\n 40991: u8 [a0 + 11] = 0\n 40994: u8 [a0 + 10] = 0\n 40997: u8 [a0 + 9] = 0\n 41000: u8 [a0 + 8] = 0\n 41003: u8 [a0 + 7] = 0\n 41006: u8 [a0 + 6] = 0\n 41009: u8 [a0 + 5] = 0\n 41012: u8 [a0 + 4] = 0\n 41015: u8 [a0 + 3] = 0\n 41018: u8 [a0 + 2] = 0\n 41021: u8 [a0 + 1] = 0\n 41024: a1 = 0xffffffbc\n 41034: a2 = u64 [s1 + 0x298]\n 41038: a1 = a2 <u a1\n 41041: a2 = u64 [s1 + 0x290]\n 41045: a1 = 0 if a2 != 0\n 41047: a2 = u64 [s1 + 0x288]\n 41051: a1 = 0 if a2 != 0\n 41053: u8 [a0 + 0] = 0\n 41055: jump @608 if a1 != 0\n      : @607 (gas: 1)\n 41058: jump @799\n      : @608 (gas: 4)\n 41061: a0 = u64 [s1 + 0x278]\n 41065: i32 a0 = a0 + 0x44\n 41068: a1 = 0x20\n 41071: ra = 372, jump @0\n      : @609 [@dyn 186] (gas: 35)\n 41078: u8 [a0 + 31] = 0\n 41081: u8 [a0 + 30] = 0\n 41084: u8 [a0 + 29] = 0\n 41087: u8 [a0 + 28] = 0\n 41090: u8 [a0 + 27] = 0\n 41093: u8 [a0 + 26] = 0\n 41096: u8 [a0 + 25] = 0\n 41099: u8 [a0 + 24] = 0\n 41102: u8 [a0 + 23] = 0\n 41105: u8 [a0 + 22] = 0\n 41108: u8 [a0 + 21] = 0\n 41111: u8 [a0 + 20] = 0\n 41114: u8 [a0 + 19] = 0\n 41117: u8 [a0 + 18] = 0x78\n 41121: u8 [a0 + 17] = 0x6f\n 41125: u8 [a0 + 16] = 0x62\n 41129: u8 [a0 + 15] = 0x74\n 41133: u8 [a0 + 14] = 0x6f\n 41137: u8 [a0 + 13] = 0x6f\n 41141: u8 [a0 + 12] = 0x6c\n 41145: a5 = 0x20\n 41148: u8 [a0 + 0xb] = a5\n 41151: u8 [a0 + 10] = 0x6e\n 41155: u8 [a0 + 9] = 0x69\n 41159: u8 [a0 + 0x8] = a5\n 41162: u8 [a0 + 7] = 0x73\n 41166: u8 [a0 + 6] = 0x6d\n 41170: a4 = 0x65\n 41173: u8 [a0 + 0x5] = a4\n 41176: u8 [a0 + 4] = 0x74\n 41180: u8 [a0 + 3] = 0x69\n 41184: u8 [a0 + 0x2] = a5\n 41187: u8 [a0 + 1] = 0x6f\n 41191: u8 [a0 + 0] = 0x4e\n 41194: jump @747\n      : @610 (gas: 3)\n 41197: a0 = 0x40\n 41200: a1 = 0x20\n 41203: ra = 374, jump @0\n      : @611 [@dyn 187] (gas: 100)\n 41210: a1 = u8 [a0 + 0x11]\n 41213: a2 = u8 [a0 + 0x10]\n 41216: a3 = u8 [a0 + 0x12]\n 41219: a4 = u8 [a0 + 0x13]\n 41222: a1 = a1 << 0x8\n 41225: a1 = a1 | a2\n 41228: a3 = a3 << 0x10\n 41231: a4 = a4 << 0x18\n 41234: a3 = a3 | a4\n 41237: a1 = a1 | a3\n 41240: a2 = u8 [a0 + 0x15]\n 41243: a3 = u8 [a0 + 0x14]\n 41246: a4 = u8 [a0 + 0x16]\n 41249: a5 = u8 [a0 + 0x17]\n 41252: a2 = a2 << 0x8\n 41255: a2 = a2 | a3\n 41258: a4 = a4 << 0x10\n 41261: a5 = a5 << 0x18\n 41264: a4 = a4 | a5\n 41267: a2 = a2 | a4\n 41270: a2 = a2 << 0x20\n 41273: t0 = a2 | a1\n 41276: a2 = u8 [a0 + 0x1]\n 41279: a3 = u8 [a0]\n 41281: a4 = u8 [a0 + 0x2]\n 41284: a5 = u8 [a0 + 0x3]\n 41287: a2 = a2 << 0x8\n 41290: a2 = a2 | a3\n 41293: a4 = a4 << 0x10\n 41296: a5 = a5 << 0x18\n 41299: a4 = a4 | a5\n 41302: a2 = a2 | a4\n 41305: a3 = u8 [a0 + 0x5]\n 41308: a4 = u8 [a0 + 0x4]\n 41311: a5 = u8 [a0 + 0x6]\n 41314: a1 = u8 [a0 + 0x7]\n 41317: a3 = a3 << 0x8\n 41320: a3 = a3 | a4\n 41323: a5 = a5 << 0x10\n 41326: a1 = a1 << 0x18\n 41329: a1 = a1 | a5\n 41332: a1 = a1 | a3\n 41335: a1 = a1 << 0x20\n 41338: t1 = a1 | a2\n 41341: a1 = u8 [a0 + 0x19]\n 41344: a3 = u8 [a0 + 0x18]\n 41347: a4 = u8 [a0 + 0x1a]\n 41350: a5 = u8 [a0 + 0x1b]\n 41353: a1 = a1 << 0x8\n 41356: a1 = a1 | a3\n 41359: a4 = a4 << 0x10\n 41362: a5 = a5 << 0x18\n 41365: a4 = a4 | a5\n 41368: a1 = a1 | a4\n 41371: a3 = u8 [a0 + 0x1d]\n 41374: a4 = u8 [a0 + 0x1c]\n 41377: a5 = u8 [a0 + 0x1e]\n 41380: a2 = u8 [a0 + 0x1f]\n 41383: a3 = a3 << 0x8\n 41386: a3 = a3 | a4\n 41389: a5 = a5 << 0x10\n 41392: a2 = a2 << 0x18\n 41395: a2 = a2 | a5\n 41398: a2 = a2 | a3\n 41401: a2 = a2 << 0x20\n 41404: a3 = a2 | a1\n 41407: a1 = u8 [a0 + 0x9]\n 41410: a2 = u8 [a0 + 0x8]\n 41413: a4 = u8 [a0 + 0xa]\n 41416: a5 = u8 [a0 + 0xb]\n 41419: a1 = a1 << 0x8\n 41422: a1 = a1 | a2\n 41425: a4 = a4 << 0x10\n 41428: a5 = a5 << 0x18\n 41431: a4 = a4 | a5\n 41434: a1 = a1 | a4\n 41437: a2 = u8 [a0 + 0xd]\n 41440: a4 = u8 [a0 + 0xc]\n 41443: a5 = u8 [a0 + 0xe]\n 41446: a0 = u8 [a0 + 0xf]\n 41449: a2 = a2 << 0x8\n 41452: a2 = a2 | a4\n 41455: a5 = a5 << 0x10\n 41458: a0 = a0 << 0x18\n 41461: a0 = a0 | a5\n 41464: a0 = a0 | a2\n 41467: a0 = a0 << 0x20\n 41470: a0 = a0 | a1\n 41473: a4 = reverse a0\n 41475: a2 = reverse a3\n 41477: a5 = reverse t1\n 41479: a3 = reverse t0\n 41481: a0 = a3 | a5\n 41484: a1 = a2 | a4\n 41487: a1 = a1 | a0\n 41490: a1 = a1 >> 0x20\n 41493: a0 = a0 | a4\n 41496: a0 = a0 << 0x20\n 41499: a0 = a0 | a1\n 41502: jump @613 if a0 == 0\n      : @612 (gas: 1)\n 41505: jump @799\n      : @613 (gas: 8)\n 41508: i32 a0 = a2 + 0\n 41510: a1 = 0x20\n 41513: u64 [s1 + 0x278] = a0\n 41517: u64 [s1 + 0x298] = a2\n 41521: u64 [s1 + 0x290] = a3\n 41525: u64 [s1 + 0x288] = a4\n 41529: u64 [s1 + 0x280] = a5\n 41533: ra = 376, jump @0\n      : @614 [@dyn 188] (gas: 43)\n 41540: u8 [a0 + 31] = 0\n 41543: u8 [a0 + 30] = 0\n 41546: u8 [a0 + 29] = 0\n 41549: u8 [a0 + 28] = 0\n 41552: u8 [a0 + 27] = 0\n 41555: u8 [a0 + 26] = 0\n 41558: u8 [a0 + 25] = 0\n 41561: u8 [a0 + 24] = 0\n 41564: u8 [a0 + 23] = 0\n 41567: u8 [a0 + 22] = 0\n 41570: u8 [a0 + 21] = 0\n 41573: u8 [a0 + 20] = 0\n 41576: u8 [a0 + 19] = 0\n 41579: u8 [a0 + 18] = 0\n 41582: u8 [a0 + 17] = 0\n 41585: u8 [a0 + 16] = 0\n 41588: u8 [a0 + 15] = 0\n 41591: u8 [a0 + 14] = 0\n 41594: u8 [a0 + 13] = 0\n 41597: u8 [a0 + 12] = 0\n 41600: u8 [a0 + 11] = 0\n 41603: u8 [a0 + 10] = 0\n 41606: u8 [a0 + 9] = 0\n 41609: u8 [a0 + 8] = 0\n 41612: u8 [a0 + 7] = 0\n 41615: u8 [a0 + 6] = 0\n 41618: u8 [a0 + 5] = 0\n 41621: u8 [a0 + 3] = 0xa0\n 41626: u8 [a0 + 2] = 0x79\n 41630: u8 [a0 + 1] = 0xc3\n 41635: u8 [a0 + 0] = 0x8\n 41638: a1 = u64 [s1 + 0x288]\n 41642: a3 = u64 [s1 + 0x280]\n 41646: a3 = a3 | a1\n 41649: a4 = 0x100000000\n 41659: a1 = 0xfffffffc\n 41669: a2 = u64 [s1 + 0x298]\n 41673: a1 = a2 <u a1\n 41676: a2 = u64 [s1 + 0x290]\n 41680: a1 = 0 if a2 != 0\n 41682: a1 = 0 if a3 != 0\n 41684: u8 [a0 + 4] = 0\n 41687: jump @616 if a1 != 0\n      : @615 (gas: 1)\n 41690: jump @799\n      : @616 (gas: 6)\n 41693: a0 = u64 [s1 + 0x278]\n 41697: i32 a0 = a0 + 0x4\n 41700: a1 = 0x20\n 41703: u64 [s1 + 0x288] = a3\n 41707: u64 [s1 + 0x280] = a4\n 41711: ra = 378, jump @0\n      : @617 [@dyn 189] (gas: 41)\n 41718: a4 = u64 [s1 + 0x288]\n 41722: a3 = u64 [s1 + 0x290]\n 41726: a2 = u64 [s1 + 0x298]\n 41730: u8 [a0 + 31] = 0x20\n 41734: u8 [a0 + 30] = 0\n 41737: u8 [a0 + 29] = 0\n 41740: u8 [a0 + 28] = 0\n 41743: u8 [a0 + 27] = 0\n 41746: u8 [a0 + 26] = 0\n 41749: u8 [a0 + 25] = 0\n 41752: u8 [a0 + 24] = 0\n 41755: u8 [a0 + 23] = 0\n 41758: u8 [a0 + 22] = 0\n 41761: u8 [a0 + 21] = 0\n 41764: u8 [a0 + 20] = 0\n 41767: u8 [a0 + 19] = 0\n 41770: u8 [a0 + 18] = 0\n 41773: u8 [a0 + 17] = 0\n 41776: u8 [a0 + 16] = 0\n 41779: u8 [a0 + 15] = 0\n 41782: u8 [a0 + 14] = 0\n 41785: u8 [a0 + 13] = 0\n 41788: u8 [a0 + 12] = 0\n 41791: u8 [a0 + 11] = 0\n 41794: u8 [a0 + 10] = 0\n 41797: u8 [a0 + 9] = 0\n 41800: u8 [a0 + 8] = 0\n 41803: u8 [a0 + 7] = 0\n 41806: u8 [a0 + 6] = 0\n 41809: u8 [a0 + 5] = 0\n 41812: u8 [a0 + 4] = 0\n 41815: u8 [a0 + 3] = 0\n 41818: u8 [a0 + 2] = 0\n 41821: u8 [a0 + 1] = 0\n 41824: a1 = u64 [s1 + 0x280]\n 41828: a1 = a1 + 0xffffffffffffffdc\n 41831: a1 = a2 <u a1\n 41834: a1 = 0 if a3 != 0\n 41836: a1 = 0 if a4 != 0\n 41838: u8 [a0 + 0] = 0\n 41840: jump @619 if a1 != 0\n      : @618 (gas: 1)\n 41843: jump @799\n      : @619 (gas: 4)\n 41846: a0 = u64 [s1 + 0x278]\n 41850: i32 a0 = a0 + 0x24\n 41853: a1 = 0x20\n 41856: ra = 380, jump @0\n      : @620 [@dyn 190] (gas: 40)\n 41863: u8 [a0 + 31] = 0x19\n 41867: u8 [a0 + 30] = 0\n 41870: u8 [a0 + 29] = 0\n 41873: u8 [a0 + 28] = 0\n 41876: u8 [a0 + 27] = 0\n 41879: u8 [a0 + 26] = 0\n 41882: u8 [a0 + 25] = 0\n 41885: u8 [a0 + 24] = 0\n 41888: u8 [a0 + 23] = 0\n 41891: u8 [a0 + 22] = 0\n 41894: u8 [a0 + 21] = 0\n 41897: u8 [a0 + 20] = 0\n 41900: u8 [a0 + 19] = 0\n 41903: u8 [a0 + 18] = 0\n 41906: u8 [a0 + 17] = 0\n 41909: u8 [a0 + 16] = 0\n 41912: u8 [a0 + 15] = 0\n 41915: u8 [a0 + 14] = 0\n 41918: u8 [a0 + 13] = 0\n 41921: u8 [a0 + 12] = 0\n 41924: u8 [a0 + 11] = 0\n 41927: u8 [a0 + 10] = 0\n 41930: u8 [a0 + 9] = 0\n 41933: u8 [a0 + 8] = 0\n 41936: u8 [a0 + 7] = 0\n 41939: u8 [a0 + 6] = 0\n 41942: u8 [a0 + 5] = 0\n 41945: u8 [a0 + 4] = 0\n 41948: u8 [a0 + 3] = 0\n 41951: u8 [a0 + 2] = 0\n 41954: u8 [a0 + 1] = 0\n 41957: a1 = 0xffffffbc\n 41967: a2 = u64 [s1 + 0x298]\n 41971: a1 = a2 <u a1\n 41974: a2 = u64 [s1 + 0x290]\n 41978: a1 = 0 if a2 != 0\n 41980: a2 = u64 [s1 + 0x288]\n 41984: a1 = 0 if a2 != 0\n 41986: u8 [a0 + 0] = 0\n 41988: jump @622 if a1 != 0\n      : @621 (gas: 1)\n 41991: jump @799\n      : @622 (gas: 4)\n 41994: a0 = u64 [s1 + 0x278]\n 41998: i32 a0 = a0 + 0x44\n 42001: a1 = 0x20\n 42004: ra = 382, jump @0\n      : @623 [@dyn 191] (gas: 36)\n 42011: u8 [a0 + 31] = 0\n 42014: u8 [a0 + 30] = 0\n 42017: u8 [a0 + 29] = 0\n 42020: u8 [a0 + 28] = 0\n 42023: u8 [a0 + 27] = 0\n 42026: u8 [a0 + 26] = 0\n 42029: u8 [a0 + 25] = 0\n 42032: u8 [a0 + 24] = 0x78\n 42036: u8 [a0 + 23] = 0x6f\n 42040: u8 [a0 + 22] = 0x62\n 42044: t0 = 0x74\n 42047: u8 [a0 + 0x15] = t0\n 42050: u8 [a0 + 20] = 0x6f\n 42054: u8 [a0 + 19] = 0x6f\n 42058: u8 [a0 + 18] = 0x6c\n 42062: u8 [a0 + 17] = 0x20\n 42066: u8 [a0 + 16] = 0x61\n 42070: u8 [a0 + 15] = 0x20\n 42074: u8 [a0 + 14] = 0x6e\n 42078: u8 [a0 + 13] = 0x69\n 42082: u8 [a0 + 12] = 0x20\n 42086: u8 [a0 + 11] = 0x64\n 42090: u8 [a0 + 10] = 0x65\n 42094: a4 = 0x73\n 42097: u8 [a0 + 0x9] = a4\n 42100: a5 = 0x75\n 42103: u8 [a0 + 0x8] = a5\n 42106: u8 [a0 + 7] = 0x20\n 42110: u8 [a0 + 0x6] = a4\n 42113: u8 [a0 + 5] = 0x69\n 42117: u8 [a0 + 4] = 0x20\n 42121: u8 [a0 + 3] = 0x6d\n 42125: u8 [a0 + 2] = 0x65\n 42129: u8 [a0 + 0x1] = t0\n 42132: u8 [a0 + 0] = 0x49\n 42135: jump @747\n      : @624 (gas: 10)\n 42138: ecalli 14 // 'return_data_size'\n 42140: a2 = a0\n 42142: u64 [s1 + 1880] = 0\n 42146: u64 [s1 + 1872] = 0\n 42150: u64 [s1 + 1864] = 0\n 42154: a0 = s1 + 0x760\n 42158: a1 = s1 + 0x740\n 42162: u64 [s1 + 0x250] = a2\n 42166: u64 [s1 + 0x740] = a2\n 42170: ra = 384, jump @1110\n      : @625 [@dyn 192] (gas: 11)\n 42177: a0 = u64 [s1 + 0x760]\n 42181: u64 [s1 + 0x270] = a0\n 42185: a0 = u64 [s1 + 0x768]\n 42189: u64 [s1 + 0x268] = a0\n 42193: a0 = u64 [s1 + 0x770]\n 42197: u64 [s1 + 0x260] = a0\n 42201: a0 = u64 [s1 + 0x778]\n 42205: u64 [s1 + 0x258] = a0\n 42209: a0 = 0x40\n 42212: a1 = 0x20\n 42215: ra = 386, jump @0\n      : @626 [@dyn 193] (gas: 111)\n 42222: a1 = u8 [a0 + 0x1]\n 42225: a2 = u8 [a0]\n 42227: a3 = u8 [a0 + 0x2]\n 42230: a4 = u8 [a0 + 0x3]\n 42233: a1 = a1 << 0x8\n 42236: a1 = a1 | a2\n 42239: a3 = a3 << 0x10\n 42242: a4 = a4 << 0x18\n 42245: a3 = a3 | a4\n 42248: a1 = a1 | a3\n 42251: a2 = u8 [a0 + 0x5]\n 42254: a3 = u8 [a0 + 0x4]\n 42257: a4 = u8 [a0 + 0x6]\n 42260: a5 = u8 [a0 + 0x7]\n 42263: a2 = a2 << 0x8\n 42266: a2 = a2 | a3\n 42269: a4 = a4 << 0x10\n 42272: a5 = a5 << 0x18\n 42275: a4 = a4 | a5\n 42278: a2 = a2 | a4\n 42281: a2 = a2 << 0x20\n 42284: t0 = a2 | a1\n 42287: a2 = u8 [a0 + 0x9]\n 42290: a3 = u8 [a0 + 0x8]\n 42293: a4 = u8 [a0 + 0xa]\n 42296: a5 = u8 [a0 + 0xb]\n 42299: a2 = a2 << 0x8\n 42302: a2 = a2 | a3\n 42305: a4 = a4 << 0x10\n 42308: a5 = a5 << 0x18\n 42311: a4 = a4 | a5\n 42314: a2 = a2 | a4\n 42317: a3 = u8 [a0 + 0xd]\n 42320: a4 = u8 [a0 + 0xc]\n 42323: a5 = u8 [a0 + 0xe]\n 42326: a1 = u8 [a0 + 0xf]\n 42329: a3 = a3 << 0x8\n 42332: a3 = a3 | a4\n 42335: a5 = a5 << 0x10\n 42338: a1 = a1 << 0x18\n 42341: a1 = a1 | a5\n 42344: a1 = a1 | a3\n 42347: a1 = a1 << 0x20\n 42350: t1 = a1 | a2\n 42353: a1 = u8 [a0 + 0x11]\n 42356: a3 = u8 [a0 + 0x10]\n 42359: a4 = u8 [a0 + 0x12]\n 42362: a5 = u8 [a0 + 0x13]\n 42365: a1 = a1 << 0x8\n 42368: a1 = a1 | a3\n 42371: a4 = a4 << 0x10\n 42374: a5 = a5 << 0x18\n 42377: a4 = a4 | a5\n 42380: a1 = a1 | a4\n 42383: a3 = u8 [a0 + 0x15]\n 42386: a4 = u8 [a0 + 0x14]\n 42389: a5 = u8 [a0 + 0x16]\n 42392: a2 = u8 [a0 + 0x17]\n 42395: a3 = a3 << 0x8\n 42398: a3 = a3 | a4\n 42401: a5 = a5 << 0x10\n 42404: a2 = a2 << 0x18\n 42407: a2 = a2 | a5\n 42410: a2 = a2 | a3\n 42413: a2 = a2 << 0x20\n 42416: a3 = a2 | a1\n 42419: a1 = u8 [a0 + 0x19]\n 42422: a2 = u8 [a0 + 0x18]\n 42425: a4 = u8 [a0 + 0x1a]\n 42428: a5 = u8 [a0 + 0x1b]\n 42431: a1 = a1 << 0x8\n 42434: a1 = a1 | a2\n 42437: a4 = a4 << 0x10\n 42440: a5 = a5 << 0x18\n 42443: a4 = a4 | a5\n 42446: a1 = a1 | a4\n 42449: a2 = u8 [a0 + 0x1d]\n 42452: a4 = u8 [a0 + 0x1c]\n 42455: a5 = u8 [a0 + 0x1e]\n 42458: a0 = u8 [a0 + 0x1f]\n 42461: a2 = a2 << 0x8\n 42464: a2 = a2 | a4\n 42467: a5 = a5 << 0x10\n 42470: a0 = a0 << 0x18\n 42473: a0 = a0 | a5\n 42476: a0 = a0 | a2\n 42479: a0 = a0 << 0x20\n 42482: a0 = a0 | a1\n 42485: a2 = reverse a0\n 42487: u64 [s1 + 0x278] = a2\n 42491: a3 = reverse a3\n 42493: u64 [s1 + 0x290] = a3\n 42497: a1 = reverse t1\n 42499: u64 [s1 + 0x288] = a1\n 42503: a4 = reverse t0\n 42505: u64 [s1 + 0x280] = a4\n 42509: a0 = u64 [s1 + 0x258]\n 42513: u64 [s1 + 0x718] = a0\n 42517: a0 = u64 [s1 + 0x260]\n 42521: u64 [s1 + 0x710] = a0\n 42525: a0 = u64 [s1 + 0x268]\n 42529: u64 [s1 + 0x708] = a0\n 42533: a0 = u64 [s1 + 0x270]\n 42537: u64 [s1 + 0x700] = a0\n 42541: u64 [s1 + 0x738] = a4\n 42545: u64 [s1 + 0x730] = a1\n 42549: u64 [s1 + 0x728] = a3\n 42553: a0 = s1 + 0x720\n 42557: a1 = s1 + 0x700\n 42561: u64 [s1 + 0x720] = a2\n 42565: ra = 388, jump @1010\n      : @627 [@dyn 194] (gas: 13)\n 42572: a1 = u64 [s1 + 0x280]\n 42576: a0 = u64 [s1 + 0x290]\n 42580: a0 = a0 | a1\n 42583: a1 = u64 [s1 + 0x278]\n 42587: a2 = a1\n 42589: a3 = u64 [s1 + 0x288]\n 42593: a1 = a1 | a3\n 42596: a1 = a1 | a0\n 42599: a1 = a1 >> 0x20\n 42602: a0 = a0 | a3\n 42605: a0 = a0 << 0x20\n 42608: a0 = a0 | a1\n 42611: jump @629 if a0 == 0\n      : @628 (gas: 1)\n 42614: jump @799\n      : @629 (gas: 4)\n 42617: i32 a0 = a2 + 0\n 42619: a1 = 0x20\n 42622: u64 [s1 + 0x270] = a0\n 42626: ra = 390, jump @0\n      : @630 [@dyn 195] (gas: 43)\n 42633: a1 = u64 [s1 + 0x250]\n 42637: a1 = reverse a1\n 42639: a2 = a1 >> 0x38\n 42642: u8 [a0 + 0x1f] = a2\n 42645: a2 = a1 >> 0x30\n 42648: u8 [a0 + 0x1e] = a2\n 42651: a2 = a1 >> 0x28\n 42654: u8 [a0 + 0x1d] = a2\n 42657: a2 = a1 >> 0x20\n 42660: u8 [a0 + 0x1c] = a2\n 42663: a2 = a1 >> 0x18\n 42666: u8 [a0 + 0x1b] = a2\n 42669: a2 = a1 >> 0x10\n 42672: u8 [a0 + 0x1a] = a2\n 42675: a2 = a1 >> 0x8\n 42678: u8 [a0 + 0x19] = a2\n 42681: u8 [a0 + 0x18] = a1\n 42684: u8 [a0 + 23] = 0\n 42687: u8 [a0 + 22] = 0\n 42690: u8 [a0 + 21] = 0\n 42693: u8 [a0 + 20] = 0\n 42696: u8 [a0 + 19] = 0\n 42699: u8 [a0 + 18] = 0\n 42702: u8 [a0 + 17] = 0\n 42705: u8 [a0 + 16] = 0\n 42708: u8 [a0 + 15] = 0\n 42711: u8 [a0 + 14] = 0\n 42714: u8 [a0 + 13] = 0\n 42717: u8 [a0 + 12] = 0\n 42720: u8 [a0 + 11] = 0\n 42723: u8 [a0 + 10] = 0\n 42726: u8 [a0 + 9] = 0\n 42729: u8 [a0 + 8] = 0\n 42732: u8 [a0 + 7] = 0\n 42735: u8 [a0 + 6] = 0\n 42738: u8 [a0 + 5] = 0\n 42741: u8 [a0 + 4] = 0\n 42744: u8 [a0 + 3] = 0\n 42747: u8 [a0 + 2] = 0\n 42750: u8 [a0 + 1] = 0\n 42753: u8 [a0 + 0] = 0\n 42755: ecalli 14 // 'return_data_size'\n 42757: fallthrough\n      : @631 (gas: 10)\n 42758: a1 = u64 [s1 + 0x288]\n 42762: a2 = u64 [s1 + 0x280]\n 42766: a1 = a1 | a2\n 42769: a2 = 0xffffffe0\n 42779: a3 = u64 [s1 + 0x278]\n 42783: a2 = a3 <u a2\n 42786: a3 = u64 [s1 + 0x290]\n 42790: a2 = 0 if a3 != 0\n 42792: a2 = 0 if a1 != 0\n 42794: jump @633 if a2 != 0\n      : @632 (gas: 1)\n 42797: jump @799\n      : @633 (gas: 3)\n 42800: a3 = a0\n 42802: a0 = a0 >> 0x20\n 42805: jump @635 if a0 == 0\n      : @634 (gas: 1)\n 42808: jump @799\n      : @635 (gas: 6)\n 42811: a0 = u64 [s1 + 0x270]\n 42815: i32 a0 = a0 + 0x20\n 42818: i32 a1 = a3 + 0\n 42820: u64 [s1 + 0x290] = a1\n 42824: u64 [s1 + 0x288] = a3\n 42828: ra = 392, jump @0\n      : @636 [@dyn 196] (gas: 9)\n 42835: a1 = s1 + 0x1a18\n 42839: a2 = u64 [s1 + 0x288]\n 42843: u32 [a1 + 0x648] = a2\n 42847: i32 a0 = a0 + 0\n 42849: a1 = s1 + 0x2000\n 42853: i32 a1 = a1 + 0x60\n 42856: a2 = 0\n 42858: ecalli 13 // 'return_data_copy'\n 42860: fallthrough\n      : @637 (gas: 5)\n 42861: a0 = s1 + 0x1a18\n 42865: a0 = i32 [a0 + 0x648]\n 42869: a2 = u64 [s1 + 0x298]\n 42873: a1 = u64 [s1 + 0x290]\n 42877: jump @799 if a0 <u a1\n      : @638 (gas: 1)\n 42881: jump @488\n      : @639 (gas: 21)\n 42884: u64 [s1 + 632] = 0\n 42888: u64 [s1 + 624] = 0\n 42892: u64 [s1 + 504] = 0\n 42896: u64 [s1 + 616] = 0\n 42900: a3 = u64 [s1 + 0x298]\n 42904: a0 = u64 [a3]\n 42906: a1 = u64 [a3 + 0x8]\n 42909: a2 = u64 [a3 + 0x10]\n 42912: a4 = u64 [a3 + 0x18]\n 42915: a5 = reverse a0\n 42917: a1 = reverse a1\n 42919: a3 = reverse a2\n 42921: ra = reverse a4\n 42923: a0 = 0xffffffe0\n 42933: u64 [s1 + 0x1b0] = a0\n 42937: t0 = u64 [s1 + 0x1a0]\n 42941: t1 = u64 [s1 + 0x198]\n 42945: t2 = u64 [s1 + 0x190]\n 42949: a0 = u64 [s1 + 0x1a8]\n 42953: u64 [s1 + 0x260] = a0\n 42957: fallthrough\n      : @640 (gas: 10)\n 42958: u64 [s1 + 0x238] = t1\n 42962: u64 [s1 + 0x240] = t0\n 42966: u64 [s1 + 0x248] = t2\n 42970: u64 [s1 + 0x280] = ra\n 42974: u64 [s1 + 0x288] = a3\n 42978: u64 [s1 + 0x290] = a1\n 42982: u64 [s1 + 0x298] = a5\n 42986: a0 = 0x40\n 42989: a1 = 0x20\n 42992: ra = 394, jump @0\n      : @641 [@dyn 197] (gas: 102)\n 42999: a1 = u8 [a0 + 0x9]\n 43002: a2 = u8 [a0 + 0x8]\n 43005: a3 = u8 [a0 + 0xa]\n 43008: a4 = u8 [a0 + 0xb]\n 43011: a1 = a1 << 0x8\n 43014: a1 = a1 | a2\n 43017: a3 = a3 << 0x10\n 43020: a4 = a4 << 0x18\n 43023: a3 = a3 | a4\n 43026: a1 = a1 | a3\n 43029: a2 = u8 [a0 + 0xd]\n 43032: a3 = u8 [a0 + 0xc]\n 43035: a4 = u8 [a0 + 0xe]\n 43038: a5 = u8 [a0 + 0xf]\n 43041: a2 = a2 << 0x8\n 43044: a2 = a2 | a3\n 43047: a4 = a4 << 0x10\n 43050: a5 = a5 << 0x18\n 43053: a4 = a4 | a5\n 43056: a2 = a2 | a4\n 43059: a2 = a2 << 0x20\n 43062: t0 = a2 | a1\n 43065: a1 = u8 [a0 + 0x1]\n 43068: a2 = u8 [a0]\n 43070: a3 = u8 [a0 + 0x2]\n 43073: a4 = u8 [a0 + 0x3]\n 43076: a1 = a1 << 0x8\n 43079: a1 = a1 | a2\n 43082: a3 = a3 << 0x10\n 43085: a4 = a4 << 0x18\n 43088: a3 = a3 | a4\n 43091: a1 = a1 | a3\n 43094: a2 = u8 [a0 + 0x5]\n 43097: a3 = u8 [a0 + 0x4]\n 43100: a4 = u8 [a0 + 0x6]\n 43103: a5 = u8 [a0 + 0x7]\n 43106: a2 = a2 << 0x8\n 43109: a2 = a2 | a3\n 43112: a4 = a4 << 0x10\n 43115: a5 = a5 << 0x18\n 43118: a4 = a4 | a5\n 43121: a2 = a2 | a4\n 43124: a2 = a2 << 0x20\n 43127: t1 = a2 | a1\n 43130: a1 = u8 [a0 + 0x19]\n 43133: a2 = u8 [a0 + 0x18]\n 43136: a3 = u8 [a0 + 0x1a]\n 43139: a4 = u8 [a0 + 0x1b]\n 43142: a1 = a1 << 0x8\n 43145: a1 = a1 | a2\n 43148: a3 = a3 << 0x10\n 43151: a4 = a4 << 0x18\n 43154: a3 = a3 | a4\n 43157: a1 = a1 | a3\n 43160: a2 = u8 [a0 + 0x1d]\n 43163: a3 = u8 [a0 + 0x1c]\n 43166: a4 = u8 [a0 + 0x1e]\n 43169: a5 = u8 [a0 + 0x1f]\n 43172: a2 = a2 << 0x8\n 43175: a2 = a2 | a3\n 43178: a4 = a4 << 0x10\n 43181: a5 = a5 << 0x18\n 43184: a4 = a4 | a5\n 43187: a2 = a2 | a4\n 43190: a2 = a2 << 0x20\n 43193: a5 = a2 | a1\n 43196: a1 = u8 [a0 + 0x11]\n 43199: a2 = u8 [a0 + 0x10]\n 43202: a3 = u8 [a0 + 0x12]\n 43205: a4 = u8 [a0 + 0x13]\n 43208: a1 = a1 << 0x8\n 43211: a1 = a1 | a2\n 43214: a3 = a3 << 0x10\n 43217: a4 = a4 << 0x18\n 43220: a3 = a3 | a4\n 43223: a1 = a1 | a3\n 43226: a2 = u8 [a0 + 0x15]\n 43229: a3 = u8 [a0 + 0x14]\n 43232: a4 = u8 [a0 + 0x16]\n 43235: a0 = u8 [a0 + 0x17]\n 43238: a2 = a2 << 0x8\n 43241: a2 = a2 | a3\n 43244: a4 = a4 << 0x10\n 43247: a0 = a0 << 0x18\n 43250: a0 = a0 | a4\n 43253: a0 = a0 | a2\n 43256: a0 = a0 << 0x20\n 43259: a0 = a0 | a1\n 43262: u64 [s1 + 0x1d8] = a0\n 43266: a1 = reverse a0\n 43268: u64 [s1 + 0x1e0] = a5\n 43272: a3 = reverse a5\n 43274: u64 [s1 + 0x1e8] = t1\n 43278: a5 = reverse t1\n 43280: u64 [s1 + 0x1f0] = t0\n 43284: a4 = reverse t0\n 43286: a2 = a4 | a5\n 43289: a0 = a3 <u 0xffffffffffffffc0\n 43292: a0 = 0 if a1 != 0\n 43294: u64 [s1 + 0x200] = a2\n 43298: a0 = 0 if a2 != 0\n 43300: jump @643 if a0 != 0\n      : @642 (gas: 1)\n 43303: jump @898\n      : @643 (gas: 19)\n 43306: a0 = a3 + 0x40\n 43309: u64 [s1 + 0x208] = a0\n 43313: a0 = a0 <u a3\n 43316: a2 = a1 + a0\n 43319: u64 [s1 + 0x210] = a2\n 43323: u64 [s1 + 0x258] = a1\n 43327: a1 = a2 <u a1\n 43330: a1 = a0 if a0 == 0\n 43333: a1 = a1 + a4\n 43336: u64 [s1 + 0x218] = a1\n 43340: a0 = a1 <u a4\n 43343: a0 = a0 + a5\n 43346: u64 [s1 + 0x220] = a0\n 43350: a0 = 0x40\n 43353: a1 = 0x20\n 43356: u64 [s1 + 0x250] = a3\n 43360: u64 [s1 + 0x228] = a4\n 43364: u64 [s1 + 0x230] = a5\n 43368: ra = 396, jump @0\n      : @644 [@dyn 198] (gas: 92)\n 43375: a1 = u64 [s1 + 0x208]\n 43379: a1 = reverse a1\n 43381: a2 = a1 >> 0x38\n 43384: u8 [a0 + 0x1f] = a2\n 43387: a2 = a1 >> 0x30\n 43390: u8 [a0 + 0x1e] = a2\n 43393: a2 = a1 >> 0x28\n 43396: u8 [a0 + 0x1d] = a2\n 43399: a2 = a1 >> 0x20\n 43402: u8 [a0 + 0x1c] = a2\n 43405: a2 = a1 >> 0x18\n 43408: u8 [a0 + 0x1b] = a2\n 43411: a2 = a1 >> 0x10\n 43414: u8 [a0 + 0x1a] = a2\n 43417: a2 = u64 [s1 + 0x210]\n 43421: a2 = reverse a2\n 43423: u8 [a0 + 0x18] = a1\n 43426: a1 = a1 >> 0x8\n 43429: u8 [a0 + 0x19] = a1\n 43432: a1 = a2 >> 0x38\n 43435: u8 [a0 + 0x17] = a1\n 43438: a1 = a2 >> 0x30\n 43441: u8 [a0 + 0x16] = a1\n 43444: a1 = a2 >> 0x28\n 43447: u8 [a0 + 0x15] = a1\n 43450: a1 = a2 >> 0x20\n 43453: u8 [a0 + 0x14] = a1\n 43456: a1 = a2 >> 0x18\n 43459: u8 [a0 + 0x13] = a1\n 43462: a1 = a2 >> 0x10\n 43465: u8 [a0 + 0x12] = a1\n 43468: a1 = u64 [s1 + 0x218]\n 43472: a1 = reverse a1\n 43474: u8 [a0 + 0x10] = a2\n 43477: a2 = a2 >> 0x8\n 43480: u8 [a0 + 0x11] = a2\n 43483: a2 = a1 >> 0x38\n 43486: u8 [a0 + 0xf] = a2\n 43489: a2 = a1 >> 0x30\n 43492: u8 [a0 + 0xe] = a2\n 43495: a2 = a1 >> 0x28\n 43498: u8 [a0 + 0xd] = a2\n 43501: a2 = a1 >> 0x20\n 43504: u8 [a0 + 0xc] = a2\n 43507: a2 = a1 >> 0x18\n 43510: u8 [a0 + 0xb] = a2\n 43513: a2 = a1 >> 0x10\n 43516: u8 [a0 + 0xa] = a2\n 43519: a2 = u64 [s1 + 0x220]\n 43523: a2 = reverse a2\n 43525: u8 [a0 + 0x8] = a1\n 43528: a1 = a1 >> 0x8\n 43531: u8 [a0 + 0x9] = a1\n 43534: a1 = a2 >> 0x38\n 43537: u8 [a0 + 0x7] = a1\n 43540: a1 = a2 >> 0x30\n 43543: u8 [a0 + 0x6] = a1\n 43546: a1 = a2 >> 0x28\n 43549: u8 [a0 + 0x5] = a1\n 43552: a1 = a2 >> 0x20\n 43555: u8 [a0 + 0x4] = a1\n 43558: a1 = a2 >> 0x18\n 43561: u8 [a0 + 0x3] = a1\n 43564: a1 = a2 >> 0x10\n 43567: u8 [a0 + 0x2] = a1\n 43570: u8 [a0] = a2\n 43572: a2 = a2 >> 0x8\n 43575: u8 [a0 + 0x1] = a2\n 43578: a0 = s1 + 0x2218\n 43582: a1 = u64 [s1 + 0x298]\n 43586: u64 [a0 + 0x200] = a1\n 43590: a1 = u64 [s1 + 0x290]\n 43594: u64 [a0 + 0x1f8] = a1\n 43598: a1 = u64 [s1 + 0x288]\n 43602: u64 [a0 + 0x1f0] = a1\n 43606: a1 = u64 [s1 + 0x280]\n 43610: u64 [a0 + 0x1e8] = a1\n 43614: u64 [a0 + 544] = 0\n 43618: u64 [a0 + 536] = 0\n 43622: u64 [a0 + 528] = 0\n 43626: u64 [a0 + 520] = 0\n 43630: u32 [a0 + 552] = 0x20\n 43635: a0 = s1 + 0x2000\n 43639: i32 a1 = a0 + 0x400\n 43643: a0 = s1 + 0x2000\n 43647: i32 a3 = a0 + 0x420\n 43651: a0 = s1 + 0x2000\n 43655: i32 a4 = a0 + 0x440\n 43659: a2 = 0xffffffffffffffff\n 43662: a0 = 0\n 43664: ecalli 9 // 'get_storage'\n 43666: fallthrough\n      : @645 (gas: 12)\n 43667: a2 = u64 [s1 + 0x250]\n 43671: a3 = u64 [s1 + 0x228]\n 43675: a0 = a2 | a3\n 43678: a1 = u64 [s1 + 0x258]\n 43682: a4 = u64 [s1 + 0x230]\n 43686: a1 = a1 | a4\n 43689: a0 = a0 | a1\n 43692: a0 = a0 >> 0x20\n 43695: a1 = a1 | a3\n 43698: a1 = a1 << 0x20\n 43701: a0 = a0 | a1\n 43704: jump @647 if a0 == 0\n      : @646 (gas: 1)\n 43707: jump @799\n      : @647 (gas: 13)\n 43710: a0 = s1 + 0x2218\n 43714: a1 = u64 [a0 + 0x220]\n 43718: u64 [s1 + 0x228] = a1\n 43722: a1 = u64 [a0 + 0x218]\n 43726: u64 [s1 + 0x230] = a1\n 43730: a1 = u64 [a0 + 0x210]\n 43734: u64 [s1 + 0x220] = a1\n 43738: a0 = u64 [a0 + 0x208]\n 43742: u64 [s1 + 0x218] = a0\n 43746: i32 a0 = a2 + 0\n 43748: a1 = 0x20\n 43751: u64 [s1 + 0x210] = a0\n 43755: ra = 398, jump @0\n      : @648 [@dyn 199] (gas: 100)\n 43762: a1 = u64 [s1 + 0x218]\n 43766: a1 = reverse a1\n 43768: a2 = a1 >> 0x38\n 43771: u8 [a0 + 0x1f] = a2\n 43774: a2 = a1 >> 0x30\n 43777: u8 [a0 + 0x1e] = a2\n 43780: a2 = a1 >> 0x28\n 43783: u8 [a0 + 0x1d] = a2\n 43786: a2 = a1 >> 0x20\n 43789: u8 [a0 + 0x1c] = a2\n 43792: a2 = a1 >> 0x18\n 43795: u8 [a0 + 0x1b] = a2\n 43798: a2 = a1 >> 0x10\n 43801: u8 [a0 + 0x1a] = a2\n 43804: a2 = a1 >> 0x8\n 43807: u8 [a0 + 0x19] = a2\n 43810: a2 = u64 [s1 + 0x220]\n 43814: a2 = reverse a2\n 43816: u8 [a0 + 0x18] = a1\n 43819: a1 = a2 >> 0x38\n 43822: u8 [a0 + 0x17] = a1\n 43825: a1 = a2 >> 0x30\n 43828: u8 [a0 + 0x16] = a1\n 43831: a1 = a2 >> 0x28\n 43834: u8 [a0 + 0x15] = a1\n 43837: a1 = a2 >> 0x20\n 43840: u8 [a0 + 0x14] = a1\n 43843: a1 = a2 >> 0x18\n 43846: u8 [a0 + 0x13] = a1\n 43849: a1 = a2 >> 0x10\n 43852: u8 [a0 + 0x12] = a1\n 43855: a1 = u64 [s1 + 0x228]\n 43859: a1 = reverse a1\n 43861: a3 = u64 [s1 + 0x230]\n 43865: a3 = reverse a3\n 43867: u8 [a0 + 0x10] = a2\n 43870: a2 = a2 >> 0x8\n 43873: u8 [a0 + 0x11] = a2\n 43876: u8 [a0 + 0x8] = a3\n 43879: a2 = a3 >> 0x38\n 43882: u8 [a0 + 0xf] = a2\n 43885: a2 = a3 >> 0x30\n 43888: u8 [a0 + 0xe] = a2\n 43891: a2 = a3 >> 0x28\n 43894: u8 [a0 + 0xd] = a2\n 43897: a2 = a3 >> 0x20\n 43900: u8 [a0 + 0xc] = a2\n 43903: a2 = a3 >> 0x18\n 43906: u8 [a0 + 0xb] = a2\n 43909: a2 = a3 >> 0x10\n 43912: u8 [a0 + 0xa] = a2\n 43915: a3 = a3 >> 0x8\n 43918: u8 [a0 + 0x9] = a3\n 43921: u8 [a0] = a1\n 43923: a2 = a1 >> 0x38\n 43926: u8 [a0 + 0x7] = a2\n 43929: a2 = a1 >> 0x30\n 43932: u8 [a0 + 0x6] = a2\n 43935: a2 = a1 >> 0x28\n 43938: u8 [a0 + 0x5] = a2\n 43941: a2 = a1 >> 0x20\n 43944: u8 [a0 + 0x4] = a2\n 43947: a2 = a1 >> 0x18\n 43950: u8 [a0 + 0x3] = a2\n 43953: a2 = a1 >> 0x10\n 43956: u8 [a0 + 0x2] = a2\n 43959: a1 = a1 >> 0x8\n 43962: u8 [a0 + 0x1] = a1\n 43965: a0 = u64 [s1 + 0x280]\n 43969: a0 = a0 + 0x1\n 43972: a1 = a0 <u 0x1\n 43975: a2 = u64 [s1 + 0x288]\n 43979: a1 = a1 + a2\n 43982: a2 = a0 | a1\n 43985: a2 = a2 <u 0x1\n 43988: a3 = u64 [s1 + 0x290]\n 43992: a2 = a2 + a3\n 43995: a3 = a2 <u a3\n 43998: a4 = u64 [s1 + 0x298]\n 44002: a3 = a3 + a4\n 44005: a4 = s1 + 0x2218\n 44009: u64 [a4 + 0x200] = a3\n 44013: u64 [a4 + 0x1f8] = a2\n 44017: u64 [a4 + 0x1f0] = a1\n 44021: u64 [a4 + 0x1e8] = a0\n 44025: u64 [a4 + 544] = 0\n 44029: u64 [a4 + 536] = 0\n 44033: u64 [a4 + 528] = 0\n 44037: u64 [a4 + 520] = 0\n 44041: u32 [a4 + 552] = 0x20\n 44046: a0 = s1 + 0x2000\n 44050: i32 a1 = a0 + 0x400\n 44054: a0 = s1 + 0x2000\n 44058: i32 a3 = a0 + 0x420\n 44062: a0 = s1 + 0x2000\n 44066: i32 a4 = a0 + 0x440\n 44070: a2 = 0xffffffffffffffff\n 44073: a0 = 0\n 44075: ecalli 9 // 'get_storage'\n 44077: fallthrough\n      : @649 (gas: 8)\n 44078: a0 = u64 [s1 + 0x1b0]\n 44082: a1 = u64 [s1 + 0x250]\n 44086: a0 = a1 <u a0\n 44089: a1 = u64 [s1 + 0x258]\n 44093: a0 = 0 if a1 != 0\n 44095: a1 = u64 [s1 + 0x200]\n 44099: a0 = 0 if a1 != 0\n 44101: jump @651 if a0 != 0\n      : @650 (gas: 1)\n 44104: jump @799\n      : @651 (gas: 13)\n 44107: a0 = s1 + 0x2218\n 44111: a1 = u64 [a0 + 0x220]\n 44115: u64 [s1 + 0x228] = a1\n 44119: a1 = u64 [a0 + 0x218]\n 44123: u64 [s1 + 0x230] = a1\n 44127: a1 = u64 [a0 + 0x210]\n 44131: u64 [s1 + 0x250] = a1\n 44135: a0 = u64 [a0 + 0x208]\n 44139: u64 [s1 + 0x258] = a0\n 44143: a0 = u64 [s1 + 0x210]\n 44147: i32 a0 = a0 + 0x20\n 44150: a1 = 0x20\n 44153: ra = 400, jump @0\n      : @652 [@dyn 200] (gas: 83)\n 44160: a1 = u64 [s1 + 0x228]\n 44164: a1 = reverse a1\n 44166: a2 = u64 [s1 + 0x230]\n 44170: a2 = reverse a2\n 44172: a3 = u64 [s1 + 0x250]\n 44176: a3 = reverse a3\n 44178: a4 = u64 [s1 + 0x258]\n 44182: a4 = reverse a4\n 44184: a5 = a4 >> 0x38\n 44187: u8 [a0 + 0x1f] = a5\n 44190: a5 = a4 >> 0x30\n 44193: u8 [a0 + 0x1e] = a5\n 44196: a5 = a4 >> 0x28\n 44199: u8 [a0 + 0x1d] = a5\n 44202: a5 = a4 >> 0x20\n 44205: u8 [a0 + 0x1c] = a5\n 44208: a5 = a4 >> 0x18\n 44211: u8 [a0 + 0x1b] = a5\n 44214: a5 = a4 >> 0x10\n 44217: u8 [a0 + 0x1a] = a5\n 44220: a5 = a4 >> 0x8\n 44223: u8 [a0 + 0x19] = a5\n 44226: u8 [a0 + 0x18] = a4\n 44229: u8 [a0 + 0x10] = a3\n 44232: a4 = a3 >> 0x38\n 44235: u8 [a0 + 0x17] = a4\n 44238: a4 = a3 >> 0x30\n 44241: u8 [a0 + 0x16] = a4\n 44244: a4 = a3 >> 0x28\n 44247: u8 [a0 + 0x15] = a4\n 44250: a4 = a3 >> 0x20\n 44253: u8 [a0 + 0x14] = a4\n 44256: a4 = a3 >> 0x18\n 44259: u8 [a0 + 0x13] = a4\n 44262: a4 = a3 >> 0x10\n 44265: u8 [a0 + 0x12] = a4\n 44268: a3 = a3 >> 0x8\n 44271: u8 [a0 + 0x11] = a3\n 44274: u8 [a0 + 0x8] = a2\n 44277: a3 = a2 >> 0x38\n 44280: u8 [a0 + 0xf] = a3\n 44283: a3 = a2 >> 0x30\n 44286: u8 [a0 + 0xe] = a3\n 44289: a3 = a2 >> 0x28\n 44292: u8 [a0 + 0xd] = a3\n 44295: a3 = a2 >> 0x20\n 44298: u8 [a0 + 0xc] = a3\n 44301: a3 = a2 >> 0x18\n 44304: u8 [a0 + 0xb] = a3\n 44307: a3 = a2 >> 0x10\n 44310: u8 [a0 + 0xa] = a3\n 44313: a2 = a2 >> 0x8\n 44316: u8 [a0 + 0x9] = a2\n 44319: u8 [a0] = a1\n 44321: a2 = a1 >> 0x38\n 44324: u8 [a0 + 0x7] = a2\n 44327: a2 = a1 >> 0x30\n 44330: u8 [a0 + 0x6] = a2\n 44333: a2 = a1 >> 0x28\n 44336: u8 [a0 + 0x5] = a2\n 44339: a2 = a1 >> 0x20\n 44342: u8 [a0 + 0x4] = a2\n 44345: a2 = a1 >> 0x18\n 44348: u8 [a0 + 0x3] = a2\n 44351: a2 = a1 >> 0x10\n 44354: u8 [a0 + 0x2] = a2\n 44357: a1 = a1 >> 0x8\n 44360: a5 = u64 [s1 + 0x248]\n 44364: a4 = u64 [s1 + 0x240]\n 44368: a2 = a4 | a5\n 44371: t0 = u64 [s1 + 0x260]\n 44375: t1 = u64 [s1 + 0x238]\n 44379: a3 = t1 | t0\n 44382: a2 = a2 | a3\n 44385: a2 = a2 >> 0x20\n 44388: a3 = a3 | a5\n 44391: a3 = a3 << 0x20\n 44394: a2 = a2 | a3\n 44397: u8 [a0 + 0x1] = a1\n 44400: a0 = u64 [s1 + 0x278]\n 44404: a3 = u64 [s1 + 0x270]\n 44408: a1 = u64 [s1 + 0x268]\n 44412: jump @654 if a2 == 0\n      : @653 (gas: 1)\n 44415: jump @799\n      : @654 (gas: 7)\n 44418: u64 [s1 + 0x278] = a0\n 44422: i32 a0 = a4 + 0\n 44424: u64 [s1 + 0x268] = a1\n 44428: a1 = 0x20\n 44431: u64 [s1 + 0x260] = t0\n 44435: u64 [s1 + 0x270] = a3\n 44439: ra = 402, jump @0\n      : @655 [@dyn 201] (gas: 124)\n 44446: a2 = u64 [s1 + 0x1f0]\n 44450: a1 = a2 >> 0x38\n 44453: u8 [a0 + 0xf] = a1\n 44456: a1 = a2 >> 0x30\n 44459: u8 [a0 + 0xe] = a1\n 44462: a1 = a2 >> 0x28\n 44465: u8 [a0 + 0xd] = a1\n 44468: a1 = a2 >> 0x20\n 44471: u8 [a0 + 0xc] = a1\n 44474: a1 = a2 >> 0x18\n 44477: u8 [a0 + 0xb] = a1\n 44480: a1 = a2 >> 0x10\n 44483: u8 [a0 + 0xa] = a1\n 44486: a1 = a2 >> 0x8\n 44489: u8 [a0 + 0x9] = a1\n 44492: u8 [a0 + 0x8] = a2\n 44495: a2 = u64 [s1 + 0x1e8]\n 44499: a1 = a2 >> 0x38\n 44502: u8 [a0 + 0x7] = a1\n 44505: a1 = a2 >> 0x30\n 44508: u8 [a0 + 0x6] = a1\n 44511: a1 = a2 >> 0x28\n 44514: u8 [a0 + 0x5] = a1\n 44517: a1 = a2 >> 0x20\n 44520: u8 [a0 + 0x4] = a1\n 44523: a1 = a2 >> 0x18\n 44526: u8 [a0 + 0x3] = a1\n 44529: a1 = a2 >> 0x10\n 44532: u8 [a0 + 0x2] = a1\n 44535: a1 = a2 >> 0x8\n 44538: u8 [a0 + 0x1] = a1\n 44541: u8 [a0] = a2\n 44543: a3 = u64 [s1 + 0x1d8]\n 44547: a1 = a3 >> 0x38\n 44550: u8 [a0 + 0x17] = a1\n 44553: a1 = a3 >> 0x30\n 44556: u8 [a0 + 0x16] = a1\n 44559: a1 = a3 >> 0x28\n 44562: u8 [a0 + 0x15] = a1\n 44565: a1 = a3 >> 0x20\n 44568: u8 [a0 + 0x14] = a1\n 44571: a1 = a3 >> 0x18\n 44574: u8 [a0 + 0x13] = a1\n 44577: a1 = a3 >> 0x10\n 44580: u8 [a0 + 0x12] = a1\n 44583: u8 [a0 + 0x10] = a3\n 44586: a2 = u64 [s1 + 0x1e0]\n 44590: u8 [a0 + 0x18] = a2\n 44593: a1 = a3 >> 0x8\n 44596: u8 [a0 + 0x11] = a1\n 44599: a1 = a2 >> 0x38\n 44602: u8 [a0 + 0x1f] = a1\n 44605: a1 = a2 >> 0x30\n 44608: u8 [a0 + 0x1e] = a1\n 44611: a1 = a2 >> 0x28\n 44614: u8 [a0 + 0x1d] = a1\n 44617: a1 = a2 >> 0x20\n 44620: u8 [a0 + 0x1c] = a1\n 44623: a1 = a2 >> 0x18\n 44626: u8 [a0 + 0x1b] = a1\n 44629: a1 = a2 >> 0x10\n 44632: u8 [a0 + 0x1a] = a1\n 44635: a1 = a2 >> 0x8\n 44638: u8 [a0 + 0x19] = a1\n 44641: a0 = u64 [s1 + 0x240]\n 44645: t0 = a0 + 0x20\n 44648: a2 = t0 <u a0\n 44651: a0 = u64 [s1 + 0x238]\n 44655: t1 = a0 + a2\n 44658: a3 = t1 <u a0\n 44661: a3 = a2 if a2 == 0\n 44664: a0 = u64 [s1 + 0x248]\n 44668: t2 = a0 + a3\n 44671: a3 = t2 <u a0\n 44674: a0 = u64 [s1 + 0x260]\n 44678: a0 = a0 + a3\n 44681: u64 [s1 + 0x260] = a0\n 44685: a2 = u64 [s1 + 0x278]\n 44689: a2 = a2 + 0x1\n 44692: a3 = a2 <u 0x1\n 44695: a5 = u64 [s1 + 0x270]\n 44699: a5 = a5 + a3\n 44702: a3 = a2 | a5\n 44705: a3 = a3 <u 0x1\n 44708: a0 = u64 [s1 + 0x1f8]\n 44712: a3 = a3 + a0\n 44715: a4 = a3 <u a0\n 44718: a1 = u64 [s1 + 0x268]\n 44722: a1 = a1 + a4\n 44725: a0 = u64 [s1 + 0x1c8]\n 44729: u64 [s1 + 0x278] = a2\n 44733: a4 = a2 <u a0\n 44736: a0 = u64 [s1 + 0x1d0]\n 44740: a2 = a5 ^ a0\n 44743: u64 [s1 + 0x270] = a5\n 44747: a0 = a5 <u a0\n 44750: a0 = a4 if a2 == 0\n 44753: a5 = u64 [s1 + 0x1b8]\n 44757: ra = a3 <u a5\n 44760: a2 = u64 [s1 + 0x1c0]\n 44764: a4 = a1\n 44766: a1 = a1 ^ a2\n 44769: u64 [s1 + 0x268] = a4\n 44773: a4 = a4 <u a2\n 44776: a4 = ra if a1 == 0\n 44779: a5 = a5 ^ a3\n 44782: a1 = a1 | a5\n 44785: a4 = a0 if a1 == 0\n 44788: a0 = u64 [s1 + 0x280]\n 44792: ra = a0 + 0x2\n 44795: a1 = ra <u a0\n 44798: a2 = u64 [s1 + 0x288]\n 44802: a0 = a2 + a1\n 44805: a2 = a0 <u a2\n 44808: a2 = a1 if a1 == 0\n 44811: a1 = u64 [s1 + 0x290]\n 44815: a2 = a2 + a1\n 44818: a1 = a2 <u a1\n 44821: a5 = u64 [s1 + 0x298]\n 44825: a5 = a5 + a1\n 44828: u64 [s1 + 0x1f8] = a3\n 44832: a3 = a0\n 44834: a1 = a2\n 44836: jump @640 if a4 != 0\n      : @656 (gas: 1)\n 44840: jump @427\n      : @657 (gas: 24)\n 44843: a0 = s1 + 0x2000\n 44847: i32 a0 = a0 + 0x2e0\n 44851: ecalli 2 // 'block_number'\n 44853: a3 = s1 + 0x2218\n 44857: a0 = u64 [a3 + 0xd0]\n 44861: a1 = u64 [a3 + 0xc8]\n 44865: a2 = u64 [a3 + 0xd8]\n 44869: a3 = u64 [a3 + 0xe0]\n 44873: a4 = a1 | a0\n 44876: a4 = a4 <u 0x1\n 44879: a5 = a2 <u a4\n 44882: a3 = a3 - a5\n 44885: u64 [s1 + 0x298] = a3\n 44889: a2 = a2 - a4\n 44892: u64 [s1 + 0x290] = a2\n 44896: a2 = a1 <u 0x1\n 44899: a0 = a0 - a2\n 44902: u64 [s1 + 0x288] = a0\n 44906: a1 = a1 + 0xffffffffffffffff\n 44909: u64 [s1 + 0x280] = a1\n 44913: a0 = s1 + 0x2000\n 44917: i32 a0 = a0 + 0x300\n 44921: ecalli 2 // 'block_number'\n 44923: fallthrough\n      : @658 (gas: 21)\n 44924: a3 = s1 + 0x2218\n 44928: a0 = u64 [a3 + 0xf0]\n 44932: a1 = u64 [a3 + 0x100]\n 44936: a2 = u64 [a3 + 0xe8]\n 44940: t0 = u64 [a3 + 0xf8]\n 44944: a3 = u64 [s1 + 0x288]\n 44948: a4 = a3 ^ a0\n 44951: a0 = a0 <u a3\n 44954: a3 = u64 [s1 + 0x280]\n 44958: a2 = a2 <u a3\n 44961: a2 = a0 if a4 != 0\n 44964: a5 = u64 [s1 + 0x290]\n 44968: a0 = t0 <u a5\n 44971: a4 = u64 [s1 + 0x298]\n 44975: a3 = a4 ^ a1\n 44978: a1 = a1 <u a4\n 44981: a1 = a0 if a3 == 0\n 44984: a0 = a5 ^ t0\n 44987: a0 = a0 | a3\n 44990: a1 = a2 if a0 == 0\n 44993: jump @660 if a1 == 0\n      : @659 (gas: 1)\n 44996: jump @934\n      : @660 (gas: 3)\n 44999: a0 = 0x40\n 45002: a1 = 0x20\n 45005: ra = 404, jump @0\n      : @661 [@dyn 202] (gas: 123)\n 45012: a1 = u8 [a0 + 0x19]\n 45015: a2 = u8 [a0 + 0x18]\n 45018: a3 = u8 [a0 + 0x1a]\n 45021: a4 = u8 [a0 + 0x1b]\n 45024: a1 = a1 << 0x8\n 45027: a1 = a1 | a2\n 45030: a3 = a3 << 0x10\n 45033: a4 = a4 << 0x18\n 45036: a3 = a3 | a4\n 45039: a1 = a1 | a3\n 45042: a2 = u8 [a0 + 0x1d]\n 45045: a3 = u8 [a0 + 0x1c]\n 45048: a4 = u8 [a0 + 0x1e]\n 45051: a5 = u8 [a0 + 0x1f]\n 45054: a2 = a2 << 0x8\n 45057: a2 = a2 | a3\n 45060: a4 = a4 << 0x10\n 45063: a5 = a5 << 0x18\n 45066: a4 = a4 | a5\n 45069: a2 = a2 | a4\n 45072: a2 = a2 << 0x20\n 45075: t0 = a2 | a1\n 45078: a2 = u8 [a0 + 0x11]\n 45081: a3 = u8 [a0 + 0x10]\n 45084: a4 = u8 [a0 + 0x12]\n 45087: a5 = u8 [a0 + 0x13]\n 45090: a2 = a2 << 0x8\n 45093: a2 = a2 | a3\n 45096: a4 = a4 << 0x10\n 45099: a5 = a5 << 0x18\n 45102: a4 = a4 | a5\n 45105: a2 = a2 | a4\n 45108: a3 = u8 [a0 + 0x15]\n 45111: a4 = u8 [a0 + 0x14]\n 45114: a5 = u8 [a0 + 0x16]\n 45117: a1 = u8 [a0 + 0x17]\n 45120: a3 = a3 << 0x8\n 45123: a3 = a3 | a4\n 45126: a5 = a5 << 0x10\n 45129: a1 = a1 << 0x18\n 45132: a1 = a1 | a5\n 45135: a1 = a1 | a3\n 45138: a1 = a1 << 0x20\n 45141: t1 = a1 | a2\n 45144: a1 = u8 [a0 + 0x9]\n 45147: a3 = u8 [a0 + 0x8]\n 45150: a4 = u8 [a0 + 0xa]\n 45153: a5 = u8 [a0 + 0xb]\n 45156: a1 = a1 << 0x8\n 45159: a1 = a1 | a3\n 45162: a4 = a4 << 0x10\n 45165: a5 = a5 << 0x18\n 45168: a4 = a4 | a5\n 45171: a1 = a1 | a4\n 45174: a3 = u8 [a0 + 0xd]\n 45177: a4 = u8 [a0 + 0xc]\n 45180: a5 = u8 [a0 + 0xe]\n 45183: a2 = u8 [a0 + 0xf]\n 45186: a3 = a3 << 0x8\n 45189: a3 = a3 | a4\n 45192: a5 = a5 << 0x10\n 45195: a2 = a2 << 0x18\n 45198: a2 = a2 | a5\n 45201: a2 = a2 | a3\n 45204: a2 = a2 << 0x20\n 45207: a3 = a2 | a1\n 45210: a1 = u8 [a0 + 0x1]\n 45213: a2 = u8 [a0]\n 45215: a4 = u8 [a0 + 0x2]\n 45218: a5 = u8 [a0 + 0x3]\n 45221: a1 = a1 << 0x8\n 45224: a1 = a1 | a2\n 45227: a4 = a4 << 0x10\n 45230: a5 = a5 << 0x18\n 45233: a4 = a4 | a5\n 45236: a1 = a1 | a4\n 45239: a2 = u8 [a0 + 0x5]\n 45242: a4 = u8 [a0 + 0x4]\n 45245: a5 = u8 [a0 + 0x6]\n 45248: a0 = u8 [a0 + 0x7]\n 45251: a2 = a2 << 0x8\n 45254: a2 = a2 | a4\n 45257: a5 = a5 << 0x10\n 45260: a0 = a0 << 0x18\n 45263: a0 = a0 | a5\n 45266: a0 = a0 | a2\n 45269: a0 = a0 << 0x20\n 45272: a0 = a0 | a1\n 45275: a2 = reverse t1\n 45277: a1 = reverse t0\n 45279: a4 = a1 + 0x20\n 45282: u64 [s1 + 0x268] = a4\n 45286: u64 [s1 + 0x278] = a1\n 45290: a1 = a4 <u a1\n 45293: a4 = a2 + a1\n 45296: u64 [s1 + 0x270] = a4\n 45300: u64 [s1 + 0x260] = a2\n 45304: a2 = a4 <u a2\n 45307: a2 = a1 if a1 == 0\n 45310: a1 = s1 + 0x2218\n 45314: a4 = u64 [s1 + 0x280]\n 45318: u64 [a1 + 0x128] = a4\n 45322: a4 = u64 [s1 + 0x288]\n 45326: u64 [a1 + 0x130] = a4\n 45330: a4 = u64 [s1 + 0x290]\n 45334: u64 [a1 + 0x138] = a4\n 45338: a4 = reverse a0\n 45340: a0 = reverse a3\n 45342: a3 = a0 + a2\n 45345: u64 [s1 + 0x290] = a3\n 45349: a2 = u64 [s1 + 0x298]\n 45353: u64 [a1 + 0x140] = a2\n 45357: u64 [s1 + 0x288] = a0\n 45361: a0 = a3 <u a0\n 45364: u64 [s1 + 0x280] = a4\n 45368: a0 = a0 + a4\n 45371: u64 [s1 + 0x298] = a0\n 45375: a0 = s1 + 0x2000\n 45379: i32 a0 = a0 + 0x340\n 45383: a1 = s1 + 0x2000\n 45387: i32 a1 = a1 + 0x320\n 45391: ecalli 1 // 'block_hash'\n 45393: fallthrough\n      : @662 (gas: 12)\n 45394: a2 = u64 [s1 + 0x268]\n 45398: a3 = u64 [s1 + 0x290]\n 45402: a0 = a2 | a3\n 45405: a1 = u64 [s1 + 0x270]\n 45409: a4 = u64 [s1 + 0x298]\n 45413: a1 = a1 | a4\n 45416: a0 = a0 | a1\n 45419: a0 = a0 >> 0x20\n 45422: a1 = a1 | a3\n 45425: a1 = a1 << 0x20\n 45428: a0 = a0 | a1\n 45431: jump @664 if a0 == 0\n      : @663 (gas: 1)\n 45434: jump @799\n      : @664 (gas: 13)\n 45437: a0 = s1 + 0x2218\n 45441: a1 = u64 [a0 + 0x108]\n 45445: u64 [s1 + 0x298] = a1\n 45449: a1 = u64 [a0 + 0x110]\n 45453: u64 [s1 + 0x290] = a1\n 45457: a1 = u64 [a0 + 0x118]\n 45461: u64 [s1 + 0x270] = a1\n 45465: a0 = u64 [a0 + 0x120]\n 45469: u64 [s1 + 0x258] = a0\n 45473: i32 a0 = a2 + 0\n 45475: a1 = 0x20\n 45478: u64 [s1 + 0x268] = a0\n 45482: ra = 406, jump @0\n      : @665 [@dyn 203] (gas: 68)\n 45489: a2 = u64 [s1 + 0x258]\n 45493: a1 = a2 >> 0x38\n 45496: u8 [a0 + 0x1f] = a1\n 45499: a1 = a2 >> 0x30\n 45502: u8 [a0 + 0x1e] = a1\n 45505: a1 = a2 >> 0x28\n 45508: u8 [a0 + 0x1d] = a1\n 45511: a1 = a2 >> 0x20\n 45514: u8 [a0 + 0x1c] = a1\n 45517: a1 = a2 >> 0x18\n 45520: u8 [a0 + 0x1b] = a1\n 45523: a1 = a2 >> 0x10\n 45526: u8 [a0 + 0x1a] = a1\n 45529: a1 = a2 >> 0x8\n 45532: u8 [a0 + 0x19] = a1\n 45535: u8 [a0 + 0x18] = a2\n 45538: a2 = u64 [s1 + 0x270]\n 45542: a1 = a2 >> 0x38\n 45545: u8 [a0 + 0x17] = a1\n 45548: a1 = a2 >> 0x30\n 45551: u8 [a0 + 0x16] = a1\n 45554: a1 = a2 >> 0x28\n 45557: u8 [a0 + 0x15] = a1\n 45560: a1 = a2 >> 0x20\n 45563: u8 [a0 + 0x14] = a1\n 45566: a1 = a2 >> 0x18\n 45569: u8 [a0 + 0x13] = a1\n 45572: a1 = a2 >> 0x10\n 45575: u8 [a0 + 0x12] = a1\n 45578: a1 = a2 >> 0x8\n 45581: u8 [a0 + 0x11] = a1\n 45584: u8 [a0 + 0x10] = a2\n 45587: a2 = u64 [s1 + 0x290]\n 45591: a1 = a2 >> 0x38\n 45594: u8 [a0 + 0xf] = a1\n 45597: a1 = a2 >> 0x30\n 45600: u8 [a0 + 0xe] = a1\n 45603: a1 = a2 >> 0x28\n 45606: u8 [a0 + 0xd] = a1\n 45609: a1 = a2 >> 0x20\n 45612: u8 [a0 + 0xc] = a1\n 45615: a1 = a2 >> 0x18\n 45618: u8 [a0 + 0xb] = a1\n 45621: a1 = a2 >> 0x10\n 45624: u8 [a0 + 0xa] = a1\n 45627: a1 = a2 >> 0x8\n 45630: u8 [a0 + 0x9] = a1\n 45633: u8 [a0 + 0x8] = a2\n 45636: a2 = u64 [s1 + 0x298]\n 45640: a1 = a2 >> 0x38\n 45643: u8 [a0 + 0x7] = a1\n 45646: a1 = a2 >> 0x30\n 45649: u8 [a0 + 0x6] = a1\n 45652: a1 = a2 >> 0x28\n 45655: u8 [a0 + 0x5] = a1\n 45658: a1 = a2 >> 0x20\n 45661: u8 [a0 + 0x4] = a1\n 45664: a1 = a2 >> 0x18\n 45667: u8 [a0 + 0x3] = a1\n 45670: a1 = a2 >> 0x10\n 45673: u8 [a0 + 0x2] = a1\n 45676: a1 = a2 >> 0x8\n 45679: u8 [a0 + 0x1] = a1\n 45682: u8 [a0] = a2\n 45684: a0 = s1 + 0x2000\n 45688: i32 a0 = a0 + 0x360\n 45692: ecalli 7 // 'caller'\n 45694: fallthrough\n      : @666 (gas: 20)\n 45695: a1 = u64 [s1 + 0x278]\n 45699: a0 = a1 + 0x40\n 45702: a1 = a0 <u a1\n 45705: a3 = u64 [s1 + 0x260]\n 45709: a2 = a3 + a1\n 45712: a3 = a2 <u a3\n 45715: a3 = a1 if a1 == 0\n 45718: a1 = u64 [s1 + 0x288]\n 45722: a3 = a3 + a1\n 45725: a1 = a3 <u a1\n 45728: a4 = u64 [s1 + 0x280]\n 45732: a1 = a1 + a4\n 45735: a4 = a0 | a3\n 45738: a1 = a1 | a2\n 45741: a4 = a4 | a1\n 45744: a4 = a4 >> 0x20\n 45747: a1 = a1 | a3\n 45750: a1 = a1 << 0x20\n 45753: a1 = a1 | a4\n 45756: jump @668 if a1 == 0\n      : @667 (gas: 1)\n 45759: jump @799\n      : @668 (gas: 10)\n 45762: a1 = s1 + 0x2218\n 45766: a2 = u64 [a1 + 0x148]\n 45770: u64 [s1 + 0x298] = a2\n 45774: a2 = u64 [a1 + 0x150]\n 45778: u64 [s1 + 0x290] = a2\n 45782: a1 = u32 [a1 + 0x158]\n 45786: u64 [s1 + 0x270] = a1\n 45790: i32 a0 = a0 + 0\n 45792: a1 = 0x20\n 45795: ra = 408, jump @0\n      : @669 [@dyn 204] (gas: 56)\n 45802: u8 [a0 + 31] = 0\n 45805: u8 [a0 + 30] = 0\n 45808: u8 [a0 + 29] = 0\n 45811: u8 [a0 + 28] = 0\n 45814: u8 [a0 + 27] = 0\n 45817: u8 [a0 + 26] = 0\n 45820: u8 [a0 + 25] = 0\n 45823: u8 [a0 + 24] = 0\n 45826: u8 [a0 + 23] = 0\n 45829: u8 [a0 + 22] = 0\n 45832: u8 [a0 + 21] = 0\n 45835: u8 [a0 + 20] = 0\n 45838: a2 = u64 [s1 + 0x270]\n 45842: a1 = a2 >> 0x18\n 45845: u8 [a0 + 0x13] = a1\n 45848: a1 = a2 >> 0x10\n 45851: u8 [a0 + 0x12] = a1\n 45854: a1 = a2 >> 0x8\n 45857: u8 [a0 + 0x11] = a1\n 45860: u8 [a0 + 0x10] = a2\n 45863: a2 = u64 [s1 + 0x290]\n 45867: a1 = a2 >> 0x38\n 45870: u8 [a0 + 0xf] = a1\n 45873: a1 = a2 >> 0x30\n 45876: u8 [a0 + 0xe] = a1\n 45879: a1 = a2 >> 0x28\n 45882: u8 [a0 + 0xd] = a1\n 45885: a1 = a2 >> 0x20\n 45888: u8 [a0 + 0xc] = a1\n 45891: a1 = a2 >> 0x18\n 45894: u8 [a0 + 0xb] = a1\n 45897: a1 = a2 >> 0x10\n 45900: u8 [a0 + 0xa] = a1\n 45903: a1 = a2 >> 0x8\n 45906: u8 [a0 + 0x9] = a1\n 45909: u8 [a0 + 0x8] = a2\n 45912: a2 = u64 [s1 + 0x298]\n 45916: a1 = a2 >> 0x38\n 45919: u8 [a0 + 0x7] = a1\n 45922: a1 = a2 >> 0x30\n 45925: u8 [a0 + 0x6] = a1\n 45928: a1 = a2 >> 0x28\n 45931: u8 [a0 + 0x5] = a1\n 45934: a1 = a2 >> 0x20\n 45937: u8 [a0 + 0x4] = a1\n 45940: a1 = a2 >> 0x18\n 45943: u8 [a0 + 0x3] = a1\n 45946: a1 = a2 >> 0x10\n 45949: u8 [a0 + 0x2] = a1\n 45952: a1 = a2 >> 0x8\n 45955: u8 [a0 + 0x1] = a1\n 45958: u8 [a0] = a2\n 45960: a0 = s1 + 0x2000\n 45964: i32 a0 = a0 + 0x380\n 45968: ecalli 11 // 'now'\n 45970: fallthrough\n      : @670 (gas: 20)\n 45971: a1 = u64 [s1 + 0x278]\n 45975: a0 = a1 + 0x54\n 45978: a1 = a0 <u a1\n 45981: a3 = u64 [s1 + 0x260]\n 45985: a2 = a3 + a1\n 45988: a3 = a2 <u a3\n 45991: a3 = a1 if a1 == 0\n 45994: a1 = u64 [s1 + 0x288]\n 45998: a3 = a3 + a1\n 46001: a1 = a3 <u a1\n 46004: a4 = u64 [s1 + 0x280]\n 46008: a1 = a1 + a4\n 46011: a4 = a0 | a3\n 46014: a1 = a1 | a2\n 46017: a4 = a4 | a1\n 46020: a4 = a4 >> 0x20\n 46023: a1 = a1 | a3\n 46026: a1 = a1 << 0x20\n 46029: a1 = a1 | a4\n 46032: jump @672 if a1 == 0\n      : @671 (gas: 1)\n 46035: jump @799\n      : @672 (gas: 12)\n 46038: a1 = s1 + 0x2218\n 46042: a2 = u64 [a1 + 0x168]\n 46046: u64 [s1 + 0x298] = a2\n 46050: a2 = u64 [a1 + 0x170]\n 46054: u64 [s1 + 0x290] = a2\n 46058: a2 = u64 [a1 + 0x178]\n 46062: u64 [s1 + 0x270] = a2\n 46066: a1 = u64 [a1 + 0x180]\n 46070: u64 [s1 + 0x258] = a1\n 46074: i32 a0 = a0 + 0\n 46076: a1 = 0x20\n 46079: ra = 410, jump @0\n      : @673 [@dyn 205] (gas: 80)\n 46086: a1 = u64 [s1 + 0x258]\n 46090: a1 = reverse a1\n 46092: a2 = u64 [s1 + 0x270]\n 46096: a2 = reverse a2\n 46098: a3 = u64 [s1 + 0x290]\n 46102: a3 = reverse a3\n 46104: a4 = u64 [s1 + 0x298]\n 46108: a4 = reverse a4\n 46110: a5 = a4 >> 0x38\n 46113: u8 [a0 + 0x1f] = a5\n 46116: a5 = a4 >> 0x30\n 46119: u8 [a0 + 0x1e] = a5\n 46122: a5 = a4 >> 0x28\n 46125: u8 [a0 + 0x1d] = a5\n 46128: a5 = a4 >> 0x20\n 46131: u8 [a0 + 0x1c] = a5\n 46134: a5 = a4 >> 0x18\n 46137: u8 [a0 + 0x1b] = a5\n 46140: a5 = a4 >> 0x10\n 46143: u8 [a0 + 0x1a] = a5\n 46146: a5 = a4 >> 0x8\n 46149: u8 [a0 + 0x19] = a5\n 46152: u8 [a0 + 0x18] = a4\n 46155: a4 = a3 >> 0x38\n 46158: u8 [a0 + 0x17] = a4\n 46161: a4 = a3 >> 0x30\n 46164: u8 [a0 + 0x16] = a4\n 46167: a4 = a3 >> 0x28\n 46170: u8 [a0 + 0x15] = a4\n 46173: a4 = a3 >> 0x20\n 46176: u8 [a0 + 0x14] = a4\n 46179: a4 = a3 >> 0x18\n 46182: u8 [a0 + 0x13] = a4\n 46185: a4 = a3 >> 0x10\n 46188: u8 [a0 + 0x12] = a4\n 46191: a4 = a3 >> 0x8\n 46194: u8 [a0 + 0x11] = a4\n 46197: u8 [a0 + 0x10] = a3\n 46200: a3 = a2 >> 0x38\n 46203: u8 [a0 + 0xf] = a3\n 46206: a3 = a2 >> 0x30\n 46209: u8 [a0 + 0xe] = a3\n 46212: a3 = a2 >> 0x28\n 46215: u8 [a0 + 0xd] = a3\n 46218: a3 = a2 >> 0x20\n 46221: u8 [a0 + 0xc] = a3\n 46224: a3 = a2 >> 0x18\n 46227: u8 [a0 + 0xb] = a3\n 46230: a3 = a2 >> 0x10\n 46233: u8 [a0 + 0xa] = a3\n 46236: a3 = a2 >> 0x8\n 46239: u8 [a0 + 0x9] = a3\n 46242: u8 [a0 + 0x8] = a2\n 46245: a2 = a1 >> 0x38\n 46248: u8 [a0 + 0x7] = a2\n 46251: a2 = a1 >> 0x30\n 46254: u8 [a0 + 0x6] = a2\n 46257: a2 = a1 >> 0x28\n 46260: u8 [a0 + 0x5] = a2\n 46263: a2 = a1 >> 0x20\n 46266: u8 [a0 + 0x4] = a2\n 46269: a2 = a1 >> 0x18\n 46272: u8 [a0 + 0x3] = a2\n 46275: a2 = a1 >> 0x10\n 46278: u8 [a0 + 0x2] = a2\n 46281: a2 = a1 >> 0x8\n 46284: u8 [a0 + 0x1] = a2\n 46287: a2 = u64 [s1 + 0x278]\n 46291: a4 = u64 [s1 + 0x288]\n 46295: a2 = a2 | a4\n 46298: a3 = u64 [s1 + 0x260]\n 46302: a5 = u64 [s1 + 0x280]\n 46306: a3 = a3 | a5\n 46309: a2 = a2 | a3\n 46312: a2 = a2 >> 0x20\n 46315: a3 = a3 | a4\n 46318: a3 = a3 << 0x20\n 46321: a2 = a2 | a3\n 46324: u8 [a0] = a1\n 46326: jump @675 if a2 == 0\n      : @674 (gas: 1)\n 46329: jump @799\n      : @675 (gas: 4)\n 46332: a0 = i32 [s1 + 0x278]\n 46336: u64 [s1 + 0x298] = a0\n 46340: a1 = 0x20\n 46343: ra = 412, jump @0\n      : @676 [@dyn 206] (gas: 48)\n 46350: u8 [a0 + 31] = 0x54\n 46354: u8 [a0 + 30] = 0\n 46357: u8 [a0 + 29] = 0\n 46360: u8 [a0 + 28] = 0\n 46363: u8 [a0 + 27] = 0\n 46366: u8 [a0 + 26] = 0\n 46369: u8 [a0 + 25] = 0\n 46372: u8 [a0 + 24] = 0\n 46375: u8 [a0 + 23] = 0\n 46378: u8 [a0 + 22] = 0\n 46381: u8 [a0 + 21] = 0\n 46384: u8 [a0 + 20] = 0\n 46387: u8 [a0 + 19] = 0\n 46390: u8 [a0 + 18] = 0\n 46393: u8 [a0 + 17] = 0\n 46396: u8 [a0 + 16] = 0\n 46399: u8 [a0 + 15] = 0\n 46402: u8 [a0 + 14] = 0\n 46405: u8 [a0 + 13] = 0\n 46408: u8 [a0 + 12] = 0\n 46411: u8 [a0 + 11] = 0\n 46414: u8 [a0 + 10] = 0\n 46417: u8 [a0 + 9] = 0\n 46420: u8 [a0 + 8] = 0\n 46423: u8 [a0 + 7] = 0\n 46426: u8 [a0 + 6] = 0\n 46429: u8 [a0 + 5] = 0\n 46432: u8 [a0 + 4] = 0\n 46435: u8 [a0 + 3] = 0\n 46438: u8 [a0 + 2] = 0\n 46441: u8 [a0 + 1] = 0\n 46444: u8 [a0 + 0] = 0\n 46446: a2 = s1 + 0x1a18\n 46450: u64 [a2 + 448] = 0\n 46454: u64 [a2 + 440] = 0\n 46458: u64 [a2 + 432] = 0\n 46462: u64 [a2 + 424] = 0x74\n 46467: a0 = u64 [s1 + 0x280]\n 46471: u64 [a2 + 0x1e0] = a0\n 46475: a0 = u64 [s1 + 0x288]\n 46479: u64 [a2 + 0x1d8] = a0\n 46483: a0 = u64 [s1 + 0x260]\n 46487: u64 [a2 + 0x1d0] = a0\n 46491: a0 = s1 + 0x1be0\n 46495: a1 = s1 + 0x1bc0\n 46499: a3 = u64 [s1 + 0x278]\n 46503: u64 [a2 + 0x1c8] = a3\n 46507: ra = 414, jump @1010\n      : @677 [@dyn 207] (gas: 3)\n 46513: a1 = 0x20\n 46516: a0 = u64 [s1 + 0x298]\n 46520: ra = 416, jump @0\n      : @678 [@dyn 208] (gas: 100)\n 46527: a1 = u8 [a0 + 0x11]\n 46530: a2 = u8 [a0 + 0x10]\n 46533: a3 = u8 [a0 + 0x12]\n 46536: a4 = u8 [a0 + 0x13]\n 46539: a1 = a1 << 0x8\n 46542: a1 = a1 | a2\n 46545: a3 = a3 << 0x10\n 46548: a4 = a4 << 0x18\n 46551: a3 = a3 | a4\n 46554: a1 = a1 | a3\n 46557: a2 = u8 [a0 + 0x15]\n 46560: a3 = u8 [a0 + 0x14]\n 46563: a4 = u8 [a0 + 0x16]\n 46566: a5 = u8 [a0 + 0x17]\n 46569: a2 = a2 << 0x8\n 46572: a2 = a2 | a3\n 46575: a4 = a4 << 0x10\n 46578: a5 = a5 << 0x18\n 46581: a4 = a4 | a5\n 46584: a2 = a2 | a4\n 46587: a2 = a2 << 0x20\n 46590: t0 = a2 | a1\n 46593: a2 = u8 [a0 + 0x1]\n 46596: a3 = u8 [a0]\n 46598: a4 = u8 [a0 + 0x2]\n 46601: a5 = u8 [a0 + 0x3]\n 46604: a2 = a2 << 0x8\n 46607: a2 = a2 | a3\n 46610: a4 = a4 << 0x10\n 46613: a5 = a5 << 0x18\n 46616: a4 = a4 | a5\n 46619: a2 = a2 | a4\n 46622: a3 = u8 [a0 + 0x5]\n 46625: a4 = u8 [a0 + 0x4]\n 46628: a5 = u8 [a0 + 0x6]\n 46631: a1 = u8 [a0 + 0x7]\n 46634: a3 = a3 << 0x8\n 46637: a3 = a3 | a4\n 46640: a5 = a5 << 0x10\n 46643: a1 = a1 << 0x18\n 46646: a1 = a1 | a5\n 46649: a1 = a1 | a3\n 46652: a1 = a1 << 0x20\n 46655: t1 = a1 | a2\n 46658: a1 = u8 [a0 + 0x19]\n 46661: a3 = u8 [a0 + 0x18]\n 46664: a4 = u8 [a0 + 0x1a]\n 46667: a5 = u8 [a0 + 0x1b]\n 46670: a1 = a1 << 0x8\n 46673: a1 = a1 | a3\n 46676: a4 = a4 << 0x10\n 46679: a5 = a5 << 0x18\n 46682: a4 = a4 | a5\n 46685: a1 = a1 | a4\n 46688: a3 = u8 [a0 + 0x1d]\n 46691: a4 = u8 [a0 + 0x1c]\n 46694: a5 = u8 [a0 + 0x1e]\n 46697: a2 = u8 [a0 + 0x1f]\n 46700: a3 = a3 << 0x8\n 46703: a3 = a3 | a4\n 46706: a5 = a5 << 0x10\n 46709: a2 = a2 << 0x18\n 46712: a2 = a2 | a5\n 46715: a2 = a2 | a3\n 46718: a2 = a2 << 0x20\n 46721: a3 = a2 | a1\n 46724: a1 = u8 [a0 + 0x9]\n 46727: a2 = u8 [a0 + 0x8]\n 46730: a4 = u8 [a0 + 0xa]\n 46733: a5 = u8 [a0 + 0xb]\n 46736: a1 = a1 << 0x8\n 46739: a1 = a1 | a2\n 46742: a4 = a4 << 0x10\n 46745: a5 = a5 << 0x18\n 46748: a4 = a4 | a5\n 46751: a1 = a1 | a4\n 46754: a2 = u8 [a0 + 0xd]\n 46757: a4 = u8 [a0 + 0xc]\n 46760: a5 = u8 [a0 + 0xe]\n 46763: a0 = u8 [a0 + 0xf]\n 46766: a2 = a2 << 0x8\n 46769: a2 = a2 | a4\n 46772: a5 = a5 << 0x10\n 46775: a0 = a0 << 0x18\n 46778: a0 = a0 | a5\n 46781: a0 = a0 | a2\n 46784: a0 = a0 << 0x20\n 46787: a0 = a0 | a1\n 46790: a1 = reverse a0\n 46792: a0 = reverse a3\n 46794: a2 = reverse t1\n 46796: a3 = reverse t0\n 46798: a2 = a2 | a3\n 46801: a3 = a0 | a1\n 46804: a3 = a3 | a2\n 46807: a3 = a3 >> 0x20\n 46810: a1 = a1 | a2\n 46813: a1 = a1 << 0x20\n 46816: a1 = a1 | a3\n 46819: jump @680 if a1 == 0\n      : @679 (gas: 1)\n 46822: jump @799\n      : @680 (gas: 4)\n 46825: i32 a1 = a0 + 0\n 46827: u64 [s1 + 0x298] = a1\n 46831: a0 = u64 [s1 + 0x268]\n 46835: ra = 418, jump @0\n      : @681 [@dyn 209] (gas: 37)\n 46842: a1 = sp + 0xffffffffffffffe0\n 46845: a1 = a1 & 0xffffffffffffffe0\n 46848: u64 [s1 + 0x280] = a1\n 46852: sp = a1\n 46854: i32 a0 = a0 + 0\n 46856: i32 a2 = a1 + 0\n 46858: a1 = u64 [s1 + 0x298]\n 46862: ecalli 10 // 'hash_keccak_256'\n 46864: a1 = u64 [s1 + 0x280]\n 46868: a0 = u64 [a1 + 0x18]\n 46871: u64 [s1 + 0x288] = a0\n 46875: a0 = u64 [a1 + 0x10]\n 46878: u64 [s1 + 0x290] = a0\n 46882: a0 = u64 [a1 + 0x8]\n 46885: u64 [s1 + 0x278] = a0\n 46889: a0 = u64 [a1]\n 46891: u64 [s1 + 0x280] = a0\n 46895: a0 = u64 [s1 + 0x190]\n 46899: a1 = a0 + 0x2\n 46902: a0 = a1 <u a0\n 46905: a3 = u64 [s1 + 0x188]\n 46909: a2 = a3 + a0\n 46912: a3 = a2 <u a3\n 46915: a3 = a0 if a0 == 0\n 46918: a0 = u64 [s1 + 0x180]\n 46922: a3 = a3 + a0\n 46925: a0 = a3 <u a0\n 46928: a4 = u64 [s1 + 0x178]\n 46932: a0 = a0 + a4\n 46935: a4 = s1 + 0x1a18\n 46939: u64 [a4 + 0x180] = a0\n 46943: u64 [a4 + 0x178] = a3\n 46947: u64 [a4 + 0x170] = a2\n 46951: a0 = s1 + 0x1ba0\n 46955: a2 = s1 + 0x1b80\n 46959: u64 [a4 + 0x168] = a1\n 46963: ra = 420, jump @25\n      : @682 [@dyn 210] (gas: 10)\n 46970: a0 = s1 + 0x1a18\n 46974: a5 = u64 [a0 + 0x1a0]\n 46978: a4 = u64 [a0 + 0x198]\n 46982: a3 = u64 [a0 + 0x190]\n 46986: a2 = u64 [a0 + 0x188]\n 46990: a0 = a3 | a5\n 46993: a1 = a2 | a4\n 46996: a0 = a0 | a1\n 46999: u64 [s1 + 0x298] = a0\n 47003: jump @684 if a0 != 0\n      : @683 (gas: 1)\n 47006: jump @946\n      : @684 (gas: 76)\n 47009: a0 = u64 [s1 + 0x278]\n 47013: ra = reverse a0\n 47015: a0 = u64 [s1 + 0x288]\n 47019: t1 = reverse a0\n 47021: u64 [s1 + 0x170] = t1\n 47025: a0 = u64 [s1 + 0x280]\n 47029: t0 = reverse a0\n 47031: a0 = u64 [s1 + 0x290]\n 47035: t2 = reverse a0\n 47037: u64 [s1 + 0x1f8] = a2\n 47041: a0 = clz a2\n 47043: a0 = a0 + 0x40\n 47046: a1 = clz a3\n 47048: u64 [s1 + 0x1e0] = a3\n 47052: a1 = a0 if a3 == 0\n 47055: a3 = a1 + 0x80\n 47059: a0 = a3 <u a1\n 47062: a1 = a4 | a5\n 47065: a0 = 0 if a1 != 0\n 47067: u64 [s1 + 0x1f0] = a4\n 47071: a2 = clz a4\n 47073: a4 = a2 + 0x40\n 47076: a2 = clz a5\n 47078: u64 [s1 + 0x1e8] = a5\n 47082: a2 = a4 if a5 == 0\n 47085: a2 = a3 if a1 == 0\n 47088: a1 = clz t2\n 47090: a3 = clz t1\n 47092: a3 = a3 + 0x40\n 47095: a3 = a1 if t2 != 0\n 47098: a4 = clz t0\n 47100: a1 = clz ra\n 47102: a1 = a1 + 0x40\n 47105: a1 = a4 if t0 != 0\n 47108: a4 = a3 + 0x80\n 47112: a3 = a4 <u a3\n 47115: a5 = ra | t0\n 47118: a1 = a4 if a5 == 0\n 47121: a3 = 0 if a5 != 0\n 47123: a4 = a2 <u a1\n 47126: t1 = a0 ^ a3\n 47129: a5 = a0 <u a3\n 47132: a5 = a4 if t1 == 0\n 47135: a0 = a0 - a3\n 47138: a4 = a0 - a4\n 47141: a3 = a5 <u 0x1\n 47144: a3 = a3 + 0xffffffffffffffff\n 47147: a0 = a2 - a1\n 47150: t1 = -a5\n 47152: a1 = t1 >u 0\n 47154: a2 = a3 >u 0\n 47156: a2 = a1 if a3 == 0\n 47159: u64 [s1 + 0x280] = a0\n 47163: a1 = a0 <u 0x100\n 47167: a1 = a1 ^ 0x1\n 47170: a0 = a4 >u 0\n 47172: a1 = a0 if a4 != 0\n 47175: a1 = a2 if a5 != 0\n 47178: a0 = t2 | t0\n 47181: a5 = u64 [s1 + 0x170]\n 47185: a2 = a5 | ra\n 47188: a0 = a0 | a2\n 47191: a2 = u64 [s1 + 0x298]\n 47195: a2 = a2 <u 0x1\n 47198: a0 = a0 <u 0x1\n 47201: a0 = a0 | a2\n 47204: a0 = a0 | a1\n 47207: u64 [s1 + 0x158] = t0\n 47211: t0 = 0 if a0 != 0\n 47213: u64 [s1 + 0x160] = ra\n 47217: ra = 0 if a0 != 0\n 47219: u64 [s1 + 0x168] = t2\n 47223: t2 = 0 if a0 != 0\n 47225: a2 = a5\n 47227: a2 = 0 if a0 != 0\n 47229: jump @686 if a0 == 0\n      : @685 (gas: 1)\n 47232: jump @806\n      : @686 (gas: 6)\n 47235: a5 = u64 [s1 + 0x280]\n 47239: a0 = a5 ^ 0xff\n 47243: a0 = a0 | t1\n 47246: a1 = a4 | a3\n 47249: a0 = a0 | a1\n 47252: jump @688 if a0 != 0\n      : @687 (gas: 1)\n 47255: jump @806\n      : @688 (gas: 257)\n 47258: a1 = a5 + 0x1\n 47261: u64 [s1 + 0x298] = a1\n 47265: a0 = a1 <u 0x1\n 47268: a0 = a0 + a4\n 47271: u64 [s1 + 0x290] = a0\n 47275: a0 = a0 | a1\n 47278: a0 = a0 <u 0x1\n 47281: ra = t1 + a0\n 47284: a0 = ra <u t1\n 47287: a0 = a0 + a3\n 47290: u64 [s1 + 0x288] = a0\n 47294: a2 = s1 + 0x1a18\n 47298: a3 = u64 [s1 + 0x170]\n 47302: u8 [a2 + 0x148] = a3\n 47306: u8 [a2 + 327] = 0\n 47310: u8 [a2 + 326] = 0\n 47314: u8 [a2 + 325] = 0\n 47318: u8 [a2 + 324] = 0\n 47322: u8 [a2 + 323] = 0\n 47326: u8 [a2 + 322] = 0\n 47330: u8 [a2 + 321] = 0\n 47334: u8 [a2 + 320] = 0\n 47338: u8 [a2 + 319] = 0\n 47342: u8 [a2 + 318] = 0\n 47346: u8 [a2 + 317] = 0\n 47350: u8 [a2 + 316] = 0\n 47354: u8 [a2 + 315] = 0\n 47358: u8 [a2 + 314] = 0\n 47362: u8 [a2 + 313] = 0\n 47366: u8 [a2 + 312] = 0\n 47370: u8 [a2 + 311] = 0\n 47374: u8 [a2 + 310] = 0\n 47378: u8 [a2 + 309] = 0\n 47382: u8 [a2 + 308] = 0\n 47386: u8 [a2 + 307] = 0\n 47390: u8 [a2 + 306] = 0\n 47394: u8 [a2 + 305] = 0\n 47398: u8 [a2 + 304] = 0\n 47402: u8 [a2 + 303] = 0\n 47406: u8 [a2 + 302] = 0\n 47410: u8 [a2 + 301] = 0\n 47414: u8 [a2 + 300] = 0\n 47418: u8 [a2 + 299] = 0\n 47422: u8 [a2 + 298] = 0\n 47426: u8 [a2 + 297] = 0\n 47430: u8 [a2 + 296] = 0\n 47434: a4 = u64 [s1 + 0x168]\n 47438: u8 [a2 + 0x150] = a4\n 47442: a0 = a3 >> 0x38\n 47445: u64 [s1 + 0x250] = a0\n 47449: u8 [a2 + 0x14f] = a0\n 47453: a0 = a3 >> 0x30\n 47456: u64 [s1 + 0x248] = a0\n 47460: u8 [a2 + 0x14e] = a0\n 47464: a0 = a3 >> 0x28\n 47467: u64 [s1 + 0x240] = a0\n 47471: u8 [a2 + 0x14d] = a0\n 47475: i32 t0 = 0xff - a5\n 47479: a0 = t0 << 0x38\n 47482: a0 = a0 >> 0x3b\n 47485: a1 = s1 + 0x1b60\n 47489: a0 = a1 - a0\n 47492: a1 = a3 >> 0x20\n 47495: u64 [s1 + 0x138] = a1\n 47499: u8 [a2 + 0x14c] = a1\n 47503: a1 = a3 >> 0x18\n 47506: u64 [s1 + 0x130] = a1\n 47510: u8 [a2 + 0x14b] = a1\n 47514: a1 = a3 >> 0x10\n 47517: u64 [s1 + 0x128] = a1\n 47521: u8 [a2 + 0x14a] = a1\n 47525: a3 = a3 >> 0x8\n 47528: u64 [s1 + 0x120] = a3\n 47532: u8 [a2 + 0x149] = a3\n 47536: a1 = u64 [s1 + 0x160]\n 47540: u8 [a2 + 0x158] = a1\n 47544: a3 = a4 >> 0x38\n 47547: u64 [s1 + 0x118] = a3\n 47551: u8 [a2 + 0x157] = a3\n 47555: a3 = a4 >> 0x30\n 47558: u64 [s1 + 0x110] = a3\n 47562: u8 [a2 + 0x156] = a3\n 47566: a3 = a4 >> 0x28\n 47569: u64 [s1 + 0x108] = a3\n 47573: u8 [a2 + 0x155] = a3\n 47577: a3 = a4 >> 0x20\n 47580: u64 [s1 + 0x100] = a3\n 47584: u8 [a2 + 0x154] = a3\n 47588: a3 = a4 >> 0x18\n 47591: u64 [s1 + 0xf8] = a3\n 47595: u8 [a2 + 0x153] = a3\n 47599: a3 = a4 >> 0x10\n 47602: u64 [s1 + 0xf0] = a3\n 47606: u8 [a2 + 0x152] = a3\n 47610: a4 = a4 >> 0x8\n 47613: u64 [s1 + 0xe8] = a4\n 47617: u8 [a2 + 0x151] = a4\n 47621: a3 = u64 [s1 + 0x158]\n 47625: u8 [a2 + 0x160] = a3\n 47629: a4 = a1 >> 0x38\n 47632: u64 [s1 + 0xe0] = a4\n 47636: u8 [a2 + 0x15f] = a4\n 47640: a4 = a1 >> 0x30\n 47643: u64 [s1 + 0xd8] = a4\n 47647: u8 [a2 + 0x15e] = a4\n 47651: a4 = a1 >> 0x28\n 47654: u64 [s1 + 0xd0] = a4\n 47658: u8 [a2 + 0x15d] = a4\n 47662: a4 = a1 >> 0x20\n 47665: u64 [s1 + 0xc8] = a4\n 47669: u8 [a2 + 0x15c] = a4\n 47673: a4 = a1 >> 0x18\n 47676: u64 [s1 + 0xc0] = a4\n 47680: u8 [a2 + 0x15b] = a4\n 47684: a4 = a1 >> 0x10\n 47687: u64 [s1 + 0xb8] = a4\n 47691: u8 [a2 + 0x15a] = a4\n 47695: a1 = a1 >> 0x8\n 47698: u64 [s1 + 0x1d8] = a1\n 47702: u8 [a2 + 0x159] = a1\n 47706: a1 = a3 >> 0x38\n 47709: u64 [s1 + 0x1d0] = a1\n 47713: u8 [a2 + 0x167] = a1\n 47717: a1 = a3 >> 0x30\n 47720: u64 [s1 + 0x1c8] = a1\n 47724: u8 [a2 + 0x166] = a1\n 47728: a1 = a3 >> 0x28\n 47731: u64 [s1 + 0x1c0] = a1\n 47735: u8 [a2 + 0x165] = a1\n 47739: a1 = a3 >> 0x20\n 47742: u64 [s1 + 0x1b8] = a1\n 47746: u8 [a2 + 0x164] = a1\n 47750: a1 = a3 >> 0x18\n 47753: u64 [s1 + 0x150] = a1\n 47757: u8 [a2 + 0x163] = a1\n 47761: a1 = a3 >> 0x10\n 47764: u64 [s1 + 0x148] = a1\n 47768: u8 [a2 + 0x162] = a1\n 47772: a3 = a3 >> 0x8\n 47775: u64 [s1 + 0x140] = a3\n 47779: u8 [a2 + 0x161] = a3\n 47783: a1 = u8 [a0 + 0x19]\n 47786: a3 = u8 [a0 + 0x18]\n 47789: a4 = u8 [a0 + 0x1a]\n 47792: a5 = u8 [a0 + 0x1b]\n 47795: a1 = a1 << 0x8\n 47798: a1 = a1 | a3\n 47801: a4 = a4 << 0x10\n 47804: a5 = a5 << 0x18\n 47807: a4 = a4 | a5\n 47810: a1 = a1 | a4\n 47813: a3 = u8 [a0 + 0x1d]\n 47816: a4 = u8 [a0 + 0x1c]\n 47819: a5 = u8 [a0 + 0x1e]\n 47822: a2 = u8 [a0 + 0x1f]\n 47825: a3 = a3 << 0x8\n 47828: a3 = a3 | a4\n 47831: a5 = a5 << 0x10\n 47834: a2 = a2 << 0x18\n 47837: a2 = a2 | a5\n 47840: a2 = a2 | a3\n 47843: a2 = a2 << 0x20\n 47846: t1 = a2 | a1\n 47849: a1 = u8 [a0 + 0x11]\n 47852: a2 = u8 [a0 + 0x10]\n 47855: a4 = u8 [a0 + 0x12]\n 47858: a5 = u8 [a0 + 0x13]\n 47861: a1 = a1 << 0x8\n 47864: a1 = a1 | a2\n 47867: a4 = a4 << 0x10\n 47870: a5 = a5 << 0x18\n 47873: a4 = a4 | a5\n 47876: a1 = a1 | a4\n 47879: a2 = u8 [a0 + 0x15]\n 47882: a4 = u8 [a0 + 0x14]\n 47885: a5 = u8 [a0 + 0x16]\n 47888: a3 = u8 [a0 + 0x17]\n 47891: a2 = a2 << 0x8\n 47894: a2 = a2 | a4\n 47897: a5 = a5 << 0x10\n 47900: a3 = a3 << 0x18\n 47903: a3 = a3 | a5\n 47906: a2 = a2 | a3\n 47909: a2 = a2 << 0x20\n 47912: t2 = a2 | a1\n 47915: a2 = t0 & 0x7\n 47918: a4 = t1 << a2\n 47921: a5 = t2 >> 0x1\n 47924: t0 = a2 ^ 0x3f\n 47927: a5 = a5 >> t0\n 47930: a4 = a4 | a5\n 47933: u64 [s1 + 0x280] = a4\n 47937: a4 = u8 [a0 + 0x9]\n 47940: a5 = u8 [a0 + 0x8]\n 47943: a3 = u8 [a0 + 0xa]\n 47946: a1 = u8 [a0 + 0xb]\n 47949: a4 = a4 << 0x8\n 47952: a4 = a4 | a5\n 47955: a3 = a3 << 0x10\n 47958: a1 = a1 << 0x18\n 47961: a1 = a1 | a3\n 47964: t1 = a1 | a4\n 47967: a3 = u8 [a0 + 0xd]\n 47970: a4 = u8 [a0 + 0xc]\n 47973: a5 = u8 [a0 + 0xe]\n 47976: a1 = u8 [a0 + 0xf]\n 47979: a3 = a3 << 0x8\n 47982: a3 = a3 | a4\n 47985: a5 = a5 << 0x10\n 47988: a1 = a1 << 0x18\n 47991: a1 = a1 | a5\n 47994: a1 = a1 | a3\n 47997: a1 = a1 << 0x20\n 48000: t1 = a1 | t1\n 48003: a1 = t1 >> 0x1\n 48006: a3 = a2 ^ 0xffffffffffffffff\n 48009: a1 = a1 >> a3\n 48012: a3 = t2 << a2\n 48015: a1 = a1 | a3\n 48018: u64 [s1 + 0x278] = a1\n 48022: a1 = u8 [a0 + 0x1]\n 48025: a3 = u8 [a0]\n 48027: a5 = u8 [a0 + 0x2]\n 48030: a4 = u8 [a0 + 0x3]\n 48033: a1 = a1 << 0x8\n 48036: a1 = a1 | a3\n 48039: a5 = a5 << 0x10\n 48042: a4 = a4 << 0x18\n 48045: a4 = a4 | a5\n 48048: a1 = a1 | a4\n 48051: a3 = u8 [a0 + 0x5]\n 48054: a4 = u8 [a0 + 0x4]\n 48057: a5 = u8 [a0 + 0x6]\n 48060: a0 = u8 [a0 + 0x7]\n 48063: a3 = a3 << 0x8\n 48066: a3 = a3 | a4\n 48069: a5 = a5 << 0x10\n 48072: a0 = a0 << 0x18\n 48075: a0 = a0 | a5\n 48078: a0 = a0 | a3\n 48081: a0 = a0 << 0x20\n 48084: a0 = a0 | a1\n 48087: a1 = a0 >> 0x1\n 48090: a1 = a1 >> t0\n 48093: a3 = t1 << a2\n 48096: t1 = u64 [s1 + 0x298]\n 48100: a1 = a1 | a3\n 48103: u64 [s1 + 0x268] = a1\n 48107: a1 = u64 [s1 + 0x290]\n 48111: a3 = u64 [s1 + 0x288]\n 48115: a1 = a1 | a3\n 48118: u64 [s1 + 0x260] = ra\n 48122: a3 = t1 | ra\n 48125: a1 = a1 | a3\n 48128: a0 = a0 << a2\n 48131: u64 [s1 + 0x270] = a0\n 48135: jump @690 if a1 == 0\n      : @689 (gas: 1)\n 48138: jump @803\n      : @690 (gas: 3)\n 48141: t1 = 0\n 48143: u64 [s1 + 472] = 0\n 48147: jump @805\n      : @691 (gas: 3)\n 48150: a0 = 0x40\n 48153: a1 = 0x20\n 48156: ra = 422, jump @0\n      : @692 [@dyn 211] (gas: 100)\n 48163: a1 = u8 [a0 + 0x11]\n 48166: a2 = u8 [a0 + 0x10]\n 48169: a3 = u8 [a0 + 0x12]\n 48172: a4 = u8 [a0 + 0x13]\n 48175: a1 = a1 << 0x8\n 48178: a1 = a1 | a2\n 48181: a3 = a3 << 0x10\n 48184: a4 = a4 << 0x18\n 48187: a3 = a3 | a4\n 48190: a1 = a1 | a3\n 48193: a2 = u8 [a0 + 0x15]\n 48196: a3 = u8 [a0 + 0x14]\n 48199: a4 = u8 [a0 + 0x16]\n 48202: a5 = u8 [a0 + 0x17]\n 48205: a2 = a2 << 0x8\n 48208: a2 = a2 | a3\n 48211: a4 = a4 << 0x10\n 48214: a5 = a5 << 0x18\n 48217: a4 = a4 | a5\n 48220: a2 = a2 | a4\n 48223: a2 = a2 << 0x20\n 48226: t0 = a2 | a1\n 48229: a2 = u8 [a0 + 0x1]\n 48232: a3 = u8 [a0]\n 48234: a4 = u8 [a0 + 0x2]\n 48237: a5 = u8 [a0 + 0x3]\n 48240: a2 = a2 << 0x8\n 48243: a2 = a2 | a3\n 48246: a4 = a4 << 0x10\n 48249: a5 = a5 << 0x18\n 48252: a4 = a4 | a5\n 48255: a2 = a2 | a4\n 48258: a3 = u8 [a0 + 0x5]\n 48261: a4 = u8 [a0 + 0x4]\n 48264: a5 = u8 [a0 + 0x6]\n 48267: a1 = u8 [a0 + 0x7]\n 48270: a3 = a3 << 0x8\n 48273: a3 = a3 | a4\n 48276: a5 = a5 << 0x10\n 48279: a1 = a1 << 0x18\n 48282: a1 = a1 | a5\n 48285: a1 = a1 | a3\n 48288: a1 = a1 << 0x20\n 48291: t1 = a1 | a2\n 48294: a1 = u8 [a0 + 0x19]\n 48297: a3 = u8 [a0 + 0x18]\n 48300: a4 = u8 [a0 + 0x1a]\n 48303: a5 = u8 [a0 + 0x1b]\n 48306: a1 = a1 << 0x8\n 48309: a1 = a1 | a3\n 48312: a4 = a4 << 0x10\n 48315: a5 = a5 << 0x18\n 48318: a4 = a4 | a5\n 48321: a1 = a1 | a4\n 48324: a3 = u8 [a0 + 0x1d]\n 48327: a4 = u8 [a0 + 0x1c]\n 48330: a5 = u8 [a0 + 0x1e]\n 48333: a2 = u8 [a0 + 0x1f]\n 48336: a3 = a3 << 0x8\n 48339: a3 = a3 | a4\n 48342: a5 = a5 << 0x10\n 48345: a2 = a2 << 0x18\n 48348: a2 = a2 | a5\n 48351: a2 = a2 | a3\n 48354: a2 = a2 << 0x20\n 48357: a3 = a2 | a1\n 48360: a1 = u8 [a0 + 0x9]\n 48363: a2 = u8 [a0 + 0x8]\n 48366: a4 = u8 [a0 + 0xa]\n 48369: a5 = u8 [a0 + 0xb]\n 48372: a1 = a1 << 0x8\n 48375: a1 = a1 | a2\n 48378: a4 = a4 << 0x10\n 48381: a5 = a5 << 0x18\n 48384: a4 = a4 | a5\n 48387: a1 = a1 | a4\n 48390: a2 = u8 [a0 + 0xd]\n 48393: a4 = u8 [a0 + 0xc]\n 48396: a5 = u8 [a0 + 0xe]\n 48399: a0 = u8 [a0 + 0xf]\n 48402: a2 = a2 << 0x8\n 48405: a2 = a2 | a4\n 48408: a5 = a5 << 0x10\n 48411: a0 = a0 << 0x18\n 48414: a0 = a0 | a5\n 48417: a0 = a0 | a2\n 48420: a0 = a0 << 0x20\n 48423: a0 = a0 | a1\n 48426: a4 = reverse a0\n 48428: a2 = reverse a3\n 48430: a5 = reverse t1\n 48432: a3 = reverse t0\n 48434: a0 = a3 | a5\n 48437: a1 = a2 | a4\n 48440: a1 = a1 | a0\n 48443: a1 = a1 >> 0x20\n 48446: a0 = a0 | a4\n 48449: a0 = a0 << 0x20\n 48452: a0 = a0 | a1\n 48455: jump @694 if a0 == 0\n      : @693 (gas: 1)\n 48458: jump @799\n      : @694 (gas: 8)\n 48461: i32 a0 = a2 + 0\n 48463: a1 = 0x20\n 48466: u64 [s1 + 0x278] = a0\n 48470: u64 [s1 + 0x298] = a2\n 48474: u64 [s1 + 0x290] = a3\n 48478: u64 [s1 + 0x288] = a4\n 48482: u64 [s1 + 0x280] = a5\n 48486: ra = 424, jump @0\n      : @695 [@dyn 212] (gas: 43)\n 48493: u8 [a0 + 31] = 0\n 48496: u8 [a0 + 30] = 0\n 48499: u8 [a0 + 29] = 0\n 48502: u8 [a0 + 28] = 0\n 48505: u8 [a0 + 27] = 0\n 48508: u8 [a0 + 26] = 0\n 48511: u8 [a0 + 25] = 0\n 48514: u8 [a0 + 24] = 0\n 48517: u8 [a0 + 23] = 0\n 48520: u8 [a0 + 22] = 0\n 48523: u8 [a0 + 21] = 0\n 48526: u8 [a0 + 20] = 0\n 48529: u8 [a0 + 19] = 0\n 48532: u8 [a0 + 18] = 0\n 48535: u8 [a0 + 17] = 0\n 48538: u8 [a0 + 16] = 0\n 48541: u8 [a0 + 15] = 0\n 48544: u8 [a0 + 14] = 0\n 48547: u8 [a0 + 13] = 0\n 48550: u8 [a0 + 12] = 0\n 48553: u8 [a0 + 11] = 0\n 48556: u8 [a0 + 10] = 0\n 48559: u8 [a0 + 9] = 0\n 48562: u8 [a0 + 8] = 0\n 48565: u8 [a0 + 7] = 0\n 48568: u8 [a0 + 6] = 0\n 48571: u8 [a0 + 5] = 0\n 48574: u8 [a0 + 3] = 0xa0\n 48579: u8 [a0 + 2] = 0x79\n 48583: u8 [a0 + 1] = 0xc3\n 48588: u8 [a0 + 0] = 0x8\n 48591: a1 = u64 [s1 + 0x288]\n 48595: a3 = u64 [s1 + 0x280]\n 48599: a3 = a3 | a1\n 48602: a4 = 0x100000000\n 48612: a1 = 0xfffffffc\n 48622: a2 = u64 [s1 + 0x298]\n 48626: a1 = a2 <u a1\n 48629: a2 = u64 [s1 + 0x290]\n 48633: a1 = 0 if a2 != 0\n 48635: a1 = 0 if a3 != 0\n 48637: u8 [a0 + 4] = 0\n 48640: jump @697 if a1 != 0\n      : @696 (gas: 1)\n 48643: jump @799\n      : @697 (gas: 6)\n 48646: a0 = u64 [s1 + 0x278]\n 48650: i32 a0 = a0 + 0x4\n 48653: a1 = 0x20\n 48656: u64 [s1 + 0x288] = a3\n 48660: u64 [s1 + 0x280] = a4\n 48664: ra = 426, jump @0\n      : @698 [@dyn 213] (gas: 41)\n 48671: a4 = u64 [s1 + 0x288]\n 48675: a3 = u64 [s1 + 0x290]\n 48679: a2 = u64 [s1 + 0x298]\n 48683: u8 [a0 + 31] = 0x20\n 48687: u8 [a0 + 30] = 0\n 48690: u8 [a0 + 29] = 0\n 48693: u8 [a0 + 28] = 0\n 48696: u8 [a0 + 27] = 0\n 48699: u8 [a0 + 26] = 0\n 48702: u8 [a0 + 25] = 0\n 48705: u8 [a0 + 24] = 0\n 48708: u8 [a0 + 23] = 0\n 48711: u8 [a0 + 22] = 0\n 48714: u8 [a0 + 21] = 0\n 48717: u8 [a0 + 20] = 0\n 48720: u8 [a0 + 19] = 0\n 48723: u8 [a0 + 18] = 0\n 48726: u8 [a0 + 17] = 0\n 48729: u8 [a0 + 16] = 0\n 48732: u8 [a0 + 15] = 0\n 48735: u8 [a0 + 14] = 0\n 48738: u8 [a0 + 13] = 0\n 48741: u8 [a0 + 12] = 0\n 48744: u8 [a0 + 11] = 0\n 48747: u8 [a0 + 10] = 0\n 48750: u8 [a0 + 9] = 0\n 48753: u8 [a0 + 8] = 0\n 48756: u8 [a0 + 7] = 0\n 48759: u8 [a0 + 6] = 0\n 48762: u8 [a0 + 5] = 0\n 48765: u8 [a0 + 4] = 0\n 48768: u8 [a0 + 3] = 0\n 48771: u8 [a0 + 2] = 0\n 48774: u8 [a0 + 1] = 0\n 48777: a1 = u64 [s1 + 0x280]\n 48781: a1 = a1 + 0xffffffffffffffdc\n 48784: a1 = a2 <u a1\n 48787: a1 = 0 if a3 != 0\n 48789: a1 = 0 if a4 != 0\n 48791: u8 [a0 + 0] = 0\n 48793: jump @700 if a1 != 0\n      : @699 (gas: 1)\n 48796: jump @799\n      : @700 (gas: 4)\n 48799: a0 = u64 [s1 + 0x278]\n 48803: i32 a0 = a0 + 0x24\n 48806: a1 = 0x20\n 48809: ra = 428, jump @0\n      : @701 [@dyn 214] (gas: 40)\n 48816: u8 [a0 + 31] = 0x14\n 48820: u8 [a0 + 30] = 0\n 48823: u8 [a0 + 29] = 0\n 48826: u8 [a0 + 28] = 0\n 48829: u8 [a0 + 27] = 0\n 48832: u8 [a0 + 26] = 0\n 48835: u8 [a0 + 25] = 0\n 48838: u8 [a0 + 24] = 0\n 48841: u8 [a0 + 23] = 0\n 48844: u8 [a0 + 22] = 0\n 48847: u8 [a0 + 21] = 0\n 48850: u8 [a0 + 20] = 0\n 48853: u8 [a0 + 19] = 0\n 48856: u8 [a0 + 18] = 0\n 48859: u8 [a0 + 17] = 0\n 48862: u8 [a0 + 16] = 0\n 48865: u8 [a0 + 15] = 0\n 48868: u8 [a0 + 14] = 0\n 48871: u8 [a0 + 13] = 0\n 48874: u8 [a0 + 12] = 0\n 48877: u8 [a0 + 11] = 0\n 48880: u8 [a0 + 10] = 0\n 48883: u8 [a0 + 9] = 0\n 48886: u8 [a0 + 8] = 0\n 48889: u8 [a0 + 7] = 0\n 48892: u8 [a0 + 6] = 0\n 48895: u8 [a0 + 5] = 0\n 48898: u8 [a0 + 4] = 0\n 48901: u8 [a0 + 3] = 0\n 48904: u8 [a0 + 2] = 0\n 48907: u8 [a0 + 1] = 0\n 48910: a1 = 0xffffffbc\n 48920: a2 = u64 [s1 + 0x298]\n 48924: a1 = a2 <u a1\n 48927: a2 = u64 [s1 + 0x290]\n 48931: a1 = 0 if a2 != 0\n 48933: a2 = u64 [s1 + 0x288]\n 48937: a1 = 0 if a2 != 0\n 48939: u8 [a0 + 0] = 0\n 48941: jump @703 if a1 != 0\n      : @702 (gas: 1)\n 48944: jump @799\n      : @703 (gas: 4)\n 48947: a0 = u64 [s1 + 0x278]\n 48951: i32 a0 = a0 + 0x44\n 48954: a1 = 0x20\n 48957: ra = 430, jump @0\n      : @704 [@dyn 215] (gas: 36)\n 48964: u8 [a0 + 31] = 0\n 48967: u8 [a0 + 30] = 0\n 48970: u8 [a0 + 29] = 0\n 48973: u8 [a0 + 28] = 0\n 48976: u8 [a0 + 27] = 0\n 48979: u8 [a0 + 26] = 0\n 48982: u8 [a0 + 25] = 0\n 48985: u8 [a0 + 24] = 0\n 48988: u8 [a0 + 23] = 0\n 48991: u8 [a0 + 22] = 0\n 48994: u8 [a0 + 21] = 0\n 48997: u8 [a0 + 20] = 0\n 49000: u8 [a0 + 19] = 0x64\n 49004: u8 [a0 + 18] = 0x65\n 49008: t0 = 0x74\n 49011: u8 [a0 + 0x11] = t0\n 49014: u8 [a0 + 16] = 0x65\n 49018: a4 = 0x6c\n 49021: u8 [a0 + 0xf] = a4\n 49024: u8 [a0 + 14] = 0x65\n 49028: u8 [a0 + 13] = 0x64\n 49032: u8 [a0 + 12] = 0x20\n 49036: u8 [a0 + 11] = 0x79\n 49040: u8 [a0 + 10] = 0x64\n 49044: u8 [a0 + 9] = 0x61\n 49048: u8 [a0 + 8] = 0x65\n 49052: a5 = 0x72\n 49055: u8 [a0 + 0x7] = a5\n 49058: u8 [a0 + 0x6] = a4\n 49061: u8 [a0 + 5] = 0x61\n 49065: u8 [a0 + 4] = 0x20\n 49069: u8 [a0 + 3] = 0x6d\n 49073: u8 [a0 + 2] = 0x65\n 49077: u8 [a0 + 0x1] = t0\n 49080: u8 [a0 + 0] = 0x49\n 49083: jump @747\n      : @705 (gas: 3)\n 49086: a0 = 0x40\n 49089: a1 = 0x20\n 49092: ra = 432, jump @0\n      : @706 [@dyn 216] (gas: 100)\n 49099: a1 = u8 [a0 + 0x11]\n 49102: a2 = u8 [a0 + 0x10]\n 49105: a3 = u8 [a0 + 0x12]\n 49108: a4 = u8 [a0 + 0x13]\n 49111: a1 = a1 << 0x8\n 49114: a1 = a1 | a2\n 49117: a3 = a3 << 0x10\n 49120: a4 = a4 << 0x18\n 49123: a3 = a3 | a4\n 49126: a1 = a1 | a3\n 49129: a2 = u8 [a0 + 0x15]\n 49132: a3 = u8 [a0 + 0x14]\n 49135: a4 = u8 [a0 + 0x16]\n 49138: a5 = u8 [a0 + 0x17]\n 49141: a2 = a2 << 0x8\n 49144: a2 = a2 | a3\n 49147: a4 = a4 << 0x10\n 49150: a5 = a5 << 0x18\n 49153: a4 = a4 | a5\n 49156: a2 = a2 | a4\n 49159: a2 = a2 << 0x20\n 49162: t0 = a2 | a1\n 49165: a2 = u8 [a0 + 0x1]\n 49168: a3 = u8 [a0]\n 49170: a4 = u8 [a0 + 0x2]\n 49173: a5 = u8 [a0 + 0x3]\n 49176: a2 = a2 << 0x8\n 49179: a2 = a2 | a3\n 49182: a4 = a4 << 0x10\n 49185: a5 = a5 << 0x18\n 49188: a4 = a4 | a5\n 49191: a2 = a2 | a4\n 49194: a3 = u8 [a0 + 0x5]\n 49197: a4 = u8 [a0 + 0x4]\n 49200: a5 = u8 [a0 + 0x6]\n 49203: a1 = u8 [a0 + 0x7]\n 49206: a3 = a3 << 0x8\n 49209: a3 = a3 | a4\n 49212: a5 = a5 << 0x10\n 49215: a1 = a1 << 0x18\n 49218: a1 = a1 | a5\n 49221: a1 = a1 | a3\n 49224: a1 = a1 << 0x20\n 49227: t1 = a1 | a2\n 49230: a1 = u8 [a0 + 0x19]\n 49233: a3 = u8 [a0 + 0x18]\n 49236: a4 = u8 [a0 + 0x1a]\n 49239: a5 = u8 [a0 + 0x1b]\n 49242: a1 = a1 << 0x8\n 49245: a1 = a1 | a3\n 49248: a4 = a4 << 0x10\n 49251: a5 = a5 << 0x18\n 49254: a4 = a4 | a5\n 49257: a1 = a1 | a4\n 49260: a3 = u8 [a0 + 0x1d]\n 49263: a4 = u8 [a0 + 0x1c]\n 49266: a5 = u8 [a0 + 0x1e]\n 49269: a2 = u8 [a0 + 0x1f]\n 49272: a3 = a3 << 0x8\n 49275: a3 = a3 | a4\n 49278: a5 = a5 << 0x10\n 49281: a2 = a2 << 0x18\n 49284: a2 = a2 | a5\n 49287: a2 = a2 | a3\n 49290: a2 = a2 << 0x20\n 49293: a3 = a2 | a1\n 49296: a1 = u8 [a0 + 0x9]\n 49299: a2 = u8 [a0 + 0x8]\n 49302: a4 = u8 [a0 + 0xa]\n 49305: a5 = u8 [a0 + 0xb]\n 49308: a1 = a1 << 0x8\n 49311: a1 = a1 | a2\n 49314: a4 = a4 << 0x10\n 49317: a5 = a5 << 0x18\n 49320: a4 = a4 | a5\n 49323: a1 = a1 | a4\n 49326: a2 = u8 [a0 + 0xd]\n 49329: a4 = u8 [a0 + 0xc]\n 49332: a5 = u8 [a0 + 0xe]\n 49335: a0 = u8 [a0 + 0xf]\n 49338: a2 = a2 << 0x8\n 49341: a2 = a2 | a4\n 49344: a5 = a5 << 0x10\n 49347: a0 = a0 << 0x18\n 49350: a0 = a0 | a5\n 49353: a0 = a0 | a2\n 49356: a0 = a0 << 0x20\n 49359: a0 = a0 | a1\n 49362: a4 = reverse a0\n 49364: a2 = reverse a3\n 49366: a5 = reverse t1\n 49368: a3 = reverse t0\n 49370: a0 = a3 | a5\n 49373: a1 = a2 | a4\n 49376: a1 = a1 | a0\n 49379: a1 = a1 >> 0x20\n 49382: a0 = a0 | a4\n 49385: a0 = a0 << 0x20\n 49388: a0 = a0 | a1\n 49391: jump @708 if a0 == 0\n      : @707 (gas: 1)\n 49394: jump @799\n      : @708 (gas: 8)\n 49397: i32 a0 = a2 + 0\n 49399: a1 = 0x20\n 49402: u64 [s1 + 0x278] = a0\n 49406: u64 [s1 + 0x298] = a2\n 49410: u64 [s1 + 0x290] = a3\n 49414: u64 [s1 + 0x288] = a4\n 49418: u64 [s1 + 0x280] = a5\n 49422: ra = 434, jump @0\n      : @709 [@dyn 217] (gas: 43)\n 49429: u8 [a0 + 31] = 0\n 49432: u8 [a0 + 30] = 0\n 49435: u8 [a0 + 29] = 0\n 49438: u8 [a0 + 28] = 0\n 49441: u8 [a0 + 27] = 0\n 49444: u8 [a0 + 26] = 0\n 49447: u8 [a0 + 25] = 0\n 49450: u8 [a0 + 24] = 0\n 49453: u8 [a0 + 23] = 0\n 49456: u8 [a0 + 22] = 0\n 49459: u8 [a0 + 21] = 0\n 49462: u8 [a0 + 20] = 0\n 49465: u8 [a0 + 19] = 0\n 49468: u8 [a0 + 18] = 0\n 49471: u8 [a0 + 17] = 0\n 49474: u8 [a0 + 16] = 0\n 49477: u8 [a0 + 15] = 0\n 49480: u8 [a0 + 14] = 0\n 49483: u8 [a0 + 13] = 0\n 49486: u8 [a0 + 12] = 0\n 49489: u8 [a0 + 11] = 0\n 49492: u8 [a0 + 10] = 0\n 49495: u8 [a0 + 9] = 0\n 49498: u8 [a0 + 8] = 0\n 49501: u8 [a0 + 7] = 0\n 49504: u8 [a0 + 6] = 0\n 49507: u8 [a0 + 5] = 0\n 49510: u8 [a0 + 3] = 0xa0\n 49515: u8 [a0 + 2] = 0x79\n 49519: u8 [a0 + 1] = 0xc3\n 49524: u8 [a0 + 0] = 0x8\n 49527: a1 = u64 [s1 + 0x288]\n 49531: a3 = u64 [s1 + 0x280]\n 49535: a3 = a3 | a1\n 49538: a4 = 0x100000000\n 49548: a1 = 0xfffffffc\n 49558: a2 = u64 [s1 + 0x298]\n 49562: a1 = a2 <u a1\n 49565: a2 = u64 [s1 + 0x290]\n 49569: a1 = 0 if a2 != 0\n 49571: a1 = 0 if a3 != 0\n 49573: u8 [a0 + 4] = 0\n 49576: jump @711 if a1 != 0\n      : @710 (gas: 1)\n 49579: jump @799\n      : @711 (gas: 6)\n 49582: a0 = u64 [s1 + 0x278]\n 49586: i32 a0 = a0 + 0x4\n 49589: a1 = 0x20\n 49592: u64 [s1 + 0x288] = a3\n 49596: u64 [s1 + 0x280] = a4\n 49600: ra = 436, jump @0\n      : @712 [@dyn 218] (gas: 41)\n 49607: a4 = u64 [s1 + 0x288]\n 49611: a3 = u64 [s1 + 0x290]\n 49615: a2 = u64 [s1 + 0x298]\n 49619: u8 [a0 + 31] = 0x20\n 49623: u8 [a0 + 30] = 0\n 49626: u8 [a0 + 29] = 0\n 49629: u8 [a0 + 28] = 0\n 49632: u8 [a0 + 27] = 0\n 49635: u8 [a0 + 26] = 0\n 49638: u8 [a0 + 25] = 0\n 49641: u8 [a0 + 24] = 0\n 49644: u8 [a0 + 23] = 0\n 49647: u8 [a0 + 22] = 0\n 49650: u8 [a0 + 21] = 0\n 49653: u8 [a0 + 20] = 0\n 49656: u8 [a0 + 19] = 0\n 49659: u8 [a0 + 18] = 0\n 49662: u8 [a0 + 17] = 0\n 49665: u8 [a0 + 16] = 0\n 49668: u8 [a0 + 15] = 0\n 49671: u8 [a0 + 14] = 0\n 49674: u8 [a0 + 13] = 0\n 49677: u8 [a0 + 12] = 0\n 49680: u8 [a0 + 11] = 0\n 49683: u8 [a0 + 10] = 0\n 49686: u8 [a0 + 9] = 0\n 49689: u8 [a0 + 8] = 0\n 49692: u8 [a0 + 7] = 0\n 49695: u8 [a0 + 6] = 0\n 49698: u8 [a0 + 5] = 0\n 49701: u8 [a0 + 4] = 0\n 49704: u8 [a0 + 3] = 0\n 49707: u8 [a0 + 2] = 0\n 49710: u8 [a0 + 1] = 0\n 49713: a1 = u64 [s1 + 0x280]\n 49717: a1 = a1 + 0xffffffffffffffdc\n 49720: a1 = a2 <u a1\n 49723: a1 = 0 if a3 != 0\n 49725: a1 = 0 if a4 != 0\n 49727: u8 [a0 + 0] = 0\n 49729: jump @714 if a1 != 0\n      : @713 (gas: 1)\n 49732: jump @799\n      : @714 (gas: 4)\n 49735: a0 = u64 [s1 + 0x278]\n 49739: i32 a0 = a0 + 0x24\n 49742: a1 = 0x20\n 49745: ra = 438, jump @0\n      : @715 [@dyn 219] (gas: 40)\n 49752: u8 [a0 + 31] = 0x1e\n 49756: u8 [a0 + 30] = 0\n 49759: u8 [a0 + 29] = 0\n 49762: u8 [a0 + 28] = 0\n 49765: u8 [a0 + 27] = 0\n 49768: u8 [a0 + 26] = 0\n 49771: u8 [a0 + 25] = 0\n 49774: u8 [a0 + 24] = 0\n 49777: u8 [a0 + 23] = 0\n 49780: u8 [a0 + 22] = 0\n 49783: u8 [a0 + 21] = 0\n 49786: u8 [a0 + 20] = 0\n 49789: u8 [a0 + 19] = 0\n 49792: u8 [a0 + 18] = 0\n 49795: u8 [a0 + 17] = 0\n 49798: u8 [a0 + 16] = 0\n 49801: u8 [a0 + 15] = 0\n 49804: u8 [a0 + 14] = 0\n 49807: u8 [a0 + 13] = 0\n 49810: u8 [a0 + 12] = 0\n 49813: u8 [a0 + 11] = 0\n 49816: u8 [a0 + 10] = 0\n 49819: u8 [a0 + 9] = 0\n 49822: u8 [a0 + 8] = 0\n 49825: u8 [a0 + 7] = 0\n 49828: u8 [a0 + 6] = 0\n 49831: u8 [a0 + 5] = 0\n 49834: u8 [a0 + 4] = 0\n 49837: u8 [a0 + 3] = 0\n 49840: u8 [a0 + 2] = 0\n 49843: u8 [a0 + 1] = 0\n 49846: a1 = 0xffffffbc\n 49856: a2 = u64 [s1 + 0x298]\n 49860: a1 = a2 <u a1\n 49863: a2 = u64 [s1 + 0x290]\n 49867: a1 = 0 if a2 != 0\n 49869: a2 = u64 [s1 + 0x288]\n 49873: a1 = 0 if a2 != 0\n 49875: u8 [a0 + 0] = 0\n 49877: jump @717 if a1 != 0\n      : @716 (gas: 1)\n 49880: jump @799\n      : @717 (gas: 4)\n 49883: a0 = u64 [s1 + 0x278]\n 49887: i32 a0 = a0 + 0x44\n 49890: a1 = 0x20\n 49893: ra = 440, jump @0\n      : @718 [@dyn 220] (gas: 38)\n 49900: u8 [a0 + 31] = 0\n 49903: u8 [a0 + 30] = 0\n 49906: t0 = 0x6d\n 49909: u8 [a0 + 0x1d] = t0\n 49912: u8 [a0 + 28] = 0x65\n 49916: a4 = 0x74\n 49919: u8 [a0 + 0x1b] = a4\n 49922: t1 = 0x49\n 49925: u8 [a0 + 0x1a] = t1\n 49928: a5 = 0x64\n 49931: u8 [a0 + 0x19] = a5\n 49934: u8 [a0 + 24] = 0x65\n 49938: u8 [a0 + 0x17] = a4\n 49941: u8 [a0 + 22] = 0x68\n 49945: u8 [a0 + 21] = 0x67\n 49949: u8 [a0 + 20] = 0x69\n 49953: u8 [a0 + 19] = 0x65\n 49957: u8 [a0 + 18] = 0x57\n 49961: u8 [a0 + 17] = 0x20\n 49965: t2 = 0x6e\n 49968: u8 [a0 + 0x10] = t2\n 49971: u8 [a0 + 15] = 0x69\n 49975: u8 [a0 + 14] = 0x20\n 49979: u8 [a0 + 0xd] = a5\n 49982: u8 [a0 + 0xc] = t1\n 49985: u8 [a0 + 0xb] = t0\n 49988: u8 [a0 + 10] = 0x65\n 49992: u8 [a0 + 0x9] = a4\n 49995: u8 [a0 + 8] = 0x69\n 49999: u8 [a0 + 7] = 0x20\n 50003: u8 [a0 + 0x6] = a5\n 50006: u8 [a0 + 5] = 0x69\n 50010: u8 [a0 + 4] = 0x6c\n 50014: u8 [a0 + 3] = 0x61\n 50018: u8 [a0 + 2] = 0x76\n 50022: u8 [a0 + 0x1] = t2\n 50025: u8 [a0] = t1\n 50027: jump @747\n      : @719 (gas: 3)\n 50030: a0 = 0x40\n 50033: a1 = 0x20\n 50036: ra = 442, jump @0\n      : @720 [@dyn 221] (gas: 100)\n 50043: a1 = u8 [a0 + 0x11]\n 50046: a2 = u8 [a0 + 0x10]\n 50049: a3 = u8 [a0 + 0x12]\n 50052: a4 = u8 [a0 + 0x13]\n 50055: a1 = a1 << 0x8\n 50058: a1 = a1 | a2\n 50061: a3 = a3 << 0x10\n 50064: a4 = a4 << 0x18\n 50067: a3 = a3 | a4\n 50070: a1 = a1 | a3\n 50073: a2 = u8 [a0 + 0x15]\n 50076: a3 = u8 [a0 + 0x14]\n 50079: a4 = u8 [a0 + 0x16]\n 50082: a5 = u8 [a0 + 0x17]\n 50085: a2 = a2 << 0x8\n 50088: a2 = a2 | a3\n 50091: a4 = a4 << 0x10\n 50094: a5 = a5 << 0x18\n 50097: a4 = a4 | a5\n 50100: a2 = a2 | a4\n 50103: a2 = a2 << 0x20\n 50106: t0 = a2 | a1\n 50109: a2 = u8 [a0 + 0x1]\n 50112: a3 = u8 [a0]\n 50114: a4 = u8 [a0 + 0x2]\n 50117: a5 = u8 [a0 + 0x3]\n 50120: a2 = a2 << 0x8\n 50123: a2 = a2 | a3\n 50126: a4 = a4 << 0x10\n 50129: a5 = a5 << 0x18\n 50132: a4 = a4 | a5\n 50135: a2 = a2 | a4\n 50138: a3 = u8 [a0 + 0x5]\n 50141: a4 = u8 [a0 + 0x4]\n 50144: a5 = u8 [a0 + 0x6]\n 50147: a1 = u8 [a0 + 0x7]\n 50150: a3 = a3 << 0x8\n 50153: a3 = a3 | a4\n 50156: a5 = a5 << 0x10\n 50159: a1 = a1 << 0x18\n 50162: a1 = a1 | a5\n 50165: a1 = a1 | a3\n 50168: a1 = a1 << 0x20\n 50171: t1 = a1 | a2\n 50174: a1 = u8 [a0 + 0x19]\n 50177: a3 = u8 [a0 + 0x18]\n 50180: a4 = u8 [a0 + 0x1a]\n 50183: a5 = u8 [a0 + 0x1b]\n 50186: a1 = a1 << 0x8\n 50189: a1 = a1 | a3\n 50192: a4 = a4 << 0x10\n 50195: a5 = a5 << 0x18\n 50198: a4 = a4 | a5\n 50201: a1 = a1 | a4\n 50204: a3 = u8 [a0 + 0x1d]\n 50207: a4 = u8 [a0 + 0x1c]\n 50210: a5 = u8 [a0 + 0x1e]\n 50213: a2 = u8 [a0 + 0x1f]\n 50216: a3 = a3 << 0x8\n 50219: a3 = a3 | a4\n 50222: a5 = a5 << 0x10\n 50225: a2 = a2 << 0x18\n 50228: a2 = a2 | a5\n 50231: a2 = a2 | a3\n 50234: a2 = a2 << 0x20\n 50237: a3 = a2 | a1\n 50240: a1 = u8 [a0 + 0x9]\n 50243: a2 = u8 [a0 + 0x8]\n 50246: a4 = u8 [a0 + 0xa]\n 50249: a5 = u8 [a0 + 0xb]\n 50252: a1 = a1 << 0x8\n 50255: a1 = a1 | a2\n 50258: a4 = a4 << 0x10\n 50261: a5 = a5 << 0x18\n 50264: a4 = a4 | a5\n 50267: a1 = a1 | a4\n 50270: a2 = u8 [a0 + 0xd]\n 50273: a4 = u8 [a0 + 0xc]\n 50276: a5 = u8 [a0 + 0xe]\n 50279: a0 = u8 [a0 + 0xf]\n 50282: a2 = a2 << 0x8\n 50285: a2 = a2 | a4\n 50288: a5 = a5 << 0x10\n 50291: a0 = a0 << 0x18\n 50294: a0 = a0 | a5\n 50297: a0 = a0 | a2\n 50300: a0 = a0 << 0x20\n 50303: a0 = a0 | a1\n 50306: a4 = reverse a0\n 50308: a2 = reverse a3\n 50310: a5 = reverse t1\n 50312: a3 = reverse t0\n 50314: a0 = a3 | a5\n 50317: a1 = a2 | a4\n 50320: a1 = a1 | a0\n 50323: a1 = a1 >> 0x20\n 50326: a0 = a0 | a4\n 50329: a0 = a0 << 0x20\n 50332: a0 = a0 | a1\n 50335: jump @722 if a0 == 0\n      : @721 (gas: 1)\n 50338: jump @799\n      : @722 (gas: 8)\n 50341: i32 a0 = a2 + 0\n 50343: a1 = 0x20\n 50346: u64 [s1 + 0x278] = a0\n 50350: u64 [s1 + 0x298] = a2\n 50354: u64 [s1 + 0x290] = a3\n 50358: u64 [s1 + 0x288] = a4\n 50362: u64 [s1 + 0x280] = a5\n 50366: ra = 444, jump @0\n      : @723 [@dyn 222] (gas: 43)\n 50373: u8 [a0 + 31] = 0\n 50376: u8 [a0 + 30] = 0\n 50379: u8 [a0 + 29] = 0\n 50382: u8 [a0 + 28] = 0\n 50385: u8 [a0 + 27] = 0\n 50388: u8 [a0 + 26] = 0\n 50391: u8 [a0 + 25] = 0\n 50394: u8 [a0 + 24] = 0\n 50397: u8 [a0 + 23] = 0\n 50400: u8 [a0 + 22] = 0\n 50403: u8 [a0 + 21] = 0\n 50406: u8 [a0 + 20] = 0\n 50409: u8 [a0 + 19] = 0\n 50412: u8 [a0 + 18] = 0\n 50415: u8 [a0 + 17] = 0\n 50418: u8 [a0 + 16] = 0\n 50421: u8 [a0 + 15] = 0\n 50424: u8 [a0 + 14] = 0\n 50427: u8 [a0 + 13] = 0\n 50430: u8 [a0 + 12] = 0\n 50433: u8 [a0 + 11] = 0\n 50436: u8 [a0 + 10] = 0\n 50439: u8 [a0 + 9] = 0\n 50442: u8 [a0 + 8] = 0\n 50445: u8 [a0 + 7] = 0\n 50448: u8 [a0 + 6] = 0\n 50451: u8 [a0 + 5] = 0\n 50454: u8 [a0 + 3] = 0xa0\n 50459: u8 [a0 + 2] = 0x79\n 50463: u8 [a0 + 1] = 0xc3\n 50468: u8 [a0 + 0] = 0x8\n 50471: a1 = u64 [s1 + 0x288]\n 50475: a3 = u64 [s1 + 0x280]\n 50479: a3 = a3 | a1\n 50482: a4 = 0x100000000\n 50492: a1 = 0xfffffffc\n 50502: a2 = u64 [s1 + 0x298]\n 50506: a1 = a2 <u a1\n 50509: a2 = u64 [s1 + 0x290]\n 50513: a1 = 0 if a2 != 0\n 50515: a1 = 0 if a3 != 0\n 50517: u8 [a0 + 4] = 0\n 50520: jump @725 if a1 != 0\n      : @724 (gas: 1)\n 50523: jump @799\n      : @725 (gas: 6)\n 50526: a0 = u64 [s1 + 0x278]\n 50530: i32 a0 = a0 + 0x4\n 50533: a1 = 0x20\n 50536: u64 [s1 + 0x288] = a3\n 50540: u64 [s1 + 0x280] = a4\n 50544: ra = 446, jump @0\n      : @726 [@dyn 223] (gas: 41)\n 50551: a4 = u64 [s1 + 0x288]\n 50555: a3 = u64 [s1 + 0x290]\n 50559: a2 = u64 [s1 + 0x298]\n 50563: u8 [a0 + 31] = 0x20\n 50567: u8 [a0 + 30] = 0\n 50570: u8 [a0 + 29] = 0\n 50573: u8 [a0 + 28] = 0\n 50576: u8 [a0 + 27] = 0\n 50579: u8 [a0 + 26] = 0\n 50582: u8 [a0 + 25] = 0\n 50585: u8 [a0 + 24] = 0\n 50588: u8 [a0 + 23] = 0\n 50591: u8 [a0 + 22] = 0\n 50594: u8 [a0 + 21] = 0\n 50597: u8 [a0 + 20] = 0\n 50600: u8 [a0 + 19] = 0\n 50603: u8 [a0 + 18] = 0\n 50606: u8 [a0 + 17] = 0\n 50609: u8 [a0 + 16] = 0\n 50612: u8 [a0 + 15] = 0\n 50615: u8 [a0 + 14] = 0\n 50618: u8 [a0 + 13] = 0\n 50621: u8 [a0 + 12] = 0\n 50624: u8 [a0 + 11] = 0\n 50627: u8 [a0 + 10] = 0\n 50630: u8 [a0 + 9] = 0\n 50633: u8 [a0 + 8] = 0\n 50636: u8 [a0 + 7] = 0\n 50639: u8 [a0 + 6] = 0\n 50642: u8 [a0 + 5] = 0\n 50645: u8 [a0 + 4] = 0\n 50648: u8 [a0 + 3] = 0\n 50651: u8 [a0 + 2] = 0\n 50654: u8 [a0 + 1] = 0\n 50657: a1 = u64 [s1 + 0x280]\n 50661: a1 = a1 + 0xffffffffffffffdc\n 50664: a1 = a2 <u a1\n 50667: a1 = 0 if a3 != 0\n 50669: a1 = 0 if a4 != 0\n 50671: u8 [a0 + 0] = 0\n 50673: jump @728 if a1 != 0\n      : @727 (gas: 1)\n 50676: jump @799\n      : @728 (gas: 4)\n 50679: a0 = u64 [s1 + 0x278]\n 50683: i32 a0 = a0 + 0x24\n 50686: a1 = 0x20\n 50689: ra = 448, jump @0\n      : @729 [@dyn 224] (gas: 40)\n 50696: u8 [a0 + 31] = 0xf\n 50700: u8 [a0 + 30] = 0\n 50703: u8 [a0 + 29] = 0\n 50706: u8 [a0 + 28] = 0\n 50709: u8 [a0 + 27] = 0\n 50712: u8 [a0 + 26] = 0\n 50715: u8 [a0 + 25] = 0\n 50718: u8 [a0 + 24] = 0\n 50721: u8 [a0 + 23] = 0\n 50724: u8 [a0 + 22] = 0\n 50727: u8 [a0 + 21] = 0\n 50730: u8 [a0 + 20] = 0\n 50733: u8 [a0 + 19] = 0\n 50736: u8 [a0 + 18] = 0\n 50739: u8 [a0 + 17] = 0\n 50742: u8 [a0 + 16] = 0\n 50745: u8 [a0 + 15] = 0\n 50748: u8 [a0 + 14] = 0\n 50751: u8 [a0 + 13] = 0\n 50754: u8 [a0 + 12] = 0\n 50757: u8 [a0 + 11] = 0\n 50760: u8 [a0 + 10] = 0\n 50763: u8 [a0 + 9] = 0\n 50766: u8 [a0 + 8] = 0\n 50769: u8 [a0 + 7] = 0\n 50772: u8 [a0 + 6] = 0\n 50775: u8 [a0 + 5] = 0\n 50778: u8 [a0 + 4] = 0\n 50781: u8 [a0 + 3] = 0\n 50784: u8 [a0 + 2] = 0\n 50787: u8 [a0 + 1] = 0\n 50790: a1 = 0xffffffbc\n 50800: a2 = u64 [s1 + 0x298]\n 50804: a1 = a2 <u a1\n 50807: a2 = u64 [s1 + 0x290]\n 50811: a1 = 0 if a2 != 0\n 50813: a2 = u64 [s1 + 0x288]\n 50817: a1 = 0 if a2 != 0\n 50819: u8 [a0 + 0] = 0\n 50821: jump @731 if a1 != 0\n      : @730 (gas: 1)\n 50824: jump @799\n      : @731 (gas: 4)\n 50827: a0 = u64 [s1 + 0x278]\n 50831: i32 a0 = a0 + 0x44\n 50834: a1 = 0x20\n 50837: ra = 450, jump @0\n      : @732 [@dyn 225] (gas: 34)\n 50844: u8 [a0 + 31] = 0\n 50847: u8 [a0 + 30] = 0\n 50850: u8 [a0 + 29] = 0\n 50853: u8 [a0 + 28] = 0\n 50856: u8 [a0 + 27] = 0\n 50859: u8 [a0 + 26] = 0\n 50862: u8 [a0 + 25] = 0\n 50865: u8 [a0 + 24] = 0\n 50868: u8 [a0 + 23] = 0\n 50871: u8 [a0 + 22] = 0\n 50874: u8 [a0 + 21] = 0\n 50877: u8 [a0 + 20] = 0\n 50880: u8 [a0 + 19] = 0\n 50883: u8 [a0 + 18] = 0\n 50886: u8 [a0 + 17] = 0\n 50889: u8 [a0 + 16] = 0\n 50892: u8 [a0 + 15] = 0\n 50895: u8 [a0 + 14] = 0x64\n 50899: u8 [a0 + 13] = 0x65\n 50903: u8 [a0 + 12] = 0x74\n 50907: u8 [a0 + 11] = 0x65\n 50911: u8 [a0 + 10] = 0x6c\n 50915: u8 [a0 + 9] = 0x65\n 50919: u8 [a0 + 8] = 0x64\n 50923: a4 = 0x20\n 50926: u8 [a0 + 0x7] = a4\n 50929: u8 [a0 + 6] = 0x73\n 50933: u8 [a0 + 5] = 0x69\n 50937: u8 [a0 + 0x4] = a4\n 50940: u8 [a0 + 3] = 0x6d\n 50944: u8 [a0 + 2] = 0x65\n 50948: u8 [a0 + 1] = 0x74\n 50952: u8 [a0 + 0] = 0x49\n 50955: jump @747\n      : @733 (gas: 3)\n 50958: a0 = 0x40\n 50961: a1 = 0x20\n 50964: ra = 452, jump @0\n      : @734 [@dyn 226] (gas: 100)\n 50971: a1 = u8 [a0 + 0x11]\n 50974: a2 = u8 [a0 + 0x10]\n 50977: a3 = u8 [a0 + 0x12]\n 50980: a4 = u8 [a0 + 0x13]\n 50983: a1 = a1 << 0x8\n 50986: a1 = a1 | a2\n 50989: a3 = a3 << 0x10\n 50992: a4 = a4 << 0x18\n 50995: a3 = a3 | a4\n 50998: a1 = a1 | a3\n 51001: a2 = u8 [a0 + 0x15]\n 51004: a3 = u8 [a0 + 0x14]\n 51007: a4 = u8 [a0 + 0x16]\n 51010: a5 = u8 [a0 + 0x17]\n 51013: a2 = a2 << 0x8\n 51016: a2 = a2 | a3\n 51019: a4 = a4 << 0x10\n 51022: a5 = a5 << 0x18\n 51025: a4 = a4 | a5\n 51028: a2 = a2 | a4\n 51031: a2 = a2 << 0x20\n 51034: t0 = a2 | a1\n 51037: a2 = u8 [a0 + 0x1]\n 51040: a3 = u8 [a0]\n 51042: a4 = u8 [a0 + 0x2]\n 51045: a5 = u8 [a0 + 0x3]\n 51048: a2 = a2 << 0x8\n 51051: a2 = a2 | a3\n 51054: a4 = a4 << 0x10\n 51057: a5 = a5 << 0x18\n 51060: a4 = a4 | a5\n 51063: a2 = a2 | a4\n 51066: a3 = u8 [a0 + 0x5]\n 51069: a4 = u8 [a0 + 0x4]\n 51072: a5 = u8 [a0 + 0x6]\n 51075: a1 = u8 [a0 + 0x7]\n 51078: a3 = a3 << 0x8\n 51081: a3 = a3 | a4\n 51084: a5 = a5 << 0x10\n 51087: a1 = a1 << 0x18\n 51090: a1 = a1 | a5\n 51093: a1 = a1 | a3\n 51096: a1 = a1 << 0x20\n 51099: t1 = a1 | a2\n 51102: a1 = u8 [a0 + 0x19]\n 51105: a3 = u8 [a0 + 0x18]\n 51108: a4 = u8 [a0 + 0x1a]\n 51111: a5 = u8 [a0 + 0x1b]\n 51114: a1 = a1 << 0x8\n 51117: a1 = a1 | a3\n 51120: a4 = a4 << 0x10\n 51123: a5 = a5 << 0x18\n 51126: a4 = a4 | a5\n 51129: a1 = a1 | a4\n 51132: a3 = u8 [a0 + 0x1d]\n 51135: a4 = u8 [a0 + 0x1c]\n 51138: a5 = u8 [a0 + 0x1e]\n 51141: a2 = u8 [a0 + 0x1f]\n 51144: a3 = a3 << 0x8\n 51147: a3 = a3 | a4\n 51150: a5 = a5 << 0x10\n 51153: a2 = a2 << 0x18\n 51156: a2 = a2 | a5\n 51159: a2 = a2 | a3\n 51162: a2 = a2 << 0x20\n 51165: a3 = a2 | a1\n 51168: a1 = u8 [a0 + 0x9]\n 51171: a2 = u8 [a0 + 0x8]\n 51174: a4 = u8 [a0 + 0xa]\n 51177: a5 = u8 [a0 + 0xb]\n 51180: a1 = a1 << 0x8\n 51183: a1 = a1 | a2\n 51186: a4 = a4 << 0x10\n 51189: a5 = a5 << 0x18\n 51192: a4 = a4 | a5\n 51195: a1 = a1 | a4\n 51198: a2 = u8 [a0 + 0xd]\n 51201: a4 = u8 [a0 + 0xc]\n 51204: a5 = u8 [a0 + 0xe]\n 51207: a0 = u8 [a0 + 0xf]\n 51210: a2 = a2 << 0x8\n 51213: a2 = a2 | a4\n 51216: a5 = a5 << 0x10\n 51219: a0 = a0 << 0x18\n 51222: a0 = a0 | a5\n 51225: a0 = a0 | a2\n 51228: a0 = a0 << 0x20\n 51231: a0 = a0 | a1\n 51234: a4 = reverse a0\n 51236: a2 = reverse a3\n 51238: a5 = reverse t1\n 51240: a3 = reverse t0\n 51242: a0 = a3 | a5\n 51245: a1 = a2 | a4\n 51248: a1 = a1 | a0\n 51251: a1 = a1 >> 0x20\n 51254: a0 = a0 | a4\n 51257: a0 = a0 << 0x20\n 51260: a0 = a0 | a1\n 51263: jump @736 if a0 == 0\n      : @735 (gas: 1)\n 51266: jump @799\n      : @736 (gas: 8)\n 51269: i32 a0 = a2 + 0\n 51271: a1 = 0x20\n 51274: u64 [s1 + 0x278] = a0\n 51278: u64 [s1 + 0x298] = a2\n 51282: u64 [s1 + 0x290] = a3\n 51286: u64 [s1 + 0x288] = a4\n 51290: u64 [s1 + 0x280] = a5\n 51294: ra = 454, jump @0\n      : @737 [@dyn 227] (gas: 43)\n 51301: u8 [a0 + 31] = 0\n 51304: u8 [a0 + 30] = 0\n 51307: u8 [a0 + 29] = 0\n 51310: u8 [a0 + 28] = 0\n 51313: u8 [a0 + 27] = 0\n 51316: u8 [a0 + 26] = 0\n 51319: u8 [a0 + 25] = 0\n 51322: u8 [a0 + 24] = 0\n 51325: u8 [a0 + 23] = 0\n 51328: u8 [a0 + 22] = 0\n 51331: u8 [a0 + 21] = 0\n 51334: u8 [a0 + 20] = 0\n 51337: u8 [a0 + 19] = 0\n 51340: u8 [a0 + 18] = 0\n 51343: u8 [a0 + 17] = 0\n 51346: u8 [a0 + 16] = 0\n 51349: u8 [a0 + 15] = 0\n 51352: u8 [a0 + 14] = 0\n 51355: u8 [a0 + 13] = 0\n 51358: u8 [a0 + 12] = 0\n 51361: u8 [a0 + 11] = 0\n 51364: u8 [a0 + 10] = 0\n 51367: u8 [a0 + 9] = 0\n 51370: u8 [a0 + 8] = 0\n 51373: u8 [a0 + 7] = 0\n 51376: u8 [a0 + 6] = 0\n 51379: u8 [a0 + 5] = 0\n 51382: u8 [a0 + 3] = 0xa0\n 51387: u8 [a0 + 2] = 0x79\n 51391: u8 [a0 + 1] = 0xc3\n 51396: u8 [a0 + 0] = 0x8\n 51399: a1 = u64 [s1 + 0x288]\n 51403: a3 = u64 [s1 + 0x280]\n 51407: a3 = a3 | a1\n 51410: a4 = 0x100000000\n 51420: a1 = 0xfffffffc\n 51430: a2 = u64 [s1 + 0x298]\n 51434: a1 = a2 <u a1\n 51437: a2 = u64 [s1 + 0x290]\n 51441: a1 = 0 if a2 != 0\n 51443: a1 = 0 if a3 != 0\n 51445: u8 [a0 + 4] = 0\n 51448: jump @739 if a1 != 0\n      : @738 (gas: 1)\n 51451: jump @799\n      : @739 (gas: 6)\n 51454: a0 = u64 [s1 + 0x278]\n 51458: i32 a0 = a0 + 0x4\n 51461: a1 = 0x20\n 51464: u64 [s1 + 0x288] = a3\n 51468: u64 [s1 + 0x280] = a4\n 51472: ra = 456, jump @0\n      : @740 [@dyn 228] (gas: 41)\n 51479: a4 = u64 [s1 + 0x288]\n 51483: a3 = u64 [s1 + 0x290]\n 51487: a2 = u64 [s1 + 0x298]\n 51491: u8 [a0 + 31] = 0x20\n 51495: u8 [a0 + 30] = 0\n 51498: u8 [a0 + 29] = 0\n 51501: u8 [a0 + 28] = 0\n 51504: u8 [a0 + 27] = 0\n 51507: u8 [a0 + 26] = 0\n 51510: u8 [a0 + 25] = 0\n 51513: u8 [a0 + 24] = 0\n 51516: u8 [a0 + 23] = 0\n 51519: u8 [a0 + 22] = 0\n 51522: u8 [a0 + 21] = 0\n 51525: u8 [a0 + 20] = 0\n 51528: u8 [a0 + 19] = 0\n 51531: u8 [a0 + 18] = 0\n 51534: u8 [a0 + 17] = 0\n 51537: u8 [a0 + 16] = 0\n 51540: u8 [a0 + 15] = 0\n 51543: u8 [a0 + 14] = 0\n 51546: u8 [a0 + 13] = 0\n 51549: u8 [a0 + 12] = 0\n 51552: u8 [a0 + 11] = 0\n 51555: u8 [a0 + 10] = 0\n 51558: u8 [a0 + 9] = 0\n 51561: u8 [a0 + 8] = 0\n 51564: u8 [a0 + 7] = 0\n 51567: u8 [a0 + 6] = 0\n 51570: u8 [a0 + 5] = 0\n 51573: u8 [a0 + 4] = 0\n 51576: u8 [a0 + 3] = 0\n 51579: u8 [a0 + 2] = 0\n 51582: u8 [a0 + 1] = 0\n 51585: a1 = u64 [s1 + 0x280]\n 51589: a1 = a1 + 0xffffffffffffffdc\n 51592: a1 = a2 <u a1\n 51595: a1 = 0 if a3 != 0\n 51597: a1 = 0 if a4 != 0\n 51599: u8 [a0 + 0] = 0\n 51601: jump @742 if a1 != 0\n      : @741 (gas: 1)\n 51604: jump @799\n      : @742 (gas: 4)\n 51607: a0 = u64 [s1 + 0x278]\n 51611: i32 a0 = a0 + 0x24\n 51614: a1 = 0x20\n 51617: ra = 458, jump @0\n      : @743 [@dyn 229] (gas: 40)\n 51624: u8 [a0 + 31] = 0x12\n 51628: u8 [a0 + 30] = 0\n 51631: u8 [a0 + 29] = 0\n 51634: u8 [a0 + 28] = 0\n 51637: u8 [a0 + 27] = 0\n 51640: u8 [a0 + 26] = 0\n 51643: u8 [a0 + 25] = 0\n 51646: u8 [a0 + 24] = 0\n 51649: u8 [a0 + 23] = 0\n 51652: u8 [a0 + 22] = 0\n 51655: u8 [a0 + 21] = 0\n 51658: u8 [a0 + 20] = 0\n 51661: u8 [a0 + 19] = 0\n 51664: u8 [a0 + 18] = 0\n 51667: u8 [a0 + 17] = 0\n 51670: u8 [a0 + 16] = 0\n 51673: u8 [a0 + 15] = 0\n 51676: u8 [a0 + 14] = 0\n 51679: u8 [a0 + 13] = 0\n 51682: u8 [a0 + 12] = 0\n 51685: u8 [a0 + 11] = 0\n 51688: u8 [a0 + 10] = 0\n 51691: u8 [a0 + 9] = 0\n 51694: u8 [a0 + 8] = 0\n 51697: u8 [a0 + 7] = 0\n 51700: u8 [a0 + 6] = 0\n 51703: u8 [a0 + 5] = 0\n 51706: u8 [a0 + 4] = 0\n 51709: u8 [a0 + 3] = 0\n 51712: u8 [a0 + 2] = 0\n 51715: u8 [a0 + 1] = 0\n 51718: a1 = 0xffffffbc\n 51728: a2 = u64 [s1 + 0x298]\n 51732: a1 = a2 <u a1\n 51735: a2 = u64 [s1 + 0x290]\n 51739: a1 = 0 if a2 != 0\n 51741: a2 = u64 [s1 + 0x288]\n 51745: a1 = 0 if a2 != 0\n 51747: u8 [a0 + 0] = 0\n 51749: jump @745 if a1 != 0\n      : @744 (gas: 1)\n 51752: jump @799\n      : @745 (gas: 4)\n 51755: a0 = u64 [s1 + 0x278]\n 51759: i32 a0 = a0 + 0x44\n 51762: a1 = 0x20\n 51765: ra = 460, jump @0\n      : @746 [@dyn 230] (gas: 34)\n 51772: u8 [a0 + 31] = 0\n 51775: u8 [a0 + 30] = 0\n 51778: u8 [a0 + 29] = 0\n 51781: u8 [a0 + 28] = 0\n 51784: u8 [a0 + 27] = 0\n 51787: u8 [a0 + 26] = 0\n 51790: u8 [a0 + 25] = 0\n 51793: u8 [a0 + 24] = 0\n 51796: u8 [a0 + 23] = 0\n 51799: u8 [a0 + 22] = 0\n 51802: u8 [a0 + 21] = 0\n 51805: u8 [a0 + 20] = 0\n 51808: u8 [a0 + 19] = 0\n 51811: u8 [a0 + 18] = 0\n 51814: u8 [a0 + 17] = 0x30\n 51818: a4 = 0x20\n 51821: u8 [a0 + 0x10] = a4\n 51824: u8 [a0 + 15] = 0x3e\n 51828: u8 [a0 + 0xe] = a4\n 51831: u8 [a0 + 13] = 0x65\n 51835: u8 [a0 + 12] = 0x62\n 51839: u8 [a0 + 0xb] = a4\n 51842: u8 [a0 + 10] = 0x74\n 51846: u8 [a0 + 9] = 0x73\n 51850: u8 [a0 + 8] = 0x75\n 51854: u8 [a0 + 7] = 0x6d\n 51858: u8 [a0 + 0x6] = a4\n 51861: u8 [a0 + 5] = 0x74\n 51865: u8 [a0 + 4] = 0x68\n 51869: u8 [a0 + 3] = 0x67\n 51873: u8 [a0 + 2] = 0x69\n 51877: u8 [a0 + 1] = 0x65\n 51881: u8 [a0 + 0] = 0x57\n 51884: fallthrough\n      : @747 (gas: 3)\n 51885: a1 = 0x64\n 51888: a0 = u64 [s1 + 0x278]\n 51892: ra = 462, jump @0\n      : @748 [@dyn 231] (gas: 6)\n 51899: i32 a1 = a0 + 0\n 51901: a0 = 0x1\n 51904: a2 = 0x64\n 51907: ra = 0x1d0\n 51911: ecalli 15 // 'seal_return'\n 51913: fallthrough\n      : @749 [@dyn 232] (gas: 22)\n 51914: u64 [s1 + 0x280] = t2\n 51918: u64 [s1 + 0x288] = t1\n 51922: u64 [s1 + 0x290] = t0\n 51926: u64 [s1 + 632] = 0\n 51930: u64 [s1 + 624] = 0\n 51934: t2 = 0\n 51936: u64 [s1 + 616] = 0\n 51940: a0 = reverse a3\n 51942: u64 [s1 + 0x100] = a0\n 51946: a0 = reverse a5\n 51948: u64 [s1 + 0xf8] = a0\n 51952: a0 = reverse a4\n 51954: u64 [s1 + 0xf0] = a0\n 51958: a0 = reverse ra\n 51960: u64 [s1 + 0xe8] = a0\n 51964: a0 = 0xffffffe0\n 51974: u64 [s1 + 0x260] = a0\n 51978: a5 = u64 [s1 + 0x1a8]\n 51982: ra = u64 [s1 + 0x1a0]\n 51986: a4 = u64 [s1 + 0x198]\n 51990: a2 = u64 [s1 + 0x190]\n 51994: fallthrough\n      : @750 (gas: 9)\n 51995: u64 [s1 + 0x258] = t2\n 51999: a0 = ra | a2\n 52002: a1 = a4 | a5\n 52005: a0 = a0 | a1\n 52008: a0 = a0 >> 0x20\n 52011: a1 = a1 | a2\n 52014: a1 = a1 << 0x20\n 52017: a0 = a0 | a1\n 52020: jump @752 if a0 == 0\n      : @751 (gas: 1)\n 52023: jump @799\n      : @752 (gas: 7)\n 52026: u64 [s1 + 0x190] = a2\n 52030: u64 [s1 + 0x198] = a4\n 52034: u64 [s1 + 0x1a8] = a5\n 52038: u64 [s1 + 0x1a0] = ra\n 52042: i32 a0 = ra + 0\n 52044: a1 = 0x20\n 52047: ra = 466, jump @0\n      : @753 [@dyn 233] (gas: 100)\n 52054: a1 = u8 [a0 + 0x11]\n 52057: a2 = u8 [a0 + 0x10]\n 52060: a3 = u8 [a0 + 0x12]\n 52063: a4 = u8 [a0 + 0x13]\n 52066: a1 = a1 << 0x8\n 52069: a1 = a1 | a2\n 52072: a3 = a3 << 0x10\n 52075: a4 = a4 << 0x18\n 52078: a3 = a3 | a4\n 52081: a1 = a1 | a3\n 52084: a2 = u8 [a0 + 0x15]\n 52087: a3 = u8 [a0 + 0x14]\n 52090: a4 = u8 [a0 + 0x16]\n 52093: a5 = u8 [a0 + 0x17]\n 52096: a2 = a2 << 0x8\n 52099: a2 = a2 | a3\n 52102: a4 = a4 << 0x10\n 52105: a5 = a5 << 0x18\n 52108: a4 = a4 | a5\n 52111: a2 = a2 | a4\n 52114: a2 = a2 << 0x20\n 52117: t0 = a2 | a1\n 52120: a2 = u8 [a0 + 0x1]\n 52123: a3 = u8 [a0]\n 52125: a4 = u8 [a0 + 0x2]\n 52128: a5 = u8 [a0 + 0x3]\n 52131: a2 = a2 << 0x8\n 52134: a2 = a2 | a3\n 52137: a4 = a4 << 0x10\n 52140: a5 = a5 << 0x18\n 52143: a4 = a4 | a5\n 52146: a2 = a2 | a4\n 52149: a3 = u8 [a0 + 0x5]\n 52152: a4 = u8 [a0 + 0x4]\n 52155: a5 = u8 [a0 + 0x6]\n 52158: a1 = u8 [a0 + 0x7]\n 52161: a3 = a3 << 0x8\n 52164: a3 = a3 | a4\n 52167: a5 = a5 << 0x10\n 52170: a1 = a1 << 0x18\n 52173: a1 = a1 | a5\n 52176: a1 = a1 | a3\n 52179: a1 = a1 << 0x20\n 52182: t1 = a1 | a2\n 52185: a1 = u8 [a0 + 0x19]\n 52188: a3 = u8 [a0 + 0x18]\n 52191: a4 = u8 [a0 + 0x1a]\n 52194: a5 = u8 [a0 + 0x1b]\n 52197: a1 = a1 << 0x8\n 52200: a1 = a1 | a3\n 52203: a4 = a4 << 0x10\n 52206: a5 = a5 << 0x18\n 52209: a4 = a4 | a5\n 52212: a1 = a1 | a4\n 52215: a3 = u8 [a0 + 0x1d]\n 52218: a4 = u8 [a0 + 0x1c]\n 52221: a5 = u8 [a0 + 0x1e]\n 52224: a2 = u8 [a0 + 0x1f]\n 52227: a3 = a3 << 0x8\n 52230: a3 = a3 | a4\n 52233: a5 = a5 << 0x10\n 52236: a2 = a2 << 0x18\n 52239: a2 = a2 | a5\n 52242: a2 = a2 | a3\n 52245: a2 = a2 << 0x20\n 52248: a3 = a2 | a1\n 52251: a1 = u8 [a0 + 0x9]\n 52254: a2 = u8 [a0 + 0x8]\n 52257: a4 = u8 [a0 + 0xa]\n 52260: a5 = u8 [a0 + 0xb]\n 52263: a1 = a1 << 0x8\n 52266: a1 = a1 | a2\n 52269: a4 = a4 << 0x10\n 52272: a5 = a5 << 0x18\n 52275: a4 = a4 | a5\n 52278: a1 = a1 | a4\n 52281: a2 = u8 [a0 + 0xd]\n 52284: a4 = u8 [a0 + 0xc]\n 52287: a5 = u8 [a0 + 0xe]\n 52290: a0 = u8 [a0 + 0xf]\n 52293: a2 = a2 << 0x8\n 52296: a2 = a2 | a4\n 52299: a5 = a5 << 0x10\n 52302: a0 = a0 << 0x18\n 52305: a0 = a0 | a5\n 52308: a0 = a0 | a2\n 52311: a0 = a0 << 0x20\n 52314: a0 = a0 | a1\n 52317: a4 = reverse a0\n 52319: a2 = reverse a3\n 52321: a5 = reverse t1\n 52323: a3 = reverse t0\n 52325: a0 = a3 | a5\n 52328: a1 = a2 | a4\n 52331: a1 = a1 | a0\n 52334: a1 = a1 >> 0x20\n 52337: a0 = a0 | a4\n 52340: a0 = a0 << 0x20\n 52343: a0 = a0 | a1\n 52346: jump @755 if a0 == 0\n      : @754 (gas: 1)\n 52349: jump @799\n      : @755 (gas: 8)\n 52352: u64 [s1 + 0x238] = a5\n 52356: u64 [s1 + 0x240] = a4\n 52360: u64 [s1 + 0x248] = a3\n 52364: u64 [s1 + 0x250] = a2\n 52368: i32 a0 = a2 + 0\n 52370: a1 = 0x20\n 52373: u64 [s1 + 0x230] = a0\n 52377: ra = 468, jump @0\n      : @756 [@dyn 234] (gas: 12)\n 52384: a3 = u64 [s1 + 0x290]\n 52388: a5 = u64 [s1 + 0x280]\n 52392: a1 = a3 | a5\n 52395: a2 = u64 [s1 + 0x298]\n 52399: a4 = u64 [s1 + 0x288]\n 52403: a2 = a2 | a4\n 52406: a1 = a1 | a2\n 52409: a1 = a1 >> 0x20\n 52412: a2 = a2 | a5\n 52415: a2 = a2 << 0x20\n 52418: a1 = a1 | a2\n 52421: jump @758 if a1 == 0\n      : @757 (gas: 1)\n 52424: jump @799\n      : @758 (gas: 69)\n 52427: a1 = u8 [a0]\n 52429: u64 [s1 + 0x228] = a1\n 52433: a1 = u8 [a0 + 0x1]\n 52436: u64 [s1 + 0x220] = a1\n 52440: a1 = u8 [a0 + 0x2]\n 52443: u64 [s1 + 0x218] = a1\n 52447: a1 = u8 [a0 + 0x3]\n 52450: u64 [s1 + 0x210] = a1\n 52454: a1 = u8 [a0 + 0x4]\n 52457: u64 [s1 + 0x208] = a1\n 52461: a1 = u8 [a0 + 0x5]\n 52464: u64 [s1 + 0x200] = a1\n 52468: a1 = u8 [a0 + 0x6]\n 52471: u64 [s1 + 0x1f8] = a1\n 52475: a1 = u8 [a0 + 0x7]\n 52478: u64 [s1 + 0x1f0] = a1\n 52482: a1 = u8 [a0 + 0x8]\n 52485: u64 [s1 + 0x1e8] = a1\n 52489: a1 = u8 [a0 + 0x9]\n 52492: u64 [s1 + 0x1e0] = a1\n 52496: a1 = u8 [a0 + 0xa]\n 52499: u64 [s1 + 0x1d8] = a1\n 52503: a1 = u8 [a0 + 0xb]\n 52506: u64 [s1 + 0x1d0] = a1\n 52510: a1 = u8 [a0 + 0xc]\n 52513: u64 [s1 + 0x1c8] = a1\n 52517: a1 = u8 [a0 + 0xd]\n 52520: u64 [s1 + 0x1c0] = a1\n 52524: a1 = u8 [a0 + 0xe]\n 52527: u64 [s1 + 0x1b8] = a1\n 52531: a1 = u8 [a0 + 0xf]\n 52534: u64 [s1 + 0x1b0] = a1\n 52538: a1 = u8 [a0 + 0x10]\n 52541: u64 [s1 + 0x188] = a1\n 52545: a1 = u8 [a0 + 0x11]\n 52548: u64 [s1 + 0x180] = a1\n 52552: a1 = u8 [a0 + 0x12]\n 52555: u64 [s1 + 0x178] = a1\n 52559: a1 = u8 [a0 + 0x13]\n 52562: u64 [s1 + 0x170] = a1\n 52566: a1 = u8 [a0 + 0x14]\n 52569: u64 [s1 + 0x168] = a1\n 52573: a1 = u8 [a0 + 0x15]\n 52576: u64 [s1 + 0x160] = a1\n 52580: a1 = u8 [a0 + 0x16]\n 52583: u64 [s1 + 0x158] = a1\n 52587: a1 = u8 [a0 + 0x17]\n 52590: u64 [s1 + 0x150] = a1\n 52594: a1 = u8 [a0 + 0x18]\n 52597: u64 [s1 + 0x148] = a1\n 52601: a1 = u8 [a0 + 0x19]\n 52604: u64 [s1 + 0x140] = a1\n 52608: a1 = u8 [a0 + 0x1a]\n 52611: u64 [s1 + 0x138] = a1\n 52615: a1 = u8 [a0 + 0x1b]\n 52618: u64 [s1 + 0x130] = a1\n 52622: a1 = u8 [a0 + 0x1c]\n 52625: u64 [s1 + 0x128] = a1\n 52629: a1 = u8 [a0 + 0x1d]\n 52632: u64 [s1 + 0x120] = a1\n 52636: a1 = u8 [a0 + 0x1e]\n 52639: u64 [s1 + 0x118] = a1\n 52643: a0 = u8 [a0 + 0x1f]\n 52646: u64 [s1 + 0x110] = a0\n 52650: i32 a0 = a3 + 0\n 52652: a1 = 0x20\n 52655: u64 [s1 + 0x108] = a0\n 52659: u64 [s1 + 0x290] = a3\n 52663: ra = 470, jump @0\n      : @759 [@dyn 235] (gas: 74)\n 52670: a1 = u64 [s1 + 0x110]\n 52674: u8 [a0 + 0x1f] = a1\n 52677: a1 = u64 [s1 + 0x118]\n 52681: u8 [a0 + 0x1e] = a1\n 52684: a1 = u64 [s1 + 0x120]\n 52688: u8 [a0 + 0x1d] = a1\n 52691: a1 = u64 [s1 + 0x128]\n 52695: u8 [a0 + 0x1c] = a1\n 52698: a1 = u64 [s1 + 0x130]\n 52702: u8 [a0 + 0x1b] = a1\n 52705: a1 = u64 [s1 + 0x138]\n 52709: u8 [a0 + 0x1a] = a1\n 52712: a1 = u64 [s1 + 0x140]\n 52716: u8 [a0 + 0x19] = a1\n 52719: a1 = u64 [s1 + 0x148]\n 52723: u8 [a0 + 0x18] = a1\n 52726: a1 = u64 [s1 + 0x150]\n 52730: u8 [a0 + 0x17] = a1\n 52733: a1 = u64 [s1 + 0x158]\n 52737: u8 [a0 + 0x16] = a1\n 52740: a1 = u64 [s1 + 0x160]\n 52744: u8 [a0 + 0x15] = a1\n 52747: a1 = u64 [s1 + 0x168]\n 52751: u8 [a0 + 0x14] = a1\n 52754: a1 = u64 [s1 + 0x170]\n 52758: u8 [a0 + 0x13] = a1\n 52761: a1 = u64 [s1 + 0x178]\n 52765: u8 [a0 + 0x12] = a1\n 52768: a1 = u64 [s1 + 0x180]\n 52772: u8 [a0 + 0x11] = a1\n 52775: a1 = u64 [s1 + 0x188]\n 52779: u8 [a0 + 0x10] = a1\n 52782: a1 = u64 [s1 + 0x1b0]\n 52786: u8 [a0 + 0xf] = a1\n 52789: a1 = u64 [s1 + 0x1b8]\n 52793: u8 [a0 + 0xe] = a1\n 52796: a1 = u64 [s1 + 0x1c0]\n 52800: u8 [a0 + 0xd] = a1\n 52803: a1 = u64 [s1 + 0x1c8]\n 52807: u8 [a0 + 0xc] = a1\n 52810: a1 = u64 [s1 + 0x1d0]\n 52814: u8 [a0 + 0xb] = a1\n 52817: a1 = u64 [s1 + 0x1d8]\n 52821: u8 [a0 + 0xa] = a1\n 52824: a1 = u64 [s1 + 0x1e0]\n 52828: u8 [a0 + 0x9] = a1\n 52831: a1 = u64 [s1 + 0x1e8]\n 52835: u8 [a0 + 0x8] = a1\n 52838: a1 = u64 [s1 + 0x1f0]\n 52842: u8 [a0 + 0x7] = a1\n 52845: a1 = u64 [s1 + 0x1f8]\n 52849: u8 [a0 + 0x6] = a1\n 52852: a1 = u64 [s1 + 0x200]\n 52856: u8 [a0 + 0x5] = a1\n 52859: a1 = u64 [s1 + 0x208]\n 52863: u8 [a0 + 0x4] = a1\n 52866: a1 = u64 [s1 + 0x210]\n 52870: u8 [a0 + 0x3] = a1\n 52873: a1 = u64 [s1 + 0x218]\n 52877: u8 [a0 + 0x2] = a1\n 52880: a1 = u64 [s1 + 0x220]\n 52884: u8 [a0 + 0x1] = a1\n 52887: a1 = u64 [s1 + 0x240]\n 52891: a2 = u64 [s1 + 0x238]\n 52895: a1 = a1 | a2\n 52898: a2 = u64 [s1 + 0x260]\n 52902: a3 = u64 [s1 + 0x250]\n 52906: a2 = a3 <u a2\n 52909: a3 = u64 [s1 + 0x248]\n 52913: a2 = 0 if a3 != 0\n 52915: a2 = 0 if a1 != 0\n 52917: a1 = u64 [s1 + 0x228]\n 52921: u8 [a0] = a1\n 52923: jump @761 if a2 != 0\n      : @760 (gas: 1)\n 52926: jump @799\n      : @761 (gas: 4)\n 52929: a0 = u64 [s1 + 0x230]\n 52933: i32 a0 = a0 + 0x20\n 52936: a1 = 0x20\n 52939: ra = 472, jump @0\n      : @762 [@dyn 236] (gas: 13)\n 52946: a3 = u64 [s1 + 0x298]\n 52950: a4 = u64 [s1 + 0x280]\n 52954: a1 = a4 | a3\n 52957: a2 = u64 [s1 + 0x260]\n 52961: t0 = u64 [s1 + 0x290]\n 52965: a2 = t0 <u a2\n 52968: a5 = u64 [s1 + 0x288]\n 52972: a2 = 0 if a5 != 0\n 52974: a2 = 0 if a1 != 0\n 52976: a1 = u64 [s1 + 0x278]\n 52980: t1 = u64 [s1 + 0x270]\n 52984: t2 = u64 [s1 + 0x268]\n 52988: jump @764 if a2 != 0\n      : @763 (gas: 1)\n 52991: jump @799\n      : @764 (gas: 74)\n 52994: a2 = u8 [a0]\n 52996: u64 [s1 + 0x250] = a2\n 53000: a2 = u8 [a0 + 0x1]\n 53003: u64 [s1 + 0x248] = a2\n 53007: a2 = u8 [a0 + 0x2]\n 53010: u64 [s1 + 0x240] = a2\n 53014: a2 = u8 [a0 + 0x3]\n 53017: u64 [s1 + 0x238] = a2\n 53021: a2 = u8 [a0 + 0x4]\n 53024: u64 [s1 + 0x230] = a2\n 53028: a2 = u8 [a0 + 0x5]\n 53031: u64 [s1 + 0x228] = a2\n 53035: a2 = u8 [a0 + 0x6]\n 53038: u64 [s1 + 0x220] = a2\n 53042: a2 = u8 [a0 + 0x7]\n 53045: u64 [s1 + 0x218] = a2\n 53049: a2 = u8 [a0 + 0x8]\n 53052: u64 [s1 + 0x210] = a2\n 53056: a2 = u8 [a0 + 0x9]\n 53059: u64 [s1 + 0x208] = a2\n 53063: a2 = u8 [a0 + 0xa]\n 53066: u64 [s1 + 0x200] = a2\n 53070: a2 = u8 [a0 + 0xb]\n 53073: u64 [s1 + 0x1f8] = a2\n 53077: a2 = u8 [a0 + 0xc]\n 53080: u64 [s1 + 0x1f0] = a2\n 53084: a2 = u8 [a0 + 0xd]\n 53087: u64 [s1 + 0x1e8] = a2\n 53091: a2 = u8 [a0 + 0xe]\n 53094: u64 [s1 + 0x1e0] = a2\n 53098: a2 = u8 [a0 + 0xf]\n 53101: u64 [s1 + 0x1d8] = a2\n 53105: a2 = u8 [a0 + 0x10]\n 53108: u64 [s1 + 0x1d0] = a2\n 53112: a2 = u8 [a0 + 0x11]\n 53115: u64 [s1 + 0x1c8] = a2\n 53119: a2 = u8 [a0 + 0x12]\n 53122: u64 [s1 + 0x1c0] = a2\n 53126: a2 = u8 [a0 + 0x13]\n 53129: u64 [s1 + 0x1b8] = a2\n 53133: a2 = u8 [a0 + 0x14]\n 53136: u64 [s1 + 0x1b0] = a2\n 53140: a2 = u8 [a0 + 0x15]\n 53143: u64 [s1 + 0x188] = a2\n 53147: a2 = u8 [a0 + 0x16]\n 53150: u64 [s1 + 0x180] = a2\n 53154: a2 = u8 [a0 + 0x17]\n 53157: u64 [s1 + 0x178] = a2\n 53161: a2 = u8 [a0 + 0x18]\n 53164: u64 [s1 + 0x170] = a2\n 53168: a2 = u8 [a0 + 0x19]\n 53171: u64 [s1 + 0x168] = a2\n 53175: a2 = u8 [a0 + 0x1a]\n 53178: u64 [s1 + 0x160] = a2\n 53182: a2 = u8 [a0 + 0x1b]\n 53185: u64 [s1 + 0x158] = a2\n 53189: a2 = u8 [a0 + 0x1c]\n 53192: u64 [s1 + 0x150] = a2\n 53196: a2 = u8 [a0 + 0x1d]\n 53199: u64 [s1 + 0x148] = a2\n 53203: a2 = u8 [a0 + 0x1e]\n 53206: u64 [s1 + 0x140] = a2\n 53210: a0 = u8 [a0 + 0x1f]\n 53213: u64 [s1 + 0x138] = a0\n 53217: a0 = u64 [s1 + 0x108]\n 53221: i32 a0 = a0 + 0x20\n 53224: u64 [s1 + 0x278] = a1\n 53228: a1 = 0x20\n 53231: u64 [s1 + 0x298] = a3\n 53235: u64 [s1 + 0x288] = a5\n 53239: u64 [s1 + 0x280] = a4\n 53243: u64 [s1 + 0x270] = t1\n 53247: u64 [s1 + 0x268] = t2\n 53251: ra = 474, jump @0\n      : @765 [@dyn 237] (gas: 130)\n 53258: a1 = u64 [s1 + 0x138]\n 53262: u8 [a0 + 0x1f] = a1\n 53265: a1 = u64 [s1 + 0x140]\n 53269: u8 [a0 + 0x1e] = a1\n 53272: a1 = u64 [s1 + 0x148]\n 53276: u8 [a0 + 0x1d] = a1\n 53279: a1 = u64 [s1 + 0x150]\n 53283: u8 [a0 + 0x1c] = a1\n 53286: a1 = u64 [s1 + 0x158]\n 53290: u8 [a0 + 0x1b] = a1\n 53293: a1 = u64 [s1 + 0x160]\n 53297: u8 [a0 + 0x1a] = a1\n 53300: a1 = u64 [s1 + 0x168]\n 53304: u8 [a0 + 0x19] = a1\n 53307: a1 = u64 [s1 + 0x170]\n 53311: u8 [a0 + 0x18] = a1\n 53314: a1 = u64 [s1 + 0x178]\n 53318: u8 [a0 + 0x17] = a1\n 53321: a1 = u64 [s1 + 0x180]\n 53325: u8 [a0 + 0x16] = a1\n 53328: a1 = u64 [s1 + 0x188]\n 53332: u8 [a0 + 0x15] = a1\n 53335: a1 = u64 [s1 + 0x1b0]\n 53339: u8 [a0 + 0x14] = a1\n 53342: a1 = u64 [s1 + 0x1b8]\n 53346: u8 [a0 + 0x13] = a1\n 53349: a1 = u64 [s1 + 0x1c0]\n 53353: u8 [a0 + 0x12] = a1\n 53356: a1 = u64 [s1 + 0x1c8]\n 53360: u8 [a0 + 0x11] = a1\n 53363: a1 = u64 [s1 + 0x1d0]\n 53367: u8 [a0 + 0x10] = a1\n 53370: a1 = u64 [s1 + 0x1d8]\n 53374: u8 [a0 + 0xf] = a1\n 53377: a1 = u64 [s1 + 0x1e0]\n 53381: u8 [a0 + 0xe] = a1\n 53384: a1 = u64 [s1 + 0x1e8]\n 53388: u8 [a0 + 0xd] = a1\n 53391: a1 = u64 [s1 + 0x1f0]\n 53395: u8 [a0 + 0xc] = a1\n 53398: a1 = u64 [s1 + 0x1f8]\n 53402: u8 [a0 + 0xb] = a1\n 53405: a1 = u64 [s1 + 0x200]\n 53409: u8 [a0 + 0xa] = a1\n 53412: a1 = u64 [s1 + 0x208]\n 53416: u8 [a0 + 0x9] = a1\n 53419: a1 = u64 [s1 + 0x210]\n 53423: u8 [a0 + 0x8] = a1\n 53426: a1 = u64 [s1 + 0x218]\n 53430: u8 [a0 + 0x7] = a1\n 53433: a1 = u64 [s1 + 0x220]\n 53437: u8 [a0 + 0x6] = a1\n 53440: a1 = u64 [s1 + 0x228]\n 53444: u8 [a0 + 0x5] = a1\n 53447: a1 = u64 [s1 + 0x230]\n 53451: u8 [a0 + 0x4] = a1\n 53454: a1 = u64 [s1 + 0x238]\n 53458: u8 [a0 + 0x3] = a1\n 53461: a1 = u64 [s1 + 0x240]\n 53465: u8 [a0 + 0x2] = a1\n 53468: a1 = u64 [s1 + 0x248]\n 53472: u8 [a0 + 0x1] = a1\n 53475: a1 = u64 [s1 + 0x250]\n 53479: u8 [a0] = a1\n 53481: a1 = u64 [s1 + 0x290]\n 53485: a0 = a1 + 0x40\n 53488: u64 [s1 + 0x250] = a0\n 53492: a2 = a0 <u a1\n 53495: a1 = u64 [s1 + 0x288]\n 53499: a0 = a1 + a2\n 53502: a3 = a0 <u a1\n 53505: t0 = a0\n 53507: a3 = a2 if a2 == 0\n 53510: a0 = u64 [s1 + 0x280]\n 53514: a3 = a3 + a0\n 53517: u64 [s1 + 0x248] = a3\n 53521: a3 = a3 <u a0\n 53524: a0 = u64 [s1 + 0x298]\n 53528: a0 = a0 + a3\n 53531: u64 [s1 + 0x298] = a0\n 53535: a2 = u64 [s1 + 0x278]\n 53539: a2 = a2 + 0x1\n 53542: a3 = a2 <u 0x1\n 53545: a5 = u64 [s1 + 0x270]\n 53549: a5 = a5 + a3\n 53552: a3 = a2 | a5\n 53555: a4 = a3 <u 0x1\n 53558: a0 = u64 [s1 + 0x258]\n 53562: t2 = a0 + a4\n 53565: a3 = t2 <u a0\n 53568: a1 = u64 [s1 + 0x268]\n 53572: a1 = a1 + a3\n 53575: a0 = u64 [s1 + 0xe8]\n 53579: u64 [s1 + 0x278] = a2\n 53583: a3 = a2 <u a0\n 53586: a0 = u64 [s1 + 0xf0]\n 53590: a2 = a5 ^ a0\n 53593: u64 [s1 + 0x270] = a5\n 53597: a0 = a5 <u a0\n 53600: a0 = a3 if a2 == 0\n 53603: a5 = u64 [s1 + 0xf8]\n 53607: ra = t2 <u a5\n 53610: a2 = u64 [s1 + 0x100]\n 53614: a4 = a1 ^ a2\n 53617: u64 [s1 + 0x268] = a1\n 53621: a3 = a1 <u a2\n 53624: a3 = ra if a4 == 0\n 53627: a5 = t2 ^ a5\n 53630: a1 = a5 | a4\n 53633: a3 = a0 if a1 == 0\n 53636: a0 = u64 [s1 + 0x1a0]\n 53640: ra = a0 + 0x20\n 53643: a1 = ra <u a0\n 53646: a2 = u64 [s1 + 0x198]\n 53650: a0 = a2 + a1\n 53653: a2 = a0 <u a2\n 53656: a2 = a1 if a1 == 0\n 53659: a1 = u64 [s1 + 0x190]\n 53663: a2 = a2 + a1\n 53666: a1 = a2 <u a1\n 53669: a5 = u64 [s1 + 0x1a8]\n 53673: a5 = a5 + a1\n 53676: a4 = a0\n 53678: a0 = u64 [s1 + 0x250]\n 53682: u64 [s1 + 0x290] = a0\n 53686: u64 [s1 + 0x288] = t0\n 53690: a1 = u64 [s1 + 0x248]\n 53694: t1 = a1\n 53696: u64 [s1 + 0x280] = a1\n 53700: jump @750 if a3 != 0\n      : @766 (gas: 1)\n 53704: jump @438\n      : @767 (gas: 8)\n 53707: a0 = u64 [s1 + 0x150]\n 53711: a1 = u64 [s1 + 0x148]\n 53715: a0 = a0 | a1\n 53718: a1 = u64 [s1 + 0x158]\n 53722: a2 = u64 [s1 + 0x140]\n 53726: a1 = a1 | a2\n 53729: a0 = a0 | a1\n 53732: jump @781 if a0 != 0\n      : @768 (gas: 5)\n 53736: u64 [s1 + 664] = 0\n 53740: u64 [s1 + 656] = 0\n 53744: u64 [s1 + 648] = 0\n 53748: u64 [s1 + 640] = 0\n 53752: jump @784\n      : @769 (gas: 122)\n 53755: u64 [s1 + 624] = 0\n 53759: u64 [s1 + 632] = 0\n 53763: u64 [s1 + 664] = 0\n 53767: t1 = u64 [s1 + 0x238]\n 53771: t0 = t1 + 0x20\n 53774: a0 = t0 <u t1\n 53777: ra = u64 [s1 + 0x240]\n 53781: a2 = ra + a0\n 53784: a1 = a2 <u ra\n 53787: a1 = a0 if a0 == 0\n 53790: a0 = u64 [s1 + 0x248]\n 53794: a1 = a1 + a0\n 53797: a0 = a1 <u a0\n 53800: t2 = u64 [s1 + 0x250]\n 53804: t2 = t2 + a0\n 53807: u64 [s1 + 0x268] = a4\n 53811: a4 = a1 >u 0\n 53813: a5 = t2 >u 0\n 53815: a5 = a4 if t2 == 0\n 53818: a4 = 0x100000000\n 53828: a3 = t0\n 53830: a0 = maxu(t0, a4)\n 53833: t0 = a4 if a5 == 0\n 53836: a3 = a4 if a2 == 0\n 53839: a0 = a3 if a2 != 0\n 53842: a3 = a1 | t2\n 53845: a0 = t0 if a3 != 0\n 53848: a4 = a2\n 53850: a4 = 0 if a5 == 0\n 53852: a4 = a2 if a3 == 0\n 53855: a2 = ra ^ 0xffffffffffffffff\n 53858: a4 = a4 + a2\n 53861: a3 = t1 ^ 0xffffffffffffffff\n 53864: a0 = a0 + a3\n 53867: a5 = a0 <u a3\n 53870: a3 = a4 + a5\n 53873: a4 = a3 ^ a2\n 53876: a2 = a3 <u a2\n 53879: a2 = a5 if a4 == 0\n 53882: a5 = a1\n 53884: a5 = 0 if t2 == 0\n 53886: a5 = a1 if t2 == 0\n 53889: a1 = u64 [s1 + 0x248]\n 53893: a1 = a1 ^ 0xffffffffffffffff\n 53896: u64 [s1 + 0x220] = a1\n 53900: a5 = a5 + a1\n 53903: t1 = a5 + a2\n 53906: a1 = t1 << 0x3b\n 53909: a2 = a3 >> 0x5\n 53912: a1 = a1 | a2\n 53915: a3 = a3 << 0x3b\n 53918: a0 = a0 >> 0x5\n 53921: a2 = a0 | a3\n 53924: u64 [s1 + 0x228] = a2\n 53928: a0 = u64 [s1 + 0x230]\n 53932: a0 = a0 <u 0x1\n 53935: a3 = -a0\n 53937: ra = a0 << 0x3b\n 53940: a0 = u64 [s1 + 0x230]\n 53944: a0 = a0 + 0xffffffffffffffff\n 53947: a0 = a0 >> 0x5\n 53950: a0 = a0 - ra\n 53953: u64 [s1 + 0x260] = a0\n 53957: a4 = a1 ^ a3\n 53960: t0 = a1 <u a3\n 53963: u64 [s1 + 0x210] = a3\n 53967: a0 = a2 <u a0\n 53970: a0 = t0 if a4 != 0\n 53973: u64 [s1 + 0x218] = a0\n 53977: a0 = u64 [s1 + 0x250]\n 53981: a4 = a0 ^ 0xffffffffffffffff\n 53984: t2 = t2 + a4\n 53987: a0 = u64 [s1 + 0x220]\n 53991: a4 = a5 <u a0\n 53994: a4 = a4 + t2\n 53997: a5 = t1 <u a5\n 54000: a5 = a5 + a4\n 54003: t0 = t1 >> 0x5\n 54006: a4 = a5 << 0x3b\n 54009: a4 = t0 | a4\n 54012: a5 = a5 >> 0x5\n 54015: t0 = a3 >> 0x5\n 54018: t1 = t0 - ra\n 54021: t2 = a4 <u t1\n 54024: ra = a5 ^ t0\n 54027: a0 = a5 <u t0\n 54030: a0 = t2 if ra == 0\n 54033: a2 = a4 ^ t1\n 54036: a2 = a2 | ra\n 54039: a3 = u64 [s1 + 0x218]\n 54043: a0 = a3 if a2 == 0\n 54046: a2 = u64 [s1 + 0x228]\n 54050: a3 = u64 [s1 + 0x260]\n 54054: a2 = a3 if a0 == 0\n 54057: a3 = u64 [s1 + 0x210]\n 54061: a1 = a3 if a0 == 0\n 54064: a5 = t0 if a0 == 0\n 54067: a4 = t1 if a0 == 0\n 54070: a0 = a4 >> 0x3b\n 54073: a5 = a5 << 0x5\n 54076: a0 = a0 | a5\n 54079: a3 = a1 >> 0x3b\n 54082: a4 = a4 << 0x5\n 54085: a5 = a4 | a3\n 54088: a3 = a2 >> 0x3b\n 54091: a1 = a1 << 0x5\n 54094: a1 = a1 | a3\n 54097: a3 = a2 << 0x5\n 54100: a4 = a3 + 0x40\n 54103: u64 [s1 + 0x228] = a4\n 54107: a3 = a4 <u a3\n 54110: a4 = a1 + a3\n 54113: u64 [s1 + 0x220] = a4\n 54117: a1 = a4 <u a1\n 54120: a1 = a3 if a3 == 0\n 54123: a1 = a1 + a5\n 54126: u64 [s1 + 0x218] = a1\n 54130: a1 = a1 <u a5\n 54133: a0 = a0 + a1\n 54136: u64 [s1 + 0x210] = a0\n 54140: a2 = 0x20\n 54143: fallthrough\n      : @770 (gas: 30)\n 54144: a0 = u64 [s1 + 0x238]\n 54148: a0 = a0 + a2\n 54151: u64 [s1 + 0x260] = a2\n 54155: a1 = a0 <u a2\n 54158: a2 = u64 [s1 + 0x240]\n 54162: a4 = u64 [s1 + 0x270]\n 54166: a2 = a2 + a4\n 54169: a2 = a2 + a1\n 54172: a3 = a2 ^ a4\n 54175: a4 = a2 <u a4\n 54178: a4 = a1 if a3 == 0\n 54181: a1 = u64 [s1 + 0x248]\n 54185: a3 = u64 [s1 + 0x278]\n 54189: a1 = a1 + a3\n 54192: t0 = a1 <u a3\n 54195: a5 = u64 [s1 + 0x250]\n 54199: a3 = u64 [s1 + 0x298]\n 54203: a5 = a5 + a3\n 54206: a3 = a5 + t0\n 54209: a4 = a4 + a1\n 54212: a1 = a4 <u a1\n 54215: a1 = a1 + a3\n 54218: a1 = a1 | a2\n 54221: a2 = a0 | a4\n 54224: a2 = a2 | a1\n 54227: a1 = a1 | a4\n 54230: a2 = a2 >> 0x20\n 54233: a1 = a1 << 0x20\n 54236: a1 = a1 | a2\n 54239: jump @772 if a1 == 0\n      : @771 (gas: 1)\n 54242: jump @799\n      : @772 (gas: 3)\n 54245: i32 a0 = a0 + 0\n 54247: a1 = 0x20\n 54250: ra = 476, jump @0\n      : @773 [@dyn 238] (gas: 114)\n 54257: a1 = u8 [a0 + 0x1]\n 54260: a2 = u8 [a0]\n 54262: a3 = u8 [a0 + 0x2]\n 54265: a4 = u8 [a0 + 0x3]\n 54268: a1 = a1 << 0x8\n 54271: a1 = a1 | a2\n 54274: a3 = a3 << 0x10\n 54277: a4 = a4 << 0x18\n 54280: a3 = a3 | a4\n 54283: a1 = a1 | a3\n 54286: a2 = u8 [a0 + 0x5]\n 54289: a3 = u8 [a0 + 0x4]\n 54292: a4 = u8 [a0 + 0x6]\n 54295: a5 = u8 [a0 + 0x7]\n 54298: a2 = a2 << 0x8\n 54301: a2 = a2 | a3\n 54304: a4 = a4 << 0x10\n 54307: a5 = a5 << 0x18\n 54310: a4 = a4 | a5\n 54313: a2 = a2 | a4\n 54316: a2 = a2 << 0x20\n 54319: t0 = a2 | a1\n 54322: a2 = u8 [a0 + 0x9]\n 54325: a3 = u8 [a0 + 0x8]\n 54328: a4 = u8 [a0 + 0xa]\n 54331: a5 = u8 [a0 + 0xb]\n 54334: a2 = a2 << 0x8\n 54337: a2 = a2 | a3\n 54340: a4 = a4 << 0x10\n 54343: a5 = a5 << 0x18\n 54346: a4 = a4 | a5\n 54349: a2 = a2 | a4\n 54352: a3 = u8 [a0 + 0xd]\n 54355: a4 = u8 [a0 + 0xc]\n 54358: a5 = u8 [a0 + 0xe]\n 54361: a1 = u8 [a0 + 0xf]\n 54364: a3 = a3 << 0x8\n 54367: a3 = a3 | a4\n 54370: a5 = a5 << 0x10\n 54373: a1 = a1 << 0x18\n 54376: a1 = a1 | a5\n 54379: a1 = a1 | a3\n 54382: a1 = a1 << 0x20\n 54385: t1 = a1 | a2\n 54388: a1 = u8 [a0 + 0x11]\n 54391: a3 = u8 [a0 + 0x10]\n 54394: a4 = u8 [a0 + 0x12]\n 54397: a5 = u8 [a0 + 0x13]\n 54400: a1 = a1 << 0x8\n 54403: a1 = a1 | a3\n 54406: a4 = a4 << 0x10\n 54409: a5 = a5 << 0x18\n 54412: a4 = a4 | a5\n 54415: a1 = a1 | a4\n 54418: a3 = u8 [a0 + 0x15]\n 54421: a4 = u8 [a0 + 0x14]\n 54424: a5 = u8 [a0 + 0x16]\n 54427: a2 = u8 [a0 + 0x17]\n 54430: a3 = a3 << 0x8\n 54433: a3 = a3 | a4\n 54436: a5 = a5 << 0x10\n 54439: a2 = a2 << 0x18\n 54442: a2 = a2 | a5\n 54445: a2 = a2 | a3\n 54448: a2 = a2 << 0x20\n 54451: a3 = a2 | a1\n 54454: a1 = u8 [a0 + 0x19]\n 54457: a2 = u8 [a0 + 0x18]\n 54460: a4 = u8 [a0 + 0x1a]\n 54463: a5 = u8 [a0 + 0x1b]\n 54466: a1 = a1 << 0x8\n 54469: a1 = a1 | a2\n 54472: a4 = a4 << 0x10\n 54475: a5 = a5 << 0x18\n 54478: a4 = a4 | a5\n 54481: a1 = a1 | a4\n 54484: a2 = u8 [a0 + 0x1d]\n 54487: a4 = u8 [a0 + 0x1c]\n 54490: a5 = u8 [a0 + 0x1e]\n 54493: a0 = u8 [a0 + 0x1f]\n 54496: a2 = a2 << 0x8\n 54499: a2 = a2 | a4\n 54502: a5 = a5 << 0x10\n 54505: a0 = a0 << 0x18\n 54508: a0 = a0 | a5\n 54511: a0 = a0 | a2\n 54514: a0 = a0 << 0x20\n 54517: a0 = a0 | a1\n 54520: a1 = reverse t0\n 54522: a2 = s1 + 0x2218\n 54526: u64 [a2 + 0x220] = a1\n 54530: a1 = reverse t1\n 54532: u64 [a2 + 0x218] = a1\n 54536: a1 = reverse a3\n 54538: u64 [a2 + 0x210] = a1\n 54542: a0 = reverse a0\n 54544: u64 [a2 + 0x208] = a0\n 54548: a0 = u64 [s1 + 0x280]\n 54552: u64 [a2 + 0x200] = a0\n 54556: a0 = u64 [s1 + 0x268]\n 54560: u64 [a2 + 0x1f8] = a0\n 54564: a0 = u64 [s1 + 0x288]\n 54568: u64 [a2 + 0x1f0] = a0\n 54572: a0 = u64 [s1 + 0x290]\n 54576: u64 [a2 + 0x1e8] = a0\n 54580: a0 = s1 + 0x2000\n 54584: i32 a1 = a0 + 0x400\n 54588: a0 = s1 + 0x2000\n 54592: i32 a3 = a0 + 0x420\n 54596: a2 = 0xffffffffffffffff\n 54599: a4 = 0x20\n 54602: a0 = 0\n 54604: ecalli 17 // 'set_storage'\n 54606: fallthrough\n      : @774 (gas: 48)\n 54607: t2 = u64 [s1 + 0x258]\n 54611: a2 = u64 [s1 + 0x290]\n 54615: a2 = a2 + 0x1\n 54618: a0 = a2 <u 0x1\n 54621: a1 = u64 [s1 + 0x288]\n 54625: a1 = a1 + a0\n 54628: u64 [s1 + 0x290] = a2\n 54632: u64 [s1 + 0x288] = a1\n 54636: a0 = a2 | a1\n 54639: a0 = a0 <u 0x1\n 54642: a1 = u64 [s1 + 0x268]\n 54646: a2 = a1 + a0\n 54649: t0 = a2 <u a1\n 54652: a0 = u64 [s1 + 0x260]\n 54656: a1 = a0 + 0x20\n 54659: a0 = a1 <u a0\n 54662: a3 = u64 [s1 + 0x270]\n 54666: t1 = a3 + a0\n 54669: a3 = t1 <u a3\n 54672: a3 = a0 if a0 == 0\n 54675: a4 = u64 [s1 + 0x278]\n 54679: a0 = a4 + a3\n 54682: a3 = a0 <u a4\n 54685: a4 = u64 [s1 + 0x298]\n 54689: a4 = a4 + a3\n 54692: u64 [s1 + 0x298] = a4\n 54696: a3 = u64 [s1 + 0x218]\n 54700: a3 = a3 ^ a0\n 54703: a4 = u64 [s1 + 0x228]\n 54707: a4 = a4 ^ a1\n 54710: a3 = a3 | a4\n 54713: a4 = u64 [s1 + 0x298]\n 54717: a5 = u64 [s1 + 0x210]\n 54721: a4 = a4 ^ a5\n 54724: a5 = u64 [s1 + 0x220]\n 54728: a5 = t1 ^ a5\n 54731: a4 = a4 | a5\n 54734: a3 = a3 | a4\n 54737: a4 = a2\n 54739: a5 = u64 [s1 + 0x230]\n 54743: a2 = u64 [s1 + 0x280]\n 54747: a2 = a2 + t0\n 54750: u64 [s1 + 0x280] = a2\n 54754: a2 = a1\n 54756: u64 [s1 + 0x270] = t1\n 54760: u64 [s1 + 0x278] = a0\n 54764: u64 [s1 + 0x268] = a4\n 54768: jump @770 if a3 != 0\n      : @775 (gas: 13)\n 54772: u64 [s1 + 0x278] = a1\n 54776: t0 = u64 [s1 + 0x1a8]\n 54780: u64 [s1 + 0x268] = a4\n 54784: a2 = u64 [s1 + 0x188]\n 54788: ra = a2\n 54790: a2 = a2 ^ a5\n 54793: a4 = u64 [s1 + 0x180]\n 54797: a2 = a2 | a4\n 54800: a5 = u64 [s1 + 0x178]\n 54804: a1 = u64 [s1 + 0x170]\n 54808: a3 = a5 | a1\n 54811: a2 = a2 | a3\n 54814: jump @780 if a2 == 0\n      : @776 (gas: 28)\n 54818: a2 = u64 [s1 + 0x238]\n 54822: ra = u64 [s1 + 0x278]\n 54826: t0 = ra + a2\n 54829: a3 = t0 <u ra\n 54832: a4 = u64 [s1 + 0x240]\n 54836: a4 = a4 + t1\n 54839: a4 = a4 + a3\n 54842: a5 = a4 ^ t1\n 54845: a1 = a4 <u t1\n 54848: a1 = a3 if a5 == 0\n 54851: a3 = u64 [s1 + 0x248]\n 54855: a3 = a3 + a0\n 54858: a1 = a1 + a3\n 54861: a5 = a1 <u a3\n 54864: a0 = a3 <u a0\n 54867: a3 = u64 [s1 + 0x250]\n 54871: a2 = u64 [s1 + 0x298]\n 54875: a3 = a3 + a2\n 54878: a0 = a0 + a3\n 54881: a0 = a0 + a5\n 54884: a3 = t0 | a1\n 54887: a0 = a0 | a4\n 54890: a3 = a3 | a0\n 54893: a3 = a3 >> 0x20\n 54896: a0 = a0 | a1\n 54899: a0 = a0 << 0x20\n 54902: a0 = a0 | a3\n 54905: jump @778 if a0 == 0\n      : @777 (gas: 1)\n 54908: jump @799\n      : @778 (gas: 3)\n 54911: i32 a0 = t0 + 0\n 54913: a1 = 0x20\n 54916: ra = 478, jump @0\n      : @779 [@dyn 239] (gas: 289)\n 54923: a1 = u8 [a0 + 0x19]\n 54926: a2 = u8 [a0 + 0x18]\n 54929: a3 = u8 [a0 + 0x1a]\n 54932: a4 = u8 [a0 + 0x1b]\n 54935: a1 = a1 << 0x8\n 54938: a1 = a1 | a2\n 54941: a3 = a3 << 0x10\n 54944: a4 = a4 << 0x18\n 54947: a3 = a3 | a4\n 54950: a1 = a1 | a3\n 54953: a2 = u8 [a0 + 0x1d]\n 54956: a3 = u8 [a0 + 0x1c]\n 54959: a4 = u8 [a0 + 0x1e]\n 54962: a5 = u8 [a0 + 0x1f]\n 54965: a2 = a2 << 0x8\n 54968: a2 = a2 | a3\n 54971: a4 = a4 << 0x10\n 54974: a5 = a5 << 0x18\n 54977: a4 = a4 | a5\n 54980: a2 = a2 | a4\n 54983: a2 = a2 << 0x20\n 54986: a1 = a1 | a2\n 54989: u64 [s1 + 0x298] = a1\n 54993: a1 = u8 [a0 + 0x11]\n 54996: a2 = u8 [a0 + 0x10]\n 54999: a3 = u8 [a0 + 0x12]\n 55002: a4 = u8 [a0 + 0x13]\n 55005: a1 = a1 << 0x8\n 55008: a1 = a1 | a2\n 55011: a3 = a3 << 0x10\n 55014: a4 = a4 << 0x18\n 55017: a3 = a3 | a4\n 55020: a1 = a1 | a3\n 55023: a2 = u8 [a0 + 0x15]\n 55026: a3 = u8 [a0 + 0x14]\n 55029: a4 = u8 [a0 + 0x16]\n 55032: a5 = u8 [a0 + 0x17]\n 55035: a2 = a2 << 0x8\n 55038: a2 = a2 | a3\n 55041: a4 = a4 << 0x10\n 55044: a5 = a5 << 0x18\n 55047: a4 = a4 | a5\n 55050: a2 = a2 | a4\n 55053: a2 = a2 << 0x20\n 55056: a1 = a1 | a2\n 55059: u64 [s1 + 0x278] = a1\n 55063: a1 = u8 [a0 + 0x9]\n 55066: a2 = u8 [a0 + 0x8]\n 55069: a3 = u8 [a0 + 0xa]\n 55072: a4 = u8 [a0 + 0xb]\n 55075: a1 = a1 << 0x8\n 55078: a1 = a1 | a2\n 55081: a3 = a3 << 0x10\n 55084: a4 = a4 << 0x18\n 55087: a3 = a3 | a4\n 55090: a1 = a1 | a3\n 55093: a2 = u8 [a0 + 0xd]\n 55096: a3 = u8 [a0 + 0xc]\n 55099: a4 = u8 [a0 + 0xe]\n 55102: a5 = u8 [a0 + 0xf]\n 55105: a2 = a2 << 0x8\n 55108: a2 = a2 | a3\n 55111: a4 = a4 << 0x10\n 55114: a5 = a5 << 0x18\n 55117: a4 = a4 | a5\n 55120: a2 = a2 | a4\n 55123: a2 = a2 << 0x20\n 55126: t2 = a2 | a1\n 55129: a1 = u8 [a0 + 0x1]\n 55132: a2 = u8 [a0]\n 55134: a4 = u8 [a0 + 0x2]\n 55137: a5 = u8 [a0 + 0x3]\n 55140: a1 = a1 << 0x8\n 55143: a1 = a1 | a2\n 55146: a4 = a4 << 0x10\n 55149: a5 = a5 << 0x18\n 55152: a4 = a4 | a5\n 55155: a1 = a1 | a4\n 55158: a2 = u8 [a0 + 0x5]\n 55161: a4 = u8 [a0 + 0x4]\n 55164: a5 = u8 [a0 + 0x6]\n 55167: a0 = u8 [a0 + 0x7]\n 55170: a2 = a2 << 0x8\n 55173: a2 = a2 | a4\n 55176: a5 = a5 << 0x10\n 55179: a0 = a0 << 0x18\n 55182: a0 = a0 | a5\n 55185: a0 = a0 | a2\n 55188: a0 = a0 << 0x20\n 55191: ra = a0 | a1\n 55194: a0 = s1 + 0x7ff\n 55198: a0 = a0 + 0x219\n 55202: u8 [a0 + 1959] = 0\n 55206: u8 [a0 + 1958] = 0\n 55210: u8 [a0 + 1957] = 0\n 55214: u8 [a0 + 1956] = 0\n 55218: u8 [a0 + 1955] = 0\n 55222: u8 [a0 + 1954] = 0\n 55226: u8 [a0 + 1953] = 0\n 55230: u8 [a0 + 1952] = 0\n 55234: u8 [a0 + 1951] = 0\n 55238: u8 [a0 + 1950] = 0\n 55242: u8 [a0 + 1949] = 0\n 55246: u8 [a0 + 1948] = 0\n 55250: u8 [a0 + 1947] = 0\n 55254: u8 [a0 + 1946] = 0\n 55258: u8 [a0 + 1945] = 0\n 55262: u8 [a0 + 1944] = 0\n 55266: u8 [a0 + 1943] = 0\n 55270: u8 [a0 + 1942] = 0\n 55274: u8 [a0 + 1941] = 0\n 55278: u8 [a0 + 1940] = 0\n 55282: u8 [a0 + 1939] = 0\n 55286: u8 [a0 + 1938] = 0\n 55290: u8 [a0 + 1937] = 0\n 55294: u8 [a0 + 1936] = 0\n 55298: u8 [a0 + 1935] = 0\n 55302: u8 [a0 + 1934] = 0\n 55306: u8 [a0 + 1933] = 0\n 55310: u8 [a0 + 1932] = 0\n 55314: u8 [a0 + 1931] = 0\n 55318: u8 [a0 + 1930] = 0\n 55322: u8 [a0 + 1929] = 0\n 55326: u8 [a0 + 1928] = 0\n 55330: u8 [a0 + 1927] = 0xff\n 55336: u8 [a0 + 1926] = 0xff\n 55342: u8 [a0 + 1925] = 0xff\n 55348: u8 [a0 + 1923] = 0xff\n 55354: u8 [a0 + 1920] = 0xffffffffffffffff\n 55359: u8 [a0 + 1919] = 0xff\n 55365: u8 [a0 + 1918] = 0xff\n 55371: u8 [a0 + 1917] = 0xff\n 55377: u8 [a0 + 1915] = 0xff\n 55383: u8 [a0 + 1912] = 0xffffffffffffffff\n 55388: u8 [a0 + 1911] = 0xff\n 55394: u8 [a0 + 1910] = 0xff\n 55400: u8 [a0 + 1909] = 0xff\n 55406: u8 [a0 + 1907] = 0xff\n 55412: u8 [a0 + 1904] = 0xffffffffffffffff\n 55417: u8 [a0 + 1903] = 0xff\n 55423: u8 [a0 + 1902] = 0xff\n 55429: u8 [a0 + 1901] = 0xff\n 55435: u8 [a0 + 1899] = 0xff\n 55441: u8 [a0 + 1896] = 0xffffffffffffffff\n 55446: a2 = 0xffffffff\n 55456: u8 [a0 + 0x784] = a2\n 55460: u8 [a0 + 0x77c] = a2\n 55464: u8 [a0 + 0x774] = a2\n 55468: u8 [a0 + 0x76c] = a2\n 55472: a2 = 0xffffffffffff\n 55482: u8 [a0 + 0x782] = a2\n 55486: a1 = 0xffffffffffffff\n 55496: u8 [a0 + 0x781] = a1\n 55500: u8 [a0 + 0x77a] = a2\n 55504: u8 [a0 + 0x779] = a1\n 55508: u8 [a0 + 0x772] = a2\n 55512: u8 [a0 + 0x771] = a1\n 55516: u8 [a0 + 0x76a] = a2\n 55520: u8 [a0 + 0x769] = a1\n 55524: a4 = u64 [s1 + 0x188]\n 55528: a4 = a4 & 0x1f\n 55531: a1 = s1 + 0x1180\n 55535: a4 = a4 + a1\n 55538: a1 = u8 [a4 + 0x19]\n 55541: a2 = u8 [a4 + 0x18]\n 55544: a5 = u8 [a4 + 0x1a]\n 55547: a3 = u8 [a4 + 0x1b]\n 55550: a1 = a1 << 0x8\n 55553: a1 = a1 | a2\n 55556: a5 = a5 << 0x10\n 55559: a3 = a3 << 0x18\n 55562: a3 = a3 | a5\n 55565: a1 = a1 | a3\n 55568: a2 = u8 [a4 + 0x1d]\n 55571: a3 = u8 [a4 + 0x1c]\n 55574: a5 = u8 [a4 + 0x1e]\n 55577: a0 = u8 [a4 + 0x1f]\n 55580: a2 = a2 << 0x8\n 55583: a2 = a2 | a3\n 55586: a5 = a5 << 0x10\n 55589: a0 = a0 << 0x18\n 55592: a0 = a0 | a5\n 55595: a0 = a0 | a2\n 55598: a0 = a0 << 0x20\n 55601: t1 = a0 | a1\n 55604: a0 = u8 [a4 + 0x11]\n 55607: a1 = u8 [a4 + 0x10]\n 55610: a2 = u8 [a4 + 0x12]\n 55613: a3 = u8 [a4 + 0x13]\n 55616: a0 = a0 << 0x8\n 55619: a0 = a0 | a1\n 55622: a2 = a2 << 0x10\n 55625: a3 = a3 << 0x18\n 55628: a2 = a2 | a3\n 55631: a5 = a2 | a0\n 55634: a1 = u8 [a4 + 0x15]\n 55637: a2 = u8 [a4 + 0x14]\n 55640: a3 = u8 [a4 + 0x16]\n 55643: a0 = u8 [a4 + 0x17]\n 55646: a1 = a1 << 0x8\n 55649: a1 = a1 | a2\n 55652: a3 = a3 << 0x10\n 55655: a0 = a0 << 0x18\n 55658: a0 = a0 | a3\n 55661: a0 = a0 | a1\n 55664: a0 = a0 << 0x20\n 55667: t0 = a0 | a5\n 55670: a0 = u8 [a4 + 0x9]\n 55673: a2 = u8 [a4 + 0x8]\n 55676: a3 = u8 [a4 + 0xa]\n 55679: a5 = u8 [a4 + 0xb]\n 55682: a0 = a0 << 0x8\n 55685: a0 = a0 | a2\n 55688: a3 = a3 << 0x10\n 55691: a5 = a5 << 0x18\n 55694: a3 = a3 | a5\n 55697: a1 = a3 | a0\n 55700: a2 = u8 [a4 + 0xd]\n 55703: a3 = u8 [a4 + 0xc]\n 55706: a5 = u8 [a4 + 0xe]\n 55709: a0 = u8 [a4 + 0xf]\n 55712: a2 = a2 << 0x8\n 55715: a2 = a2 | a3\n 55718: a5 = a5 << 0x10\n 55721: a0 = a0 << 0x18\n 55724: a0 = a0 | a5\n 55727: a0 = a0 | a2\n 55730: a0 = a0 << 0x20\n 55733: a2 = a0 | a1\n 55736: a0 = u8 [a4 + 0x1]\n 55739: a1 = u8 [a4]\n 55741: a3 = u8 [a4 + 0x2]\n 55744: a5 = u8 [a4 + 0x3]\n 55747: a0 = a0 << 0x8\n 55750: a0 = a0 | a1\n 55753: a3 = a3 << 0x10\n 55756: a5 = a5 << 0x18\n 55759: a3 = a3 | a5\n 55762: a0 = a0 | a3\n 55765: a1 = u8 [a4 + 0x5]\n 55768: a3 = u8 [a4 + 0x4]\n 55771: a5 = u8 [a4 + 0x6]\n 55774: a4 = u8 [a4 + 0x7]\n 55777: a1 = a1 << 0x8\n 55780: a1 = a1 | a3\n 55783: a5 = a5 << 0x10\n 55786: a4 = a4 << 0x18\n 55789: a4 = a4 | a5\n 55792: a1 = a1 | a4\n 55795: a1 = a1 << 0x20\n 55798: a0 = a0 | a1\n 55801: a1 = u64 [s1 + 0x298]\n 55805: a1 = reverse a1\n 55807: a0 = a1 & ~a0\n 55810: a1 = u64 [s1 + 0x278]\n 55814: a1 = reverse a1\n 55816: a1 = a1 & ~a2\n 55819: a2 = reverse t2\n 55821: a2 = a2 & ~t0\n 55824: a3 = reverse ra\n 55826: a3 = a3 & ~t1\n 55829: a4 = s1 + 0x2218\n 55833: a5 = u64 [s1 + 0x280]\n 55837: u64 [a4 + 0x200] = a5\n 55841: a5 = u64 [s1 + 0x268]\n 55845: u64 [a4 + 0x1f8] = a5\n 55849: a5 = u64 [s1 + 0x288]\n 55853: u64 [a4 + 0x1f0] = a5\n 55857: a5 = u64 [s1 + 0x290]\n 55861: u64 [a4 + 0x1e8] = a5\n 55865: u64 [a4 + 0x220] = a3\n 55869: u64 [a4 + 0x218] = a2\n 55873: u64 [a4 + 0x210] = a1\n 55877: u64 [a4 + 0x208] = a0\n 55881: a0 = s1 + 0x2000\n 55885: i32 a1 = a0 + 0x400\n 55889: a0 = s1 + 0x2000\n 55893: i32 a3 = a0 + 0x420\n 55897: a2 = 0xffffffffffffffff\n 55900: a4 = 0x20\n 55903: a0 = 0\n 55905: ecalli 17 // 'set_storage'\n 55907: ra = u64 [s1 + 0x188]\n 55911: t0 = u64 [s1 + 0x1a8]\n 55915: t2 = u64 [s1 + 0x258]\n 55919: a5 = u64 [s1 + 0x178]\n 55923: a4 = u64 [s1 + 0x180]\n 55927: a1 = u64 [s1 + 0x170]\n 55931: fallthrough\n      : @780 (gas: 23)\n 55932: a0 = a4 >> 0x3f\n 55935: a1 = a1 << 0x1\n 55938: a0 = a0 | a1\n 55941: a1 = a5 >> 0x3f\n 55944: a2 = a4 << 0x1\n 55947: a1 = a1 | a2\n 55950: a2 = ra >> 0x3f\n 55953: a3 = a5 << 0x1\n 55956: a2 = a2 | a3\n 55959: a3 = ra << 0x1\n 55962: a3 = a3 + 0x1\n 55965: a4 = s1 + 0x2218\n 55969: a5 = u64 [s1 + 0x1a0]\n 55973: u64 [a4 + 0x1f0] = a5\n 55977: a5 = u64 [s1 + 0x198]\n 55981: u64 [a4 + 0x1e8] = a5\n 55985: u64 [a4 + 0x1f8] = t0\n 55989: u64 [a4 + 0x200] = t2\n 55993: u64 [a4 + 0x208] = a3\n 55997: u64 [a4 + 0x210] = a2\n 56001: u64 [a4 + 0x218] = a1\n 56005: u64 [a4 + 0x220] = a0\n 56009: jump @785\n      : @781 (gas: 10)\n 56012: a0 = u64 [s1 + 0x250]\n 56016: a1 = u64 [s1 + 0x248]\n 56020: a0 = a0 | a1\n 56023: a1 = 0xffffffe0\n 56033: a2 = u64 [s1 + 0x238]\n 56037: a1 = a2 <u a1\n 56040: a2 = u64 [s1 + 0x240]\n 56044: a1 = 0 if a2 != 0\n 56046: a1 = 0 if a0 != 0\n 56048: jump @799 if a1 == 0\n      : @782 (gas: 4)\n 56052: a0 = u64 [s1 + 0x138]\n 56056: i32 a0 = a0 + 0x20\n 56059: a1 = 0x20\n 56062: ra = 480, jump @0\n      : @783 [@dyn 240] (gas: 100)\n 56069: a1 = u8 [a0 + 0x19]\n 56072: a2 = u8 [a0 + 0x18]\n 56075: a3 = u8 [a0 + 0x1a]\n 56078: a4 = u8 [a0 + 0x1b]\n 56081: a1 = a1 << 0x8\n 56084: a1 = a1 | a2\n 56087: a3 = a3 << 0x10\n 56090: a4 = a4 << 0x18\n 56093: a3 = a3 | a4\n 56096: a1 = a1 | a3\n 56099: a2 = u8 [a0 + 0x1d]\n 56102: a3 = u8 [a0 + 0x1c]\n 56105: a4 = u8 [a0 + 0x1e]\n 56108: a5 = u8 [a0 + 0x1f]\n 56111: a2 = a2 << 0x8\n 56114: a2 = a2 | a3\n 56117: a4 = a4 << 0x10\n 56120: a5 = a5 << 0x18\n 56123: a4 = a4 | a5\n 56126: a2 = a2 | a4\n 56129: a2 = a2 << 0x20\n 56132: t0 = a2 | a1\n 56135: a2 = u8 [a0 + 0x11]\n 56138: a3 = u8 [a0 + 0x10]\n 56141: a4 = u8 [a0 + 0x12]\n 56144: a5 = u8 [a0 + 0x13]\n 56147: a2 = a2 << 0x8\n 56150: a2 = a2 | a3\n 56153: a4 = a4 << 0x10\n 56156: a5 = a5 << 0x18\n 56159: a4 = a4 | a5\n 56162: a2 = a2 | a4\n 56165: a3 = u8 [a0 + 0x15]\n 56168: a4 = u8 [a0 + 0x14]\n 56171: a5 = u8 [a0 + 0x16]\n 56174: a1 = u8 [a0 + 0x17]\n 56177: a3 = a3 << 0x8\n 56180: a3 = a3 | a4\n 56183: a5 = a5 << 0x10\n 56186: a1 = a1 << 0x18\n 56189: a1 = a1 | a5\n 56192: a1 = a1 | a3\n 56195: a1 = a1 << 0x20\n 56198: t1 = a1 | a2\n 56201: a1 = u8 [a0 + 0x9]\n 56204: a3 = u8 [a0 + 0x8]\n 56207: a4 = u8 [a0 + 0xa]\n 56210: a5 = u8 [a0 + 0xb]\n 56213: a1 = a1 << 0x8\n 56216: a1 = a1 | a3\n 56219: a4 = a4 << 0x10\n 56222: a5 = a5 << 0x18\n 56225: a4 = a4 | a5\n 56228: a1 = a1 | a4\n 56231: a3 = u8 [a0 + 0xd]\n 56234: a4 = u8 [a0 + 0xc]\n 56237: a5 = u8 [a0 + 0xe]\n 56240: a2 = u8 [a0 + 0xf]\n 56243: a3 = a3 << 0x8\n 56246: a3 = a3 | a4\n 56249: a5 = a5 << 0x10\n 56252: a2 = a2 << 0x18\n 56255: a2 = a2 | a5\n 56258: a2 = a2 | a3\n 56261: a2 = a2 << 0x20\n 56264: a3 = a2 | a1\n 56267: a1 = u8 [a0 + 0x1]\n 56270: a2 = u8 [a0]\n 56272: a4 = u8 [a0 + 0x2]\n 56275: a5 = u8 [a0 + 0x3]\n 56278: a1 = a1 << 0x8\n 56281: a1 = a1 | a2\n 56284: a4 = a4 << 0x10\n 56287: a5 = a5 << 0x18\n 56290: a4 = a4 | a5\n 56293: a1 = a1 | a4\n 56296: a2 = u8 [a0 + 0x5]\n 56299: a4 = u8 [a0 + 0x4]\n 56302: a5 = u8 [a0 + 0x6]\n 56305: a0 = u8 [a0 + 0x7]\n 56308: a2 = a2 << 0x8\n 56311: a2 = a2 | a4\n 56314: a4 = u64 [s1 + 0x170]\n 56318: a5 = a5 << 0x10\n 56321: a0 = a0 << 0x18\n 56324: a0 = a0 | a5\n 56327: a5 = u64 [s1 + 0x180]\n 56331: a0 = a0 | a2\n 56334: a0 = a0 << 0x20\n 56337: a0 = a0 | a1\n 56340: a0 = reverse a0\n 56342: u64 [s1 + 0x280] = a0\n 56346: a0 = reverse a3\n 56348: u64 [s1 + 0x288] = a0\n 56352: a3 = u64 [s1 + 0x178]\n 56356: a0 = reverse t1\n 56358: u64 [s1 + 0x290] = a0\n 56362: a0 = reverse t0\n 56364: u64 [s1 + 0x298] = a0\n 56368: fallthrough\n      : @784 (gas: 201)\n 56369: a0 = a5 >> 0x3f\n 56372: a4 = a4 << 0x1\n 56375: a0 = a0 | a4\n 56378: u64 [s1 + 0x278] = a0\n 56382: a0 = a3 >> 0x3f\n 56385: a5 = a5 << 0x1\n 56388: a0 = a0 | a5\n 56391: u64 [s1 + 0x270] = a0\n 56395: a5 = u64 [s1 + 0x188]\n 56399: a0 = a5 >> 0x3f\n 56402: a1 = a3 << 0x1\n 56405: a4 = a1 | a0\n 56408: a0 = s1 + 0x7ff\n 56412: a0 = a0 + 0x219\n 56416: u8 [a0 + 2023] = 0\n 56420: u8 [a0 + 2022] = 0\n 56424: u8 [a0 + 2021] = 0\n 56428: u8 [a0 + 2020] = 0\n 56432: u8 [a0 + 2019] = 0\n 56436: u8 [a0 + 2018] = 0\n 56440: u8 [a0 + 2017] = 0\n 56444: u8 [a0 + 2016] = 0\n 56448: u8 [a0 + 2015] = 0\n 56452: u8 [a0 + 2014] = 0\n 56456: u8 [a0 + 2013] = 0\n 56460: u8 [a0 + 2012] = 0\n 56464: u8 [a0 + 2011] = 0\n 56468: u8 [a0 + 2010] = 0\n 56472: u8 [a0 + 2009] = 0\n 56476: u8 [a0 + 2008] = 0\n 56480: u8 [a0 + 2007] = 0\n 56484: u8 [a0 + 2006] = 0\n 56488: u8 [a0 + 2005] = 0\n 56492: u8 [a0 + 2004] = 0\n 56496: u8 [a0 + 2003] = 0\n 56500: u8 [a0 + 2002] = 0\n 56504: u8 [a0 + 2001] = 0\n 56508: u8 [a0 + 2000] = 0\n 56512: u8 [a0 + 1999] = 0\n 56516: u8 [a0 + 1998] = 0\n 56520: u8 [a0 + 1997] = 0\n 56524: u8 [a0 + 1996] = 0\n 56528: u8 [a0 + 1995] = 0\n 56532: u8 [a0 + 1994] = 0\n 56536: u8 [a0 + 1993] = 0\n 56540: u8 [a0 + 1992] = 0\n 56544: u8 [a0 + 1991] = 0xff\n 56550: u8 [a0 + 1990] = 0xff\n 56556: u8 [a0 + 1989] = 0xff\n 56562: u8 [a0 + 1987] = 0xff\n 56568: u8 [a0 + 1984] = 0xffffffffffffffff\n 56573: u8 [a0 + 1983] = 0xff\n 56579: u8 [a0 + 1982] = 0xff\n 56585: u8 [a0 + 1981] = 0xff\n 56591: u8 [a0 + 1979] = 0xff\n 56597: u8 [a0 + 1976] = 0xffffffffffffffff\n 56602: u8 [a0 + 1975] = 0xff\n 56608: u8 [a0 + 1974] = 0xff\n 56614: u8 [a0 + 1973] = 0xff\n 56620: u8 [a0 + 1971] = 0xff\n 56626: u8 [a0 + 1968] = 0xffffffffffffffff\n 56631: u8 [a0 + 1967] = 0xff\n 56637: u8 [a0 + 1966] = 0xff\n 56643: u8 [a0 + 1965] = 0xff\n 56649: u8 [a0 + 1963] = 0xff\n 56655: u8 [a0 + 1960] = 0xffffffffffffffff\n 56660: a2 = 0xffffffff\n 56670: u8 [a0 + 0x7c4] = a2\n 56674: u8 [a0 + 0x7bc] = a2\n 56678: u8 [a0 + 0x7b4] = a2\n 56682: u8 [a0 + 0x7ac] = a2\n 56686: a2 = 0xffffffffffff\n 56696: u8 [a0 + 0x7c2] = a2\n 56700: a1 = 0xffffffffffffff\n 56710: u8 [a0 + 0x7c1] = a1\n 56714: u8 [a0 + 0x7ba] = a2\n 56718: u8 [a0 + 0x7b9] = a1\n 56722: u8 [a0 + 0x7b2] = a2\n 56726: u8 [a0 + 0x7b1] = a1\n 56730: u8 [a0 + 0x7aa] = a2\n 56734: u8 [a0 + 0x7a9] = a1\n 56738: a1 = a5 & 0x1f\n 56741: a2 = s1 + 0x11c0\n 56745: a1 = a1 + a2\n 56748: t0 = u8 [a1 + 0x1]\n 56751: a3 = u8 [a1]\n 56753: a2 = u8 [a1 + 0x2]\n 56756: t1 = u8 [a1 + 0x3]\n 56759: t0 = t0 << 0x8\n 56762: a3 = t0 | a3\n 56765: a2 = a2 << 0x10\n 56768: t1 = t1 << 0x18\n 56771: a2 = t1 | a2\n 56774: t0 = a2 | a3\n 56777: a3 = u8 [a1 + 0x5]\n 56780: t1 = u8 [a1 + 0x4]\n 56783: a2 = u8 [a1 + 0x6]\n 56786: t2 = u8 [a1 + 0x7]\n 56789: a3 = a3 << 0x8\n 56792: a3 = a3 | t1\n 56795: a2 = a2 << 0x10\n 56798: t2 = t2 << 0x18\n 56801: a2 = t2 | a2\n 56804: a2 = a2 | a3\n 56807: a2 = a2 << 0x20\n 56810: t1 = a2 | t0\n 56813: t2 = u8 [a1 + 0x9]\n 56816: t0 = u8 [a1 + 0x8]\n 56819: a2 = u8 [a1 + 0xa]\n 56822: a3 = u8 [a1 + 0xb]\n 56825: t2 = t2 << 0x8\n 56828: t0 = t2 | t0\n 56831: a2 = a2 << 0x10\n 56834: a3 = a3 << 0x18\n 56837: a2 = a2 | a3\n 56840: t0 = a2 | t0\n 56843: a3 = u8 [a1 + 0xd]\n 56846: t2 = u8 [a1 + 0xc]\n 56849: a2 = u8 [a1 + 0xe]\n 56852: ra = u8 [a1 + 0xf]\n 56855: a3 = a3 << 0x8\n 56858: a3 = a3 | t2\n 56861: a2 = a2 << 0x10\n 56864: ra = ra << 0x18\n 56867: a2 = ra | a2\n 56870: a2 = a2 | a3\n 56873: a2 = a2 << 0x20\n 56876: t2 = a2 | t0\n 56879: t0 = u8 [a1 + 0x11]\n 56882: ra = u8 [a1 + 0x10]\n 56885: a2 = u8 [a1 + 0x12]\n 56888: a3 = u8 [a1 + 0x13]\n 56891: t0 = t0 << 0x8\n 56894: t0 = t0 | ra\n 56897: a2 = a2 << 0x10\n 56900: a3 = a3 << 0x18\n 56903: a2 = a2 | a3\n 56906: t0 = a2 | t0\n 56909: a3 = u8 [a1 + 0x15]\n 56912: ra = u8 [a1 + 0x14]\n 56915: a2 = u8 [a1 + 0x16]\n 56918: a0 = u8 [a1 + 0x17]\n 56921: a3 = a3 << 0x8\n 56924: a3 = a3 | ra\n 56927: a2 = a2 << 0x10\n 56930: a0 = a0 << 0x18\n 56933: a0 = a0 | a2\n 56936: a0 = a0 | a3\n 56939: a0 = a0 << 0x20\n 56942: t0 = a0 | t0\n 56945: ra = u8 [a1 + 0x19]\n 56948: a2 = u8 [a1 + 0x18]\n 56951: a3 = u8 [a1 + 0x1a]\n 56954: a0 = u8 [a1 + 0x1b]\n 56957: ra = ra << 0x8\n 56960: a2 = ra | a2\n 56963: a3 = a3 << 0x10\n 56966: a0 = a0 << 0x18\n 56969: a0 = a0 | a3\n 56972: ra = a0 | a2\n 56975: a2 = u8 [a1 + 0x1d]\n 56978: a3 = u8 [a1 + 0x1c]\n 56981: a0 = u8 [a1 + 0x1e]\n 56984: a1 = u8 [a1 + 0x1f]\n 56987: a2 = a2 << 0x8\n 56990: a2 = a2 | a3\n 56993: a0 = a0 << 0x10\n 56996: a1 = a1 << 0x18\n 56999: a0 = a0 | a1\n 57002: a0 = a0 | a2\n 57005: a0 = a0 << 0x20\n 57008: a0 = a0 | ra\n 57011: a1 = u64 [s1 + 0x280]\n 57015: a0 = a1 & ~a0\n 57018: a1 = u64 [s1 + 0x288]\n 57022: a1 = a1 & ~t0\n 57025: a2 = u64 [s1 + 0x290]\n 57029: a2 = a2 & ~t2\n 57032: a3 = u64 [s1 + 0x298]\n 57036: a3 = a3 & ~t1\n 57039: a5 = a5 << 0x1\n 57042: a3 = a3 | a5\n 57045: a2 = a2 | a4\n 57048: a4 = u64 [s1 + 0x270]\n 57052: a1 = a1 | a4\n 57055: a4 = u64 [s1 + 0x278]\n 57059: a0 = a0 | a4\n 57062: a4 = s1 + 0x2218\n 57066: u64 [a4 + 0x220] = a0\n 57070: u64 [a4 + 0x218] = a1\n 57074: u64 [a4 + 0x210] = a2\n 57078: u64 [a4 + 0x208] = a3\n 57082: a0 = u64 [s1 + 0x1a0]\n 57086: u64 [a4 + 0x1f0] = a0\n 57090: a0 = u64 [s1 + 0x198]\n 57094: u64 [a4 + 0x1e8] = a0\n 57098: a0 = u64 [s1 + 0x1a8]\n 57102: u64 [a4 + 0x1f8] = a0\n 57106: a0 = u64 [s1 + 0x258]\n 57110: u64 [a4 + 0x200] = a0\n 57114: fallthrough\n      : @785 (gas: 11)\n 57115: a0 = s1 + 0x2000\n 57119: i32 a1 = a0 + 0x400\n 57123: a0 = s1 + 0x2000\n 57127: i32 a3 = a0 + 0x420\n 57131: a2 = 0xffffffffffffffff\n 57134: a4 = 0x20\n 57137: a0 = 0\n 57139: ecalli 17 // 'set_storage'\n 57141: a1 = 0x20\n 57144: a0 = u64 [s1 + 0x190]\n 57148: ra = 482, jump @0\n      : @786 [@dyn 241] (gas: 124)\n 57155: a1 = u8 [a0 + 0x1]\n 57158: a2 = u8 [a0]\n 57160: a3 = u8 [a0 + 0x2]\n 57163: a4 = u8 [a0 + 0x3]\n 57166: a1 = a1 << 0x8\n 57169: a1 = a1 | a2\n 57172: a3 = a3 << 0x10\n 57175: a4 = a4 << 0x18\n 57178: a3 = a3 | a4\n 57181: a1 = a1 | a3\n 57184: a2 = u8 [a0 + 0x5]\n 57187: a3 = u8 [a0 + 0x4]\n 57190: a4 = u8 [a0 + 0x6]\n 57193: a5 = u8 [a0 + 0x7]\n 57196: a2 = a2 << 0x8\n 57199: a2 = a2 | a3\n 57202: a4 = a4 << 0x10\n 57205: a5 = a5 << 0x18\n 57208: a4 = a4 | a5\n 57211: a2 = a2 | a4\n 57214: a2 = a2 << 0x20\n 57217: t0 = a2 | a1\n 57220: a2 = u8 [a0 + 0x9]\n 57223: a3 = u8 [a0 + 0x8]\n 57226: a4 = u8 [a0 + 0xa]\n 57229: a5 = u8 [a0 + 0xb]\n 57232: a2 = a2 << 0x8\n 57235: a2 = a2 | a3\n 57238: a4 = a4 << 0x10\n 57241: a5 = a5 << 0x18\n 57244: a4 = a4 | a5\n 57247: a2 = a2 | a4\n 57250: a3 = u8 [a0 + 0xd]\n 57253: a4 = u8 [a0 + 0xc]\n 57256: a5 = u8 [a0 + 0xe]\n 57259: a1 = u8 [a0 + 0xf]\n 57262: a3 = a3 << 0x8\n 57265: a3 = a3 | a4\n 57268: a5 = a5 << 0x10\n 57271: a1 = a1 << 0x18\n 57274: a1 = a1 | a5\n 57277: a1 = a1 | a3\n 57280: a1 = a1 << 0x20\n 57283: t1 = a1 | a2\n 57286: a1 = u8 [a0 + 0x11]\n 57289: a3 = u8 [a0 + 0x10]\n 57292: a4 = u8 [a0 + 0x12]\n 57295: a5 = u8 [a0 + 0x13]\n 57298: a1 = a1 << 0x8\n 57301: a1 = a1 | a3\n 57304: a4 = a4 << 0x10\n 57307: a5 = a5 << 0x18\n 57310: a4 = a4 | a5\n 57313: a1 = a1 | a4\n 57316: a3 = u8 [a0 + 0x15]\n 57319: a4 = u8 [a0 + 0x14]\n 57322: a5 = u8 [a0 + 0x16]\n 57325: a2 = u8 [a0 + 0x17]\n 57328: a3 = a3 << 0x8\n 57331: a3 = a3 | a4\n 57334: a5 = a5 << 0x10\n 57337: a2 = a2 << 0x18\n 57340: a2 = a2 | a5\n 57343: a2 = a2 | a3\n 57346: a2 = a2 << 0x20\n 57349: a3 = a2 | a1\n 57352: a1 = u8 [a0 + 0x19]\n 57355: a2 = u8 [a0 + 0x18]\n 57358: a4 = u8 [a0 + 0x1a]\n 57361: a5 = u8 [a0 + 0x1b]\n 57364: a1 = a1 << 0x8\n 57367: a1 = a1 | a2\n 57370: a4 = a4 << 0x10\n 57373: a5 = a5 << 0x18\n 57376: a4 = a4 | a5\n 57379: a1 = a1 | a4\n 57382: a2 = u8 [a0 + 0x1d]\n 57385: a4 = u8 [a0 + 0x1c]\n 57388: a5 = u8 [a0 + 0x1e]\n 57391: a0 = u8 [a0 + 0x1f]\n 57394: a2 = a2 << 0x8\n 57397: a2 = a2 | a4\n 57400: a5 = a5 << 0x10\n 57403: a0 = a0 << 0x18\n 57406: a0 = a0 | a5\n 57409: a0 = a0 | a2\n 57412: a0 = a0 << 0x20\n 57415: a0 = a0 | a1\n 57418: a1 = u64 [s1 + 0x198]\n 57422: a1 = a1 + 0x1\n 57425: a2 = a1 <u 0x1\n 57428: a4 = u64 [s1 + 0x1a0]\n 57432: a2 = a2 + a4\n 57435: a4 = s1 + 0x2218\n 57439: u64 [a4 + 0x1f0] = a2\n 57443: a2 = a2 | a1\n 57446: u64 [a4 + 0x1e8] = a1\n 57450: a1 = a2 <u 0x1\n 57453: a2 = u64 [s1 + 0x1a8]\n 57457: a1 = a1 + a2\n 57460: u64 [a4 + 0x1f8] = a1\n 57464: a1 = a1 <u a2\n 57467: a2 = u64 [s1 + 0x258]\n 57471: a1 = a1 + a2\n 57474: u64 [a4 + 0x200] = a1\n 57478: a1 = reverse t0\n 57480: u64 [a4 + 0x220] = a1\n 57484: a1 = reverse t1\n 57486: u64 [a4 + 0x218] = a1\n 57490: a1 = reverse a3\n 57492: u64 [a4 + 0x210] = a1\n 57496: a0 = reverse a0\n 57498: u64 [a4 + 0x208] = a0\n 57502: a0 = s1 + 0x2000\n 57506: i32 a1 = a0 + 0x400\n 57510: a0 = s1 + 0x2000\n 57514: i32 a3 = a0 + 0x420\n 57518: a2 = 0xffffffffffffffff\n 57521: a4 = 0x20\n 57524: a0 = 0\n 57526: ecalli 17 // 'set_storage'\n 57528: a1 = 0x20\n 57531: a0 = u64 [s1 + 0x168]\n 57535: ra = 484, jump @0\n      : @787 [@dyn 242] (gas: 118)\n 57542: a1 = u8 [a0 + 0x11]\n 57545: a2 = u8 [a0 + 0x10]\n 57548: a3 = u8 [a0 + 0x12]\n 57551: a4 = u8 [a0 + 0x13]\n 57554: a1 = a1 << 0x8\n 57557: a1 = a1 | a2\n 57560: a3 = a3 << 0x10\n 57563: a4 = a4 << 0x18\n 57566: a3 = a3 | a4\n 57569: a1 = a1 | a3\n 57572: u64 [s1 + 0x298] = a1\n 57576: a1 = u8 [a0 + 0x1]\n 57579: a2 = u8 [a0]\n 57581: a3 = u8 [a0 + 0x2]\n 57584: a4 = u8 [a0 + 0x3]\n 57587: a1 = a1 << 0x8\n 57590: a1 = a1 | a2\n 57593: a3 = a3 << 0x10\n 57596: a4 = a4 << 0x18\n 57599: a2 = a4 | a3\n 57602: t1 = a2 | a1\n 57605: a1 = u8 [a0 + 0x15]\n 57608: a3 = u8 [a0 + 0x14]\n 57611: a4 = u8 [a0 + 0x16]\n 57614: a5 = u8 [a0 + 0x17]\n 57617: a1 = a1 << 0x8\n 57620: a1 = a1 | a3\n 57623: a4 = a4 << 0x10\n 57626: a5 = a5 << 0x18\n 57629: a3 = a5 | a4\n 57632: t2 = a3 | a1\n 57635: a1 = u8 [a0 + 0x5]\n 57638: a4 = u8 [a0 + 0x4]\n 57641: a5 = u8 [a0 + 0x6]\n 57644: a2 = u8 [a0 + 0x7]\n 57647: a1 = a1 << 0x8\n 57650: a1 = a1 | a4\n 57653: a5 = a5 << 0x10\n 57656: a2 = a2 << 0x18\n 57659: a2 = a2 | a5\n 57662: ra = a2 | a1\n 57665: a1 = u8 [a0 + 0x19]\n 57668: a2 = u8 [a0 + 0x18]\n 57671: a5 = u8 [a0 + 0x1a]\n 57674: a3 = u8 [a0 + 0x1b]\n 57677: a1 = a1 << 0x8\n 57680: a1 = a1 | a2\n 57683: a5 = a5 << 0x10\n 57686: a3 = a3 << 0x18\n 57689: a3 = a3 | a5\n 57692: t0 = a3 | a1\n 57695: a1 = u8 [a0 + 0x9]\n 57698: a2 = u8 [a0 + 0x8]\n 57701: a3 = u8 [a0 + 0xa]\n 57704: a4 = u8 [a0 + 0xb]\n 57707: a1 = a1 << 0x8\n 57710: a1 = a1 | a2\n 57713: a3 = a3 << 0x10\n 57716: a4 = a4 << 0x18\n 57719: a3 = a3 | a4\n 57722: a5 = a3 | a1\n 57725: a2 = u8 [a0 + 0x1d]\n 57728: a3 = u8 [a0 + 0x1c]\n 57731: a4 = u8 [a0 + 0x1e]\n 57734: a1 = u8 [a0 + 0x1f]\n 57737: a2 = a2 << 0x8\n 57740: a2 = a2 | a3\n 57743: a4 = a4 << 0x10\n 57746: a1 = a1 << 0x18\n 57749: a1 = a1 | a4\n 57752: a1 = a1 | a2\n 57755: a2 = u8 [a0 + 0xd]\n 57758: a3 = u8 [a0 + 0xc]\n 57761: a4 = u8 [a0 + 0xe]\n 57764: a0 = u8 [a0 + 0xf]\n 57767: a2 = a2 << 0x8\n 57770: a2 = a2 | a3\n 57773: a4 = a4 << 0x10\n 57776: a0 = a0 << 0x18\n 57779: a0 = a0 | a4\n 57782: a0 = a0 | a2\n 57785: a0 = a0 | a1\n 57788: a1 = a5 | t0\n 57791: a0 = a0 << 0x20\n 57794: a0 = a0 | a1\n 57797: a1 = ra | t2\n 57800: a2 = u64 [s1 + 0x298]\n 57804: a2 = t1 | a2\n 57807: a1 = a1 << 0x20\n 57810: a1 = a1 | a2\n 57813: a0 = a0 | a1\n 57816: a2 = u64 [s1 + 0x198]\n 57820: a1 = a2 + 0x2\n 57823: a2 = a1 <u a2\n 57826: a4 = u64 [s1 + 0x1a0]\n 57830: a3 = a4 + a2\n 57833: a4 = a3 <u a4\n 57836: a4 = a2 if a2 == 0\n 57839: a2 = u64 [s1 + 0x1a8]\n 57843: a4 = a4 + a2\n 57846: a2 = a4 <u a2\n 57849: a5 = u64 [s1 + 0x258]\n 57853: a2 = a2 + a5\n 57856: a5 = a0 >u 0\n 57858: a0 = s1 + 0x7ff\n 57862: a0 = a0 + 0x219\n 57866: u64 [a0 + 1856] = 0\n 57870: u64 [a0 + 1848] = 0\n 57874: u64 [a0 + 1840] = 0\n 57878: u64 [a0 + 0x760] = a2\n 57882: u64 [a0 + 0x758] = a4\n 57886: u64 [a0 + 0x750] = a3\n 57890: u64 [a0 + 0x748] = a1\n 57894: a2 = a0\n 57896: a0 = s1 + 0x1160\n 57900: a1 = s1 + 0x1140\n 57904: u64 [a2 + 0x728] = a5\n 57908: ra = 486, jump @1085\n      : @788 [@dyn 243] (gas: 10)\n 57914: a0 = s1 + 0x7ff\n 57918: a0 = a0 + 0x219\n 57922: u64 [a0 + 1792] = 0\n 57926: u64 [a0 + 1784] = 0\n 57930: u64 [a0 + 1776] = 0\n 57934: a3 = a0\n 57936: a0 = s1 + 0x1120\n 57940: a2 = s1 + 0x1100\n 57944: u64 [a3 + 1768] = 0x1\n 57949: ra = 488, jump @25\n      : @789 [@dyn 244] (gas: 14)\n 57956: a2 = s1 + 0x7ff\n 57960: a2 = a2 + 0x219\n 57964: a0 = u64 [a2 + 0x720]\n 57968: a1 = u64 [a2 + 0x718]\n 57972: a3 = u64 [a2 + 0x710]\n 57976: a2 = u64 [a2 + 0x708]\n 57980: u64 [s1 + 0x278] = a0\n 57984: u64 [s1 + 0x260] = a3\n 57988: a0 = a0 | a3\n 57991: u64 [s1 + 0x270] = a1\n 57995: u64 [s1 + 0x268] = a2\n 57999: a1 = a1 | a2\n 58002: a0 = a0 | a1\n 58005: jump @791 if a0 != 0\n      : @790 (gas: 1)\n 58008: jump @948\n      : @791 (gas: 3)\n 58011: a0 = 0x40\n 58014: a1 = 0x20\n 58017: ra = 490, jump @0\n      : @792 [@dyn 245] (gas: 132)\n 58024: a1 = u8 [a0 + 0x1]\n 58027: a2 = u8 [a0]\n 58029: a3 = u8 [a0 + 0x2]\n 58032: a4 = u8 [a0 + 0x3]\n 58035: a1 = a1 << 0x8\n 58038: a1 = a1 | a2\n 58041: a3 = a3 << 0x10\n 58044: a4 = a4 << 0x18\n 58047: a3 = a3 | a4\n 58050: a1 = a1 | a3\n 58053: a2 = u8 [a0 + 0x5]\n 58056: a3 = u8 [a0 + 0x4]\n 58059: a4 = u8 [a0 + 0x6]\n 58062: a5 = u8 [a0 + 0x7]\n 58065: a2 = a2 << 0x8\n 58068: a2 = a2 | a3\n 58071: a4 = a4 << 0x10\n 58074: a5 = a5 << 0x18\n 58077: a4 = a4 | a5\n 58080: a2 = a2 | a4\n 58083: a2 = a2 << 0x20\n 58086: t0 = a2 | a1\n 58089: a2 = u8 [a0 + 0x9]\n 58092: a3 = u8 [a0 + 0x8]\n 58095: a4 = u8 [a0 + 0xa]\n 58098: a5 = u8 [a0 + 0xb]\n 58101: a2 = a2 << 0x8\n 58104: a2 = a2 | a3\n 58107: a4 = a4 << 0x10\n 58110: a5 = a5 << 0x18\n 58113: a4 = a4 | a5\n 58116: a2 = a2 | a4\n 58119: a3 = u8 [a0 + 0xd]\n 58122: a4 = u8 [a0 + 0xc]\n 58125: a5 = u8 [a0 + 0xe]\n 58128: a1 = u8 [a0 + 0xf]\n 58131: a3 = a3 << 0x8\n 58134: a3 = a3 | a4\n 58137: a5 = a5 << 0x10\n 58140: a1 = a1 << 0x18\n 58143: a1 = a1 | a5\n 58146: a1 = a1 | a3\n 58149: a1 = a1 << 0x20\n 58152: t1 = a1 | a2\n 58155: a1 = u8 [a0 + 0x11]\n 58158: a3 = u8 [a0 + 0x10]\n 58161: a4 = u8 [a0 + 0x12]\n 58164: a5 = u8 [a0 + 0x13]\n 58167: a1 = a1 << 0x8\n 58170: a1 = a1 | a3\n 58173: a4 = a4 << 0x10\n 58176: a5 = a5 << 0x18\n 58179: a4 = a4 | a5\n 58182: a1 = a1 | a4\n 58185: a3 = u8 [a0 + 0x15]\n 58188: a4 = u8 [a0 + 0x14]\n 58191: a5 = u8 [a0 + 0x16]\n 58194: a2 = u8 [a0 + 0x17]\n 58197: a3 = a3 << 0x8\n 58200: a3 = a3 | a4\n 58203: a5 = a5 << 0x10\n 58206: a2 = a2 << 0x18\n 58209: a2 = a2 | a5\n 58212: a2 = a2 | a3\n 58215: a2 = a2 << 0x20\n 58218: a3 = a2 | a1\n 58221: a1 = u8 [a0 + 0x19]\n 58224: a2 = u8 [a0 + 0x18]\n 58227: a4 = u8 [a0 + 0x1a]\n 58230: a5 = u8 [a0 + 0x1b]\n 58233: a1 = a1 << 0x8\n 58236: a1 = a1 | a2\n 58239: a4 = a4 << 0x10\n 58242: a5 = a5 << 0x18\n 58245: a4 = a4 | a5\n 58248: a1 = a1 | a4\n 58251: a2 = u8 [a0 + 0x1d]\n 58254: a4 = u8 [a0 + 0x1c]\n 58257: a5 = u8 [a0 + 0x1e]\n 58260: a0 = u8 [a0 + 0x1f]\n 58263: a2 = a2 << 0x8\n 58266: a2 = a2 | a4\n 58269: a5 = a5 << 0x10\n 58272: a0 = a0 << 0x18\n 58275: a0 = a0 | a5\n 58278: a0 = a0 | a2\n 58281: a0 = a0 << 0x20\n 58284: a0 = a0 | a1\n 58287: t2 = reverse a0\n 58289: u64 [s1 + 0x298] = t2\n 58293: a2 = reverse a3\n 58295: u64 [s1 + 0x280] = a2\n 58299: a1 = reverse t1\n 58301: u64 [s1 + 0x288] = a1\n 58305: a3 = reverse t0\n 58307: u64 [s1 + 0x290] = a3\n 58311: a0 = u64 [s1 + 0x1b0]\n 58315: a5 = s1 + 0x7ff\n 58319: a5 = a5 + 0x219\n 58323: u64 [a5 + 0x660] = a0\n 58327: a0 = u64 [s1 + 0x1b8]\n 58331: u64 [a5 + 0x658] = a0\n 58335: a0 = u64 [s1 + 0x1c0]\n 58339: u64 [a5 + 0x650] = a0\n 58343: a0 = u64 [s1 + 0x1c8]\n 58347: u64 [a5 + 0x648] = a0\n 58351: a0 = u64 [s1 + 0x1d0]\n 58355: u64 [a5 + 0x680] = a0\n 58359: a0 = u64 [s1 + 0x1d8]\n 58363: u64 [a5 + 0x678] = a0\n 58367: a0 = u64 [s1 + 0x1e0]\n 58371: u64 [a5 + 0x670] = a0\n 58375: a0 = u64 [s1 + 0x1e8]\n 58379: u64 [a5 + 0x668] = a0\n 58383: a0 = u64 [s1 + 0x1f0]\n 58387: u64 [a5 + 0x6a0] = a0\n 58391: a0 = u64 [s1 + 0x1f8]\n 58395: u64 [a5 + 0x698] = a0\n 58399: a0 = u64 [s1 + 0x200]\n 58403: u64 [a5 + 0x690] = a0\n 58407: a0 = u64 [s1 + 0x208]\n 58411: u64 [a5 + 0x688] = a0\n 58415: u64 [a5 + 0x6c0] = a3\n 58419: u64 [a5 + 0x6b8] = a1\n 58423: u64 [a5 + 0x6b0] = a2\n 58427: a0 = s1 + 0x10e0\n 58431: a1 = s1 + 0x10c0\n 58435: a2 = s1 + 0x10a0\n 58439: a3 = s1 + 0x1080\n 58443: a4 = s1 + 0x1060\n 58447: u64 [a5 + 0x6a8] = t2\n 58451: ra = 492, jump @1153\n      : @793 [@dyn 246] (gas: 12)\n 58457: a4 = u64 [s1 + 0x280]\n 58461: a0 = u64 [s1 + 0x290]\n 58465: a0 = a0 | a4\n 58468: a3 = u64 [s1 + 0x288]\n 58472: a1 = u64 [s1 + 0x298]\n 58476: a1 = a1 | a3\n 58479: a1 = a1 | a0\n 58482: a1 = a1 >> 0x20\n 58485: a0 = a0 | a3\n 58488: a0 = a0 << 0x20\n 58491: a0 = a0 | a1\n 58494: jump @799 if a0 != 0\n      : @794 (gas: 35)\n 58498: ra = a3\n 58500: a1 = s1 + 0x7ff\n 58504: a1 = a1 + 0x219\n 58508: a0 = u64 [a1 + 0x6d0]\n 58512: a3 = u64 [a1 + 0x6e0]\n 58516: u64 [s1 + 0x258] = a3\n 58520: t1 = u64 [a1 + 0x6c8]\n 58524: a3 = u64 [a1 + 0x6d8]\n 58528: t2 = a0 ^ a4\n 58531: a5 = a0 <u a4\n 58534: t0 = u64 [s1 + 0x298]\n 58538: a1 = t1 <u t0\n 58541: a5 = a1 if t2 == 0\n 58544: a2 = a3 - ra\n 58547: t2 = a2 - a5\n 58550: a2 = a2 <u a5\n 58553: u64 [s1 + 0x250] = a2\n 58557: a3 = a3 <u ra\n 58560: a5 = u64 [s1 + 0x290]\n 58564: a2 = u64 [s1 + 0x258]\n 58568: a5 = a2 - a5\n 58571: a5 = a5 - a3\n 58574: a2 = u64 [s1 + 0x250]\n 58578: a5 = a5 - a2\n 58581: a0 = a0 - a4\n 58584: a0 = a0 - a1\n 58587: a1 = t1 - t0\n 58590: a0 = a0 | a5\n 58593: a3 = a1 | t2\n 58596: a3 = a3 | a0\n 58599: a0 = a0 | t2\n 58602: a3 = a3 >> 0x20\n 58605: a0 = a0 << 0x20\n 58608: a0 = a0 | a3\n 58611: jump @799 if a0 != 0\n      : @795 (gas: 34)\n 58615: a3 = u64 [s1 + 0x268]\n 58619: a0 = a3 <u 0x1\n 58622: a2 = u64 [s1 + 0x260]\n 58626: t1 = a2 - a0\n 58629: a0 = a3 | a2\n 58632: a0 = a0 <u 0x1\n 58635: a2 = u64 [s1 + 0x270]\n 58639: ra = a2 - a0\n 58642: a0 = a2 <u a0\n 58645: a2 = u64 [s1 + 0x278]\n 58649: t2 = a2 - a0\n 58652: a5 = a3 + 0xffffffffffffffff\n 58655: a0 = u64 [0x20040]\n 58660: a2 = u64 [0x20048]\n 58665: a4 = s1 + 0x7ff\n 58669: a4 = a4 + 0x219\n 58673: u64 [a4 + 0x640] = a0\n 58677: u64 [a4 + 0x638] = a2\n 58681: a0 = u64 [0x20050]\n 58686: a2 = u64 [0x20058]\n 58691: u64 [s1 + 0x280] = a5\n 58695: u64 [a4 + 0x608] = a5\n 58699: u64 [s1 + 0x290] = t1\n 58703: u64 [a4 + 0x610] = t1\n 58707: u64 [a4 + 0x630] = a0\n 58711: u64 [a4 + 0x628] = a2\n 58715: u64 [s1 + 0x288] = ra\n 58719: u64 [a4 + 0x618] = ra\n 58723: a2 = s1 + 0x1040\n 58727: a3 = s1 + 0x1020\n 58731: u64 [s1 + 0x278] = t2\n 58735: u64 [a4 + 0x620] = t2\n 58739: a0 = u64 [s1 + 0x298]\n 58743: ra = 494, jump @26\n      : @796 [@dyn 247] (gas: 3)\n 58750: a0 = 0x40\n 58753: a1 = 0x20\n 58756: ra = 496, jump @0\n      : @797 [@dyn 248] (gas: 100)\n 58763: a1 = u8 [a0 + 0x11]\n 58766: a2 = u8 [a0 + 0x10]\n 58769: a3 = u8 [a0 + 0x12]\n 58772: a4 = u8 [a0 + 0x13]\n 58775: a1 = a1 << 0x8\n 58778: a1 = a1 | a2\n 58781: a3 = a3 << 0x10\n 58784: a4 = a4 << 0x18\n 58787: a3 = a3 | a4\n 58790: a1 = a1 | a3\n 58793: a2 = u8 [a0 + 0x15]\n 58796: a3 = u8 [a0 + 0x14]\n 58799: a4 = u8 [a0 + 0x16]\n 58802: a5 = u8 [a0 + 0x17]\n 58805: a2 = a2 << 0x8\n 58808: a2 = a2 | a3\n 58811: a4 = a4 << 0x10\n 58814: a5 = a5 << 0x18\n 58817: a4 = a4 | a5\n 58820: a2 = a2 | a4\n 58823: a2 = a2 << 0x20\n 58826: t0 = a2 | a1\n 58829: a2 = u8 [a0 + 0x1]\n 58832: a3 = u8 [a0]\n 58834: a4 = u8 [a0 + 0x2]\n 58837: a5 = u8 [a0 + 0x3]\n 58840: a2 = a2 << 0x8\n 58843: a2 = a2 | a3\n 58846: a4 = a4 << 0x10\n 58849: a5 = a5 << 0x18\n 58852: a4 = a4 | a5\n 58855: a2 = a2 | a4\n 58858: a3 = u8 [a0 + 0x5]\n 58861: a4 = u8 [a0 + 0x4]\n 58864: a5 = u8 [a0 + 0x6]\n 58867: a1 = u8 [a0 + 0x7]\n 58870: a3 = a3 << 0x8\n 58873: a3 = a3 | a4\n 58876: a5 = a5 << 0x10\n 58879: a1 = a1 << 0x18\n 58882: a1 = a1 | a5\n 58885: a1 = a1 | a3\n 58888: a1 = a1 << 0x20\n 58891: t1 = a1 | a2\n 58894: a1 = u8 [a0 + 0x19]\n 58897: a3 = u8 [a0 + 0x18]\n 58900: a4 = u8 [a0 + 0x1a]\n 58903: a5 = u8 [a0 + 0x1b]\n 58906: a1 = a1 << 0x8\n 58909: a1 = a1 | a3\n 58912: a4 = a4 << 0x10\n 58915: a5 = a5 << 0x18\n 58918: a4 = a4 | a5\n 58921: a1 = a1 | a4\n 58924: a3 = u8 [a0 + 0x1d]\n 58927: a4 = u8 [a0 + 0x1c]\n 58930: a5 = u8 [a0 + 0x1e]\n 58933: a2 = u8 [a0 + 0x1f]\n 58936: a3 = a3 << 0x8\n 58939: a3 = a3 | a4\n 58942: a5 = a5 << 0x10\n 58945: a2 = a2 << 0x18\n 58948: a2 = a2 | a5\n 58951: a2 = a2 | a3\n 58954: a2 = a2 << 0x20\n 58957: a3 = a2 | a1\n 58960: a1 = u8 [a0 + 0x9]\n 58963: a2 = u8 [a0 + 0x8]\n 58966: a4 = u8 [a0 + 0xa]\n 58969: a5 = u8 [a0 + 0xb]\n 58972: a1 = a1 << 0x8\n 58975: a1 = a1 | a2\n 58978: a4 = a4 << 0x10\n 58981: a5 = a5 << 0x18\n 58984: a4 = a4 | a5\n 58987: a1 = a1 | a4\n 58990: a2 = u8 [a0 + 0xd]\n 58993: a4 = u8 [a0 + 0xc]\n 58996: a5 = u8 [a0 + 0xe]\n 58999: a0 = u8 [a0 + 0xf]\n 59002: a2 = a2 << 0x8\n 59005: a2 = a2 | a4\n 59008: a5 = a5 << 0x10\n 59011: a0 = a0 << 0x18\n 59014: a0 = a0 | a5\n 59017: a0 = a0 | a2\n 59020: a0 = a0 << 0x20\n 59023: a0 = a0 | a1\n 59026: a1 = reverse a0\n 59028: a0 = reverse a3\n 59030: a2 = reverse t1\n 59032: a3 = reverse t0\n 59034: a2 = a2 | a3\n 59037: a3 = a0 | a1\n 59040: a3 = a3 | a2\n 59043: a3 = a3 >> 0x20\n 59046: a1 = a1 | a2\n 59049: a1 = a1 << 0x20\n 59052: a1 = a1 | a3\n 59055: jump @799 if a1 != 0\n      : @798 (gas: 1)\n 59058: jump @950\n      : @799 (gas: 1)\n 59061: trap\n      : @800 (gas: 8)\n 59062: a0 = u64 [s1 + 0x168]\n 59066: a1 = u64 [s1 + 0x160]\n 59070: a0 = a0 | a1\n 59073: a1 = u64 [s1 + 0x170]\n 59077: a2 = u64 [s1 + 0x158]\n 59081: a1 = a1 | a2\n 59084: a0 = a0 | a1\n 59087: jump @802 if a0 == 0\n      : @801 (gas: 1)\n 59090: jump @843\n      : @802 (gas: 5)\n 59093: u64 [s1 + 648] = 0\n 59097: u64 [s1 + 640] = 0\n 59101: u64 [s1 + 632] = 0\n 59105: u64 [s1 + 584] = 0\n 59109: jump @847\n      : @803 (gas: 227)\n 59112: u64 [s1 + 176] = 0\n 59116: u64 [s1 + 600] = 0\n 59120: a0 = s1 + 0x1a18\n 59124: a1 = u64 [s1 + 0x250]\n 59128: u8 [a0 + 0xef] = a1\n 59132: a1 = u64 [s1 + 0x248]\n 59136: u8 [a0 + 0xee] = a1\n 59140: a1 = u64 [s1 + 0x240]\n 59144: u8 [a0 + 0xed] = a1\n 59148: a1 = u64 [s1 + 0x138]\n 59152: u8 [a0 + 0xec] = a1\n 59156: a1 = u64 [s1 + 0x130]\n 59160: u8 [a0 + 0xeb] = a1\n 59164: a1 = u64 [s1 + 0x128]\n 59168: u8 [a0 + 0xea] = a1\n 59172: a1 = u64 [s1 + 0x120]\n 59176: u8 [a0 + 0xe9] = a1\n 59180: a1 = u64 [s1 + 0x118]\n 59184: u8 [a0 + 0xf7] = a1\n 59188: a1 = u64 [s1 + 0x110]\n 59192: u8 [a0 + 0xf6] = a1\n 59196: a1 = u64 [s1 + 0x108]\n 59200: u8 [a0 + 0xf5] = a1\n 59204: a1 = u64 [s1 + 0x100]\n 59208: u8 [a0 + 0xf4] = a1\n 59212: a1 = u64 [s1 + 0xf8]\n 59216: u8 [a0 + 0xf3] = a1\n 59220: a1 = u64 [s1 + 0xf0]\n 59224: u8 [a0 + 0xf2] = a1\n 59228: a1 = u64 [s1 + 0xe8]\n 59232: u8 [a0 + 0xf1] = a1\n 59236: a1 = u64 [s1 + 0xe0]\n 59240: u8 [a0 + 0xff] = a1\n 59244: a1 = u64 [s1 + 0xd8]\n 59248: u8 [a0 + 0xfe] = a1\n 59252: a1 = u64 [s1 + 0xd0]\n 59256: u8 [a0 + 0xfd] = a1\n 59260: a1 = u64 [s1 + 0xc8]\n 59264: u8 [a0 + 0xfc] = a1\n 59268: a1 = u64 [s1 + 0xc0]\n 59272: u8 [a0 + 0xfb] = a1\n 59276: a1 = u64 [s1 + 0xb8]\n 59280: u8 [a0 + 0xfa] = a1\n 59284: u8 [a0 + 295] = 0\n 59288: u8 [a0 + 294] = 0\n 59292: u8 [a0 + 293] = 0\n 59296: u8 [a0 + 292] = 0\n 59300: u8 [a0 + 291] = 0\n 59304: u8 [a0 + 290] = 0\n 59308: u8 [a0 + 289] = 0\n 59312: u8 [a0 + 288] = 0\n 59316: u8 [a0 + 287] = 0\n 59320: u8 [a0 + 286] = 0\n 59324: u8 [a0 + 285] = 0\n 59328: u8 [a0 + 284] = 0\n 59332: u8 [a0 + 283] = 0\n 59336: u8 [a0 + 282] = 0\n 59340: u8 [a0 + 281] = 0\n 59344: u8 [a0 + 280] = 0\n 59348: u8 [a0 + 279] = 0\n 59352: u8 [a0 + 278] = 0\n 59356: u8 [a0 + 277] = 0\n 59360: u8 [a0 + 276] = 0\n 59364: u8 [a0 + 275] = 0\n 59368: u8 [a0 + 274] = 0\n 59372: u8 [a0 + 273] = 0\n 59376: u8 [a0 + 272] = 0\n 59380: u8 [a0 + 271] = 0\n 59384: u8 [a0 + 270] = 0\n 59388: u8 [a0 + 269] = 0\n 59392: u8 [a0 + 268] = 0\n 59396: u8 [a0 + 267] = 0\n 59400: u8 [a0 + 266] = 0\n 59404: u8 [a0 + 265] = 0\n 59408: u8 [a0 + 264] = 0\n 59412: a1 = u64 [s1 + 0x170]\n 59416: u8 [a0 + 0xe8] = a1\n 59420: a1 = u64 [s1 + 0x168]\n 59424: u8 [a0 + 0xf0] = a1\n 59428: a1 = u64 [s1 + 0x160]\n 59432: u8 [a0 + 0xf8] = a1\n 59436: a1 = u64 [s1 + 0x158]\n 59440: u8 [a0 + 0x100] = a1\n 59444: a1 = u64 [s1 + 0x1d8]\n 59448: u8 [a0 + 0xf9] = a1\n 59452: a1 = u64 [s1 + 0x1d0]\n 59456: u8 [a0 + 0x107] = a1\n 59460: a1 = u64 [s1 + 0x1c8]\n 59464: u8 [a0 + 0x106] = a1\n 59468: a1 = u64 [s1 + 0x1c0]\n 59472: u8 [a0 + 0x105] = a1\n 59476: a1 = u64 [s1 + 0x1b8]\n 59480: u8 [a0 + 0x104] = a1\n 59484: a1 = u64 [s1 + 0x150]\n 59488: u8 [a0 + 0x103] = a1\n 59492: a1 = u64 [s1 + 0x148]\n 59496: u8 [a0 + 0x102] = a1\n 59500: a1 = u64 [s1 + 0x140]\n 59504: u8 [a0 + 0x101] = a1\n 59508: a0 = t1 << 0x38\n 59511: a0 = a0 >> 0x3b\n 59514: a3 = s1 + 0x1b00\n 59518: a3 = a3 + a0\n 59521: a0 = u8 [a3 + 0x11]\n 59524: a1 = u8 [a3 + 0x10]\n 59527: a2 = u8 [a3 + 0x12]\n 59530: a4 = u8 [a3 + 0x13]\n 59533: a0 = a0 << 0x8\n 59536: a0 = a0 | a1\n 59539: a2 = a2 << 0x10\n 59542: a4 = a4 << 0x18\n 59545: a2 = a2 | a4\n 59548: a0 = a0 | a2\n 59551: a1 = u8 [a3 + 0x15]\n 59554: a2 = u8 [a3 + 0x14]\n 59557: a4 = u8 [a3 + 0x16]\n 59560: a5 = u8 [a3 + 0x17]\n 59563: a1 = a1 << 0x8\n 59566: a1 = a1 | a2\n 59569: a4 = a4 << 0x10\n 59572: a5 = a5 << 0x18\n 59575: a4 = a4 | a5\n 59578: a1 = a1 | a4\n 59581: a1 = a1 << 0x20\n 59584: t0 = a1 | a0\n 59587: t2 = t1 & 0x7\n 59590: a0 = u8 [a3 + 0x19]\n 59593: a1 = u8 [a3 + 0x18]\n 59596: a2 = u8 [a3 + 0x1a]\n 59599: a4 = u8 [a3 + 0x1b]\n 59602: a0 = a0 << 0x8\n 59605: a0 = a0 | a1\n 59608: a2 = a2 << 0x10\n 59611: a4 = a4 << 0x18\n 59614: a1 = u8 [a3 + 0x1d]\n 59617: a2 = a2 | a4\n 59620: a0 = a0 | a2\n 59623: a2 = u8 [a3 + 0x1c]\n 59626: a1 = a1 << 0x8\n 59629: a4 = u8 [a3 + 0x1e]\n 59632: a5 = u8 [a3 + 0x1f]\n 59635: a1 = a1 | a2\n 59638: a2 = t0 >> t2\n 59641: a4 = a4 << 0x10\n 59644: a5 = a5 << 0x18\n 59647: a4 = a4 | a5\n 59650: a1 = a1 | a4\n 59653: a1 = a1 << 0x20\n 59656: t1 = a1 | a0\n 59659: a0 = t1 << 0x1\n 59662: ra = t2 ^ 0x3f\n 59665: a0 = a0 << ra\n 59668: a0 = a0 | a2\n 59671: u64 [s1 + 0x250] = a0\n 59675: a0 = u8 [a3 + 0x9]\n 59678: a2 = u8 [a3 + 0x8]\n 59681: a5 = u8 [a3 + 0xa]\n 59684: a1 = u8 [a3 + 0xb]\n 59687: a0 = a0 << 0x8\n 59690: a0 = a0 | a2\n 59693: a5 = a5 << 0x10\n 59696: a1 = a1 << 0x18\n 59699: a1 = a1 | a5\n 59702: a0 = a0 | a1\n 59705: a1 = u8 [a3 + 0xd]\n 59708: a2 = u8 [a3 + 0xc]\n 59711: a5 = u8 [a3 + 0xe]\n 59714: a4 = u8 [a3 + 0xf]\n 59717: a1 = a1 << 0x8\n 59720: a1 = a1 | a2\n 59723: a5 = a5 << 0x10\n 59726: a4 = a4 << 0x18\n 59729: a4 = a4 | a5\n 59732: a1 = a1 | a4\n 59735: a1 = a1 << 0x20\n 59738: a5 = a1 | a0\n 59741: t0 = t0 << 0x1\n 59744: a0 = t2 ^ 0xffffffffffffffff\n 59747: a0 = t0 << a0\n 59750: a1 = a5 >> t2\n 59753: t0 = a1 | a0\n 59756: a0 = u8 [a3 + 0x1]\n 59759: a1 = u8 [a3]\n 59761: a2 = u8 [a3 + 0x2]\n 59764: a4 = u8 [a3 + 0x3]\n 59767: a0 = a0 << 0x8\n 59770: a0 = a0 | a1\n 59773: a2 = a2 << 0x10\n 59776: a4 = a4 << 0x18\n 59779: a2 = a2 | a4\n 59782: a0 = a0 | a2\n 59785: a1 = u8 [a3 + 0x5]\n 59788: a2 = u8 [a3 + 0x4]\n 59791: a4 = u8 [a3 + 0x6]\n 59794: a3 = u8 [a3 + 0x7]\n 59797: a1 = a1 << 0x8\n 59800: a1 = a1 | a2\n 59803: a4 = a4 << 0x10\n 59806: a3 = a3 << 0x18\n 59809: a3 = a3 | a4\n 59812: a1 = a1 | a3\n 59815: a1 = a1 << 0x20\n 59818: a0 = a0 | a1\n 59821: a0 = a0 >> t2\n 59824: a5 = a5 << 0x1\n 59827: a4 = a5 << ra\n 59830: ra = a0 | a4\n 59833: a0 = t1 >> t2\n 59836: u64 [s1 + 0x248] = a0\n 59840: t1 = u64 [s1 + 0xb0]\n 59844: a1 = u64 [s1 + 0x1f8]\n 59848: a0 = a1 <u 0x1\n 59851: a2 = u64 [s1 + 0x1e0]\n 59855: a0 = a2 - a0\n 59858: u64 [s1 + 0x1d0] = a0\n 59862: a0 = a1 | a2\n 59865: a0 = a0 <u 0x1\n 59868: a2 = u64 [s1 + 0x1f0]\n 59872: a3 = a2 - a0\n 59875: u64 [s1 + 0x1c8] = a3\n 59879: a0 = a2 <u a0\n 59882: a2 = u64 [s1 + 0x1e8]\n 59886: a2 = a2 - a0\n 59889: u64 [s1 + 0x1c0] = a2\n 59893: a1 = a1 + 0xffffffffffffffff\n 59896: u64 [s1 + 0x1b8] = a1\n 59900: fallthrough\n      : @804 (gas: 106)\n 59901: u64 [s1 + 472] = 0\n 59905: a1 = ra >> 0x3f\n 59908: a5 = t0 << 0x1\n 59911: a2 = t0\n 59913: t2 = a5 | a1\n 59916: a4 = ra << 0x1\n 59919: a3 = u64 [s1 + 0x280]\n 59923: a5 = a3 >> 0x3f\n 59926: a4 = a4 | a5\n 59929: u64 [s1 + 0x240] = a4\n 59933: a0 = u64 [s1 + 0x1d0]\n 59937: a5 = a0 ^ t2\n 59940: a0 = a0 <u t2\n 59943: a1 = u64 [s1 + 0x1b8]\n 59947: ra = a1 <u a4\n 59950: ra = a0 if a5 != 0\n 59953: a1 = u64 [s1 + 0x248]\n 59957: a1 = a1 << 0x1\n 59960: a5 = u64 [s1 + 0x250]\n 59964: a0 = a5 >> 0x3f\n 59967: t0 = a1 | a0\n 59970: u64 [s1 + 0x248] = t0\n 59974: a0 = a2 >> 0x3f\n 59977: a5 = a5 << 0x1\n 59980: a5 = a5 | a0\n 59983: a0 = a3 << 0x1\n 59986: a1 = u64 [s1 + 0x278]\n 59990: a2 = a1 >> 0x3f\n 59993: a0 = a0 | a2\n 59996: a2 = a1 << 0x1\n 59999: a1 = u64 [s1 + 0x268]\n 60003: a3 = a1 >> 0x3f\n 60006: a2 = a2 | a3\n 60009: a3 = a1 << 0x1\n 60012: a1 = u64 [s1 + 0x270]\n 60016: a4 = a1 >> 0x3f\n 60019: a3 = a3 | a4\n 60022: a4 = a1 << 0x1\n 60025: a1 = t1 | a4\n 60028: u64 [s1 + 0x270] = a1\n 60032: a1 = u64 [s1 + 0x258]\n 60036: a3 = a3 | a1\n 60039: u64 [s1 + 0x268] = a3\n 60043: a2 = a2 | a1\n 60046: u64 [s1 + 0x278] = a2\n 60050: a0 = a0 | a1\n 60053: u64 [s1 + 0x280] = a0\n 60057: a1 = u64 [s1 + 0x1c8]\n 60061: a0 = a1 - a5\n 60064: a0 = a0 <u ra\n 60067: a2 = a1 <u a5\n 60070: a1 = u64 [s1 + 0x1c0]\n 60074: a3 = a1 - t0\n 60077: a3 = a3 - a2\n 60080: a0 = a3 - a0\n 60083: a4 = a0 >>a 0x3f\n 60086: a0 = u64 [s1 + 0x1f8]\n 60090: a0 = a0 & a4\n 60093: u64 [s1 + 0x258] = a0\n 60097: a2 = u64 [s1 + 0x1e0]\n 60101: a2 = a2 & a4\n 60104: t0 = t2 ^ a2\n 60107: a3 = t2 <u a2\n 60110: ra = u64 [s1 + 0x240]\n 60114: t1 = ra <u a0\n 60117: a3 = t1 if t0 == 0\n 60120: a0 = u64 [s1 + 0x1f0]\n 60124: t0 = a4 & a0\n 60127: a1 = a5 - t0\n 60130: a0 = a1 - a3\n 60133: u64 [s1 + 0x250] = a0\n 60137: a0 = a1 <u a3\n 60140: a3 = a5 <u t0\n 60143: a5 = u64 [s1 + 0x1e8]\n 60147: a5 = a5 & a4\n 60150: a1 = u64 [s1 + 0x248]\n 60154: a5 = a1 - a5\n 60157: a3 = a5 - a3\n 60160: a3 = a3 - a0\n 60163: u64 [s1 + 0x248] = a3\n 60167: a0 = t2 - a2\n 60170: t0 = a0 - t1\n 60173: a0 = u64 [s1 + 0x258]\n 60177: ra = ra - a0\n 60180: a2 = u64 [s1 + 0x298]\n 60184: a1 = u64 [s1 + 0x290]\n 60188: a0 = a2 | a1\n 60191: a0 = a0 <u 0x1\n 60194: a5 = u64 [s1 + 0x260]\n 60198: a3 = a5 <u a0\n 60201: a5 = a5 - a0\n 60204: a0 = a2 <u 0x1\n 60207: a1 = a1 - a0\n 60210: a0 = u64 [s1 + 0x288]\n 60214: a0 = a0 - a3\n 60217: a2 = a2 + 0xffffffffffffffff\n 60220: u64 [s1 + 0x290] = a1\n 60224: u64 [s1 + 0x288] = a0\n 60228: a0 = a0 | a1\n 60231: u64 [s1 + 0x298] = a2\n 60235: a2 = a2 | a5\n 60238: a0 = a0 | a2\n 60241: t1 = a4 & 0x1\n 60244: u64 [s1 + 0x260] = a5\n 60248: u64 [s1 + 600] = 0\n 60252: jump @804 if a0 != 0\n      : @805 (gas: 20)\n 60256: a3 = u64 [s1 + 0x278]\n 60260: a1 = a3 >> 0x3f\n 60263: a2 = u64 [s1 + 0x280]\n 60267: a2 = a2 << 0x1\n 60270: t0 = a2 | a1\n 60273: a5 = u64 [s1 + 0x268]\n 60277: a2 = a5 >> 0x3f\n 60280: a3 = a3 << 0x1\n 60283: a3 = a3 | a2\n 60286: a2 = u64 [s1 + 0x270]\n 60290: a4 = a2 >> 0x3f\n 60293: a5 = a5 << 0x1\n 60296: a2 = a2 << 0x1\n 60299: a2 = t1 | a2\n 60302: a1 = u64 [s1 + 0x1d8]\n 60306: a0 = a1 | a4\n 60309: t2 = a0 | a5\n 60312: ra = a1 | a3\n 60315: t0 = a1 | t0\n 60318: fallthrough\n      : @806 (gas: 99)\n 60319: u64 [s1 + 0x270] = t2\n 60323: u64 [s1 + 0x258] = ra\n 60327: u64 [s1 + 0x260] = t0\n 60331: u64 [s1 + 656] = 0\n 60335: t0 = 0\n 60337: u64 [s1 + 648] = 0\n 60341: t2 = 0\n 60343: u64 [s1 + 664] = 0\n 60347: u64 [s1 + 640] = 0\n 60351: ra = 0\n 60353: u64 [s1 + 632] = 0\n 60357: a4 = u64 [s1 + 0x1f8]\n 60361: a1 = a2\n 60363: a0 = a4 mulhu a2\n 60366: a3 = u64 [s1 + 0x1e0]\n 60370: a5 = a3 * a2\n 60373: a0 = a0 + a5\n 60376: a5 = a0 <u a5\n 60379: t1 = a3 mulhu a2\n 60382: a2 = t1 + a5\n 60385: a5 = u64 [s1 + 0x270]\n 60389: t1 = a4 * a5\n 60392: a0 = a0 + t1\n 60395: u64 [s1 + 0x268] = a0\n 60399: a0 = a0 <u t1\n 60402: a5 = a4 mulhu a5\n 60405: a0 = a0 + a5\n 60408: t1 = a2 + a0\n 60411: a5 = t1 <u a2\n 60414: a0 = a1\n 60416: a1 = u64 [s1 + 0x270]\n 60420: a2 = a3 mulhu a1\n 60423: a2 = a2 + a5\n 60426: a5 = a3 * a1\n 60429: t1 = t1 + a5\n 60432: u64 [s1 + 0x250] = t1\n 60436: a5 = t1 <u a5\n 60439: a2 = a2 + a5\n 60442: u64 [s1 + 0x248] = a2\n 60446: a1 = u64 [s1 + 0x258]\n 60450: a5 = a1 * a3\n 60453: a2 = a1 mulhu a4\n 60456: a2 = a2 + a5\n 60459: a3 = u64 [s1 + 0x260]\n 60463: a5 = a3 * a4\n 60466: a2 = a2 + a5\n 60469: u64 [s1 + 0x260] = a2\n 60473: a2 = u64 [s1 + 0x1e8]\n 60477: a5 = a0 * a2\n 60480: a3 = u64 [s1 + 0x1f0]\n 60484: t1 = a0 mulhu a3\n 60487: a5 = a5 + t1\n 60490: a2 = u64 [s1 + 0x270]\n 60494: a2 = a2 * a3\n 60497: a2 = a2 + a5\n 60500: t1 = u64 [s1 + 0x260]\n 60504: t1 = t1 + a2\n 60507: a5 = a0 * a3\n 60510: a2 = a1 * a4\n 60513: a5 = a5 + a2\n 60516: a2 = a5 <u a2\n 60519: a2 = a2 + t1\n 60522: t1 = u64 [s1 + 0x248]\n 60526: t1 = t1 + a2\n 60529: a3 = a4 * a0\n 60532: a0 = u64 [s1 + 0x250]\n 60536: a5 = a5 + a0\n 60539: a0 = a5 <u a0\n 60542: a1 = u64 [s1 + 0x158]\n 60546: a0 = a1 - a0\n 60549: a0 = a0 - t1\n 60552: u64 [s1 + 0x270] = a0\n 60556: a1 = u64 [s1 + 0x168]\n 60560: a0 = u64 [s1 + 0x268]\n 60564: t1 = a1 ^ a0\n 60567: a0 = a1 <u a0\n 60570: a2 = u64 [s1 + 0x170]\n 60574: a4 = a2 <u a3\n 60577: a0 = a4 if t1 == 0\n 60580: t1 = u64 [s1 + 0x160]\n 60584: a2 = t1 <u a5\n 60587: a5 = t1 - a5\n 60590: t1 = a5 <u a0\n 60593: t1 = t1 + a2\n 60596: a2 = u64 [s1 + 0x270]\n 60600: a2 = a2 - t1\n 60603: u64 [s1 + 0x250] = a2\n 60607: a2 = u64 [s1 + 0x290]\n 60611: a5 = a5 - a0\n 60614: u64 [s1 + 0x248] = a5\n 60618: a0 = a1 - a4\n 60621: a1 = u64 [s1 + 0x268]\n 60625: a0 = a0 - a1\n 60628: u64 [s1 + 0x240] = a0\n 60632: a0 = u64 [s1 + 0x170]\n 60636: a0 = a0 - a3\n 60639: u64 [s1 + 0x1f8] = a0\n 60643: a1 = u64 [s1 + 0x288]\n 60647: fallthrough\n      : @807 (gas: 25)\n 60648: u64 [s1 + 0x260] = ra\n 60652: a0 = u64 [s1 + 0x298]\n 60656: u64 [s1 + 0x258] = a0\n 60660: a3 = s1 + 0x1a18\n 60664: u64 [s1 + 0x290] = a2\n 60668: u64 [a3 + 0x68] = a2\n 60671: a0 = u64 [s1 + 0x220]\n 60675: u64 [a3 + 0x88] = a0\n 60679: u64 [s1 + 0x270] = t0\n 60683: u64 [a3 + 0x70] = t0\n 60686: a0 = u64 [s1 + 0x228]\n 60690: u64 [a3 + 0x90] = a0\n 60694: u64 [s1 + 0x288] = a1\n 60698: u64 [a3 + 0x78] = a1\n 60701: a0 = u64 [s1 + 0x230]\n 60705: u64 [a3 + 0x98] = a0\n 60709: u64 [s1 + 0x268] = t2\n 60713: u64 [a3 + 0x80] = t2\n 60717: a4 = a3\n 60719: a0 = s1 + 0x1ac0\n 60723: a1 = s1 + 0x1aa0\n 60727: a2 = s1 + 0x1a80\n 60731: a3 = u64 [s1 + 0x238]\n 60735: u64 [a4 + 0xa0] = a3\n 60739: ra = 498, jump @955\n      : @808 [@dyn 249] (gas: 33)\n 60745: a3 = s1 + 0x1a18\n 60749: a0 = u64 [a3 + 0xa8]\n 60753: a1 = u64 [a3 + 0xc0]\n 60757: a2 = u64 [a3 + 0xb0]\n 60761: a3 = u64 [a3 + 0xb8]\n 60765: a0 = a0 + 0x1\n 60768: a4 = a0 <u 0x1\n 60771: a2 = a2 + a4\n 60774: a4 = a0 | a2\n 60777: a4 = a4 <u 0x1\n 60780: a4 = a4 + a3\n 60783: a3 = a4 <u a3\n 60786: a1 = a1 + a3\n 60789: a3 = s1 + 0x2218\n 60793: u64 [a3 + 0x1f0] = a2\n 60797: u64 [a3 + 0x1e8] = a0\n 60801: u64 [a3 + 0x1f8] = a4\n 60805: u64 [a3 + 0x200] = a1\n 60809: u64 [a3 + 544] = 0\n 60813: u64 [a3 + 536] = 0\n 60817: u64 [a3 + 528] = 0\n 60821: u64 [a3 + 520] = 0\n 60825: u32 [a3 + 552] = 0x20\n 60830: a0 = s1 + 0x2000\n 60834: i32 a1 = a0 + 0x400\n 60838: a0 = s1 + 0x2000\n 60842: i32 a3 = a0 + 0x420\n 60846: a0 = s1 + 0x2000\n 60850: i32 a4 = a0 + 0x440\n 60854: a2 = 0xffffffffffffffff\n 60857: a0 = 0\n 60859: ecalli 9 // 'get_storage'\n 60861: fallthrough\n      : @809 (gas: 40)\n 60862: a1 = s1 + 0x2218\n 60866: a0 = u64 [a1 + 0x210]\n 60870: t2 = u64 [a1 + 0x208]\n 60874: a3 = u64 [a1 + 0x220]\n 60878: a4 = u64 [a1 + 0x218]\n 60882: a1 = u64 [s1 + 0x280]\n 60886: a0 = a0 + a1\n 60889: a2 = u64 [s1 + 0x258]\n 60893: t2 = t2 + a2\n 60896: u64 [s1 + 0x298] = t2\n 60900: a5 = t2 <u a2\n 60903: t0 = a0 + a5\n 60906: a0 = t0 ^ a1\n 60909: u64 [s1 + 0x258] = a0\n 60913: t2 = t0 <u a1\n 60916: t1 = u64 [s1 + 0x260]\n 60920: a4 = a4 + t1\n 60923: a2 = u64 [s1 + 0x278]\n 60927: a3 = a3 + a2\n 60930: a1 = a4 <u t1\n 60933: a1 = a1 + a3\n 60936: ra = a5\n 60938: ra = t2 if a0 != 0\n 60941: ra = ra + a4\n 60944: a3 = ra <u a4\n 60947: a3 = a3 + a1\n 60950: a1 = a5 ^ 0x1\n 60953: a0 = t2 ^ 0x1\n 60956: a4 = u64 [s1 + 0x258]\n 60960: a1 = a0 if a4 != 0\n 60963: a0 = ra <u t1\n 60966: a4 = a2\n 60968: a2 = a2 ^ a3\n 60971: a4 = a3 <u a4\n 60974: a4 = a0 if a2 == 0\n 60977: a0 = ra ^ t1\n 60980: a0 = a0 | a2\n 60983: a2 = a4 ^ 0x1\n 60986: a1 = a2 if a0 != 0\n 60989: jump @811 if a1 != 0\n      : @810 (gas: 1)\n 60992: jump @902\n      : @811 (gas: 17)\n 60995: a0 = u64 [s1 + 0x1f8]\n 60999: a1 = u64 [s1 + 0x298]\n 61003: a0 = a0 <u a1\n 61006: a2 = u64 [s1 + 0x240]\n 61010: a1 = a2 ^ t0\n 61013: a2 = a2 <u t0\n 61016: a2 = a0 if a1 == 0\n 61019: a5 = u64 [s1 + 0x248]\n 61023: a0 = a5 <u ra\n 61026: a4 = u64 [s1 + 0x250]\n 61030: a1 = a4 ^ a3\n 61033: a4 = a4 <u a3\n 61036: a4 = a0 if a1 == 0\n 61039: a0 = a5 ^ ra\n 61042: a0 = a0 | a1\n 61045: a4 = a2 if a0 == 0\n 61048: jump @814 if a4 != 0\n      : @812 (gas: 31)\n 61051: u64 [s1 + 0x278] = a3\n 61055: u64 [s1 + 0x280] = t0\n 61059: a2 = u64 [s1 + 0x290]\n 61063: a2 = a2 + 0x1\n 61066: a0 = a2 <u 0x1\n 61069: t0 = u64 [s1 + 0x270]\n 61073: t0 = t0 + a0\n 61076: a0 = a2 | t0\n 61079: a0 = a0 <u 0x1\n 61082: a1 = u64 [s1 + 0x288]\n 61086: a0 = a0 + a1\n 61089: a1 = a0 <u a1\n 61092: t2 = u64 [s1 + 0x268]\n 61096: t2 = t2 + a1\n 61099: a1 = u64 [s1 + 0x200]\n 61103: a1 = a2 <u a1\n 61106: a3 = u64 [s1 + 0x208]\n 61110: a5 = t0 ^ a3\n 61113: a4 = t0 <u a3\n 61116: a4 = a1 if a5 == 0\n 61119: a1 = u64 [s1 + 0x210]\n 61123: t1 = a0 <u a1\n 61126: a5 = u64 [s1 + 0x218]\n 61130: a3 = t2 ^ a5\n 61133: a5 = t2 <u a5\n 61136: a5 = t1 if a3 == 0\n 61139: a1 = a1 ^ a0\n 61142: a1 = a1 | a3\n 61145: a5 = a4 if a1 == 0\n 61148: a1 = a0\n 61150: jump @807 if a5 != 0\n      : @813 (gas: 5)\n 61154: a1 = 0\n 61156: a2 = 0\n 61158: a4 = 0\n 61160: a3 = 0\n 61162: jump @815\n      : @814 (gas: 5)\n 61164: a1 = u64 [s1 + 0x290]\n 61168: a2 = u64 [s1 + 0x270]\n 61172: a3 = u64 [s1 + 0x268]\n 61176: a4 = u64 [s1 + 0x288]\n 61180: fallthrough\n      : @815 (gas: 19)\n 61181: a5 = s1 + 0x1218\n 61185: u64 [a5 + 0x7e8] = a1\n 61189: a1 = s1 + 0x1a18\n 61193: a0 = u64 [s1 + 0x220]\n 61197: u64 [a1 + 0x8] = a0\n 61200: u64 [a5 + 0x7f0] = a2\n 61204: a0 = u64 [s1 + 0x228]\n 61208: u64 [a1 + 0x10] = a0\n 61211: u64 [a5 + 0x7f8] = a4\n 61215: a0 = u64 [s1 + 0x230]\n 61219: u64 [a1 + 0x18] = a0\n 61222: u64 [a1] = a3\n 61224: a4 = a1\n 61226: a0 = s1 + 0x1a40\n 61230: a1 = s1 + 0x1a20\n 61234: a2 = s1 + 0x1a00\n 61238: a3 = u64 [s1 + 0x238]\n 61242: u64 [a4 + 0x20] = a3\n 61245: ra = 500, jump @955\n      : @816 [@dyn 250] (gas: 13)\n 61251: a3 = s1 + 0x1a18\n 61255: a1 = u64 [a3 + 0x28]\n 61258: a0 = u64 [a3 + 0x30]\n 61261: a2 = u64 [a3 + 0x38]\n 61264: a3 = u64 [a3 + 0x40]\n 61267: a4 = s1 + 0x1218\n 61271: u64 [a4 + 0x7c0] = a3\n 61275: u64 [a4 + 0x7b8] = a2\n 61279: u64 [a4 + 0x7b0] = a0\n 61283: a0 = s1 + 0x19e0\n 61287: a2 = s1 + 0x19c0\n 61291: u64 [a4 + 0x7a8] = a1\n 61295: ra = 502, jump @25\n      : @817 [@dyn 251] (gas: 16)\n 61302: a4 = s1 + 0x1218\n 61306: a3 = u64 [a4 + 0x7e0]\n 61310: a1 = u64 [a4 + 0x7d8]\n 61314: a0 = u64 [a4 + 0x7d0]\n 61318: a2 = u64 [a4 + 0x7c8]\n 61322: u64 [s1 + 0x260] = a3\n 61326: u64 [a4 + 0x760] = a3\n 61330: u64 [s1 + 0x268] = a1\n 61334: u64 [a4 + 0x758] = a1\n 61338: u64 [s1 + 0x270] = a0\n 61342: u64 [a4 + 0x750] = a0\n 61346: a0 = s1 + 0x1980\n 61350: a1 = s1 + 0x1960\n 61354: u64 [s1 + 0x278] = a2\n 61358: u64 [a4 + 0x748] = a2\n 61362: ra = 504, jump @1048\n      : @818 [@dyn 252] (gas: 12)\n 61368: a1 = s1 + 0x1218\n 61372: a0 = u64 [a1 + 0x780]\n 61376: u64 [s1 + 0x240] = a0\n 61380: a0 = u64 [a1 + 0x778]\n 61384: u64 [s1 + 0x248] = a0\n 61388: a0 = u64 [a1 + 0x770]\n 61392: u64 [s1 + 0x250] = a0\n 61396: a0 = u64 [a1 + 0x768]\n 61400: u64 [s1 + 0x258] = a0\n 61404: a0 = 0x40\n 61407: a1 = 0x20\n 61410: ra = 506, jump @0\n      : @819 [@dyn 253] (gas: 102)\n 61417: a1 = u8 [a0 + 0x11]\n 61420: a2 = u8 [a0 + 0x10]\n 61423: a3 = u8 [a0 + 0x12]\n 61426: a4 = u8 [a0 + 0x13]\n 61429: a1 = a1 << 0x8\n 61432: a1 = a1 | a2\n 61435: a3 = a3 << 0x10\n 61438: a4 = a4 << 0x18\n 61441: a3 = a3 | a4\n 61444: a1 = a1 | a3\n 61447: a2 = u8 [a0 + 0x15]\n 61450: a3 = u8 [a0 + 0x14]\n 61453: a4 = u8 [a0 + 0x16]\n 61456: a5 = u8 [a0 + 0x17]\n 61459: a2 = a2 << 0x8\n 61462: a2 = a2 | a3\n 61465: a4 = a4 << 0x10\n 61468: a5 = a5 << 0x18\n 61471: a4 = a4 | a5\n 61474: a2 = a2 | a4\n 61477: a2 = a2 << 0x20\n 61480: t0 = a2 | a1\n 61483: a2 = u8 [a0 + 0x1]\n 61486: a3 = u8 [a0]\n 61488: a4 = u8 [a0 + 0x2]\n 61491: a5 = u8 [a0 + 0x3]\n 61494: a2 = a2 << 0x8\n 61497: a2 = a2 | a3\n 61500: a4 = a4 << 0x10\n 61503: a5 = a5 << 0x18\n 61506: a4 = a4 | a5\n 61509: a2 = a2 | a4\n 61512: a3 = u8 [a0 + 0x5]\n 61515: a4 = u8 [a0 + 0x4]\n 61518: a5 = u8 [a0 + 0x6]\n 61521: a1 = u8 [a0 + 0x7]\n 61524: a3 = a3 << 0x8\n 61527: a3 = a3 | a4\n 61530: a5 = a5 << 0x10\n 61533: a1 = a1 << 0x18\n 61536: a1 = a1 | a5\n 61539: a1 = a1 | a3\n 61542: a1 = a1 << 0x20\n 61545: t1 = a1 | a2\n 61548: a1 = u8 [a0 + 0x19]\n 61551: a3 = u8 [a0 + 0x18]\n 61554: a4 = u8 [a0 + 0x1a]\n 61557: a5 = u8 [a0 + 0x1b]\n 61560: a1 = a1 << 0x8\n 61563: a1 = a1 | a3\n 61566: a4 = a4 << 0x10\n 61569: a5 = a5 << 0x18\n 61572: a4 = a4 | a5\n 61575: a1 = a1 | a4\n 61578: a3 = u8 [a0 + 0x1d]\n 61581: a4 = u8 [a0 + 0x1c]\n 61584: a5 = u8 [a0 + 0x1e]\n 61587: a2 = u8 [a0 + 0x1f]\n 61590: a3 = a3 << 0x8\n 61593: a3 = a3 | a4\n 61596: a5 = a5 << 0x10\n 61599: a2 = a2 << 0x18\n 61602: a2 = a2 | a5\n 61605: a2 = a2 | a3\n 61608: a2 = a2 << 0x20\n 61611: a3 = a2 | a1\n 61614: a1 = u8 [a0 + 0x9]\n 61617: a2 = u8 [a0 + 0x8]\n 61620: a4 = u8 [a0 + 0xa]\n 61623: a5 = u8 [a0 + 0xb]\n 61626: a1 = a1 << 0x8\n 61629: a1 = a1 | a2\n 61632: a4 = a4 << 0x10\n 61635: a5 = a5 << 0x18\n 61638: a4 = a4 | a5\n 61641: a1 = a1 | a4\n 61644: a2 = u8 [a0 + 0xd]\n 61647: a4 = u8 [a0 + 0xc]\n 61650: a5 = u8 [a0 + 0xe]\n 61653: a0 = u8 [a0 + 0xf]\n 61656: a2 = a2 << 0x8\n 61659: a2 = a2 | a4\n 61662: a5 = a5 << 0x10\n 61665: a0 = a0 << 0x18\n 61668: a0 = a0 | a5\n 61671: a0 = a0 | a2\n 61674: a0 = a0 << 0x20\n 61677: a0 = a0 | a1\n 61680: a2 = reverse a0\n 61682: a1 = reverse a3\n 61684: a3 = reverse t1\n 61686: a0 = reverse t0\n 61688: u64 [s1 + 0x290] = a0\n 61692: a0 = a0 | a3\n 61695: u64 [s1 + 0x298] = a1\n 61699: a1 = a1 | a2\n 61702: a1 = a1 | a0\n 61705: a1 = a1 >> 0x20\n 61708: a0 = a0 | a2\n 61711: a0 = a0 << 0x20\n 61714: a0 = a0 | a1\n 61717: jump @799 if a0 != 0\n      : @820 (gas: 6)\n 61721: a0 = i32 [s1 + 0x298]\n 61725: a1 = 0x20\n 61728: u64 [s1 + 0x238] = a0\n 61732: u64 [s1 + 0x288] = a2\n 61736: u64 [s1 + 0x280] = a3\n 61740: ra = 508, jump @0\n      : @821 [@dyn 254] (gas: 61)\n 61747: u8 [a0 + 31] = 0x60\n 61751: u8 [a0 + 30] = 0\n 61754: u8 [a0 + 29] = 0\n 61757: u8 [a0 + 28] = 0\n 61760: u8 [a0 + 27] = 0\n 61763: u8 [a0 + 26] = 0\n 61766: u8 [a0 + 25] = 0\n 61769: u8 [a0 + 24] = 0\n 61772: u8 [a0 + 23] = 0\n 61775: u8 [a0 + 22] = 0\n 61778: u8 [a0 + 21] = 0\n 61781: u8 [a0 + 20] = 0\n 61784: u8 [a0 + 19] = 0\n 61787: u8 [a0 + 18] = 0\n 61790: u8 [a0 + 17] = 0\n 61793: u8 [a0 + 16] = 0\n 61796: u8 [a0 + 15] = 0\n 61799: u8 [a0 + 14] = 0\n 61802: u8 [a0 + 13] = 0\n 61805: u8 [a0 + 12] = 0\n 61808: u8 [a0 + 11] = 0\n 61811: u8 [a0 + 10] = 0\n 61814: u8 [a0 + 9] = 0\n 61817: u8 [a0 + 8] = 0\n 61820: u8 [a0 + 7] = 0\n 61823: u8 [a0 + 6] = 0\n 61826: u8 [a0 + 5] = 0\n 61829: u8 [a0 + 4] = 0\n 61832: u8 [a0 + 3] = 0\n 61835: u8 [a0 + 2] = 0\n 61838: u8 [a0 + 1] = 0\n 61841: u8 [a0 + 0] = 0\n 61843: a1 = u64 [s1 + 0x298]\n 61847: a0 = a1 + 0x60\n 61850: a1 = a0 <u a1\n 61853: a3 = u64 [s1 + 0x290]\n 61857: a2 = a3 + a1\n 61860: a3 = a2 <u a3\n 61863: a3 = a1 if a1 == 0\n 61866: a1 = u64 [s1 + 0x288]\n 61870: a3 = a3 + a1\n 61873: a1 = a3 <u a1\n 61876: a4 = u64 [s1 + 0x280]\n 61880: a4 = a4 + a1\n 61883: a5 = s1 + 0x1218\n 61887: u64 [a5 + 0x6f0] = a2\n 61891: u64 [a5 + 0x6e8] = a0\n 61895: a0 = u64 [s1 + 0x178]\n 61899: u64 [a5 + 0x720] = a0\n 61903: a0 = u64 [s1 + 0x180]\n 61907: u64 [a5 + 0x718] = a0\n 61911: a0 = u64 [s1 + 0x188]\n 61915: u64 [a5 + 0x710] = a0\n 61919: a0 = u64 [s1 + 0x190]\n 61923: u64 [a5 + 0x708] = a0\n 61927: u64 [a5 + 0x6f8] = a3\n 61931: a0 = s1 + 0x1940\n 61935: a1 = s1 + 0x1920\n 61939: a2 = s1 + 0x1900\n 61943: u64 [a5 + 0x700] = a4\n 61947: ra = 510, jump @1086\n      : @822 [@dyn 255] (gas: 13)\n 61953: a0 = u64 [s1 + 0x280]\n 61957: a1 = u64 [s1 + 0x288]\n 61961: a1 = a1 | a0\n 61964: a0 = 0x100000000\n 61974: u64 [s1 + 0x228] = a0\n 61978: a0 = 0xffffffe0\n 61988: a2 = u64 [s1 + 0x298]\n 61992: a0 = a2 <u a0\n 61995: a2 = u64 [s1 + 0x290]\n 61999: a0 = 0 if a2 != 0\n 62001: u64 [s1 + 0x230] = a1\n 62005: a0 = 0 if a1 != 0\n 62007: jump @799 if a0 == 0\n      : @823 (gas: 13)\n 62011: a0 = s1 + 0x1218\n 62015: a1 = u64 [a0 + 0x740]\n 62019: u64 [s1 + 0x208] = a1\n 62023: a1 = u64 [a0 + 0x738]\n 62027: u64 [s1 + 0x210] = a1\n 62031: a1 = u64 [a0 + 0x730]\n 62035: u64 [s1 + 0x218] = a1\n 62039: a0 = u64 [a0 + 0x728]\n 62043: u64 [s1 + 0x220] = a0\n 62047: a0 = u64 [s1 + 0x238]\n 62051: i32 a0 = a0 + 0x20\n 62054: a1 = 0x20\n 62057: ra = 512, jump @0\n      : @824 [@dyn 256] (gas: 77)\n 62064: a1 = u64 [s1 + 0x260]\n 62068: a1 = reverse a1\n 62070: a2 = u64 [s1 + 0x268]\n 62074: a2 = reverse a2\n 62076: a3 = u64 [s1 + 0x270]\n 62080: a3 = reverse a3\n 62082: a4 = u64 [s1 + 0x278]\n 62086: a4 = reverse a4\n 62088: a5 = a4 >> 0x38\n 62091: u8 [a0 + 0x1f] = a5\n 62094: a5 = a4 >> 0x30\n 62097: u8 [a0 + 0x1e] = a5\n 62100: a5 = a4 >> 0x28\n 62103: u8 [a0 + 0x1d] = a5\n 62106: a5 = a4 >> 0x20\n 62109: u8 [a0 + 0x1c] = a5\n 62112: a5 = a4 >> 0x18\n 62115: u8 [a0 + 0x1b] = a5\n 62118: a5 = a4 >> 0x10\n 62121: u8 [a0 + 0x1a] = a5\n 62124: a5 = a4 >> 0x8\n 62127: u8 [a0 + 0x19] = a5\n 62130: u8 [a0 + 0x18] = a4\n 62133: u8 [a0 + 0x10] = a3\n 62136: a4 = a3 >> 0x38\n 62139: u8 [a0 + 0x17] = a4\n 62142: a4 = a3 >> 0x30\n 62145: u8 [a0 + 0x16] = a4\n 62148: a4 = a3 >> 0x28\n 62151: u8 [a0 + 0x15] = a4\n 62154: a4 = a3 >> 0x20\n 62157: u8 [a0 + 0x14] = a4\n 62160: a4 = a3 >> 0x18\n 62163: u8 [a0 + 0x13] = a4\n 62166: a4 = a3 >> 0x10\n 62169: u8 [a0 + 0x12] = a4\n 62172: a3 = a3 >> 0x8\n 62175: u8 [a0 + 0x11] = a3\n 62178: u8 [a0 + 0x8] = a2\n 62181: a3 = a2 >> 0x38\n 62184: u8 [a0 + 0xf] = a3\n 62187: a3 = a2 >> 0x30\n 62190: u8 [a0 + 0xe] = a3\n 62193: a3 = a2 >> 0x28\n 62196: u8 [a0 + 0xd] = a3\n 62199: a3 = a2 >> 0x20\n 62202: u8 [a0 + 0xc] = a3\n 62205: a3 = a2 >> 0x18\n 62208: u8 [a0 + 0xb] = a3\n 62211: a3 = a2 >> 0x10\n 62214: u8 [a0 + 0xa] = a3\n 62217: a2 = a2 >> 0x8\n 62220: u8 [a0 + 0x9] = a2\n 62223: u8 [a0] = a1\n 62225: a2 = a1 >> 0x38\n 62228: u8 [a0 + 0x7] = a2\n 62231: a2 = a1 >> 0x30\n 62234: u8 [a0 + 0x6] = a2\n 62237: a2 = a1 >> 0x28\n 62240: u8 [a0 + 0x5] = a2\n 62243: a2 = a1 >> 0x20\n 62246: u8 [a0 + 0x4] = a2\n 62249: a2 = a1 >> 0x18\n 62252: u8 [a0 + 0x3] = a2\n 62255: a2 = a1 >> 0x10\n 62258: u8 [a0 + 0x2] = a2\n 62261: a1 = a1 >> 0x8\n 62264: a2 = u64 [s1 + 0x228]\n 62268: a2 = a2 + 0xffffffffffffffc0\n 62271: a3 = u64 [s1 + 0x298]\n 62275: a2 = a3 <u a2\n 62278: a3 = u64 [s1 + 0x290]\n 62282: a2 = 0 if a3 != 0\n 62284: a3 = u64 [s1 + 0x230]\n 62288: a2 = 0 if a3 != 0\n 62290: u8 [a0 + 0x1] = a1\n 62293: jump @799 if a2 == 0\n      : @825 (gas: 34)\n 62297: a1 = u64 [s1 + 0x298]\n 62301: a2 = u64 [s1 + 0x220]\n 62305: t2 = a2 <u a1\n 62308: t0 = a2\n 62310: t1 = a1\n 62312: a3 = u64 [s1 + 0x290]\n 62316: a5 = u64 [s1 + 0x218]\n 62320: a1 = a5 ^ a3\n 62323: a2 = a5 <u a3\n 62326: ra = a5\n 62328: a5 = a3\n 62330: a2 = t2 if a1 == 0\n 62333: a3 = u64 [s1 + 0x288]\n 62337: a1 = u64 [s1 + 0x210]\n 62341: a4 = a1 - a3\n 62344: a0 = a4 - a2\n 62347: u64 [s1 + 0x278] = a0\n 62351: a0 = a4 <u a2\n 62354: a2 = a1 <u a3\n 62357: a3 = u64 [s1 + 0x280]\n 62361: a1 = u64 [s1 + 0x208]\n 62365: a3 = a1 - a3\n 62368: a3 = a3 - a2\n 62371: a3 = a3 - a0\n 62374: u64 [s1 + 0x270] = a3\n 62378: a1 = ra - a5\n 62381: a0 = a1 - t2\n 62384: u64 [s1 + 0x268] = a0\n 62388: a0 = t0 - t1\n 62391: u64 [s1 + 0x260] = a0\n 62395: a0 = u64 [s1 + 0x238]\n 62399: i32 a0 = a0 + 0x40\n 62402: a1 = 0x20\n 62405: ra = 514, jump @0\n      : @826 [@dyn 257] (gas: 100)\n 62412: a1 = u64 [s1 + 0x270]\n 62416: a1 = reverse a1\n 62418: a2 = u64 [s1 + 0x278]\n 62422: a2 = reverse a2\n 62424: a3 = u64 [s1 + 0x268]\n 62428: a3 = reverse a3\n 62430: a4 = u64 [s1 + 0x260]\n 62434: a4 = reverse a4\n 62436: u8 [a0 + 0x18] = a4\n 62439: a5 = a4 >> 0x38\n 62442: u8 [a0 + 0x1f] = a5\n 62445: a5 = a4 >> 0x30\n 62448: u8 [a0 + 0x1e] = a5\n 62451: a5 = a4 >> 0x28\n 62454: u8 [a0 + 0x1d] = a5\n 62457: a5 = a4 >> 0x20\n 62460: u8 [a0 + 0x1c] = a5\n 62463: a5 = a4 >> 0x18\n 62466: u8 [a0 + 0x1b] = a5\n 62469: a5 = a4 >> 0x10\n 62472: u8 [a0 + 0x1a] = a5\n 62475: a4 = a4 >> 0x8\n 62478: u8 [a0 + 0x19] = a4\n 62481: u8 [a0 + 0x10] = a3\n 62484: a4 = a3 >> 0x38\n 62487: u8 [a0 + 0x17] = a4\n 62490: a4 = a3 >> 0x30\n 62493: u8 [a0 + 0x16] = a4\n 62496: a4 = a3 >> 0x28\n 62499: u8 [a0 + 0x15] = a4\n 62502: a4 = a3 >> 0x20\n 62505: u8 [a0 + 0x14] = a4\n 62508: a4 = a3 >> 0x18\n 62511: u8 [a0 + 0x13] = a4\n 62514: a4 = a3 >> 0x10\n 62517: u8 [a0 + 0x12] = a4\n 62520: a3 = a3 >> 0x8\n 62523: u8 [a0 + 0x11] = a3\n 62526: u8 [a0 + 0x8] = a2\n 62529: a3 = a2 >> 0x38\n 62532: u8 [a0 + 0xf] = a3\n 62535: a3 = a2 >> 0x30\n 62538: u8 [a0 + 0xe] = a3\n 62541: a3 = a2 >> 0x28\n 62544: u8 [a0 + 0xd] = a3\n 62547: a3 = a2 >> 0x20\n 62550: u8 [a0 + 0xc] = a3\n 62553: a3 = a2 >> 0x18\n 62556: u8 [a0 + 0xb] = a3\n 62559: a3 = a2 >> 0x10\n 62562: u8 [a0 + 0xa] = a3\n 62565: a2 = a2 >> 0x8\n 62568: u8 [a0 + 0x9] = a2\n 62571: u8 [a0] = a1\n 62573: a2 = a1 >> 0x38\n 62576: u8 [a0 + 0x7] = a2\n 62579: a2 = a1 >> 0x30\n 62582: u8 [a0 + 0x6] = a2\n 62585: a2 = a1 >> 0x28\n 62588: u8 [a0 + 0x5] = a2\n 62591: a2 = a1 >> 0x20\n 62594: u8 [a0 + 0x4] = a2\n 62597: a2 = a1 >> 0x18\n 62600: u8 [a0 + 0x3] = a2\n 62603: a2 = a1 >> 0x10\n 62606: u8 [a0 + 0x2] = a2\n 62609: a1 = a1 >> 0x8\n 62612: u8 [a0 + 0x1] = a1\n 62615: a0 = s1 + 0x2000\n 62619: i32 a0 = a0 + 0x3a0\n 62623: ecalli 7 // 'caller'\n 62625: a0 = s1 + 0x2218\n 62629: a1 = u32 [a0 + 0x198]\n 62633: u64 [s1 + 0x270] = a1\n 62637: a1 = u64 [a0 + 0x190]\n 62641: u64 [s1 + 0x268] = a1\n 62645: a0 = u64 [a0 + 0x188]\n 62649: u64 [s1 + 0x278] = a0\n 62653: a1 = s1 + 0x1218\n 62657: a0 = u64 [s1 + 0x208]\n 62661: u64 [a1 + 0x6a0] = a0\n 62665: a0 = u64 [s1 + 0x210]\n 62669: u64 [a1 + 0x698] = a0\n 62673: a0 = u64 [s1 + 0x218]\n 62677: u64 [a1 + 0x690] = a0\n 62681: a0 = u64 [s1 + 0x220]\n 62685: u64 [a1 + 0x688] = a0\n 62689: a0 = u64 [s1 + 0x240]\n 62693: u64 [a1 + 0x6c0] = a0\n 62697: a0 = u64 [s1 + 0x248]\n 62701: u64 [a1 + 0x6b8] = a0\n 62705: a0 = u64 [s1 + 0x250]\n 62709: u64 [a1 + 0x6b0] = a0\n 62713: a4 = a1\n 62715: a0 = s1 + 0x18e0\n 62719: a1 = s1 + 0x18c0\n 62723: a2 = s1 + 0x18a0\n 62727: a3 = u64 [s1 + 0x258]\n 62731: u64 [a4 + 0x6a8] = a3\n 62735: ra = 516, jump @1086\n      : @827 [@dyn 258] (gas: 32)\n 62741: a1 = s1 + 0x1218\n 62745: a0 = u64 [a1 + 0x6d0]\n 62749: t0 = u64 [a1 + 0x6e0]\n 62753: t1 = u64 [a1 + 0x6c8]\n 62757: a3 = u64 [a1 + 0x6d8]\n 62761: a1 = u64 [s1 + 0x290]\n 62765: a4 = a0 ^ a1\n 62768: a5 = a0 <u a1\n 62771: ra = a1\n 62773: t2 = u64 [s1 + 0x298]\n 62777: a1 = t1 <u t2\n 62780: a5 = a1 if a4 == 0\n 62783: a2 = u64 [s1 + 0x288]\n 62787: a4 = a3 - a2\n 62790: a3 = a3 <u a2\n 62793: a2 = u64 [s1 + 0x280]\n 62797: a2 = t0 - a2\n 62800: a2 = a2 - a3\n 62803: a3 = a4 <u a5\n 62806: a2 = a2 - a3\n 62809: a4 = a4 - a5\n 62812: a0 = a0 - ra\n 62815: a0 = a0 - a1\n 62818: a1 = t1 - t2\n 62821: a0 = a0 | a2\n 62824: a2 = a1 | a4\n 62827: a2 = a2 | a0\n 62830: a0 = a0 | a4\n 62833: a2 = a2 >> 0x20\n 62836: a0 = a0 << 0x20\n 62839: a0 = a0 | a2\n 62842: jump @829 if a0 == 0\n      : @828 (gas: 1)\n 62845: jump @799\n      : @829 (gas: 73)\n 62848: a0 = u64 [s1 + 0x268]\n 62852: a2 = reverse a0\n 62854: a0 = a2 << 0x20\n 62857: a3 = u64 [s1 + 0x270]\n 62861: a3 = reverse a3\n 62863: a3 = a3 >> 0x20\n 62866: t0 = a3 | a0\n 62869: a0 = u64 [s1 + 0x278]\n 62873: a3 = reverse a0\n 62875: a4 = a3 << 0x20\n 62878: a2 = a2 >> 0x20\n 62881: a2 = a2 | a4\n 62884: a3 = a3 >> 0x20\n 62887: a4 = u64 [0x20000]\n 62892: t1 = s1 + 0x1218\n 62896: a0 = u64 [s1 + 0x198]\n 62900: u64 [t1 + 0x628] = a0\n 62904: a0 = u64 [s1 + 0x1a0]\n 62908: u64 [t1 + 0x630] = a0\n 62912: u64 [t1 + 0x680] = a4\n 62916: a4 = u64 [0x20008]\n 62921: a5 = u64 [0x20010]\n 62926: a0 = u64 [0x20018]\n 62931: u64 [t1 + 0x678] = a4\n 62935: u64 [t1 + 1632] = 0\n 62939: u64 [t1 + 0x670] = a5\n 62943: u64 [t1 + 0x668] = a0\n 62947: a0 = u64 [s1 + 0x1a8]\n 62951: u64 [t1 + 0x638] = a0\n 62955: u64 [t1 + 0x658] = a3\n 62959: a0 = u64 [s1 + 0x1b0]\n 62963: u64 [t1 + 0x640] = a0\n 62967: u64 [t1 + 0x650] = a2\n 62971: a2 = s1 + 0x1880\n 62975: a3 = s1 + 0x1860\n 62979: a4 = s1 + 0x1840\n 62983: u64 [t1 + 0x648] = t0\n 62987: a0 = u64 [s1 + 0x238]\n 62991: ra = 0x206\n 62995: sp = sp + 0xffffffffffffff20\n 62999: u64 [sp + 0xd8] = ra\n 63003: u64 [sp + 0xd0] = s0\n 63007: u64 [sp + 0xc8] = s1\n 63011: s0 = sp + 0xe0\n 63015: sp = sp & 0xffffffffffffffe0\n 63018: a5 = u64 [a4]\n 63020: u64 [sp + 0x40] = a5\n 63023: a5 = u64 [a4 + 0x8]\n 63026: u64 [sp + 0x48] = a5\n 63029: a5 = u64 [a4 + 0x10]\n 63032: u64 [sp + 0x50] = a5\n 63035: a4 = u64 [a4 + 0x18]\n 63038: u64 [sp + 0x58] = a4\n 63041: a4 = u64 [a3]\n 63043: u64 [sp + 0x18] = a4\n 63046: a4 = u64 [a3 + 0x8]\n 63049: u64 [sp + 0x20] = a4\n 63052: a4 = u64 [a3 + 0x10]\n 63055: u64 [sp + 0x28] = a4\n 63058: a3 = u64 [a3 + 0x18]\n 63061: u64 [sp + 0x30] = a3\n 63064: s1 = u64 [a2]\n 63066: a3 = u64 [a2 + 0x8]\n 63069: u64 [sp] = a3\n 63071: a3 = u64 [a2 + 0x10]\n 63074: u64 [sp + 0x8] = a3\n 63077: a2 = u64 [a2 + 0x18]\n 63080: u64 [sp + 0x10] = a2\n 63083: i32 a0 = a0 + 0\n 63085: i32 a1 = a1 + 0\n 63087: u64 [sp + 0x38] = a1\n 63090: ra = 0x6\n 63093: jump @0\n      : @830 [@dyn 259] (gas: 1)\n 63097: jump @459\n      : @831 (gas: 124)\n 63100: u64 [s1 + 584] = 0\n 63104: u64 [s1 + 632] = 0\n 63108: u64 [s1 + 576] = 0\n 63112: t1 = u64 [s1 + 0x218]\n 63116: t0 = t1 + 0x20\n 63119: a0 = t0 <u t1\n 63122: ra = u64 [s1 + 0x220]\n 63126: a2 = ra + a0\n 63129: a1 = a2 <u ra\n 63132: a1 = a0 if a0 == 0\n 63135: a0 = u64 [s1 + 0x228]\n 63139: a1 = a1 + a0\n 63142: a0 = a1 <u a0\n 63145: t2 = u64 [s1 + 0x230]\n 63149: t2 = t2 + a0\n 63152: a4 = a1 >u 0\n 63154: a5 = t2 >u 0\n 63156: a5 = a4 if t2 == 0\n 63159: a4 = 0x100000000\n 63169: a3 = t0\n 63171: a0 = maxu(t0, a4)\n 63174: t0 = a4 if a5 == 0\n 63177: a3 = a4 if a2 == 0\n 63180: a0 = a3 if a2 != 0\n 63183: a3 = a1 | t2\n 63186: a0 = t0 if a3 != 0\n 63189: a4 = a2\n 63191: a4 = 0 if a5 == 0\n 63193: a4 = a2 if a3 == 0\n 63196: a2 = ra ^ 0xffffffffffffffff\n 63199: a4 = a4 + a2\n 63202: a3 = t1 ^ 0xffffffffffffffff\n 63205: a0 = a0 + a3\n 63208: a5 = a0 <u a3\n 63211: a3 = a4 + a5\n 63214: a4 = a3 ^ a2\n 63217: a2 = a3 <u a2\n 63220: a2 = a5 if a4 == 0\n 63223: a5 = a1\n 63225: a5 = 0 if t2 == 0\n 63227: a5 = a1 if t2 == 0\n 63230: a1 = u64 [s1 + 0x228]\n 63234: a1 = a1 ^ 0xffffffffffffffff\n 63237: u64 [s1 + 0x208] = a1\n 63241: a5 = a5 + a1\n 63244: t1 = a5 + a2\n 63247: a1 = t1 << 0x3b\n 63250: a2 = a3 >> 0x5\n 63253: a1 = a1 | a2\n 63256: a3 = a3 << 0x3b\n 63259: a0 = a0 >> 0x5\n 63262: a4 = a0 | a3\n 63265: u64 [s1 + 0x210] = a4\n 63269: a2 = u64 [s1 + 0x170]\n 63273: a0 = a2 <u 0x1\n 63276: a3 = -a0\n 63278: ra = a0 << 0x3b\n 63281: a0 = a2 + 0xffffffffffffffff\n 63284: a0 = a0 >> 0x5\n 63287: a2 = a0 - ra\n 63290: u64 [s1 + 0x238] = a2\n 63294: a0 = a1 ^ a3\n 63297: t0 = a1 <u a3\n 63300: u64 [s1 + 0x1f8] = a3\n 63304: a2 = a4 <u a2\n 63307: a2 = t0 if a0 != 0\n 63310: u64 [s1 + 0x200] = a2\n 63314: a0 = u64 [s1 + 0x230]\n 63318: a4 = a0 ^ 0xffffffffffffffff\n 63321: t2 = t2 + a4\n 63324: a0 = u64 [s1 + 0x208]\n 63328: a4 = a5 <u a0\n 63331: a4 = a4 + t2\n 63334: a5 = t1 <u a5\n 63337: a5 = a5 + a4\n 63340: t0 = t1 >> 0x5\n 63343: a4 = a5 << 0x3b\n 63346: a4 = t0 | a4\n 63349: a5 = a5 >> 0x5\n 63352: t0 = a3 >> 0x5\n 63355: t1 = t0 - ra\n 63358: t2 = a4 <u t1\n 63361: ra = a5 ^ t0\n 63364: a0 = a5 <u t0\n 63367: a0 = t2 if ra == 0\n 63370: a2 = a4 ^ t1\n 63373: a2 = a2 | ra\n 63376: a3 = u64 [s1 + 0x200]\n 63380: a0 = a3 if a2 == 0\n 63383: a2 = u64 [s1 + 0x210]\n 63387: a3 = u64 [s1 + 0x238]\n 63391: a2 = a3 if a0 == 0\n 63394: a3 = u64 [s1 + 0x1f8]\n 63398: a1 = a3 if a0 == 0\n 63401: a5 = t0 if a0 == 0\n 63404: a4 = t1 if a0 == 0\n 63407: t0 = u64 [s1 + 0x240]\n 63411: a0 = a4 >> 0x3b\n 63414: a5 = a5 << 0x5\n 63417: t1 = a5 | a0\n 63420: a5 = u64 [s1 + 0x278]\n 63424: a0 = a1 >> 0x3b\n 63427: a4 = a4 << 0x5\n 63430: t2 = a4 | a0\n 63433: a4 = u64 [s1 + 0x248]\n 63437: a3 = a2 >> 0x3b\n 63440: a1 = a1 << 0x5\n 63443: a1 = a1 | a3\n 63446: a3 = a2 << 0x5\n 63449: a0 = a3 + 0x40\n 63452: u64 [s1 + 0x210] = a0\n 63456: a3 = a0 <u a3\n 63459: a0 = a1 + a3\n 63462: u64 [s1 + 0x208] = a0\n 63466: a1 = a0 <u a1\n 63469: a1 = a3 if a3 == 0\n 63472: a1 = a1 + t2\n 63475: u64 [s1 + 0x200] = a1\n 63479: a1 = a1 <u t2\n 63482: a1 = a1 + t1\n 63485: u64 [s1 + 0x1f8] = a1\n 63489: a3 = 0x20\n 63492: a0 = u64 [s1 + 0x280]\n 63496: fallthrough\n      : @832 (gas: 31)\n 63497: u64 [s1 + 0x240] = t0\n 63501: u64 [s1 + 0x280] = a0\n 63505: a0 = u64 [s1 + 0x218]\n 63509: a0 = a0 + a3\n 63512: u64 [s1 + 0x238] = a3\n 63516: a1 = a0 <u a3\n 63519: a2 = u64 [s1 + 0x220]\n 63523: a2 = a2 + a4\n 63526: a2 = a2 + a1\n 63529: a3 = a2 ^ a4\n 63532: u64 [s1 + 0x248] = a4\n 63536: a4 = a2 <u a4\n 63539: a4 = a1 if a3 == 0\n 63542: a1 = u64 [s1 + 0x228]\n 63546: a1 = a1 + a5\n 63549: u64 [s1 + 0x278] = a5\n 63553: a3 = a1 <u a5\n 63556: a5 = u64 [s1 + 0x230]\n 63560: a5 = a5 + t0\n 63563: a3 = a3 + a5\n 63566: a4 = a4 + a1\n 63569: a1 = a4 <u a1\n 63572: a1 = a1 + a3\n 63575: a1 = a1 | a2\n 63578: a2 = a0 | a4\n 63581: a2 = a2 | a1\n 63584: a1 = a1 | a4\n 63587: a2 = a2 >> 0x20\n 63590: a1 = a1 << 0x20\n 63593: a1 = a1 | a2\n 63596: jump @834 if a1 == 0\n      : @833 (gas: 1)\n 63599: jump @799\n      : @834 (gas: 3)\n 63602: i32 a0 = a0 + 0\n 63604: a1 = 0x20\n 63607: ra = 520, jump @0\n      : @835 [@dyn 260] (gas: 114)\n 63614: a1 = u8 [a0 + 0x1]\n 63617: a2 = u8 [a0]\n 63619: a3 = u8 [a0 + 0x2]\n 63622: a4 = u8 [a0 + 0x3]\n 63625: a1 = a1 << 0x8\n 63628: a1 = a1 | a2\n 63631: a3 = a3 << 0x10\n 63634: a4 = a4 << 0x18\n 63637: a3 = a3 | a4\n 63640: a1 = a1 | a3\n 63643: a2 = u8 [a0 + 0x5]\n 63646: a3 = u8 [a0 + 0x4]\n 63649: a4 = u8 [a0 + 0x6]\n 63652: a5 = u8 [a0 + 0x7]\n 63655: a2 = a2 << 0x8\n 63658: a2 = a2 | a3\n 63661: a4 = a4 << 0x10\n 63664: a5 = a5 << 0x18\n 63667: a4 = a4 | a5\n 63670: a2 = a2 | a4\n 63673: a2 = a2 << 0x20\n 63676: t0 = a2 | a1\n 63679: a2 = u8 [a0 + 0x9]\n 63682: a3 = u8 [a0 + 0x8]\n 63685: a4 = u8 [a0 + 0xa]\n 63688: a5 = u8 [a0 + 0xb]\n 63691: a2 = a2 << 0x8\n 63694: a2 = a2 | a3\n 63697: a4 = a4 << 0x10\n 63700: a5 = a5 << 0x18\n 63703: a4 = a4 | a5\n 63706: a2 = a2 | a4\n 63709: a3 = u8 [a0 + 0xd]\n 63712: a4 = u8 [a0 + 0xc]\n 63715: a5 = u8 [a0 + 0xe]\n 63718: a1 = u8 [a0 + 0xf]\n 63721: a3 = a3 << 0x8\n 63724: a3 = a3 | a4\n 63727: a5 = a5 << 0x10\n 63730: a1 = a1 << 0x18\n 63733: a1 = a1 | a5\n 63736: a1 = a1 | a3\n 63739: a1 = a1 << 0x20\n 63742: t1 = a1 | a2\n 63745: a1 = u8 [a0 + 0x11]\n 63748: a3 = u8 [a0 + 0x10]\n 63751: a4 = u8 [a0 + 0x12]\n 63754: a5 = u8 [a0 + 0x13]\n 63757: a1 = a1 << 0x8\n 63760: a1 = a1 | a3\n 63763: a4 = a4 << 0x10\n 63766: a5 = a5 << 0x18\n 63769: a4 = a4 | a5\n 63772: a1 = a1 | a4\n 63775: a3 = u8 [a0 + 0x15]\n 63778: a4 = u8 [a0 + 0x14]\n 63781: a5 = u8 [a0 + 0x16]\n 63784: a2 = u8 [a0 + 0x17]\n 63787: a3 = a3 << 0x8\n 63790: a3 = a3 | a4\n 63793: a5 = a5 << 0x10\n 63796: a2 = a2 << 0x18\n 63799: a2 = a2 | a5\n 63802: a2 = a2 | a3\n 63805: a2 = a2 << 0x20\n 63808: a3 = a2 | a1\n 63811: a1 = u8 [a0 + 0x19]\n 63814: a2 = u8 [a0 + 0x18]\n 63817: a4 = u8 [a0 + 0x1a]\n 63820: a5 = u8 [a0 + 0x1b]\n 63823: a1 = a1 << 0x8\n 63826: a1 = a1 | a2\n 63829: a4 = a4 << 0x10\n 63832: a5 = a5 << 0x18\n 63835: a4 = a4 | a5\n 63838: a1 = a1 | a4\n 63841: a2 = u8 [a0 + 0x1d]\n 63844: a4 = u8 [a0 + 0x1c]\n 63847: a5 = u8 [a0 + 0x1e]\n 63850: a0 = u8 [a0 + 0x1f]\n 63853: a2 = a2 << 0x8\n 63856: a2 = a2 | a4\n 63859: a5 = a5 << 0x10\n 63862: a0 = a0 << 0x18\n 63865: a0 = a0 | a5\n 63868: a0 = a0 | a2\n 63871: a0 = a0 << 0x20\n 63874: a0 = a0 | a1\n 63877: a1 = reverse t0\n 63879: a2 = s1 + 0x2218\n 63883: u64 [a2 + 0x220] = a1\n 63887: a1 = reverse t1\n 63889: u64 [a2 + 0x218] = a1\n 63893: a1 = reverse a3\n 63895: u64 [a2 + 0x210] = a1\n 63899: a0 = reverse a0\n 63901: u64 [a2 + 0x208] = a0\n 63905: a0 = u64 [s1 + 0x288]\n 63909: u64 [a2 + 0x200] = a0\n 63913: a0 = u64 [s1 + 0x280]\n 63917: u64 [a2 + 0x1f8] = a0\n 63921: a0 = u64 [s1 + 0x290]\n 63925: u64 [a2 + 0x1f0] = a0\n 63929: a0 = u64 [s1 + 0x298]\n 63933: u64 [a2 + 0x1e8] = a0\n 63937: a0 = s1 + 0x2000\n 63941: i32 a1 = a0 + 0x400\n 63945: a0 = s1 + 0x2000\n 63949: i32 a3 = a0 + 0x420\n 63953: a2 = 0xffffffffffffffff\n 63956: a4 = 0x20\n 63959: a0 = 0\n 63961: ecalli 17 // 'set_storage'\n 63963: fallthrough\n      : @836 (gas: 46)\n 63964: a2 = u64 [s1 + 0x298]\n 63968: a2 = a2 + 0x1\n 63971: a0 = a2 <u 0x1\n 63974: a1 = u64 [s1 + 0x290]\n 63978: a1 = a1 + a0\n 63981: u64 [s1 + 0x298] = a2\n 63985: u64 [s1 + 0x290] = a1\n 63989: a0 = a2 | a1\n 63992: a0 = a0 <u 0x1\n 63995: a1 = u64 [s1 + 0x280]\n 63999: a2 = a1 + a0\n 64002: t0 = a2 <u a1\n 64005: a0 = u64 [s1 + 0x238]\n 64009: t1 = a0 + 0x20\n 64012: a0 = t1 <u a0\n 64015: a3 = u64 [s1 + 0x248]\n 64019: ra = a3 + a0\n 64022: a3 = ra <u a3\n 64025: a3 = a0 if a0 == 0\n 64028: a4 = u64 [s1 + 0x278]\n 64032: t2 = a4 + a3\n 64035: a3 = t2 <u a4\n 64038: a1 = u64 [s1 + 0x240]\n 64042: a1 = a1 + a3\n 64045: a3 = u64 [s1 + 0x200]\n 64049: a3 = t2 ^ a3\n 64052: a4 = u64 [s1 + 0x210]\n 64056: a4 = t1 ^ a4\n 64059: a3 = a3 | a4\n 64062: a4 = u64 [s1 + 0x1f8]\n 64066: a4 = a4 ^ a1\n 64069: a5 = u64 [s1 + 0x208]\n 64073: a5 = ra ^ a5\n 64076: a4 = a4 | a5\n 64079: a3 = a3 | a4\n 64082: u64 [s1 + 0x280] = a3\n 64086: a0 = u64 [s1 + 0x288]\n 64090: a0 = a0 + t0\n 64093: u64 [s1 + 0x288] = a0\n 64097: a3 = t1\n 64099: a4 = ra\n 64101: a5 = t2\n 64103: a0 = a2\n 64105: t0 = a1\n 64107: a1 = u64 [s1 + 0x280]\n 64111: jump @832 if a1 != 0\n      : @837 (gas: 11)\n 64115: u64 [s1 + 0x280] = a2\n 64119: a2 = u64 [s1 + 0x1a8]\n 64123: a3 = u64 [s1 + 0x170]\n 64127: a2 = a2 ^ a3\n 64130: a3 = u64 [s1 + 0x1a0]\n 64134: a2 = a2 | a3\n 64137: a3 = u64 [s1 + 0x198]\n 64141: a4 = u64 [s1 + 0x190]\n 64145: a3 = a3 | a4\n 64148: a2 = a2 | a3\n 64151: jump @842 if a2 == 0\n      : @838 (gas: 26)\n 64155: a2 = u64 [s1 + 0x218]\n 64159: a2 = a2 + t1\n 64162: a3 = a2 <u t1\n 64165: a4 = u64 [s1 + 0x220]\n 64169: a4 = a4 + ra\n 64172: a4 = a4 + a3\n 64175: a5 = a4 ^ ra\n 64178: a1 = a4 <u ra\n 64181: a1 = a3 if a5 == 0\n 64184: a3 = u64 [s1 + 0x228]\n 64188: a3 = a3 + t2\n 64191: a1 = a1 + a3\n 64194: a5 = a1 <u a3\n 64197: a0 = a3 <u t2\n 64200: a3 = u64 [s1 + 0x230]\n 64204: a3 = a3 + t0\n 64207: a0 = a0 + a3\n 64210: a0 = a0 + a5\n 64213: a3 = a2 | a1\n 64216: a0 = a0 | a4\n 64219: a3 = a3 | a0\n 64222: a3 = a3 >> 0x20\n 64225: a0 = a0 | a1\n 64228: a0 = a0 << 0x20\n 64231: a0 = a0 | a3\n 64234: jump @840 if a0 == 0\n      : @839 (gas: 1)\n 64237: jump @799\n      : @840 (gas: 3)\n 64240: i32 a0 = a2 + 0\n 64242: a1 = 0x20\n 64245: ra = 522, jump @0\n      : @841 [@dyn 261] (gas: 284)\n 64252: a1 = u8 [a0 + 0x19]\n 64255: a2 = u8 [a0 + 0x18]\n 64258: a3 = u8 [a0 + 0x1a]\n 64261: a4 = u8 [a0 + 0x1b]\n 64264: a1 = a1 << 0x8\n 64267: a1 = a1 | a2\n 64270: a3 = a3 << 0x10\n 64273: a4 = a4 << 0x18\n 64276: a3 = a3 | a4\n 64279: a1 = a1 | a3\n 64282: a2 = u8 [a0 + 0x1d]\n 64285: a3 = u8 [a0 + 0x1c]\n 64288: a4 = u8 [a0 + 0x1e]\n 64291: a5 = u8 [a0 + 0x1f]\n 64294: a2 = a2 << 0x8\n 64297: a2 = a2 | a3\n 64300: a4 = a4 << 0x10\n 64303: a5 = a5 << 0x18\n 64306: a4 = a4 | a5\n 64309: a2 = a2 | a4\n 64312: a2 = a2 << 0x20\n 64315: a1 = a1 | a2\n 64318: u64 [s1 + 0x278] = a1\n 64322: a1 = u8 [a0 + 0x11]\n 64325: a2 = u8 [a0 + 0x10]\n 64328: a3 = u8 [a0 + 0x12]\n 64331: a4 = u8 [a0 + 0x13]\n 64334: a1 = a1 << 0x8\n 64337: a1 = a1 | a2\n 64340: a3 = a3 << 0x10\n 64343: a4 = a4 << 0x18\n 64346: a3 = a3 | a4\n 64349: a1 = a1 | a3\n 64352: a2 = u8 [a0 + 0x15]\n 64355: a3 = u8 [a0 + 0x14]\n 64358: a4 = u8 [a0 + 0x16]\n 64361: a5 = u8 [a0 + 0x17]\n 64364: a2 = a2 << 0x8\n 64367: a2 = a2 | a3\n 64370: a4 = a4 << 0x10\n 64373: a5 = a5 << 0x18\n 64376: a4 = a4 | a5\n 64379: a2 = a2 | a4\n 64382: a2 = a2 << 0x20\n 64385: a1 = a1 | a2\n 64388: u64 [s1 + 0x248] = a1\n 64392: a1 = u8 [a0 + 0x9]\n 64395: a2 = u8 [a0 + 0x8]\n 64398: a3 = u8 [a0 + 0xa]\n 64401: a4 = u8 [a0 + 0xb]\n 64404: a1 = a1 << 0x8\n 64407: a1 = a1 | a2\n 64410: a3 = a3 << 0x10\n 64413: a4 = a4 << 0x18\n 64416: a3 = a3 | a4\n 64419: a1 = a1 | a3\n 64422: a2 = u8 [a0 + 0xd]\n 64425: a3 = u8 [a0 + 0xc]\n 64428: a4 = u8 [a0 + 0xe]\n 64431: a5 = u8 [a0 + 0xf]\n 64434: a2 = a2 << 0x8\n 64437: a2 = a2 | a3\n 64440: a4 = a4 << 0x10\n 64443: a5 = a5 << 0x18\n 64446: a4 = a4 | a5\n 64449: a2 = a2 | a4\n 64452: a2 = a2 << 0x20\n 64455: t2 = a2 | a1\n 64458: a1 = u8 [a0 + 0x1]\n 64461: a2 = u8 [a0]\n 64463: a4 = u8 [a0 + 0x2]\n 64466: a5 = u8 [a0 + 0x3]\n 64469: a1 = a1 << 0x8\n 64472: a1 = a1 | a2\n 64475: a4 = a4 << 0x10\n 64478: a5 = a5 << 0x18\n 64481: a4 = a4 | a5\n 64484: a1 = a1 | a4\n 64487: a2 = u8 [a0 + 0x5]\n 64490: a4 = u8 [a0 + 0x4]\n 64493: a5 = u8 [a0 + 0x6]\n 64496: a0 = u8 [a0 + 0x7]\n 64499: a2 = a2 << 0x8\n 64502: a2 = a2 | a4\n 64505: a5 = a5 << 0x10\n 64508: a0 = a0 << 0x18\n 64511: a0 = a0 | a5\n 64514: a0 = a0 | a2\n 64517: a0 = a0 << 0x20\n 64520: ra = a0 | a1\n 64523: a0 = s1 + 0x7ff\n 64527: a0 = a0 + 0x219\n 64531: u8 [a0 + 423] = 0\n 64535: u8 [a0 + 422] = 0\n 64539: u8 [a0 + 421] = 0\n 64543: u8 [a0 + 420] = 0\n 64547: u8 [a0 + 419] = 0\n 64551: u8 [a0 + 418] = 0\n 64555: u8 [a0 + 417] = 0\n 64559: u8 [a0 + 416] = 0\n 64563: u8 [a0 + 415] = 0\n 64567: u8 [a0 + 414] = 0\n 64571: u8 [a0 + 413] = 0\n 64575: u8 [a0 + 412] = 0\n 64579: u8 [a0 + 411] = 0\n 64583: u8 [a0 + 410] = 0\n 64587: u8 [a0 + 409] = 0\n 64591: u8 [a0 + 408] = 0\n 64595: u8 [a0 + 407] = 0\n 64599: u8 [a0 + 406] = 0\n 64603: u8 [a0 + 405] = 0\n 64607: u8 [a0 + 404] = 0\n 64611: u8 [a0 + 403] = 0\n 64615: u8 [a0 + 402] = 0\n 64619: u8 [a0 + 401] = 0\n 64623: u8 [a0 + 400] = 0\n 64627: u8 [a0 + 399] = 0\n 64631: u8 [a0 + 398] = 0\n 64635: u8 [a0 + 397] = 0\n 64639: u8 [a0 + 396] = 0\n 64643: u8 [a0 + 395] = 0\n 64647: u8 [a0 + 394] = 0\n 64651: u8 [a0 + 393] = 0\n 64655: u8 [a0 + 392] = 0\n 64659: u8 [a0 + 391] = 0xff\n 64665: u8 [a0 + 390] = 0xff\n 64671: u8 [a0 + 389] = 0xff\n 64677: u8 [a0 + 387] = 0xff\n 64683: u8 [a0 + 384] = 0xffffffffffffffff\n 64688: u8 [a0 + 383] = 0xff\n 64694: u8 [a0 + 382] = 0xff\n 64700: u8 [a0 + 381] = 0xff\n 64706: u8 [a0 + 379] = 0xff\n 64712: u8 [a0 + 376] = 0xffffffffffffffff\n 64717: u8 [a0 + 375] = 0xff\n 64723: u8 [a0 + 374] = 0xff\n 64729: u8 [a0 + 373] = 0xff\n 64735: u8 [a0 + 371] = 0xff\n 64741: u8 [a0 + 368] = 0xffffffffffffffff\n 64746: u8 [a0 + 367] = 0xff\n 64752: u8 [a0 + 366] = 0xff\n 64758: u8 [a0 + 365] = 0xff\n 64764: u8 [a0 + 363] = 0xff\n 64770: u8 [a0 + 360] = 0xffffffffffffffff\n 64775: a2 = 0xffffffff\n 64785: u8 [a0 + 0x184] = a2\n 64789: u8 [a0 + 0x17c] = a2\n 64793: u8 [a0 + 0x174] = a2\n 64797: u8 [a0 + 0x16c] = a2\n 64801: a2 = 0xffffffffffff\n 64811: u8 [a0 + 0x182] = a2\n 64815: a1 = 0xffffffffffffff\n 64825: u8 [a0 + 0x181] = a1\n 64829: u8 [a0 + 0x17a] = a2\n 64833: u8 [a0 + 0x179] = a1\n 64837: u8 [a0 + 0x172] = a2\n 64841: u8 [a0 + 0x171] = a1\n 64845: u8 [a0 + 0x16a] = a2\n 64849: u8 [a0 + 0x169] = a1\n 64853: a4 = u64 [s1 + 0x1a8]\n 64857: a4 = a4 & 0x1f\n 64860: a1 = s1 + 0x7ff\n 64864: a1 = a1 + 0x381\n 64868: a4 = a4 + a1\n 64871: a1 = u8 [a4 + 0x19]\n 64874: a2 = u8 [a4 + 0x18]\n 64877: a5 = u8 [a4 + 0x1a]\n 64880: a3 = u8 [a4 + 0x1b]\n 64883: a1 = a1 << 0x8\n 64886: a1 = a1 | a2\n 64889: a5 = a5 << 0x10\n 64892: a3 = a3 << 0x18\n 64895: a3 = a3 | a5\n 64898: a1 = a1 | a3\n 64901: a2 = u8 [a4 + 0x1d]\n 64904: a3 = u8 [a4 + 0x1c]\n 64907: a5 = u8 [a4 + 0x1e]\n 64910: a0 = u8 [a4 + 0x1f]\n 64913: a2 = a2 << 0x8\n 64916: a2 = a2 | a3\n 64919: a5 = a5 << 0x10\n 64922: a0 = a0 << 0x18\n 64925: a0 = a0 | a5\n 64928: a0 = a0 | a2\n 64931: a0 = a0 << 0x20\n 64934: t1 = a0 | a1\n 64937: a0 = u8 [a4 + 0x11]\n 64940: a1 = u8 [a4 + 0x10]\n 64943: a2 = u8 [a4 + 0x12]\n 64946: a3 = u8 [a4 + 0x13]\n 64949: a0 = a0 << 0x8\n 64952: a0 = a0 | a1\n 64955: a2 = a2 << 0x10\n 64958: a3 = a3 << 0x18\n 64961: a2 = a2 | a3\n 64964: a5 = a2 | a0\n 64967: a1 = u8 [a4 + 0x15]\n 64970: a2 = u8 [a4 + 0x14]\n 64973: a3 = u8 [a4 + 0x16]\n 64976: a0 = u8 [a4 + 0x17]\n 64979: a1 = a1 << 0x8\n 64982: a1 = a1 | a2\n 64985: a3 = a3 << 0x10\n 64988: a0 = a0 << 0x18\n 64991: a0 = a0 | a3\n 64994: a0 = a0 | a1\n 64997: a0 = a0 << 0x20\n 65000: t0 = a0 | a5\n 65003: a0 = u8 [a4 + 0x9]\n 65006: a2 = u8 [a4 + 0x8]\n 65009: a3 = u8 [a4 + 0xa]\n 65012: a5 = u8 [a4 + 0xb]\n 65015: a0 = a0 << 0x8\n 65018: a0 = a0 | a2\n 65021: a3 = a3 << 0x10\n 65024: a5 = a5 << 0x18\n 65027: a3 = a3 | a5\n 65030: a1 = a3 | a0\n 65033: a2 = u8 [a4 + 0xd]\n 65036: a3 = u8 [a4 + 0xc]\n 65039: a5 = u8 [a4 + 0xe]\n 65042: a0 = u8 [a4 + 0xf]\n 65045: a2 = a2 << 0x8\n 65048: a2 = a2 | a3\n 65051: a5 = a5 << 0x10\n 65054: a0 = a0 << 0x18\n 65057: a0 = a0 | a5\n 65060: a0 = a0 | a2\n 65063: a0 = a0 << 0x20\n 65066: a2 = a0 | a1\n 65069: a0 = u8 [a4 + 0x1]\n 65072: a1 = u8 [a4]\n 65074: a3 = u8 [a4 + 0x2]\n 65077: a5 = u8 [a4 + 0x3]\n 65080: a0 = a0 << 0x8\n 65083: a0 = a0 | a1\n 65086: a3 = a3 << 0x10\n 65089: a5 = a5 << 0x18\n 65092: a3 = a3 | a5\n 65095: a0 = a0 | a3\n 65098: a1 = u8 [a4 + 0x5]\n 65101: a3 = u8 [a4 + 0x4]\n 65104: a5 = u8 [a4 + 0x6]\n 65107: a4 = u8 [a4 + 0x7]\n 65110: a1 = a1 << 0x8\n 65113: a1 = a1 | a3\n 65116: a5 = a5 << 0x10\n 65119: a4 = a4 << 0x18\n 65122: a4 = a4 | a5\n 65125: a1 = a1 | a4\n 65128: a1 = a1 << 0x20\n 65131: a0 = a0 | a1\n 65134: a1 = u64 [s1 + 0x278]\n 65138: a1 = reverse a1\n 65140: a0 = a1 & ~a0\n 65143: a1 = u64 [s1 + 0x248]\n 65147: a1 = reverse a1\n 65149: a1 = a1 & ~a2\n 65152: a2 = reverse t2\n 65154: a2 = a2 & ~t0\n 65157: a3 = reverse ra\n 65159: a3 = a3 & ~t1\n 65162: a4 = s1 + 0x2218\n 65166: a5 = u64 [s1 + 0x288]\n 65170: u64 [a4 + 0x200] = a5\n 65174: a5 = u64 [s1 + 0x280]\n 65178: u64 [a4 + 0x1f8] = a5\n 65182: a5 = u64 [s1 + 0x290]\n 65186: u64 [a4 + 0x1f0] = a5\n 65190: a5 = u64 [s1 + 0x298]\n 65194: u64 [a4 + 0x1e8] = a5\n 65198: u64 [a4 + 0x220] = a3\n 65202: u64 [a4 + 0x218] = a2\n 65206: u64 [a4 + 0x210] = a1\n 65210: u64 [a4 + 0x208] = a0\n 65214: a0 = s1 + 0x2000\n 65218: i32 a1 = a0 + 0x400\n 65222: a0 = s1 + 0x2000\n 65226: i32 a3 = a0 + 0x420\n 65230: a2 = 0xffffffffffffffff\n 65233: a4 = 0x20\n 65236: a0 = 0\n 65238: ecalli 17 // 'set_storage'\n 65240: fallthrough\n      : @842 (gas: 29)\n 65241: a2 = u64 [s1 + 0x1a0]\n 65245: a0 = a2 >> 0x3f\n 65248: a1 = u64 [s1 + 0x190]\n 65252: a1 = a1 << 0x1\n 65255: a0 = a0 | a1\n 65258: a3 = u64 [s1 + 0x198]\n 65262: a1 = a3 >> 0x3f\n 65265: a2 = a2 << 0x1\n 65268: a1 = a1 | a2\n 65271: a4 = u64 [s1 + 0x1a8]\n 65275: a2 = a4 >> 0x3f\n 65278: a3 = a3 << 0x1\n 65281: a2 = a2 | a3\n 65284: a3 = a4 << 0x1\n 65287: a3 = a3 + 0x1\n 65290: a5 = s1 + 0x2218\n 65294: a4 = u64 [s1 + 0x1d8]\n 65298: u64 [a5 + 0x1f0] = a4\n 65302: a4 = u64 [s1 + 0x1d0]\n 65306: u64 [a5 + 0x1e8] = a4\n 65310: a4 = u64 [s1 + 0x1e0]\n 65314: u64 [a5 + 0x1f8] = a4\n 65318: a4 = u64 [s1 + 0x1e8]\n 65322: u64 [a5 + 0x200] = a4\n 65326: u64 [a5 + 0x208] = a3\n 65330: u64 [a5 + 0x210] = a2\n 65334: u64 [a5 + 0x218] = a1\n 65338: u64 [a5 + 0x220] = a0\n 65342: jump @848\n      : @843 (gas: 10)\n 65345: a0 = u64 [s1 + 0x230]\n 65349: a1 = u64 [s1 + 0x228]\n 65353: a0 = a0 | a1\n 65356: a1 = 0xffffffe0\n 65366: a2 = u64 [s1 + 0x218]\n 65370: a1 = a2 <u a1\n 65373: a2 = u64 [s1 + 0x220]\n 65377: a1 = 0 if a2 != 0\n 65379: a1 = 0 if a0 != 0\n 65381: jump @845 if a1 != 0\n      : @844 (gas: 1)\n 65384: jump @799\n      : @845 (gas: 4)\n 65387: a0 = u64 [s1 + 0x150]\n 65391: i32 a0 = a0 + 0x20\n 65394: a1 = 0x20\n 65397: ra = 524, jump @0\n      : @846 [@dyn 262] (gas: 97)\n 65404: a1 = u8 [a0 + 0x19]\n 65407: a2 = u8 [a0 + 0x18]\n 65410: a3 = u8 [a0 + 0x1a]\n 65413: a4 = u8 [a0 + 0x1b]\n 65416: a1 = a1 << 0x8\n 65419: a1 = a1 | a2\n 65422: a3 = a3 << 0x10\n 65425: a4 = a4 << 0x18\n 65428: a3 = a3 | a4\n 65431: a1 = a1 | a3\n 65434: a2 = u8 [a0 + 0x1d]\n 65437: a3 = u8 [a0 + 0x1c]\n 65440: a4 = u8 [a0 + 0x1e]\n 65443: a5 = u8 [a0 + 0x1f]\n 65446: a2 = a2 << 0x8\n 65449: a2 = a2 | a3\n 65452: a4 = a4 << 0x10\n 65455: a5 = a5 << 0x18\n 65458: a4 = a4 | a5\n 65461: a2 = a2 | a4\n 65464: a2 = a2 << 0x20\n 65467: t0 = a2 | a1\n 65470: a2 = u8 [a0 + 0x11]\n 65473: a3 = u8 [a0 + 0x10]\n 65476: a4 = u8 [a0 + 0x12]\n 65479: a5 = u8 [a0 + 0x13]\n 65482: a2 = a2 << 0x8\n 65485: a2 = a2 | a3\n 65488: a4 = a4 << 0x10\n 65491: a5 = a5 << 0x18\n 65494: a4 = a4 | a5\n 65497: a2 = a2 | a4\n 65500: a3 = u8 [a0 + 0x15]\n 65503: a4 = u8 [a0 + 0x14]\n 65506: a5 = u8 [a0 + 0x16]\n 65509: a1 = u8 [a0 + 0x17]\n 65512: a3 = a3 << 0x8\n 65515: a3 = a3 | a4\n 65518: a5 = a5 << 0x10\n 65521: a1 = a1 << 0x18\n 65524: a1 = a1 | a5\n 65527: a1 = a1 | a3\n 65530: a1 = a1 << 0x20\n 65533: t1 = a1 | a2\n 65536: a1 = u8 [a0 + 0x9]\n 65539: a3 = u8 [a0 + 0x8]\n 65542: a4 = u8 [a0 + 0xa]\n 65545: a5 = u8 [a0 + 0xb]\n 65548: a1 = a1 << 0x8\n 65551: a1 = a1 | a3\n 65554: a4 = a4 << 0x10\n 65557: a5 = a5 << 0x18\n 65560: a4 = a4 | a5\n 65563: a1 = a1 | a4\n 65566: a3 = u8 [a0 + 0xd]\n 65569: a4 = u8 [a0 + 0xc]\n 65572: a5 = u8 [a0 + 0xe]\n 65575: a2 = u8 [a0 + 0xf]\n 65578: a3 = a3 << 0x8\n 65581: a3 = a3 | a4\n 65584: a5 = a5 << 0x10\n 65587: a2 = a2 << 0x18\n 65590: a2 = a2 | a5\n 65593: a2 = a2 | a3\n 65596: a2 = a2 << 0x20\n 65599: a3 = a2 | a1\n 65602: a1 = u8 [a0 + 0x1]\n 65605: a2 = u8 [a0]\n 65607: a4 = u8 [a0 + 0x2]\n 65610: a5 = u8 [a0 + 0x3]\n 65613: a1 = a1 << 0x8\n 65616: a1 = a1 | a2\n 65619: a4 = a4 << 0x10\n 65622: a5 = a5 << 0x18\n 65625: a4 = a4 | a5\n 65628: a1 = a1 | a4\n 65631: a2 = u8 [a0 + 0x5]\n 65634: a4 = u8 [a0 + 0x4]\n 65637: a5 = u8 [a0 + 0x6]\n 65640: a0 = u8 [a0 + 0x7]\n 65643: a2 = a2 << 0x8\n 65646: a2 = a2 | a4\n 65649: a5 = a5 << 0x10\n 65652: a0 = a0 << 0x18\n 65655: a0 = a0 | a5\n 65658: a0 = a0 | a2\n 65661: a0 = a0 << 0x20\n 65664: a0 = a0 | a1\n 65667: a0 = reverse a0\n 65669: u64 [s1 + 0x248] = a0\n 65673: a0 = reverse a3\n 65675: u64 [s1 + 0x278] = a0\n 65679: a0 = reverse t1\n 65681: u64 [s1 + 0x280] = a0\n 65685: a0 = reverse t0\n 65687: u64 [s1 + 0x288] = a0\n 65691: fallthrough\n      : @847 (gas: 205)\n 65692: a5 = u64 [s1 + 0x1a0]\n 65696: a0 = a5 >> 0x3f\n 65699: a4 = u64 [s1 + 0x190]\n 65703: a4 = a4 << 0x1\n 65706: a0 = a0 | a4\n 65709: u64 [s1 + 0x298] = a0\n 65713: a1 = u64 [s1 + 0x198]\n 65717: a0 = a1 >> 0x3f\n 65720: a5 = a5 << 0x1\n 65723: a0 = a0 | a5\n 65726: u64 [s1 + 0x290] = a0\n 65730: a5 = u64 [s1 + 0x1a8]\n 65734: a0 = a5 >> 0x3f\n 65737: a1 = a1 << 0x1\n 65740: a4 = a1 | a0\n 65743: a0 = s1 + 0x7ff\n 65747: a0 = a0 + 0x219\n 65751: u8 [a0 + 487] = 0\n 65755: u8 [a0 + 486] = 0\n 65759: u8 [a0 + 485] = 0\n 65763: u8 [a0 + 484] = 0\n 65767: u8 [a0 + 483] = 0\n 65771: u8 [a0 + 482] = 0\n 65775: u8 [a0 + 481] = 0\n 65779: u8 [a0 + 480] = 0\n 65783: u8 [a0 + 479] = 0\n 65787: u8 [a0 + 478] = 0\n 65791: u8 [a0 + 477] = 0\n 65795: u8 [a0 + 476] = 0\n 65799: u8 [a0 + 475] = 0\n 65803: u8 [a0 + 474] = 0\n 65807: u8 [a0 + 473] = 0\n 65811: u8 [a0 + 472] = 0\n 65815: u8 [a0 + 471] = 0\n 65819: u8 [a0 + 470] = 0\n 65823: u8 [a0 + 469] = 0\n 65827: u8 [a0 + 468] = 0\n 65831: u8 [a0 + 467] = 0\n 65835: u8 [a0 + 466] = 0\n 65839: u8 [a0 + 465] = 0\n 65843: u8 [a0 + 464] = 0\n 65847: u8 [a0 + 463] = 0\n 65851: u8 [a0 + 462] = 0\n 65855: u8 [a0 + 461] = 0\n 65859: u8 [a0 + 460] = 0\n 65863: u8 [a0 + 459] = 0\n 65867: u8 [a0 + 458] = 0\n 65871: u8 [a0 + 457] = 0\n 65875: u8 [a0 + 456] = 0\n 65879: u8 [a0 + 455] = 0xff\n 65885: u8 [a0 + 454] = 0xff\n 65891: u8 [a0 + 453] = 0xff\n 65897: u8 [a0 + 451] = 0xff\n 65903: u8 [a0 + 448] = 0xffffffffffffffff\n 65908: u8 [a0 + 447] = 0xff\n 65914: u8 [a0 + 446] = 0xff\n 65920: u8 [a0 + 445] = 0xff\n 65926: u8 [a0 + 443] = 0xff\n 65932: u8 [a0 + 440] = 0xffffffffffffffff\n 65937: u8 [a0 + 439] = 0xff\n 65943: u8 [a0 + 438] = 0xff\n 65949: u8 [a0 + 437] = 0xff\n 65955: u8 [a0 + 435] = 0xff\n 65961: u8 [a0 + 432] = 0xffffffffffffffff\n 65966: u8 [a0 + 431] = 0xff\n 65972: u8 [a0 + 430] = 0xff\n 65978: u8 [a0 + 429] = 0xff\n 65984: u8 [a0 + 427] = 0xff\n 65990: u8 [a0 + 424] = 0xffffffffffffffff\n 65995: a2 = 0xffffffff\n 66005: u8 [a0 + 0x1c4] = a2\n 66009: u8 [a0 + 0x1bc] = a2\n 66013: u8 [a0 + 0x1b4] = a2\n 66017: u8 [a0 + 0x1ac] = a2\n 66021: a2 = 0xffffffffffff\n 66031: u8 [a0 + 0x1c2] = a2\n 66035: a1 = 0xffffffffffffff\n 66045: u8 [a0 + 0x1c1] = a1\n 66049: u8 [a0 + 0x1ba] = a2\n 66053: u8 [a0 + 0x1b9] = a1\n 66057: u8 [a0 + 0x1b2] = a2\n 66061: u8 [a0 + 0x1b1] = a1\n 66065: u8 [a0 + 0x1aa] = a2\n 66069: u8 [a0 + 0x1a9] = a1\n 66073: a1 = a5 & 0x1f\n 66076: a2 = s1 + 0x7ff\n 66080: a2 = a2 + 0x3c1\n 66084: a1 = a1 + a2\n 66087: t0 = u8 [a1 + 0x1]\n 66090: a3 = u8 [a1]\n 66092: a2 = u8 [a1 + 0x2]\n 66095: t1 = u8 [a1 + 0x3]\n 66098: t0 = t0 << 0x8\n 66101: a3 = t0 | a3\n 66104: a2 = a2 << 0x10\n 66107: t1 = t1 << 0x18\n 66110: a2 = t1 | a2\n 66113: t0 = a2 | a3\n 66116: a3 = u8 [a1 + 0x5]\n 66119: t1 = u8 [a1 + 0x4]\n 66122: a2 = u8 [a1 + 0x6]\n 66125: t2 = u8 [a1 + 0x7]\n 66128: a3 = a3 << 0x8\n 66131: a3 = a3 | t1\n 66134: a2 = a2 << 0x10\n 66137: t2 = t2 << 0x18\n 66140: a2 = t2 | a2\n 66143: a2 = a2 | a3\n 66146: a2 = a2 << 0x20\n 66149: t1 = a2 | t0\n 66152: t2 = u8 [a1 + 0x9]\n 66155: t0 = u8 [a1 + 0x8]\n 66158: a2 = u8 [a1 + 0xa]\n 66161: a3 = u8 [a1 + 0xb]\n 66164: t2 = t2 << 0x8\n 66167: t0 = t2 | t0\n 66170: a2 = a2 << 0x10\n 66173: a3 = a3 << 0x18\n 66176: a2 = a2 | a3\n 66179: t0 = a2 | t0\n 66182: a3 = u8 [a1 + 0xd]\n 66185: t2 = u8 [a1 + 0xc]\n 66188: a2 = u8 [a1 + 0xe]\n 66191: ra = u8 [a1 + 0xf]\n 66194: a3 = a3 << 0x8\n 66197: a3 = a3 | t2\n 66200: a2 = a2 << 0x10\n 66203: ra = ra << 0x18\n 66206: a2 = ra | a2\n 66209: a2 = a2 | a3\n 66212: a2 = a2 << 0x20\n 66215: t2 = a2 | t0\n 66218: t0 = u8 [a1 + 0x11]\n 66221: ra = u8 [a1 + 0x10]\n 66224: a2 = u8 [a1 + 0x12]\n 66227: a3 = u8 [a1 + 0x13]\n 66230: t0 = t0 << 0x8\n 66233: t0 = t0 | ra\n 66236: a2 = a2 << 0x10\n 66239: a3 = a3 << 0x18\n 66242: a2 = a2 | a3\n 66245: t0 = a2 | t0\n 66248: a3 = u8 [a1 + 0x15]\n 66251: ra = u8 [a1 + 0x14]\n 66254: a2 = u8 [a1 + 0x16]\n 66257: a0 = u8 [a1 + 0x17]\n 66260: a3 = a3 << 0x8\n 66263: a3 = a3 | ra\n 66266: a2 = a2 << 0x10\n 66269: a0 = a0 << 0x18\n 66272: a0 = a0 | a2\n 66275: a0 = a0 | a3\n 66278: a0 = a0 << 0x20\n 66281: t0 = a0 | t0\n 66284: ra = u8 [a1 + 0x19]\n 66287: a2 = u8 [a1 + 0x18]\n 66290: a3 = u8 [a1 + 0x1a]\n 66293: a0 = u8 [a1 + 0x1b]\n 66296: ra = ra << 0x8\n 66299: a2 = ra | a2\n 66302: a3 = a3 << 0x10\n 66305: a0 = a0 << 0x18\n 66308: a0 = a0 | a3\n 66311: ra = a0 | a2\n 66314: a2 = u8 [a1 + 0x1d]\n 66317: a3 = u8 [a1 + 0x1c]\n 66320: a0 = u8 [a1 + 0x1e]\n 66323: a1 = u8 [a1 + 0x1f]\n 66326: a2 = a2 << 0x8\n 66329: a2 = a2 | a3\n 66332: a0 = a0 << 0x10\n 66335: a1 = a1 << 0x18\n 66338: a0 = a0 | a1\n 66341: a0 = a0 | a2\n 66344: a0 = a0 << 0x20\n 66347: a0 = a0 | ra\n 66350: a1 = u64 [s1 + 0x248]\n 66354: a0 = a1 & ~a0\n 66357: a1 = u64 [s1 + 0x278]\n 66361: a1 = a1 & ~t0\n 66364: a2 = u64 [s1 + 0x280]\n 66368: a2 = a2 & ~t2\n 66371: a3 = u64 [s1 + 0x288]\n 66375: a3 = a3 & ~t1\n 66378: a5 = a5 << 0x1\n 66381: a3 = a3 | a5\n 66384: a2 = a2 | a4\n 66387: a4 = u64 [s1 + 0x290]\n 66391: a1 = a1 | a4\n 66394: a4 = u64 [s1 + 0x298]\n 66398: a0 = a0 | a4\n 66401: a4 = s1 + 0x2218\n 66405: u64 [a4 + 0x220] = a0\n 66409: u64 [a4 + 0x218] = a1\n 66413: u64 [a4 + 0x210] = a2\n 66417: u64 [a4 + 0x208] = a3\n 66421: a0 = u64 [s1 + 0x1d8]\n 66425: u64 [a4 + 0x1f0] = a0\n 66429: a0 = u64 [s1 + 0x1d0]\n 66433: u64 [a4 + 0x1e8] = a0\n 66437: a0 = u64 [s1 + 0x1e0]\n 66441: u64 [a4 + 0x1f8] = a0\n 66445: a0 = u64 [s1 + 0x1e8]\n 66449: u64 [a4 + 0x200] = a0\n 66453: fallthrough\n      : @848 (gas: 11)\n 66454: a0 = s1 + 0x2000\n 66458: i32 a1 = a0 + 0x400\n 66462: a0 = s1 + 0x2000\n 66466: i32 a3 = a0 + 0x420\n 66470: a2 = 0xffffffffffffffff\n 66473: a4 = 0x20\n 66476: a0 = 0\n 66478: ecalli 17 // 'set_storage'\n 66480: a1 = 0x20\n 66483: a0 = u64 [s1 + 0x1f0]\n 66487: ra = 526, jump @0\n      : @849 [@dyn 263] (gas: 124)\n 66494: a1 = u8 [a0 + 0x1]\n 66497: a2 = u8 [a0]\n 66499: a3 = u8 [a0 + 0x2]\n 66502: a4 = u8 [a0 + 0x3]\n 66505: a1 = a1 << 0x8\n 66508: a1 = a1 | a2\n 66511: a3 = a3 << 0x10\n 66514: a4 = a4 << 0x18\n 66517: a3 = a3 | a4\n 66520: a1 = a1 | a3\n 66523: a2 = u8 [a0 + 0x5]\n 66526: a3 = u8 [a0 + 0x4]\n 66529: a4 = u8 [a0 + 0x6]\n 66532: a5 = u8 [a0 + 0x7]\n 66535: a2 = a2 << 0x8\n 66538: a2 = a2 | a3\n 66541: a4 = a4 << 0x10\n 66544: a5 = a5 << 0x18\n 66547: a4 = a4 | a5\n 66550: a2 = a2 | a4\n 66553: a2 = a2 << 0x20\n 66556: t0 = a2 | a1\n 66559: a2 = u8 [a0 + 0x9]\n 66562: a3 = u8 [a0 + 0x8]\n 66565: a4 = u8 [a0 + 0xa]\n 66568: a5 = u8 [a0 + 0xb]\n 66571: a2 = a2 << 0x8\n 66574: a2 = a2 | a3\n 66577: a4 = a4 << 0x10\n 66580: a5 = a5 << 0x18\n 66583: a4 = a4 | a5\n 66586: a2 = a2 | a4\n 66589: a3 = u8 [a0 + 0xd]\n 66592: a4 = u8 [a0 + 0xc]\n 66595: a5 = u8 [a0 + 0xe]\n 66598: a1 = u8 [a0 + 0xf]\n 66601: a3 = a3 << 0x8\n 66604: a3 = a3 | a4\n 66607: a5 = a5 << 0x10\n 66610: a1 = a1 << 0x18\n 66613: a1 = a1 | a5\n 66616: a1 = a1 | a3\n 66619: a1 = a1 << 0x20\n 66622: t1 = a1 | a2\n 66625: a1 = u8 [a0 + 0x11]\n 66628: a3 = u8 [a0 + 0x10]\n 66631: a4 = u8 [a0 + 0x12]\n 66634: a5 = u8 [a0 + 0x13]\n 66637: a1 = a1 << 0x8\n 66640: a1 = a1 | a3\n 66643: a4 = a4 << 0x10\n 66646: a5 = a5 << 0x18\n 66649: a4 = a4 | a5\n 66652: a1 = a1 | a4\n 66655: a3 = u8 [a0 + 0x15]\n 66658: a4 = u8 [a0 + 0x14]\n 66661: a5 = u8 [a0 + 0x16]\n 66664: a2 = u8 [a0 + 0x17]\n 66667: a3 = a3 << 0x8\n 66670: a3 = a3 | a4\n 66673: a5 = a5 << 0x10\n 66676: a2 = a2 << 0x18\n 66679: a2 = a2 | a5\n 66682: a2 = a2 | a3\n 66685: a2 = a2 << 0x20\n 66688: a3 = a2 | a1\n 66691: a1 = u8 [a0 + 0x19]\n 66694: a2 = u8 [a0 + 0x18]\n 66697: a4 = u8 [a0 + 0x1a]\n 66700: a5 = u8 [a0 + 0x1b]\n 66703: a1 = a1 << 0x8\n 66706: a1 = a1 | a2\n 66709: a4 = a4 << 0x10\n 66712: a5 = a5 << 0x18\n 66715: a4 = a4 | a5\n 66718: a1 = a1 | a4\n 66721: a2 = u8 [a0 + 0x1d]\n 66724: a4 = u8 [a0 + 0x1c]\n 66727: a5 = u8 [a0 + 0x1e]\n 66730: a0 = u8 [a0 + 0x1f]\n 66733: a2 = a2 << 0x8\n 66736: a2 = a2 | a4\n 66739: a5 = a5 << 0x10\n 66742: a0 = a0 << 0x18\n 66745: a0 = a0 | a5\n 66748: a0 = a0 | a2\n 66751: a0 = a0 << 0x20\n 66754: a0 = a0 | a1\n 66757: a1 = u64 [s1 + 0x1d0]\n 66761: a1 = a1 + 0x1\n 66764: a2 = a1 <u 0x1\n 66767: a4 = u64 [s1 + 0x1d8]\n 66771: a2 = a2 + a4\n 66774: a4 = s1 + 0x2218\n 66778: u64 [a4 + 0x1f0] = a2\n 66782: a2 = a2 | a1\n 66785: u64 [a4 + 0x1e8] = a1\n 66789: a1 = a2 <u 0x1\n 66792: a2 = u64 [s1 + 0x1e0]\n 66796: a1 = a1 + a2\n 66799: u64 [a4 + 0x1f8] = a1\n 66803: a1 = a1 <u a2\n 66806: a2 = u64 [s1 + 0x1e8]\n 66810: a1 = a1 + a2\n 66813: u64 [a4 + 0x200] = a1\n 66817: a1 = reverse t0\n 66819: u64 [a4 + 0x220] = a1\n 66823: a1 = reverse t1\n 66825: u64 [a4 + 0x218] = a1\n 66829: a1 = reverse a3\n 66831: u64 [a4 + 0x210] = a1\n 66835: a0 = reverse a0\n 66837: u64 [a4 + 0x208] = a0\n 66841: a0 = s1 + 0x2000\n 66845: i32 a1 = a0 + 0x400\n 66849: a0 = s1 + 0x2000\n 66853: i32 a3 = a0 + 0x420\n 66857: a2 = 0xffffffffffffffff\n 66860: a4 = 0x20\n 66863: a0 = 0\n 66865: ecalli 17 // 'set_storage'\n 66867: a1 = 0x20\n 66870: a0 = u64 [s1 + 0x1c8]\n 66874: ra = 528, jump @0\n      : @850 [@dyn 264] (gas: 124)\n 66881: a1 = u8 [a0 + 0x1]\n 66884: a2 = u8 [a0]\n 66886: a3 = u8 [a0 + 0x2]\n 66889: a4 = u8 [a0 + 0x3]\n 66892: a1 = a1 << 0x8\n 66895: a1 = a1 | a2\n 66898: a3 = a3 << 0x10\n 66901: a4 = a4 << 0x18\n 66904: a3 = a3 | a4\n 66907: a1 = a1 | a3\n 66910: a2 = u8 [a0 + 0x5]\n 66913: a3 = u8 [a0 + 0x4]\n 66916: a4 = u8 [a0 + 0x6]\n 66919: a5 = u8 [a0 + 0x7]\n 66922: a2 = a2 << 0x8\n 66925: a2 = a2 | a3\n 66928: a4 = a4 << 0x10\n 66931: a5 = a5 << 0x18\n 66934: a4 = a4 | a5\n 66937: a2 = a2 | a4\n 66940: a2 = a2 << 0x20\n 66943: t0 = a2 | a1\n 66946: a2 = u8 [a0 + 0x9]\n 66949: a3 = u8 [a0 + 0x8]\n 66952: a4 = u8 [a0 + 0xa]\n 66955: a5 = u8 [a0 + 0xb]\n 66958: a2 = a2 << 0x8\n 66961: a2 = a2 | a3\n 66964: a4 = a4 << 0x10\n 66967: a5 = a5 << 0x18\n 66970: a4 = a4 | a5\n 66973: a2 = a2 | a4\n 66976: a3 = u8 [a0 + 0xd]\n 66979: a4 = u8 [a0 + 0xc]\n 66982: a5 = u8 [a0 + 0xe]\n 66985: a1 = u8 [a0 + 0xf]\n 66988: a3 = a3 << 0x8\n 66991: a3 = a3 | a4\n 66994: a5 = a5 << 0x10\n 66997: a1 = a1 << 0x18\n 67000: a1 = a1 | a5\n 67003: a1 = a1 | a3\n 67006: a1 = a1 << 0x20\n 67009: t1 = a1 | a2\n 67012: a1 = u8 [a0 + 0x11]\n 67015: a3 = u8 [a0 + 0x10]\n 67018: a4 = u8 [a0 + 0x12]\n 67021: a5 = u8 [a0 + 0x13]\n 67024: a1 = a1 << 0x8\n 67027: a1 = a1 | a3\n 67030: a4 = a4 << 0x10\n 67033: a5 = a5 << 0x18\n 67036: a4 = a4 | a5\n 67039: a1 = a1 | a4\n 67042: a3 = u8 [a0 + 0x15]\n 67045: a4 = u8 [a0 + 0x14]\n 67048: a5 = u8 [a0 + 0x16]\n 67051: a2 = u8 [a0 + 0x17]\n 67054: a3 = a3 << 0x8\n 67057: a3 = a3 | a4\n 67060: a5 = a5 << 0x10\n 67063: a2 = a2 << 0x18\n 67066: a2 = a2 | a5\n 67069: a2 = a2 | a3\n 67072: a2 = a2 << 0x20\n 67075: t2 = a2 | a1\n 67078: a1 = u8 [a0 + 0x19]\n 67081: a2 = u8 [a0 + 0x18]\n 67084: a4 = u8 [a0 + 0x1a]\n 67087: a5 = u8 [a0 + 0x1b]\n 67090: a1 = a1 << 0x8\n 67093: a1 = a1 | a2\n 67096: a4 = a4 << 0x10\n 67099: a5 = a5 << 0x18\n 67102: a4 = a4 | a5\n 67105: a1 = a1 | a4\n 67108: a2 = u8 [a0 + 0x1d]\n 67111: a4 = u8 [a0 + 0x1c]\n 67114: a5 = u8 [a0 + 0x1e]\n 67117: a0 = u8 [a0 + 0x1f]\n 67120: a2 = a2 << 0x8\n 67123: a2 = a2 | a4\n 67126: a5 = a5 << 0x10\n 67129: a0 = a0 << 0x18\n 67132: a0 = a0 | a5\n 67135: a0 = a0 | a2\n 67138: a0 = a0 << 0x20\n 67141: a0 = a0 | a1\n 67144: a2 = u64 [s1 + 0x1d0]\n 67148: a1 = a2 + 0x2\n 67151: a2 = a1 <u a2\n 67154: a4 = u64 [s1 + 0x1d8]\n 67158: a3 = a4 + a2\n 67161: a5 = a3 <u a4\n 67164: a5 = a2 if a2 == 0\n 67167: a2 = u64 [s1 + 0x1e0]\n 67171: a5 = a5 + a2\n 67174: a2 = a5 <u a2\n 67177: a4 = u64 [s1 + 0x1e8]\n 67181: a2 = a2 + a4\n 67184: a4 = s1 + 0x2218\n 67188: u64 [a4 + 0x200] = a2\n 67192: u64 [a4 + 0x1f8] = a5\n 67196: u64 [a4 + 0x1f0] = a3\n 67200: u64 [a4 + 0x1e8] = a1\n 67204: a1 = reverse t0\n 67206: u64 [a4 + 0x220] = a1\n 67210: a1 = reverse t1\n 67212: u64 [a4 + 0x218] = a1\n 67216: a1 = reverse t2\n 67218: u64 [a4 + 0x210] = a1\n 67222: a0 = reverse a0\n 67224: u64 [a4 + 0x208] = a0\n 67228: a0 = s1 + 0x2000\n 67232: i32 a1 = a0 + 0x400\n 67236: a0 = s1 + 0x2000\n 67240: i32 a3 = a0 + 0x420\n 67244: a2 = 0xffffffffffffffff\n 67247: a4 = 0x20\n 67250: a0 = 0\n 67252: ecalli 17 // 'set_storage'\n 67254: a1 = 0x20\n 67257: a0 = u64 [s1 + 0x188]\n 67261: ra = 530, jump @0\n      : @851 [@dyn 265] (gas: 120)\n 67268: a1 = u8 [a0 + 0x11]\n 67271: a2 = u8 [a0 + 0x10]\n 67274: a3 = u8 [a0 + 0x12]\n 67277: a4 = u8 [a0 + 0x13]\n 67280: a1 = a1 << 0x8\n 67283: a1 = a1 | a2\n 67286: a3 = a3 << 0x10\n 67289: a4 = a4 << 0x18\n 67292: a3 = a3 | a4\n 67295: a1 = a1 | a3\n 67298: u64 [s1 + 0x298] = a1\n 67302: a1 = u8 [a0 + 0x1]\n 67305: a2 = u8 [a0]\n 67307: a3 = u8 [a0 + 0x2]\n 67310: a4 = u8 [a0 + 0x3]\n 67313: a1 = a1 << 0x8\n 67316: a1 = a1 | a2\n 67319: a3 = a3 << 0x10\n 67322: a4 = a4 << 0x18\n 67325: a2 = a4 | a3\n 67328: t1 = a2 | a1\n 67331: a1 = u8 [a0 + 0x15]\n 67334: a3 = u8 [a0 + 0x14]\n 67337: a4 = u8 [a0 + 0x16]\n 67340: a5 = u8 [a0 + 0x17]\n 67343: a1 = a1 << 0x8\n 67346: a1 = a1 | a3\n 67349: a4 = a4 << 0x10\n 67352: a5 = a5 << 0x18\n 67355: a3 = a5 | a4\n 67358: t2 = a3 | a1\n 67361: a1 = u8 [a0 + 0x5]\n 67364: a4 = u8 [a0 + 0x4]\n 67367: a5 = u8 [a0 + 0x6]\n 67370: a2 = u8 [a0 + 0x7]\n 67373: a1 = a1 << 0x8\n 67376: a1 = a1 | a4\n 67379: a5 = a5 << 0x10\n 67382: a2 = a2 << 0x18\n 67385: a2 = a2 | a5\n 67388: ra = a2 | a1\n 67391: a1 = u8 [a0 + 0x19]\n 67394: a2 = u8 [a0 + 0x18]\n 67397: a5 = u8 [a0 + 0x1a]\n 67400: a3 = u8 [a0 + 0x1b]\n 67403: a1 = a1 << 0x8\n 67406: a1 = a1 | a2\n 67409: a5 = a5 << 0x10\n 67412: a3 = a3 << 0x18\n 67415: a3 = a3 | a5\n 67418: t0 = a3 | a1\n 67421: a1 = u8 [a0 + 0x9]\n 67424: a2 = u8 [a0 + 0x8]\n 67427: a3 = u8 [a0 + 0xa]\n 67430: a4 = u8 [a0 + 0xb]\n 67433: a1 = a1 << 0x8\n 67436: a1 = a1 | a2\n 67439: a3 = a3 << 0x10\n 67442: a4 = a4 << 0x18\n 67445: a3 = a3 | a4\n 67448: a5 = a3 | a1\n 67451: a2 = u8 [a0 + 0x1d]\n 67454: a3 = u8 [a0 + 0x1c]\n 67457: a4 = u8 [a0 + 0x1e]\n 67460: a1 = u8 [a0 + 0x1f]\n 67463: a2 = a2 << 0x8\n 67466: a2 = a2 | a3\n 67469: a4 = a4 << 0x10\n 67472: a1 = a1 << 0x18\n 67475: a1 = a1 | a4\n 67478: a1 = a1 | a2\n 67481: a2 = u8 [a0 + 0xd]\n 67484: a3 = u8 [a0 + 0xc]\n 67487: a4 = u8 [a0 + 0xe]\n 67490: a0 = u8 [a0 + 0xf]\n 67493: a2 = a2 << 0x8\n 67496: a2 = a2 | a3\n 67499: a4 = a4 << 0x10\n 67502: a0 = a0 << 0x18\n 67505: a0 = a0 | a4\n 67508: a0 = a0 | a2\n 67511: a0 = a0 | a1\n 67514: a1 = a5 | t0\n 67517: a0 = a0 << 0x20\n 67520: a0 = a0 | a1\n 67523: a1 = ra | t2\n 67526: a2 = u64 [s1 + 0x298]\n 67530: a2 = t1 | a2\n 67533: a1 = a1 << 0x20\n 67536: a1 = a1 | a2\n 67539: a0 = a0 | a1\n 67542: a2 = u64 [s1 + 0x1d0]\n 67546: a1 = a2 + 0x3\n 67549: a2 = a1 <u a2\n 67552: a4 = u64 [s1 + 0x1d8]\n 67556: a3 = a4 + a2\n 67559: a4 = a3 <u a4\n 67562: a4 = a2 if a2 == 0\n 67565: a2 = u64 [s1 + 0x1e0]\n 67569: a4 = a4 + a2\n 67572: a2 = a4 <u a2\n 67575: a5 = u64 [s1 + 0x1e8]\n 67579: a2 = a2 + a5\n 67582: a5 = a0 >u 0\n 67584: a0 = s1 + 0x7ff\n 67588: a0 = a0 + 0x219\n 67592: u64 [a0 + 320] = 0\n 67596: u64 [a0 + 312] = 0\n 67600: u64 [a0 + 304] = 0\n 67604: u64 [a0 + 0x160] = a2\n 67608: u64 [a0 + 0x158] = a4\n 67612: u64 [a0 + 0x150] = a3\n 67616: u64 [a0 + 0x148] = a1\n 67620: a2 = a0\n 67622: a0 = s1 + 0x7ff\n 67626: a0 = a0 + 0x361\n 67630: a1 = s1 + 0x7ff\n 67634: a1 = a1 + 0x341\n 67638: u64 [a2 + 0x128] = a5\n 67642: ra = 532, jump @1085\n      : @852 [@dyn 266] (gas: 12)\n 67648: a0 = s1 + 0x7ff\n 67652: a0 = a0 + 0x219\n 67656: u64 [a0 + 256] = 0\n 67660: u64 [a0 + 248] = 0\n 67664: u64 [a0 + 240] = 0\n 67668: a3 = a0\n 67670: a0 = s1 + 0x7ff\n 67674: a0 = a0 + 0x321\n 67678: a2 = s1 + 0x7ff\n 67682: a2 = a2 + 0x301\n 67686: u64 [a3 + 232] = 0x3\n 67691: ra = 534, jump @25\n      : @853 [@dyn 267] (gas: 10)\n 67698: a2 = s1 + 0x7ff\n 67702: a2 = a2 + 0x219\n 67706: a0 = u64 [a2 + 0x120]\n 67710: a1 = u64 [a2 + 0x118]\n 67714: a3 = u64 [a2 + 0x110]\n 67718: a2 = u64 [a2 + 0x108]\n 67722: a4 = a3 | a0\n 67725: a5 = a2 | a1\n 67728: a4 = a4 | a5\n 67731: jump @855 if a4 != 0\n      : @854 (gas: 1)\n 67734: jump @953\n      : @855 (gas: 27)\n 67737: u64 [s1 + 632] = 0\n 67741: u64 [s1 + 584] = 0\n 67745: u64 [s1 + 568] = 0\n 67749: u64 [s1 + 576] = 0\n 67753: a4 = a2 <u 0x1\n 67756: a5 = a3 - a4\n 67759: a3 = a3 | a2\n 67762: a3 = a3 <u 0x1\n 67765: a4 = a1 - a3\n 67768: a1 = a1 <u a3\n 67771: a1 = a0 - a1\n 67774: a2 = a2 + 0xffffffffffffffff\n 67777: u64 [s1 + 0x10] = a2\n 67780: a0 = reverse a2\n 67782: u64 [s1 + 0x178] = a0\n 67786: a0 = 0xffffffe0\n 67796: u64 [s1 + 0x228] = a0\n 67800: u64 [s1 + 0x18] = a5\n 67803: a0 = reverse a5\n 67805: u64 [s1 + 0x170] = a0\n 67809: u64 [s1 + 0x20] = a4\n 67812: a0 = reverse a4\n 67814: u64 [s1 + 0x180] = a0\n 67818: u64 [s1 + 0x28] = a1\n 67821: a0 = reverse a1\n 67823: u64 [s1 + 0x188] = a0\n 67827: fallthrough\n      : @856 (gas: 3)\n 67828: a1 = 0x20\n 67831: a0 = 0\n 67833: ra = 536, jump @0\n      : @857 [@dyn 268] (gas: 95)\n 67840: a2 = u64 [s1 + 0x180]\n 67844: u8 [a0 + 0x8] = a2\n 67847: a1 = u64 [s1 + 0x188]\n 67851: a3 = a1 >> 0x38\n 67854: u64 [s1 + 0x168] = a3\n 67858: u8 [a0 + 0x7] = a3\n 67861: a3 = a1 >> 0x30\n 67864: u64 [s1 + 0x160] = a3\n 67868: u8 [a0 + 0x6] = a3\n 67871: a3 = a1 >> 0x28\n 67874: u64 [s1 + 0x158] = a3\n 67878: u8 [a0 + 0x5] = a3\n 67881: a3 = a1 >> 0x20\n 67884: u64 [s1 + 0x150] = a3\n 67888: u8 [a0 + 0x4] = a3\n 67891: a3 = a1 >> 0x18\n 67894: u64 [s1 + 0x148] = a3\n 67898: u8 [a0 + 0x3] = a3\n 67901: a3 = a1 >> 0x10\n 67904: u64 [s1 + 0x140] = a3\n 67908: u8 [a0 + 0x2] = a3\n 67911: a3 = a1 >> 0x8\n 67914: u64 [s1 + 0x138] = a3\n 67918: u8 [a0 + 0x1] = a3\n 67921: u8 [a0] = a1\n 67923: a3 = u64 [s1 + 0x170]\n 67927: u8 [a0 + 0x10] = a3\n 67930: a1 = a2 >> 0x38\n 67933: u64 [s1 + 0x130] = a1\n 67937: u8 [a0 + 0xf] = a1\n 67940: a1 = a2 >> 0x30\n 67943: u64 [s1 + 0x128] = a1\n 67947: u8 [a0 + 0xe] = a1\n 67950: a1 = a2 >> 0x28\n 67953: u64 [s1 + 0x120] = a1\n 67957: u8 [a0 + 0xd] = a1\n 67960: a1 = a2 >> 0x20\n 67963: u64 [s1 + 0x118] = a1\n 67967: u8 [a0 + 0xc] = a1\n 67970: a1 = a2 >> 0x18\n 67973: u64 [s1 + 0x110] = a1\n 67977: u8 [a0 + 0xb] = a1\n 67980: a1 = a2 >> 0x10\n 67983: u64 [s1 + 0x108] = a1\n 67987: u8 [a0 + 0xa] = a1\n 67990: a2 = a2 >> 0x8\n 67993: u64 [s1 + 0x100] = a2\n 67997: u8 [a0 + 0x9] = a2\n 68000: a1 = u64 [s1 + 0x178]\n 68004: u8 [a0 + 0x18] = a1\n 68007: a2 = a3 >> 0x38\n 68010: u64 [s1 + 0xf8] = a2\n 68014: u8 [a0 + 0x17] = a2\n 68017: a2 = a3 >> 0x30\n 68020: u64 [s1 + 0xf0] = a2\n 68024: u8 [a0 + 0x16] = a2\n 68027: a2 = a3 >> 0x28\n 68030: u64 [s1 + 0xe8] = a2\n 68034: u8 [a0 + 0x15] = a2\n 68037: a2 = a3 >> 0x20\n 68040: u64 [s1 + 0xe0] = a2\n 68044: u8 [a0 + 0x14] = a2\n 68047: a2 = a3 >> 0x18\n 68050: u64 [s1 + 0xd8] = a2\n 68054: u8 [a0 + 0x13] = a2\n 68057: a2 = a3 >> 0x10\n 68060: u64 [s1 + 0xd0] = a2\n 68064: u8 [a0 + 0x12] = a2\n 68067: a3 = a3 >> 0x8\n 68070: u64 [s1 + 0xc8] = a3\n 68074: u8 [a0 + 0x11] = a3\n 68077: a2 = a1 >> 0x38\n 68080: u64 [s1 + 0xc0] = a2\n 68084: u8 [a0 + 0x1f] = a2\n 68087: a2 = a1 >> 0x30\n 68090: u64 [s1 + 0xb8] = a2\n 68094: u8 [a0 + 0x1e] = a2\n 68097: a2 = a1 >> 0x28\n 68100: u64 [s1 + 0xb0] = a2\n 68104: u8 [a0 + 0x1d] = a2\n 68107: a2 = a1 >> 0x20\n 68110: u64 [s1 + 0xa8] = a2\n 68114: u8 [a0 + 0x1c] = a2\n 68117: a2 = a1 >> 0x18\n 68120: u64 [s1 + 0xa0] = a2\n 68124: u8 [a0 + 0x1b] = a2\n 68127: a2 = a1 >> 0x10\n 68130: u64 [s1 + 0x98] = a2\n 68134: u8 [a0 + 0x1a] = a2\n 68137: a1 = a1 >> 0x8\n 68140: u64 [s1 + 0x90] = a1\n 68144: u8 [a0 + 0x19] = a1\n 68147: a0 = 0x20\n 68150: a1 = 0x20\n 68153: ra = 538, jump @0\n      : @858 [@dyn 269] (gas: 35)\n 68160: u8 [a0 + 31] = 0x4\n 68164: u8 [a0 + 30] = 0\n 68167: u8 [a0 + 29] = 0\n 68170: u8 [a0 + 28] = 0\n 68173: u8 [a0 + 27] = 0\n 68176: u8 [a0 + 26] = 0\n 68179: u8 [a0 + 25] = 0\n 68182: u8 [a0 + 24] = 0\n 68185: u8 [a0 + 23] = 0\n 68188: u8 [a0 + 22] = 0\n 68191: u8 [a0 + 21] = 0\n 68194: u8 [a0 + 20] = 0\n 68197: u8 [a0 + 19] = 0\n 68200: u8 [a0 + 18] = 0\n 68203: u8 [a0 + 17] = 0\n 68206: u8 [a0 + 16] = 0\n 68209: u8 [a0 + 15] = 0\n 68212: u8 [a0 + 14] = 0\n 68215: u8 [a0 + 13] = 0\n 68218: u8 [a0 + 12] = 0\n 68221: u8 [a0 + 11] = 0\n 68224: u8 [a0 + 10] = 0\n 68227: u8 [a0 + 9] = 0\n 68230: u8 [a0 + 8] = 0\n 68233: u8 [a0 + 7] = 0\n 68236: u8 [a0 + 6] = 0\n 68239: u8 [a0 + 5] = 0\n 68242: u8 [a0 + 4] = 0\n 68245: u8 [a0 + 3] = 0\n 68248: u8 [a0 + 2] = 0\n 68251: u8 [a0 + 1] = 0\n 68254: u8 [a0 + 0] = 0\n 68256: a1 = 0x40\n 68259: a0 = 0\n 68261: ra = 540, jump @0\n      : @859 [@dyn 270] (gas: 9)\n 68268: a1 = sp + 0xffffffffffffffe0\n 68271: a1 = a1 & 0xffffffffffffffe0\n 68274: sp = a1\n 68276: i32 a0 = a0 + 0\n 68278: u64 [s1 + 0x298] = a1\n 68282: i32 a2 = a1 + 0\n 68284: a1 = 0x40\n 68287: ecalli 10 // 'hash_keccak_256'\n 68289: fallthrough\n      : @860 (gas: 43)\n 68290: t1 = u64 [s1 + 0x238]\n 68294: a2 = t1 >> 0x3a\n 68297: a1 = u64 [s1 + 0x240]\n 68301: a1 = a1 << 0x6\n 68304: t0 = a1 | a2\n 68307: a3 = u64 [s1 + 0x278]\n 68311: a1 = a3 >> 0x3a\n 68314: a0 = u64 [s1 + 0x248]\n 68318: a2 = a0 << 0x6\n 68321: a1 = a1 | a2\n 68324: a2 = a3 << 0x6\n 68327: a3 = u64 [s1 + 0x250]\n 68331: a5 = a3 + a2\n 68334: a2 = a5 <u a3\n 68337: a3 = u64 [s1 + 0x1c0]\n 68341: a1 = a1 + a3\n 68344: a4 = a1 + a2\n 68347: a1 = a4 ^ a3\n 68350: a3 = a4 <u a3\n 68353: a3 = a2 if a1 == 0\n 68356: a1 = a0 >> 0x3a\n 68359: a2 = t1 << 0x6\n 68362: a1 = a1 | a2\n 68365: a2 = u64 [s1 + 0x1b8]\n 68369: a0 = a2 + a1\n 68372: a1 = a0 + a3\n 68375: t1 = a1 <u a0\n 68378: a2 = a0 <u a2\n 68381: a3 = u64 [s1 + 0x1b0]\n 68385: a0 = a3 + t0\n 68388: a0 = a0 + a2\n 68391: a2 = a0 + t1\n 68394: a0 = a5 | a1\n 68397: u64 [s1 + 0x290] = a4\n 68401: u64 [s1 + 0x280] = a2\n 68405: a2 = a2 | a4\n 68408: a0 = a0 | a2\n 68411: a0 = a0 >> 0x20\n 68414: u64 [s1 + 0x288] = a1\n 68418: a1 = a1 | a2\n 68421: a1 = a1 << 0x20\n 68424: a0 = a0 | a1\n 68427: jump @862 if a0 == 0\n      : @861 (gas: 1)\n 68430: jump @799\n      : @862 (gas: 16)\n 68433: a1 = u64 [s1 + 0x298]\n 68437: a0 = u64 [a1 + 0x18]\n 68440: u64 [s1 + 0x208] = a0\n 68444: a0 = u64 [a1 + 0x10]\n 68447: u64 [s1 + 0x200] = a0\n 68451: a0 = u64 [a1 + 0x8]\n 68454: u64 [s1 + 0x1f8] = a0\n 68458: a0 = u64 [a1]\n 68460: u64 [s1 + 0x1f0] = a0\n 68464: i32 a1 = a5 + 0\n 68466: a0 = s1 + 0x2000\n 68470: i32 a0 = a0 + 0x1c0\n 68474: u64 [s1 + 0x230] = a1\n 68478: u64 [s1 + 0x298] = a5\n 68482: ecalli 5 // 'call_data_load'\n 68484: fallthrough\n      : @863 (gas: 10)\n 68485: a0 = u64 [s1 + 0x288]\n 68489: a1 = u64 [s1 + 0x280]\n 68493: a0 = a0 | a1\n 68496: a1 = u64 [s1 + 0x228]\n 68500: a2 = u64 [s1 + 0x298]\n 68504: a1 = a2 <u a1\n 68507: a2 = u64 [s1 + 0x290]\n 68511: a1 = 0 if a2 != 0\n 68513: a1 = 0 if a0 != 0\n 68515: jump @865 if a1 != 0\n      : @864 (gas: 1)\n 68518: jump @799\n      : @865 (gas: 26)\n 68521: a1 = s1 + 0x1a18\n 68525: a0 = u64 [a1 + 0x7c0]\n 68529: u64 [s1 + 0x1d0] = a0\n 68533: a0 = u64 [a1 + 0x7b8]\n 68537: u64 [s1 + 0x1d8] = a0\n 68541: a0 = u64 [a1 + 0x7b0]\n 68545: u64 [s1 + 0x1e0] = a0\n 68549: a0 = u64 [a1 + 0x7a8]\n 68553: u64 [s1 + 0x1e8] = a0\n 68557: a0 = u64 [s1 + 0x230]\n 68561: i32 a1 = a0 + 0x20\n 68564: a0 = s1 + 0x2000\n 68568: i32 a0 = a0 + 0x1e0\n 68572: ecalli 5 // 'call_data_load'\n 68574: a1 = s1 + 0x1a18\n 68578: a0 = u64 [a1 + 0x7e0]\n 68582: u64 [s1 + 0x1a8] = a0\n 68586: a0 = u64 [a1 + 0x7d8]\n 68590: u64 [s1 + 0x1a0] = a0\n 68594: a0 = u64 [a1 + 0x7d0]\n 68598: u64 [s1 + 0x198] = a0\n 68602: a0 = u64 [a1 + 0x7c8]\n 68606: u64 [s1 + 0x190] = a0\n 68610: a0 = 0x40\n 68613: a1 = 0x20\n 68616: ra = 542, jump @0\n      : @866 [@dyn 271] (gas: 98)\n 68623: a1 = u8 [a0 + 0x9]\n 68626: a2 = u8 [a0 + 0x8]\n 68629: a3 = u8 [a0 + 0xa]\n 68632: a4 = u8 [a0 + 0xb]\n 68635: a1 = a1 << 0x8\n 68638: a1 = a1 | a2\n 68641: a3 = a3 << 0x10\n 68644: a4 = a4 << 0x18\n 68647: a3 = a3 | a4\n 68650: a1 = a1 | a3\n 68653: a2 = u8 [a0 + 0xd]\n 68656: a3 = u8 [a0 + 0xc]\n 68659: a4 = u8 [a0 + 0xe]\n 68662: a5 = u8 [a0 + 0xf]\n 68665: a2 = a2 << 0x8\n 68668: a2 = a2 | a3\n 68671: a4 = a4 << 0x10\n 68674: a5 = a5 << 0x18\n 68677: a4 = a4 | a5\n 68680: a2 = a2 | a4\n 68683: a2 = a2 << 0x20\n 68686: t0 = a2 | a1\n 68689: a2 = u8 [a0 + 0x1]\n 68692: a3 = u8 [a0]\n 68694: a4 = u8 [a0 + 0x2]\n 68697: a5 = u8 [a0 + 0x3]\n 68700: a2 = a2 << 0x8\n 68703: a2 = a2 | a3\n 68706: a4 = a4 << 0x10\n 68709: a5 = a5 << 0x18\n 68712: a4 = a4 | a5\n 68715: a2 = a2 | a4\n 68718: a3 = u8 [a0 + 0x5]\n 68721: a4 = u8 [a0 + 0x4]\n 68724: a5 = u8 [a0 + 0x6]\n 68727: a1 = u8 [a0 + 0x7]\n 68730: a3 = a3 << 0x8\n 68733: a3 = a3 | a4\n 68736: a5 = a5 << 0x10\n 68739: a1 = a1 << 0x18\n 68742: a1 = a1 | a5\n 68745: a1 = a1 | a3\n 68748: a1 = a1 << 0x20\n 68751: t1 = a1 | a2\n 68754: a1 = u8 [a0 + 0x19]\n 68757: a3 = u8 [a0 + 0x18]\n 68760: a4 = u8 [a0 + 0x1a]\n 68763: a5 = u8 [a0 + 0x1b]\n 68766: a1 = a1 << 0x8\n 68769: a1 = a1 | a3\n 68772: a4 = a4 << 0x10\n 68775: a5 = a5 << 0x18\n 68778: a4 = a4 | a5\n 68781: a1 = a1 | a4\n 68784: a3 = u8 [a0 + 0x1d]\n 68787: a4 = u8 [a0 + 0x1c]\n 68790: a5 = u8 [a0 + 0x1e]\n 68793: a2 = u8 [a0 + 0x1f]\n 68796: a3 = a3 << 0x8\n 68799: a3 = a3 | a4\n 68802: a5 = a5 << 0x10\n 68805: a2 = a2 << 0x18\n 68808: a2 = a2 | a5\n 68811: a2 = a2 | a3\n 68814: a2 = a2 << 0x20\n 68817: a3 = a2 | a1\n 68820: a1 = u8 [a0 + 0x11]\n 68823: a2 = u8 [a0 + 0x10]\n 68826: a4 = u8 [a0 + 0x12]\n 68829: a5 = u8 [a0 + 0x13]\n 68832: a1 = a1 << 0x8\n 68835: a1 = a1 | a2\n 68838: a4 = a4 << 0x10\n 68841: a5 = a5 << 0x18\n 68844: a4 = a4 | a5\n 68847: a1 = a1 | a4\n 68850: a2 = u8 [a0 + 0x15]\n 68853: a4 = u8 [a0 + 0x14]\n 68856: a5 = u8 [a0 + 0x16]\n 68859: a0 = u8 [a0 + 0x17]\n 68862: a2 = a2 << 0x8\n 68865: a2 = a2 | a4\n 68868: a5 = a5 << 0x10\n 68871: a0 = a0 << 0x18\n 68874: a0 = a0 | a5\n 68877: a0 = a0 | a2\n 68880: a0 = a0 << 0x20\n 68883: a0 = a0 | a1\n 68886: a1 = reverse a0\n 68888: a3 = reverse a3\n 68890: a5 = reverse t1\n 68892: a4 = reverse t0\n 68894: a2 = a4 | a5\n 68897: a0 = a3 <u 0xffffffffffffffc0\n 68900: a0 = 0 if a1 != 0\n 68902: u64 [s1 + 0x1c8] = a2\n 68906: a0 = 0 if a2 != 0\n 68908: jump @904 if a0 == 0\n      : @867 (gas: 19)\n 68912: a0 = a3 + 0x40\n 68915: u64 [s1 + 0x230] = a0\n 68919: a0 = a0 <u a3\n 68922: a2 = a1 + a0\n 68925: u64 [s1 + 0x220] = a2\n 68929: u64 [s1 + 0x298] = a1\n 68933: a1 = a2 <u a1\n 68936: a1 = a0 if a0 == 0\n 68939: a1 = a1 + a4\n 68942: u64 [s1 + 0x218] = a1\n 68946: a0 = a1 <u a4\n 68949: a0 = a0 + a5\n 68952: u64 [s1 + 0x210] = a0\n 68956: a0 = 0x40\n 68959: a1 = 0x20\n 68962: u64 [s1 + 0x290] = a3\n 68966: u64 [s1 + 0x280] = a4\n 68970: u64 [s1 + 0x288] = a5\n 68974: ra = 544, jump @0\n      : @868 [@dyn 272] (gas: 80)\n 68981: a1 = u64 [s1 + 0x210]\n 68985: a1 = reverse a1\n 68987: a2 = u64 [s1 + 0x218]\n 68991: a2 = reverse a2\n 68993: a3 = u64 [s1 + 0x220]\n 68997: a3 = reverse a3\n 68999: a4 = u64 [s1 + 0x230]\n 69003: a4 = reverse a4\n 69005: u8 [a0 + 0x18] = a4\n 69008: a5 = a4 >> 0x38\n 69011: u8 [a0 + 0x1f] = a5\n 69014: a5 = a4 >> 0x30\n 69017: u8 [a0 + 0x1e] = a5\n 69020: a5 = a4 >> 0x28\n 69023: u8 [a0 + 0x1d] = a5\n 69026: a5 = a4 >> 0x20\n 69029: u8 [a0 + 0x1c] = a5\n 69032: a5 = a4 >> 0x18\n 69035: u8 [a0 + 0x1b] = a5\n 69038: a5 = a4 >> 0x10\n 69041: u8 [a0 + 0x1a] = a5\n 69044: a4 = a4 >> 0x8\n 69047: u8 [a0 + 0x19] = a4\n 69050: u8 [a0 + 0x10] = a3\n 69053: a4 = a3 >> 0x38\n 69056: u8 [a0 + 0x17] = a4\n 69059: a4 = a3 >> 0x30\n 69062: u8 [a0 + 0x16] = a4\n 69065: a4 = a3 >> 0x28\n 69068: u8 [a0 + 0x15] = a4\n 69071: a4 = a3 >> 0x20\n 69074: u8 [a0 + 0x14] = a4\n 69077: a4 = a3 >> 0x18\n 69080: u8 [a0 + 0x13] = a4\n 69083: a4 = a3 >> 0x10\n 69086: u8 [a0 + 0x12] = a4\n 69089: a4 = u64 [s1 + 0x290]\n 69093: a3 = a3 >> 0x8\n 69096: u8 [a0 + 0x11] = a3\n 69099: u8 [a0 + 0x8] = a2\n 69102: a3 = a2 >> 0x38\n 69105: u8 [a0 + 0xf] = a3\n 69108: a3 = a2 >> 0x30\n 69111: u8 [a0 + 0xe] = a3\n 69114: a3 = a2 >> 0x28\n 69117: u8 [a0 + 0xd] = a3\n 69120: a3 = a2 >> 0x20\n 69123: u8 [a0 + 0xc] = a3\n 69126: a3 = a2 >> 0x18\n 69129: u8 [a0 + 0xb] = a3\n 69132: a3 = a2 >> 0x10\n 69135: u8 [a0 + 0xa] = a3\n 69138: a2 = a2 >> 0x8\n 69141: u8 [a0 + 0x9] = a2\n 69144: u8 [a0] = a1\n 69146: a2 = a1 >> 0x38\n 69149: u8 [a0 + 0x7] = a2\n 69152: a2 = a1 >> 0x30\n 69155: u8 [a0 + 0x6] = a2\n 69158: a2 = a1 >> 0x28\n 69161: u8 [a0 + 0x5] = a2\n 69164: a2 = a1 >> 0x20\n 69167: u8 [a0 + 0x4] = a2\n 69170: a2 = a1 >> 0x18\n 69173: u8 [a0 + 0x3] = a2\n 69176: a2 = a1 >> 0x10\n 69179: u8 [a0 + 0x2] = a2\n 69182: t0 = a1 >> 0x8\n 69185: a5 = u64 [s1 + 0x280]\n 69189: a2 = a4 | a5\n 69192: a3 = u64 [s1 + 0x298]\n 69196: a1 = u64 [s1 + 0x288]\n 69200: a3 = a3 | a1\n 69203: a2 = a2 | a3\n 69206: a2 = a2 >> 0x20\n 69209: a3 = a3 | a5\n 69212: a3 = a3 << 0x20\n 69215: a2 = a2 | a3\n 69218: u8 [a0 + 0x1] = t0\n 69221: jump @870 if a2 == 0\n      : @869 (gas: 1)\n 69224: jump @799\n      : @870 (gas: 4)\n 69227: i32 a0 = a4 + 0\n 69229: a1 = 0x20\n 69232: u64 [s1 + 0x230] = a0\n 69236: ra = 546, jump @0\n      : @871 [@dyn 273] (gas: 76)\n 69243: a1 = u64 [s1 + 0x1d0]\n 69247: a1 = reverse a1\n 69249: a2 = u64 [s1 + 0x1d8]\n 69253: a2 = reverse a2\n 69255: a3 = u64 [s1 + 0x1e0]\n 69259: a3 = reverse a3\n 69261: a4 = u64 [s1 + 0x1e8]\n 69265: a4 = reverse a4\n 69267: a5 = a4 >> 0x38\n 69270: u8 [a0 + 0x1f] = a5\n 69273: a5 = a4 >> 0x30\n 69276: u8 [a0 + 0x1e] = a5\n 69279: a5 = a4 >> 0x28\n 69282: u8 [a0 + 0x1d] = a5\n 69285: a5 = a4 >> 0x20\n 69288: u8 [a0 + 0x1c] = a5\n 69291: a5 = a4 >> 0x18\n 69294: u8 [a0 + 0x1b] = a5\n 69297: a5 = a4 >> 0x10\n 69300: u8 [a0 + 0x1a] = a5\n 69303: a5 = a4 >> 0x8\n 69306: u8 [a0 + 0x19] = a5\n 69309: u8 [a0 + 0x18] = a4\n 69312: u8 [a0 + 0x10] = a3\n 69315: a4 = a3 >> 0x38\n 69318: u8 [a0 + 0x17] = a4\n 69321: a4 = a3 >> 0x30\n 69324: u8 [a0 + 0x16] = a4\n 69327: a4 = a3 >> 0x28\n 69330: u8 [a0 + 0x15] = a4\n 69333: a4 = a3 >> 0x20\n 69336: u8 [a0 + 0x14] = a4\n 69339: a4 = a3 >> 0x18\n 69342: u8 [a0 + 0x13] = a4\n 69345: a4 = a3 >> 0x10\n 69348: u8 [a0 + 0x12] = a4\n 69351: a3 = a3 >> 0x8\n 69354: u8 [a0 + 0x11] = a3\n 69357: u8 [a0 + 0x8] = a2\n 69360: a3 = a2 >> 0x38\n 69363: u8 [a0 + 0xf] = a3\n 69366: a3 = a2 >> 0x30\n 69369: u8 [a0 + 0xe] = a3\n 69372: a3 = a2 >> 0x28\n 69375: u8 [a0 + 0xd] = a3\n 69378: a3 = a2 >> 0x20\n 69381: u8 [a0 + 0xc] = a3\n 69384: a3 = a2 >> 0x18\n 69387: u8 [a0 + 0xb] = a3\n 69390: a3 = a2 >> 0x10\n 69393: u8 [a0 + 0xa] = a3\n 69396: a2 = a2 >> 0x8\n 69399: u8 [a0 + 0x9] = a2\n 69402: u8 [a0] = a1\n 69404: a2 = a1 >> 0x38\n 69407: u8 [a0 + 0x7] = a2\n 69410: a2 = a1 >> 0x30\n 69413: u8 [a0 + 0x6] = a2\n 69416: a2 = a1 >> 0x28\n 69419: u8 [a0 + 0x5] = a2\n 69422: a2 = a1 >> 0x20\n 69425: u8 [a0 + 0x4] = a2\n 69428: a2 = a1 >> 0x18\n 69431: u8 [a0 + 0x3] = a2\n 69434: a2 = a1 >> 0x10\n 69437: u8 [a0 + 0x2] = a2\n 69440: a1 = a1 >> 0x8\n 69443: a2 = u64 [s1 + 0x228]\n 69447: a3 = u64 [s1 + 0x290]\n 69451: a2 = a3 <u a2\n 69454: a3 = u64 [s1 + 0x298]\n 69458: a2 = 0 if a3 != 0\n 69460: a3 = u64 [s1 + 0x1c8]\n 69464: a2 = 0 if a3 != 0\n 69466: u8 [a0 + 0x1] = a1\n 69469: jump @873 if a2 != 0\n      : @872 (gas: 1)\n 69472: jump @799\n      : @873 (gas: 17)\n 69475: a0 = u64 [s1 + 0x1f0]\n 69479: a0 = reverse a0\n 69481: u64 [s1 + 0x280] = a0\n 69485: a0 = u64 [s1 + 0x1f8]\n 69489: a0 = reverse a0\n 69491: u64 [s1 + 0x288] = a0\n 69495: a0 = u64 [s1 + 0x200]\n 69499: a0 = reverse a0\n 69501: u64 [s1 + 0x290] = a0\n 69505: a0 = u64 [s1 + 0x208]\n 69509: a0 = reverse a0\n 69511: u64 [s1 + 0x298] = a0\n 69515: a0 = u64 [s1 + 0x230]\n 69519: i32 a0 = a0 + 0x20\n 69522: a1 = 0x20\n 69525: u64 [s1 + 0x220] = a0\n 69529: ra = 548, jump @0\n      : @874 [@dyn 274] (gas: 92)\n 69536: a1 = u64 [s1 + 0x190]\n 69540: a1 = reverse a1\n 69542: a2 = a1 >> 0x38\n 69545: u8 [a0 + 0x1f] = a2\n 69548: a2 = a1 >> 0x30\n 69551: u8 [a0 + 0x1e] = a2\n 69554: a2 = a1 >> 0x28\n 69557: u8 [a0 + 0x1d] = a2\n 69560: a2 = a1 >> 0x20\n 69563: u8 [a0 + 0x1c] = a2\n 69566: a2 = a1 >> 0x18\n 69569: u8 [a0 + 0x1b] = a2\n 69572: a2 = a1 >> 0x10\n 69575: u8 [a0 + 0x1a] = a2\n 69578: a2 = a1 >> 0x8\n 69581: u8 [a0 + 0x19] = a2\n 69584: a2 = u64 [s1 + 0x198]\n 69588: a2 = reverse a2\n 69590: u8 [a0 + 0x18] = a1\n 69593: a1 = a2 >> 0x38\n 69596: u8 [a0 + 0x17] = a1\n 69599: a1 = a2 >> 0x30\n 69602: u8 [a0 + 0x16] = a1\n 69605: a1 = a2 >> 0x28\n 69608: u8 [a0 + 0x15] = a1\n 69611: a1 = a2 >> 0x20\n 69614: u8 [a0 + 0x14] = a1\n 69617: a1 = a2 >> 0x18\n 69620: u8 [a0 + 0x13] = a1\n 69623: a1 = a2 >> 0x10\n 69626: u8 [a0 + 0x12] = a1\n 69629: a1 = u64 [s1 + 0x1a0]\n 69633: a1 = reverse a1\n 69635: u8 [a0 + 0x10] = a2\n 69638: a2 = a2 >> 0x8\n 69641: u8 [a0 + 0x11] = a2\n 69644: a2 = a1 >> 0x38\n 69647: u8 [a0 + 0xf] = a2\n 69650: a2 = a1 >> 0x30\n 69653: u8 [a0 + 0xe] = a2\n 69656: a2 = a1 >> 0x28\n 69659: u8 [a0 + 0xd] = a2\n 69662: a2 = a1 >> 0x20\n 69665: u8 [a0 + 0xc] = a2\n 69668: a2 = a1 >> 0x18\n 69671: u8 [a0 + 0xb] = a2\n 69674: a2 = a1 >> 0x10\n 69677: u8 [a0 + 0xa] = a2\n 69680: a2 = u64 [s1 + 0x1a8]\n 69684: a2 = reverse a2\n 69686: u8 [a0 + 0x8] = a1\n 69689: a1 = a1 >> 0x8\n 69692: u8 [a0 + 0x9] = a1\n 69695: a1 = a2 >> 0x38\n 69698: u8 [a0 + 0x7] = a1\n 69701: a1 = a2 >> 0x30\n 69704: u8 [a0 + 0x6] = a1\n 69707: a1 = a2 >> 0x28\n 69710: u8 [a0 + 0x5] = a1\n 69713: a1 = a2 >> 0x20\n 69716: u8 [a0 + 0x4] = a1\n 69719: a1 = a2 >> 0x18\n 69722: u8 [a0 + 0x3] = a1\n 69725: a1 = a2 >> 0x10\n 69728: u8 [a0 + 0x2] = a1\n 69731: u8 [a0] = a2\n 69733: a2 = a2 >> 0x8\n 69736: u8 [a0 + 0x1] = a2\n 69739: a1 = s1 + 0x2218\n 69743: a0 = u64 [s1 + 0x280]\n 69747: u64 [a1 + 0x200] = a0\n 69751: a0 = u64 [s1 + 0x288]\n 69755: u64 [a1 + 0x1f8] = a0\n 69759: a0 = u64 [s1 + 0x290]\n 69763: u64 [a1 + 0x1f0] = a0\n 69767: a0 = u64 [s1 + 0x298]\n 69771: u64 [a1 + 0x1e8] = a0\n 69775: u64 [a1 + 544] = 0\n 69779: u64 [a1 + 536] = 0\n 69783: u64 [a1 + 528] = 0\n 69787: u64 [a1 + 520] = 0\n 69791: u32 [a1 + 552] = 0x20\n 69796: a0 = s1 + 0x2000\n 69800: i32 a1 = a0 + 0x400\n 69804: a0 = s1 + 0x2000\n 69808: i32 a3 = a0 + 0x420\n 69812: a0 = s1 + 0x2000\n 69816: i32 a4 = a0 + 0x440\n 69820: a2 = 0xffffffffffffffff\n 69823: a0 = 0\n 69825: ecalli 9 // 'get_storage'\n 69827: fallthrough\n      : @875 (gas: 11)\n 69828: a3 = s1 + 0x2218\n 69832: t0 = u64 [a3 + 0x220]\n 69836: a5 = u64 [a3 + 0x218]\n 69840: a4 = u64 [a3 + 0x210]\n 69844: a0 = t0 >u 0\n 69846: a1 = a5 >u 0\n 69848: a1 = a0 if t0 != 0\n 69851: a0 = a5 | t0\n 69854: a2 = a4 >u 0\n 69856: a2 = a1 if a0 != 0\n 69859: jump @906 if a2 != 0\n      : @876 (gas: 59)\n 69863: a0 = u64 [a3 + 0x208]\n 69867: u64 [s1 + 0x218] = a0\n 69871: a0 = a0 + 0x1\n 69874: a1 = a0 <u 0x1\n 69877: a1 = a1 + a4\n 69880: u64 [a3 + 0x208] = a0\n 69884: a0 = a0 | a1\n 69887: u64 [a3 + 0x210] = a1\n 69891: a0 = a0 <u 0x1\n 69894: a0 = a0 + a5\n 69897: u64 [a3 + 0x218] = a0\n 69901: a0 = a0 <u a5\n 69904: a0 = a0 + t0\n 69907: u64 [a3 + 0x220] = a0\n 69911: a0 = u64 [s1 + 0x290]\n 69915: u64 [a3 + 0x1f0] = a0\n 69919: a0 = u64 [s1 + 0x298]\n 69923: u64 [a3 + 0x1e8] = a0\n 69927: a0 = u64 [s1 + 0x288]\n 69931: u64 [a3 + 0x1f8] = a0\n 69935: a0 = u64 [s1 + 0x280]\n 69939: u64 [a3 + 0x200] = a0\n 69943: a0 = s1 + 0x2000\n 69947: i32 a1 = a0 + 0x400\n 69951: a0 = s1 + 0x2000\n 69955: i32 a3 = a0 + 0x420\n 69959: a2 = 0xffffffffffffffff\n 69962: u64 [s1 + 0x210] = a4\n 69966: a4 = 0x20\n 69969: a0 = 0\n 69971: u64 [s1 + 0x208] = a5\n 69975: u64 [s1 + 0x200] = t0\n 69979: ecalli 17 // 'set_storage'\n 69981: a1 = s1 + 0x7ff\n 69985: a1 = a1 + 0x219\n 69989: a0 = u64 [s1 + 0x200]\n 69993: u64 [a1 + 0x80] = a0\n 69997: a0 = u64 [s1 + 0x208]\n 70001: u64 [a1 + 0x78] = a0\n 70004: a0 = u64 [s1 + 0x210]\n 70008: u64 [a1 + 0x70] = a0\n 70011: a0 = u64 [s1 + 0x218]\n 70015: u64 [a1 + 0x68] = a0\n 70018: a0 = u64 [s1 + 0x280]\n 70022: u64 [a1 + 0xa0] = a0\n 70026: a0 = u64 [s1 + 0x288]\n 70030: u64 [a1 + 0x98] = a0\n 70034: a0 = u64 [s1 + 0x290]\n 70038: u64 [a1 + 0x90] = a0\n 70042: a4 = a1\n 70044: a0 = s1 + 0x7ff\n 70048: a0 = a0 + 0x2c1\n 70052: a1 = s1 + 0x7ff\n 70056: a1 = a1 + 0x2a1\n 70060: a2 = s1 + 0x7ff\n 70064: a2 = a2 + 0x281\n 70068: a3 = u64 [s1 + 0x298]\n 70072: u64 [a4 + 0x88] = a3\n 70076: ra = 550, jump @955\n      : @877 [@dyn 275] (gas: 10)\n 70082: a4 = s1 + 0x7ff\n 70086: a4 = a4 + 0x219\n 70090: a0 = u64 [a4 + 0xe0]\n 70094: a1 = u64 [a4 + 0xd8]\n 70098: a2 = u64 [a4 + 0xd0]\n 70102: a3 = u64 [a4 + 0xc8]\n 70106: a0 = a0 | a2\n 70109: a1 = a1 | a3\n 70112: a0 = a0 | a1\n 70115: jump @908 if a0 != 0\n      : @878 (gas: 11)\n 70119: a0 = u64 [a4 + 0xc0]\n 70123: u64 [s1 + 0x298] = a0\n 70127: a0 = u64 [a4 + 0xb8]\n 70131: u64 [s1 + 0x290] = a0\n 70135: a0 = u64 [a4 + 0xb0]\n 70139: u64 [s1 + 0x288] = a0\n 70143: a0 = u64 [a4 + 0xa8]\n 70147: u64 [s1 + 0x280] = a0\n 70151: a1 = 0x20\n 70154: a0 = u64 [s1 + 0x230]\n 70158: ra = 552, jump @0\n      : @879 [@dyn 276] (gas: 116)\n 70165: a1 = u8 [a0 + 0x1]\n 70168: a2 = u8 [a0]\n 70170: a3 = u8 [a0 + 0x2]\n 70173: a4 = u8 [a0 + 0x3]\n 70176: a1 = a1 << 0x8\n 70179: a1 = a1 | a2\n 70182: a3 = a3 << 0x10\n 70185: a4 = a4 << 0x18\n 70188: a3 = a3 | a4\n 70191: a1 = a1 | a3\n 70194: a2 = u8 [a0 + 0x5]\n 70197: a3 = u8 [a0 + 0x4]\n 70200: a4 = u8 [a0 + 0x6]\n 70203: a5 = u8 [a0 + 0x7]\n 70206: a2 = a2 << 0x8\n 70209: a2 = a2 | a3\n 70212: a4 = a4 << 0x10\n 70215: a5 = a5 << 0x18\n 70218: a4 = a4 | a5\n 70221: a2 = a2 | a4\n 70224: a2 = a2 << 0x20\n 70227: t0 = a2 | a1\n 70230: a2 = u8 [a0 + 0x9]\n 70233: a3 = u8 [a0 + 0x8]\n 70236: a4 = u8 [a0 + 0xa]\n 70239: a5 = u8 [a0 + 0xb]\n 70242: a2 = a2 << 0x8\n 70245: a2 = a2 | a3\n 70248: a4 = a4 << 0x10\n 70251: a5 = a5 << 0x18\n 70254: a4 = a4 | a5\n 70257: a2 = a2 | a4\n 70260: a3 = u8 [a0 + 0xd]\n 70263: a4 = u8 [a0 + 0xc]\n 70266: a5 = u8 [a0 + 0xe]\n 70269: a1 = u8 [a0 + 0xf]\n 70272: a3 = a3 << 0x8\n 70275: a3 = a3 | a4\n 70278: a5 = a5 << 0x10\n 70281: a1 = a1 << 0x18\n 70284: a1 = a1 | a5\n 70287: a1 = a1 | a3\n 70290: a1 = a1 << 0x20\n 70293: t1 = a1 | a2\n 70296: a1 = u8 [a0 + 0x11]\n 70299: a3 = u8 [a0 + 0x10]\n 70302: a4 = u8 [a0 + 0x12]\n 70305: a5 = u8 [a0 + 0x13]\n 70308: a1 = a1 << 0x8\n 70311: a1 = a1 | a3\n 70314: a4 = a4 << 0x10\n 70317: a5 = a5 << 0x18\n 70320: a4 = a4 | a5\n 70323: a1 = a1 | a4\n 70326: a3 = u8 [a0 + 0x15]\n 70329: a4 = u8 [a0 + 0x14]\n 70332: a5 = u8 [a0 + 0x16]\n 70335: a2 = u8 [a0 + 0x17]\n 70338: a3 = a3 << 0x8\n 70341: a3 = a3 | a4\n 70344: a5 = a5 << 0x10\n 70347: a2 = a2 << 0x18\n 70350: a2 = a2 | a5\n 70353: a2 = a2 | a3\n 70356: a2 = a2 << 0x20\n 70359: a3 = a2 | a1\n 70362: a1 = u8 [a0 + 0x19]\n 70365: a2 = u8 [a0 + 0x18]\n 70368: a4 = u8 [a0 + 0x1a]\n 70371: a5 = u8 [a0 + 0x1b]\n 70374: a1 = a1 << 0x8\n 70377: a1 = a1 | a2\n 70380: a4 = a4 << 0x10\n 70383: a5 = a5 << 0x18\n 70386: a4 = a4 | a5\n 70389: a1 = a1 | a4\n 70392: a2 = u8 [a0 + 0x1d]\n 70395: a4 = u8 [a0 + 0x1c]\n 70398: a5 = u8 [a0 + 0x1e]\n 70401: a0 = u8 [a0 + 0x1f]\n 70404: a2 = a2 << 0x8\n 70407: a2 = a2 | a4\n 70410: a5 = a5 << 0x10\n 70413: a0 = a0 << 0x18\n 70416: a0 = a0 | a5\n 70419: a0 = a0 | a2\n 70422: a0 = a0 << 0x20\n 70425: a0 = a0 | a1\n 70428: a1 = reverse t0\n 70430: a2 = s1 + 0x2218\n 70434: u64 [a2 + 0x220] = a1\n 70438: a1 = reverse t1\n 70440: u64 [a2 + 0x218] = a1\n 70444: a1 = reverse a3\n 70446: u64 [a2 + 0x210] = a1\n 70450: a0 = reverse a0\n 70452: u64 [a2 + 0x208] = a0\n 70456: a0 = u64 [s1 + 0x298]\n 70460: u64 [a2 + 0x200] = a0\n 70464: a0 = u64 [s1 + 0x290]\n 70468: u64 [a2 + 0x1f8] = a0\n 70472: a0 = u64 [s1 + 0x288]\n 70476: u64 [a2 + 0x1f0] = a0\n 70480: a0 = u64 [s1 + 0x280]\n 70484: u64 [a2 + 0x1e8] = a0\n 70488: a0 = s1 + 0x2000\n 70492: i32 a1 = a0 + 0x400\n 70496: a0 = s1 + 0x2000\n 70500: i32 a3 = a0 + 0x420\n 70504: a2 = 0xffffffffffffffff\n 70507: a4 = 0x20\n 70510: a0 = 0\n 70512: ecalli 17 // 'set_storage'\n 70514: a1 = 0x20\n 70517: a0 = u64 [s1 + 0x220]\n 70521: ra = 554, jump @0\n      : @880 [@dyn 277] (gas: 122)\n 70528: a1 = u8 [a0 + 0x1]\n 70531: a2 = u8 [a0]\n 70533: a3 = u8 [a0 + 0x2]\n 70536: a4 = u8 [a0 + 0x3]\n 70539: a1 = a1 << 0x8\n 70542: a1 = a1 | a2\n 70545: a3 = a3 << 0x10\n 70548: a4 = a4 << 0x18\n 70551: a3 = a3 | a4\n 70554: a1 = a1 | a3\n 70557: a2 = u8 [a0 + 0x5]\n 70560: a3 = u8 [a0 + 0x4]\n 70563: a4 = u8 [a0 + 0x6]\n 70566: a5 = u8 [a0 + 0x7]\n 70569: a2 = a2 << 0x8\n 70572: a2 = a2 | a3\n 70575: a4 = a4 << 0x10\n 70578: a5 = a5 << 0x18\n 70581: a4 = a4 | a5\n 70584: a2 = a2 | a4\n 70587: a2 = a2 << 0x20\n 70590: t0 = a2 | a1\n 70593: a2 = u8 [a0 + 0x9]\n 70596: a3 = u8 [a0 + 0x8]\n 70599: a4 = u8 [a0 + 0xa]\n 70602: a5 = u8 [a0 + 0xb]\n 70605: a2 = a2 << 0x8\n 70608: a2 = a2 | a3\n 70611: a4 = a4 << 0x10\n 70614: a5 = a5 << 0x18\n 70617: a4 = a4 | a5\n 70620: a2 = a2 | a4\n 70623: a3 = u8 [a0 + 0xd]\n 70626: a4 = u8 [a0 + 0xc]\n 70629: a5 = u8 [a0 + 0xe]\n 70632: a1 = u8 [a0 + 0xf]\n 70635: a3 = a3 << 0x8\n 70638: a3 = a3 | a4\n 70641: a5 = a5 << 0x10\n 70644: a1 = a1 << 0x18\n 70647: a1 = a1 | a5\n 70650: a1 = a1 | a3\n 70653: a1 = a1 << 0x20\n 70656: t1 = a1 | a2\n 70659: a1 = u8 [a0 + 0x11]\n 70662: a3 = u8 [a0 + 0x10]\n 70665: a4 = u8 [a0 + 0x12]\n 70668: a5 = u8 [a0 + 0x13]\n 70671: a1 = a1 << 0x8\n 70674: a1 = a1 | a3\n 70677: a4 = a4 << 0x10\n 70680: a5 = a5 << 0x18\n 70683: a4 = a4 | a5\n 70686: a1 = a1 | a4\n 70689: a3 = u8 [a0 + 0x15]\n 70692: a4 = u8 [a0 + 0x14]\n 70695: a5 = u8 [a0 + 0x16]\n 70698: a2 = u8 [a0 + 0x17]\n 70701: a3 = a3 << 0x8\n 70704: a3 = a3 | a4\n 70707: a5 = a5 << 0x10\n 70710: a2 = a2 << 0x18\n 70713: a2 = a2 | a5\n 70716: a2 = a2 | a3\n 70719: a2 = a2 << 0x20\n 70722: t2 = a2 | a1\n 70725: a1 = u8 [a0 + 0x19]\n 70728: a2 = u8 [a0 + 0x18]\n 70731: a4 = u8 [a0 + 0x1a]\n 70734: a5 = u8 [a0 + 0x1b]\n 70737: a1 = a1 << 0x8\n 70740: a1 = a1 | a2\n 70743: a4 = a4 << 0x10\n 70746: a5 = a5 << 0x18\n 70749: a4 = a4 | a5\n 70752: a1 = a1 | a4\n 70755: a2 = u8 [a0 + 0x1d]\n 70758: a4 = u8 [a0 + 0x1c]\n 70761: a5 = u8 [a0 + 0x1e]\n 70764: a0 = u8 [a0 + 0x1f]\n 70767: a2 = a2 << 0x8\n 70770: a2 = a2 | a4\n 70773: a5 = a5 << 0x10\n 70776: a0 = a0 << 0x18\n 70779: a0 = a0 | a5\n 70782: a0 = a0 | a2\n 70785: a0 = a0 << 0x20\n 70788: a0 = a0 | a1\n 70791: a1 = u64 [s1 + 0x280]\n 70795: a1 = a1 + 0x1\n 70798: a2 = a1 <u 0x1\n 70801: a3 = u64 [s1 + 0x288]\n 70805: a2 = a2 + a3\n 70808: a4 = a1 | a2\n 70811: a4 = a4 <u 0x1\n 70814: a3 = u64 [s1 + 0x290]\n 70818: a4 = a4 + a3\n 70821: a5 = a4 <u a3\n 70824: a3 = u64 [s1 + 0x298]\n 70828: a5 = a5 + a3\n 70831: a3 = s1 + 0x2218\n 70835: u64 [a3 + 0x200] = a5\n 70839: u64 [a3 + 0x1f8] = a4\n 70843: u64 [a3 + 0x1f0] = a2\n 70847: u64 [a3 + 0x1e8] = a1\n 70851: a1 = reverse t0\n 70853: u64 [a3 + 0x220] = a1\n 70857: a1 = reverse t1\n 70859: u64 [a3 + 0x218] = a1\n 70863: a1 = reverse t2\n 70865: u64 [a3 + 0x210] = a1\n 70869: a0 = reverse a0\n 70871: u64 [a3 + 0x208] = a0\n 70875: a0 = s1 + 0x2000\n 70879: i32 a1 = a0 + 0x400\n 70883: a0 = s1 + 0x2000\n 70887: i32 a3 = a0 + 0x420\n 70891: a2 = 0xffffffffffffffff\n 70894: a4 = 0x20\n 70897: a0 = 0\n 70899: ecalli 17 // 'set_storage'\n 70901: fallthrough\n      : @881 (gas: 32)\n 70902: a2 = u64 [s1 + 0x278]\n 70906: a2 = a2 + 0x1\n 70909: a0 = a2 <u 0x1\n 70912: a4 = u64 [s1 + 0x248]\n 70916: a4 = a4 + a0\n 70919: a0 = a2 | a4\n 70922: a0 = a0 <u 0x1\n 70925: a1 = u64 [s1 + 0x238]\n 70929: a0 = a0 + a1\n 70932: a1 = a0 <u a1\n 70935: a5 = u64 [s1 + 0x240]\n 70939: a5 = a5 + a1\n 70942: a1 = u64 [s1 + 0x258]\n 70946: u64 [s1 + 0x278] = a2\n 70950: a1 = a2 <u a1\n 70953: a3 = u64 [s1 + 0x260]\n 70957: a2 = a4 ^ a3\n 70960: u64 [s1 + 0x248] = a4\n 70964: a3 = a4 <u a3\n 70967: a3 = a1 if a2 == 0\n 70970: a1 = u64 [s1 + 0x268]\n 70974: t0 = a0 <u a1\n 70977: a4 = u64 [s1 + 0x270]\n 70981: a2 = a5 ^ a4\n 70984: u64 [s1 + 0x240] = a5\n 70988: a4 = a5 <u a4\n 70991: a4 = t0 if a2 == 0\n 70994: a1 = a1 ^ a0\n 70997: a1 = a1 | a2\n 71000: a4 = a3 if a1 == 0\n 71003: u64 [s1 + 0x238] = a0\n 71007: jump @856 if a4 != 0\n      : @882 (gas: 3)\n 71011: a0 = 0x40\n 71014: a1 = 0x20\n 71017: ra = 556, jump @0\n      : @883 [@dyn 278] (gas: 151)\n 71024: a1 = u8 [a0 + 0x1]\n 71027: a2 = u8 [a0]\n 71029: a3 = u8 [a0 + 0x2]\n 71032: a4 = u8 [a0 + 0x3]\n 71035: a1 = a1 << 0x8\n 71038: a1 = a1 | a2\n 71041: a3 = a3 << 0x10\n 71044: a4 = a4 << 0x18\n 71047: a3 = a3 | a4\n 71050: a1 = a1 | a3\n 71053: a2 = u8 [a0 + 0x5]\n 71056: a3 = u8 [a0 + 0x4]\n 71059: a4 = u8 [a0 + 0x6]\n 71062: a5 = u8 [a0 + 0x7]\n 71065: a2 = a2 << 0x8\n 71068: a2 = a2 | a3\n 71071: a4 = a4 << 0x10\n 71074: a5 = a5 << 0x18\n 71077: a4 = a4 | a5\n 71080: a2 = a2 | a4\n 71083: a2 = a2 << 0x20\n 71086: t0 = a2 | a1\n 71089: a2 = u8 [a0 + 0x9]\n 71092: a3 = u8 [a0 + 0x8]\n 71095: a4 = u8 [a0 + 0xa]\n 71098: a5 = u8 [a0 + 0xb]\n 71101: a2 = a2 << 0x8\n 71104: a2 = a2 | a3\n 71107: a4 = a4 << 0x10\n 71110: a5 = a5 << 0x18\n 71113: a4 = a4 | a5\n 71116: a2 = a2 | a4\n 71119: a3 = u8 [a0 + 0xd]\n 71122: a4 = u8 [a0 + 0xc]\n 71125: a5 = u8 [a0 + 0xe]\n 71128: a1 = u8 [a0 + 0xf]\n 71131: a3 = a3 << 0x8\n 71134: a3 = a3 | a4\n 71137: a5 = a5 << 0x10\n 71140: a1 = a1 << 0x18\n 71143: a1 = a1 | a5\n 71146: a1 = a1 | a3\n 71149: a1 = a1 << 0x20\n 71152: t1 = a1 | a2\n 71155: a1 = u8 [a0 + 0x11]\n 71158: a3 = u8 [a0 + 0x10]\n 71161: a4 = u8 [a0 + 0x12]\n 71164: a5 = u8 [a0 + 0x13]\n 71167: a1 = a1 << 0x8\n 71170: a1 = a1 | a3\n 71173: a4 = a4 << 0x10\n 71176: a5 = a5 << 0x18\n 71179: a4 = a4 | a5\n 71182: a1 = a1 | a4\n 71185: a3 = u8 [a0 + 0x15]\n 71188: a4 = u8 [a0 + 0x14]\n 71191: a5 = u8 [a0 + 0x16]\n 71194: a2 = u8 [a0 + 0x17]\n 71197: a3 = a3 << 0x8\n 71200: a3 = a3 | a4\n 71203: a5 = a5 << 0x10\n 71206: a2 = a2 << 0x18\n 71209: a2 = a2 | a5\n 71212: a2 = a2 | a3\n 71215: a2 = a2 << 0x20\n 71218: a3 = a2 | a1\n 71221: a1 = u8 [a0 + 0x19]\n 71224: a2 = u8 [a0 + 0x18]\n 71227: a4 = u8 [a0 + 0x1a]\n 71230: a5 = u8 [a0 + 0x1b]\n 71233: a1 = a1 << 0x8\n 71236: a1 = a1 | a2\n 71239: a4 = a4 << 0x10\n 71242: a5 = a5 << 0x18\n 71245: a4 = a4 | a5\n 71248: a1 = a1 | a4\n 71251: a2 = u8 [a0 + 0x1d]\n 71254: a4 = u8 [a0 + 0x1c]\n 71257: a5 = u8 [a0 + 0x1e]\n 71260: a0 = u8 [a0 + 0x1f]\n 71263: a2 = a2 << 0x8\n 71266: a2 = a2 | a4\n 71269: a5 = a5 << 0x10\n 71272: a0 = a0 << 0x18\n 71275: a0 = a0 | a5\n 71278: a0 = a0 | a2\n 71281: a0 = a0 << 0x20\n 71284: a0 = a0 | a1\n 71287: a5 = reverse a0\n 71289: u64 [s1 + 0x298] = a5\n 71293: a2 = reverse a3\n 71295: u64 [s1 + 0x280] = a2\n 71299: a1 = reverse t1\n 71301: u64 [s1 + 0x288] = a1\n 71305: a3 = reverse t0\n 71307: u64 [s1 + 0x290] = a3\n 71311: a0 = u64 [s1 + 0x30]\n 71314: a4 = s1 + 0x1000\n 71318: u64 [a4 + 0xfffffffffffff9b8] = a0\n 71322: a0 = u64 [s1 + 0x38]\n 71325: a4 = s1 + 0x1000\n 71329: u64 [a4 + 0xfffffffffffff9b0] = a0\n 71333: a0 = u64 [s1 + 0x40]\n 71336: a4 = s1 + 0x1000\n 71340: u64 [a4 + 0xfffffffffffff9a8] = a0\n 71344: a0 = u64 [s1 + 0x48]\n 71347: a4 = s1 + 0x1000\n 71351: u64 [a4 + 0xfffffffffffff9a0] = a0\n 71355: a0 = u64 [s1 + 0x50]\n 71358: a4 = s1 + 0x1000\n 71362: u64 [a4 + 0xfffffffffffff9d8] = a0\n 71366: a0 = u64 [s1 + 0x58]\n 71369: a4 = s1 + 0x1000\n 71373: u64 [a4 + 0xfffffffffffff9d0] = a0\n 71377: a0 = u64 [s1 + 0x60]\n 71380: a4 = s1 + 0x1000\n 71384: u64 [a4 + 0xfffffffffffff9c8] = a0\n 71388: a0 = u64 [s1 + 0x68]\n 71391: a4 = s1 + 0x1000\n 71395: u64 [a4 + 0xfffffffffffff9c0] = a0\n 71399: a0 = u64 [s1 + 0x70]\n 71402: a4 = s1 + 0x1000\n 71406: u64 [a4 + 0xfffffffffffff9f8] = a0\n 71410: a0 = u64 [s1 + 0x78]\n 71413: a4 = s1 + 0x1000\n 71417: u64 [a4 + 0xfffffffffffff9f0] = a0\n 71421: a0 = u64 [s1 + 0x80]\n 71425: a4 = s1 + 0x1000\n 71429: u64 [a4 + 0xfffffffffffff9e8] = a0\n 71433: a0 = u64 [s1 + 0x88]\n 71437: a4 = s1 + 0x1000\n 71441: u64 [a4 + 0xfffffffffffff9e0] = a0\n 71445: a0 = s1 + 0x7ff\n 71449: a0 = a0 + 0x219\n 71453: u64 [a0] = a3\n 71455: u64 [a0 + 0xfffffffffffffff8] = a1\n 71458: a0 = s1 + 0x1000\n 71462: u64 [a0 + 0xfffffffffffffa08] = a2\n 71466: a0 = s1 + 0x7ff\n 71470: a0 = a0 + 0x221\n 71474: a1 = s1 + 0x7ff\n 71478: a1 = a1 + 0x201\n 71482: a2 = s1 + 0x7ff\n 71486: a2 = a2 + 0x1e1\n 71490: a3 = s1 + 0x7ff\n 71494: a3 = a3 + 0x1c1\n 71498: a4 = s1 + 0x7ff\n 71502: a4 = a4 + 0x1a1\n 71506: t0 = s1 + 0x1000\n 71510: u64 [t0 + 0xfffffffffffffa00] = a5\n 71514: ra = 558, jump @1153\n      : @884 [@dyn 279] (gas: 13)\n 71520: a0 = u64 [s1 + 0x280]\n 71524: a2 = a0\n 71526: a1 = u64 [s1 + 0x290]\n 71530: a0 = a0 | a1\n 71533: a3 = u64 [s1 + 0x288]\n 71537: a1 = u64 [s1 + 0x298]\n 71541: a1 = a1 | a3\n 71544: a1 = a1 | a0\n 71547: a1 = a1 >> 0x20\n 71550: a0 = a0 | a3\n 71553: a0 = a0 << 0x20\n 71556: a0 = a0 | a1\n 71559: jump @886 if a0 == 0\n      : @885 (gas: 1)\n 71562: jump @799\n      : @886 (gas: 34)\n 71565: a4 = a3\n 71567: a0 = s1 + 0x7ff\n 71571: a0 = a0 + 0x219\n 71575: a1 = u64 [a0 + 0x10]\n 71578: a3 = u64 [a0 + 0x20]\n 71581: u64 [s1 + 0x278] = a3\n 71585: t1 = u64 [a0 + 0x8]\n 71588: a3 = u64 [a0 + 0x18]\n 71591: ra = a1 ^ a2\n 71594: a5 = a1 <u a2\n 71597: t2 = u64 [s1 + 0x298]\n 71601: t0 = t1 <u t2\n 71604: a5 = t0 if ra == 0\n 71607: a0 = a4\n 71609: a4 = a3 - a4\n 71612: ra = a4 - a5\n 71615: a4 = a4 <u a5\n 71618: a3 = a3 <u a0\n 71621: a0 = u64 [s1 + 0x290]\n 71625: a5 = u64 [s1 + 0x278]\n 71629: a5 = a5 - a0\n 71632: a5 = a5 - a3\n 71635: a5 = a5 - a4\n 71638: a0 = a1 - a2\n 71641: a0 = a0 - t0\n 71644: a1 = t1 - t2\n 71647: a0 = a0 | a5\n 71650: a3 = a1 | ra\n 71653: a3 = a3 | a0\n 71656: a0 = a0 | ra\n 71659: a3 = a3 >> 0x20\n 71662: a0 = a0 << 0x20\n 71665: a0 = a0 | a3\n 71668: jump @888 if a0 == 0\n      : @887 (gas: 1)\n 71671: jump @799\n      : @888 (gas: 30)\n 71674: a0 = u64 [s1 + 0x10]\n 71677: a2 = s1 + 0x1000\n 71681: u64 [a2 + 0xfffffffffffff960] = a0\n 71685: a0 = u64 [s1 + 0x18]\n 71688: a2 = s1 + 0x1000\n 71692: u64 [a2 + 0xfffffffffffff968] = a0\n 71696: a0 = u64 [0x20060]\n 71701: a2 = u64 [0x20068]\n 71706: a3 = u64 [0x20070]\n 71711: a4 = u64 [0x20078]\n 71716: a5 = s1 + 0x1000\n 71720: u64 [a5 + 0xfffffffffffff998] = a0\n 71724: a0 = s1 + 0x1000\n 71728: u64 [a0 + 0xfffffffffffff990] = a2\n 71732: a0 = s1 + 0x1000\n 71736: u64 [a0 + 0xfffffffffffff988] = a3\n 71740: a0 = s1 + 0x1000\n 71744: u64 [a0 + 0xfffffffffffff980] = a4\n 71748: a0 = u64 [s1 + 0x20]\n 71751: a2 = s1 + 0x1000\n 71755: u64 [a2 + 0xfffffffffffff970] = a0\n 71759: a2 = s1 + 0x7ff\n 71763: a2 = a2 + 0x181\n 71767: a3 = s1 + 0x7ff\n 71771: a3 = a3 + 0x161\n 71775: a0 = u64 [s1 + 0x28]\n 71778: a4 = s1 + 0x1000\n 71782: u64 [a4 + 0xfffffffffffff978] = a0\n 71786: a0 = u64 [s1 + 0x298]\n 71790: ra = 560, jump @26\n      : @889 [@dyn 280] (gas: 3)\n 71797: a0 = 0x40\n 71800: a1 = 0x20\n 71803: ra = 562, jump @0\n      : @890 [@dyn 281] (gas: 100)\n 71810: a1 = u8 [a0 + 0x11]\n 71813: a2 = u8 [a0 + 0x10]\n 71816: a3 = u8 [a0 + 0x12]\n 71819: a4 = u8 [a0 + 0x13]\n 71822: a1 = a1 << 0x8\n 71825: a1 = a1 | a2\n 71828: a3 = a3 << 0x10\n 71831: a4 = a4 << 0x18\n 71834: a3 = a3 | a4\n 71837: a1 = a1 | a3\n 71840: a2 = u8 [a0 + 0x15]\n 71843: a3 = u8 [a0 + 0x14]\n 71846: a4 = u8 [a0 + 0x16]\n 71849: a5 = u8 [a0 + 0x17]\n 71852: a2 = a2 << 0x8\n 71855: a2 = a2 | a3\n 71858: a4 = a4 << 0x10\n 71861: a5 = a5 << 0x18\n 71864: a4 = a4 | a5\n 71867: a2 = a2 | a4\n 71870: a2 = a2 << 0x20\n 71873: t0 = a2 | a1\n 71876: a2 = u8 [a0 + 0x1]\n 71879: a3 = u8 [a0]\n 71881: a4 = u8 [a0 + 0x2]\n 71884: a5 = u8 [a0 + 0x3]\n 71887: a2 = a2 << 0x8\n 71890: a2 = a2 | a3\n 71893: a4 = a4 << 0x10\n 71896: a5 = a5 << 0x18\n 71899: a4 = a4 | a5\n 71902: a2 = a2 | a4\n 71905: a3 = u8 [a0 + 0x5]\n 71908: a4 = u8 [a0 + 0x4]\n 71911: a5 = u8 [a0 + 0x6]\n 71914: a1 = u8 [a0 + 0x7]\n 71917: a3 = a3 << 0x8\n 71920: a3 = a3 | a4\n 71923: a5 = a5 << 0x10\n 71926: a1 = a1 << 0x18\n 71929: a1 = a1 | a5\n 71932: a1 = a1 | a3\n 71935: a1 = a1 << 0x20\n 71938: t1 = a1 | a2\n 71941: a1 = u8 [a0 + 0x19]\n 71944: a3 = u8 [a0 + 0x18]\n 71947: a4 = u8 [a0 + 0x1a]\n 71950: a5 = u8 [a0 + 0x1b]\n 71953: a1 = a1 << 0x8\n 71956: a1 = a1 | a3\n 71959: a4 = a4 << 0x10\n 71962: a5 = a5 << 0x18\n 71965: a4 = a4 | a5\n 71968: a1 = a1 | a4\n 71971: a3 = u8 [a0 + 0x1d]\n 71974: a4 = u8 [a0 + 0x1c]\n 71977: a5 = u8 [a0 + 0x1e]\n 71980: a2 = u8 [a0 + 0x1f]\n 71983: a3 = a3 << 0x8\n 71986: a3 = a3 | a4\n 71989: a5 = a5 << 0x10\n 71992: a2 = a2 << 0x18\n 71995: a2 = a2 | a5\n 71998: a2 = a2 | a3\n 72001: a2 = a2 << 0x20\n 72004: a3 = a2 | a1\n 72007: a1 = u8 [a0 + 0x9]\n 72010: a2 = u8 [a0 + 0x8]\n 72013: a4 = u8 [a0 + 0xa]\n 72016: a5 = u8 [a0 + 0xb]\n 72019: a1 = a1 << 0x8\n 72022: a1 = a1 | a2\n 72025: a4 = a4 << 0x10\n 72028: a5 = a5 << 0x18\n 72031: a4 = a4 | a5\n 72034: a1 = a1 | a4\n 72037: a2 = u8 [a0 + 0xd]\n 72040: a4 = u8 [a0 + 0xc]\n 72043: a5 = u8 [a0 + 0xe]\n 72046: a0 = u8 [a0 + 0xf]\n 72049: a2 = a2 << 0x8\n 72052: a2 = a2 | a4\n 72055: a5 = a5 << 0x10\n 72058: a0 = a0 << 0x18\n 72061: a0 = a0 | a5\n 72064: a0 = a0 | a2\n 72067: a0 = a0 << 0x20\n 72070: a0 = a0 | a1\n 72073: a1 = reverse a0\n 72075: a0 = reverse a3\n 72077: a2 = reverse t1\n 72079: a3 = reverse t0\n 72081: a2 = a2 | a3\n 72084: a3 = a0 | a1\n 72087: a3 = a3 | a2\n 72090: a3 = a3 >> 0x20\n 72093: a1 = a1 | a2\n 72096: a1 = a1 << 0x20\n 72099: a1 = a1 | a3\n 72102: jump @892 if a1 == 0\n      : @891 (gas: 1)\n 72105: jump @799\n      : @892 (gas: 4)\n 72108: i32 a0 = a0 + 0\n 72110: u64 [s1 + 0x298] = a0\n 72114: a1 = 0x20\n 72117: ra = 564, jump @0\n      : @893 [@dyn 282] (gas: 64)\n 72124: a1 = u64 [s1 + 0xc0]\n 72128: u8 [a0 + 0x1f] = a1\n 72131: a1 = u64 [s1 + 0xb8]\n 72135: u8 [a0 + 0x1e] = a1\n 72138: a1 = u64 [s1 + 0xb0]\n 72142: u8 [a0 + 0x1d] = a1\n 72145: a1 = u64 [s1 + 0xa8]\n 72149: u8 [a0 + 0x1c] = a1\n 72152: a1 = u64 [s1 + 0xa0]\n 72156: u8 [a0 + 0x1b] = a1\n 72159: a1 = u64 [s1 + 0x98]\n 72163: u8 [a0 + 0x1a] = a1\n 72166: a1 = u64 [s1 + 0x90]\n 72170: u8 [a0 + 0x19] = a1\n 72173: a1 = u64 [s1 + 0x178]\n 72177: u8 [a0 + 0x18] = a1\n 72180: a1 = u64 [s1 + 0x170]\n 72184: u8 [a0 + 0x10] = a1\n 72187: a1 = u64 [s1 + 0xf8]\n 72191: u8 [a0 + 0x17] = a1\n 72194: a1 = u64 [s1 + 0xf0]\n 72198: u8 [a0 + 0x16] = a1\n 72201: a1 = u64 [s1 + 0xe8]\n 72205: u8 [a0 + 0x15] = a1\n 72208: a1 = u64 [s1 + 0xe0]\n 72212: u8 [a0 + 0x14] = a1\n 72215: a1 = u64 [s1 + 0xd8]\n 72219: u8 [a0 + 0x13] = a1\n 72222: a1 = u64 [s1 + 0xd0]\n 72226: u8 [a0 + 0x12] = a1\n 72229: a1 = u64 [s1 + 0xc8]\n 72233: u8 [a0 + 0x11] = a1\n 72236: a1 = u64 [s1 + 0x180]\n 72240: u8 [a0 + 0x8] = a1\n 72243: a1 = u64 [s1 + 0x130]\n 72247: u8 [a0 + 0xf] = a1\n 72250: a1 = u64 [s1 + 0x128]\n 72254: u8 [a0 + 0xe] = a1\n 72257: a1 = u64 [s1 + 0x120]\n 72261: u8 [a0 + 0xd] = a1\n 72264: a1 = u64 [s1 + 0x118]\n 72268: u8 [a0 + 0xc] = a1\n 72271: a1 = u64 [s1 + 0x110]\n 72275: u8 [a0 + 0xb] = a1\n 72278: a1 = u64 [s1 + 0x108]\n 72282: u8 [a0 + 0xa] = a1\n 72285: a1 = u64 [s1 + 0x100]\n 72289: u8 [a0 + 0x9] = a1\n 72292: a1 = u64 [s1 + 0x188]\n 72296: u8 [a0] = a1\n 72298: a1 = u64 [s1 + 0x168]\n 72302: u8 [a0 + 0x7] = a1\n 72305: a1 = u64 [s1 + 0x160]\n 72309: u8 [a0 + 0x6] = a1\n 72312: a1 = u64 [s1 + 0x158]\n 72316: u8 [a0 + 0x5] = a1\n 72319: a1 = u64 [s1 + 0x150]\n 72323: u8 [a0 + 0x4] = a1\n 72326: a1 = u64 [s1 + 0x148]\n 72330: u8 [a0 + 0x3] = a1\n 72333: a1 = u64 [s1 + 0x140]\n 72337: u8 [a0 + 0x2] = a1\n 72340: a1 = u64 [s1 + 0x138]\n 72344: jump @952\n      : @894 (gas: 8)\n 72347: u64 [s1 + 2000] = 0\n 72351: u64 [s1 + 1992] = 0\n 72355: u64 [s1 + 1984] = 0\n 72359: a0 = 0x4e487b7100000000\n 72369: a1 = s1 + 0x7c0\n 72373: u64 [s1 + 0x7d8] = a0\n 72377: a0 = 0\n 72379: ra = 566, jump @23\n      : @895 [@dyn 283] (gas: 8)\n 72386: u64 [s1 + 1976] = 0\n 72390: u64 [s1 + 1968] = 0\n 72394: u64 [s1 + 1952] = 0x11\n 72399: a0 = 0x4\n 72402: a1 = s1 + 0x7a0\n 72406: u64 [s1 + 1960] = 0\n 72410: ra = 0x23c\n 72414: jump @23\n      : @896 (gas: 12)\n 72418: a0 = s1 + 0x7ff\n 72422: a0 = a0 + 0x219\n 72426: u64 [a0 + 1016] = 0\n 72430: u64 [a0 + 1008] = 0\n 72434: u64 [a0 + 1000] = 0\n 72438: a2 = a0\n 72440: a0 = 0x4e487b7100000000\n 72450: a1 = s1 + 0x7ff\n 72454: a1 = a1 + 0x601\n 72458: u64 [a2 + 0x400] = a0\n 72462: a0 = 0\n 72464: ra = 568, jump @23\n      : @897 [@dyn 284] (gas: 12)\n 72471: a1 = s1 + 0x7ff\n 72475: a1 = a1 + 0x219\n 72479: u64 [a1 + 992] = 0\n 72483: u64 [a1 + 984] = 0\n 72487: u64 [a1 + 968] = 0x32\n 72492: a2 = a1\n 72494: a0 = 0x4\n 72497: a1 = s1 + 0x7ff\n 72501: a1 = a1 + 0x5e1\n 72505: u64 [a2 + 976] = 0\n 72509: ra = 0x23c\n 72513: jump @23\n      : @898 (gas: 10)\n 72517: a0 = s1 + 0x1a18\n 72521: u64 [a0 + 856] = 0\n 72525: u64 [a0 + 848] = 0\n 72529: u64 [a0 + 840] = 0\n 72533: a2 = a0\n 72535: a0 = 0x4e487b7100000000\n 72545: a1 = s1 + 0x1d60\n 72549: u64 [a2 + 0x360] = a0\n 72553: a0 = 0\n 72555: ra = 570, jump @23\n      : @899 [@dyn 285] (gas: 9)\n 72562: a1 = s1 + 0x1a18\n 72566: u64 [a1 + 832] = 0\n 72570: u64 [a1 + 824] = 0\n 72574: u64 [a1 + 808] = 0x41\n 72579: a2 = a1\n 72581: a0 = 0x4\n 72584: a1 = s1 + 0x1d40\n 72588: u64 [a2 + 816] = 0\n 72592: ra = 572, jump @23\n      : @900 [@dyn 286] (gas: 3)\n 72599: a1 = 0x24\n 72602: a0 = 0\n 72604: ra = 574, jump @0\n      : @901 [@dyn 287] (gas: 5)\n 72611: i32 a1 = a0 + 0\n 72613: a0 = 0x1\n 72616: a2 = 0x24\n 72619: ecalli 15 // 'seal_return'\n 72621: fallthrough\n      : @902 (gas: 10)\n 72622: a0 = s1 + 0x1218\n 72626: u64 [a0 + 1560] = 0\n 72630: u64 [a0 + 1552] = 0\n 72634: u64 [a0 + 1544] = 0\n 72638: a2 = a0\n 72640: a0 = 0x4e487b7100000000\n 72650: a1 = s1 + 0x1820\n 72654: u64 [a2 + 0x620] = a0\n 72658: a0 = 0\n 72660: ra = 576, jump @23\n      : @903 [@dyn 288] (gas: 10)\n 72667: a1 = s1 + 0x1218\n 72671: u64 [a1 + 1536] = 0\n 72675: u64 [a1 + 1528] = 0\n 72679: u64 [a1 + 1512] = 0x11\n 72684: a2 = a1\n 72686: a0 = 0x4\n 72689: a1 = s1 + 0x1800\n 72693: u64 [a2 + 1520] = 0\n 72697: ra = 0x23c\n 72701: jump @23\n      : @904 (gas: 13)\n 72705: a0 = s1 + 0x1000\n 72709: u64 [a0 + 4294965520] = 0\n 72713: a0 = s1 + 0x1000\n 72717: u64 [a0 + 4294965512] = 0\n 72721: a0 = s1 + 0x1000\n 72725: u64 [a0 + 4294965504] = 0\n 72729: a0 = 0x4e487b7100000000\n 72739: a1 = s1 + 0x7ff\n 72743: a1 = a1 + 0x101\n 72747: a2 = s1 + 0x1000\n 72751: u64 [a2 + 0xfffffffffffff918] = a0\n 72755: a0 = 0\n 72757: ra = 578, jump @23\n      : @905 [@dyn 289] (gas: 13)\n 72764: a0 = s1 + 0x1000\n 72768: u64 [a0 + 4294965496] = 0\n 72772: a0 = s1 + 0x1000\n 72776: u64 [a0 + 4294965488] = 0\n 72780: a1 = s1 + 0x1000\n 72784: u64 [a1 + 4294965472] = 0x41\n 72789: a0 = 0x4\n 72792: a1 = s1 + 0x7ff\n 72796: a1 = a1 + 0xe1\n 72800: a2 = s1 + 0x1000\n 72804: u64 [a2 + 4294965480] = 0\n 72808: ra = 0x23c\n 72812: jump @23\n      : @906 (gas: 13)\n 72816: a0 = s1 + 0x1000\n 72820: u64 [a0 + 4294965584] = 0\n 72824: a0 = s1 + 0x1000\n 72828: u64 [a0 + 4294965576] = 0\n 72832: a0 = s1 + 0x1000\n 72836: u64 [a0 + 4294965568] = 0\n 72840: a0 = 0x4e487b7100000000\n 72850: a1 = s1 + 0x7ff\n 72854: a1 = a1 + 0x141\n 72858: a2 = s1 + 0x1000\n 72862: u64 [a2 + 0xfffffffffffff958] = a0\n 72866: a0 = 0\n 72868: ra = 580, jump @23\n      : @907 [@dyn 290] (gas: 13)\n 72875: a0 = s1 + 0x1000\n 72879: u64 [a0 + 4294965560] = 0\n 72883: a0 = s1 + 0x1000\n 72887: u64 [a0 + 4294965552] = 0\n 72891: a1 = s1 + 0x1000\n 72895: u64 [a1 + 4294965536] = 0x41\n 72900: a0 = 0x4\n 72903: a1 = s1 + 0x7ff\n 72907: a1 = a1 + 0x121\n 72911: a2 = s1 + 0x1000\n 72915: u64 [a2 + 4294965544] = 0\n 72919: ra = 0x23c\n 72923: jump @23\n      : @908 (gas: 9)\n 72927: u64 [a4 + 88] = 0\n 72930: u64 [a4 + 80] = 0\n 72933: u64 [a4 + 72] = 0\n 72936: a0 = 0x4e487b7100000000\n 72946: a1 = s1 + 0x7ff\n 72950: a1 = a1 + 0x261\n 72954: u64 [a4 + 0x60] = a0\n 72957: a0 = 0\n 72959: ra = 582, jump @23\n      : @909 [@dyn 291] (gas: 12)\n 72966: a0 = s1 + 0x7ff\n 72970: a0 = a0 + 0x219\n 72974: u64 [a0 + 64] = 0\n 72977: u64 [a0 + 56] = 0\n 72980: u64 [a0 + 48] = 0\n 72983: a2 = a0\n 72985: a0 = 0x4\n 72988: a1 = s1 + 0x7ff\n 72992: a1 = a1 + 0x241\n 72996: u64 [a2 + 40] = 0\n 72999: ra = 0x23c\n 73003: jump @23\n      : @910 (gas: 3)\n 73007: a0 = 0\n 73009: ra = 0x24c\n 73013: jump @0\n      : @911 (gas: 10)\n 73017: a0 = s1 + 0x1a18\n 73021: u64 [a0 + 792] = 0\n 73025: u64 [a0 + 784] = 0\n 73029: u64 [a0 + 776] = 0\n 73033: a2 = a0\n 73035: a0 = 0x4e487b7100000000\n 73045: a1 = s1 + 0x1d20\n 73049: u64 [a2 + 0x320] = a0\n 73053: a0 = 0\n 73055: ra = 584, jump @23\n      : @912 [@dyn 292] (gas: 10)\n 73062: a1 = s1 + 0x1a18\n 73066: u64 [a1 + 768] = 0\n 73070: u64 [a1 + 760] = 0\n 73074: u64 [a1 + 744] = 0x41\n 73079: a2 = a1\n 73081: a0 = 0x4\n 73084: a1 = s1 + 0x1d00\n 73088: u64 [a2 + 752] = 0\n 73092: ra = 0x23c\n 73096: jump @23\n      : @913 (gas: 12)\n 73100: a0 = s1 + 0x7ff\n 73104: a0 = a0 + 0x219\n 73108: u64 [a0 + 1336] = 0\n 73112: u64 [a0 + 1328] = 0\n 73116: u64 [a0 + 1320] = 0\n 73120: a2 = a0\n 73122: a0 = 0x4e487b7100000000\n 73132: a1 = s1 + 0x7ff\n 73136: a1 = a1 + 0x741\n 73140: u64 [a2 + 0x540] = a0\n 73144: a0 = 0\n 73146: ra = 586, jump @23\n      : @914 [@dyn 293] (gas: 12)\n 73153: a1 = s1 + 0x7ff\n 73157: a1 = a1 + 0x219\n 73161: u64 [a1 + 1312] = 0\n 73165: u64 [a1 + 1304] = 0\n 73169: u64 [a1 + 1288] = 0x41\n 73174: a2 = a1\n 73176: a0 = 0x4\n 73179: a1 = s1 + 0x7ff\n 73183: a1 = a1 + 0x721\n 73187: u64 [a2 + 1296] = 0\n 73191: ra = 0x23c\n 73195: jump @23\n      : @915 (gas: 1)\n 73199: jump @918 if a0 != 83286744\n      : @916 (gas: 11)\n 73206: a0 = sp + 0xffffffffffffffe0\n 73209: a0 = a0 & 0xffffffffffffffe0\n 73212: u64 [s1 + 0x298] = a0\n 73216: sp = a0\n 73218: u64 [a0 + 24] = 0\n 73221: u64 [a0 + 16] = 0\n 73224: u64 [a0 + 8] = 0\n 73227: u64 [a0 + 0] = 0\n 73229: i32 a0 = a0 + 0\n 73231: ecalli 18 // 'value_transferred'\n 73233: fallthrough\n      : @917 (gas: 9)\n 73234: a3 = u64 [s1 + 0x298]\n 73238: a0 = u64 [a3 + 0x10]\n 73241: a1 = u64 [a3 + 0x18]\n 73244: a2 = u64 [a3 + 0x8]\n 73247: a3 = u64 [a3]\n 73249: a1 = a1 | a2\n 73252: a0 = a0 | a3\n 73255: a0 = a0 | a1\n 73258: jump @923 if a0 == 0\n      : @918 (gas: 4)\n 73261: a0 = 0\n 73263: a1 = 0\n 73265: ra = 0x24c\n 73269: jump @0\n      : @919 (gas: 2)\n 73273: a1 = 0\n 73275: ra = 588, jump @0\n      : @920 [@dyn 294] (gas: 5)\n 73282: i32 a1 = a0 + 0\n 73284: a0 = 0x1\n 73287: a2 = 0\n 73289: ecalli 15 // 'seal_return'\n 73291: fallthrough\n      : @921 (gas: 10)\n 73292: a0 = s1 + 0x1a18\n 73296: u64 [a0 + 728] = 0\n 73300: u64 [a0 + 720] = 0\n 73304: u64 [a0 + 712] = 0\n 73308: a2 = a0\n 73310: a0 = 0x4e487b7100000000\n 73320: a1 = s1 + 0x1ce0\n 73324: u64 [a2 + 0x2e0] = a0\n 73328: a0 = 0\n 73330: ra = 590, jump @23\n      : @922 [@dyn 295] (gas: 10)\n 73337: a1 = s1 + 0x1a18\n 73341: u64 [a1 + 704] = 0\n 73345: u64 [a1 + 696] = 0\n 73349: u64 [a1 + 680] = 0x41\n 73354: a2 = a1\n 73356: a0 = 0x4\n 73359: a1 = s1 + 0x1cc0\n 73363: u64 [a2 + 688] = 0\n 73367: ra = 0x23c\n 73371: jump @23\n      : @923 (gas: 3)\n 73375: a0 = u64 [s1 + 0x1a8]\n 73379: a0 = i32 [a0]\n 73381: jump @918 if a0 <=u 35\n      : @924 (gas: 16)\n 73385: a0 = s1 + 0x2000\n 73389: i32 a0 = a0 + 0xfffffffffffffec0\n 73393: a1 = 0x4\n 73396: ecalli 5 // 'call_data_load'\n 73398: a3 = s1 + 0x1a18\n 73402: a0 = u64 [a3 + 0x4a8]\n 73406: a1 = u64 [a3 + 0x4b0]\n 73410: a2 = u64 [a3 + 0x4b8]\n 73414: a3 = u64 [a3 + 0x4c0]\n 73418: u64 [s1 + 0x338] = a3\n 73422: u64 [s1 + 0x330] = a2\n 73426: u64 [s1 + 0x328] = a1\n 73430: a1 = s1 + 0x320\n 73434: u64 [s1 + 0x320] = a0\n 73438: a0 = 0\n 73440: ra = 592, jump @23\n      : @925 [@dyn 296] (gas: 7)\n 73447: u64 [s1 + 792] = 0\n 73451: u64 [s1 + 784] = 0\n 73455: u64 [s1 + 768] = 0x2\n 73460: a0 = 0x20\n 73463: a1 = s1 + 0x300\n 73467: u64 [s1 + 776] = 0\n 73471: ra = 594, jump @23\n      : @926 [@dyn 297] (gas: 3)\n 73478: a1 = 0x40\n 73481: a0 = 0\n 73483: ra = 596, jump @0\n      : @927 [@dyn 298] (gas: 24)\n 73490: a1 = sp + 0xffffffffffffffe0\n 73493: a1 = a1 & 0xffffffffffffffe0\n 73496: u64 [s1 + 0x298] = a1\n 73500: sp = a1\n 73502: i32 a0 = a0 + 0\n 73504: i32 a2 = a1 + 0\n 73506: a1 = 0x40\n 73509: ecalli 10 // 'hash_keccak_256'\n 73511: a3 = u64 [s1 + 0x298]\n 73515: a0 = u64 [a3 + 0x18]\n 73518: a1 = u64 [a3 + 0x10]\n 73521: a2 = u64 [a3 + 0x8]\n 73524: a3 = u64 [a3]\n 73526: a4 = reverse a0\n 73528: a0 = reverse a1\n 73530: a1 = reverse a2\n 73532: a2 = reverse a3\n 73534: u64 [s1 + 0x2d8] = a2\n 73538: u64 [s1 + 0x2d0] = a1\n 73542: u64 [s1 + 0x2c8] = a0\n 73546: a0 = s1 + 0x2e0\n 73550: a2 = s1 + 0x2c0\n 73554: u64 [s1 + 0x2c0] = a4\n 73558: ra = 598, jump @25\n      : @928 [@dyn 299] (gas: 9)\n 73565: a0 = u8 [s1 + 0x2e0]\n 73569: a0 = a0 >u 0\n 73571: u64 [s1 + 696] = 0\n 73575: u64 [s1 + 688] = 0\n 73579: u64 [s1 + 0x2a0] = a0\n 73583: a0 = 0x80\n 73587: a1 = s1 + 0x2a0\n 73591: u64 [s1 + 680] = 0\n 73595: ra = 600, jump @23\n      : @929 [@dyn 300] (gas: 4)\n 73602: a0 = 0x80\n 73606: a1 = 0x20\n 73609: ra = 0x82\n 73613: jump @0\n      : @930 (gas: 12)\n 73617: a0 = s1 + 0x7ff\n 73621: a0 = a0 + 0x219\n 73625: u64 [a0 + 1400] = 0\n 73629: u64 [a0 + 1392] = 0\n 73633: u64 [a0 + 1384] = 0\n 73637: a2 = a0\n 73639: a0 = 0x4e487b7100000000\n 73649: a1 = s1 + 0x7ff\n 73653: a1 = a1 + 0x781\n 73657: u64 [a2 + 0x580] = a0\n 73661: a0 = 0\n 73663: ra = 602, jump @23\n      : @931 [@dyn 301] (gas: 12)\n 73670: a1 = s1 + 0x7ff\n 73674: a1 = a1 + 0x219\n 73678: u64 [a1 + 1376] = 0\n 73682: u64 [a1 + 1368] = 0\n 73686: u64 [a1 + 1352] = 0x41\n 73691: a2 = a1\n 73693: a0 = 0x4\n 73696: a1 = s1 + 0x7ff\n 73700: a1 = a1 + 0x761\n 73704: u64 [a2 + 1360] = 0\n 73708: ra = 0x23c\n 73712: jump @23\n      : @932 (gas: 8)\n 73716: u64 [a4 + 152] = 0\n 73720: u64 [a4 + 144] = 0\n 73724: u64 [a4 + 136] = 0\n 73728: a0 = 0x4e487b7100000000\n 73738: a1 = s1 + 0x12a0\n 73742: u64 [a4 + 0xa0] = a0\n 73746: a0 = 0\n 73748: ra = 604, jump @23\n      : @933 [@dyn 302] (gas: 10)\n 73755: a0 = s1 + 0x1218\n 73759: u64 [a0 + 128] = 0\n 73763: u64 [a0 + 120] = 0\n 73766: u64 [a0 + 112] = 0\n 73769: a2 = a0\n 73771: a0 = 0x4\n 73774: a1 = s1 + 0x1280\n 73778: u64 [a2 + 104] = 0\n 73781: ra = 0x23c\n 73785: jump @23\n      : @934 (gas: 10)\n 73789: a0 = s1 + 0x1218\n 73793: u64 [a0 + 1432] = 0\n 73797: u64 [a0 + 1424] = 0\n 73801: u64 [a0 + 1416] = 0\n 73805: a2 = a0\n 73807: a0 = 0x4e487b7100000000\n 73817: a1 = s1 + 0x17a0\n 73821: u64 [a2 + 0x5a0] = a0\n 73825: a0 = 0\n 73827: ra = 606, jump @23\n      : @935 [@dyn 303] (gas: 10)\n 73834: a1 = s1 + 0x1218\n 73838: u64 [a1 + 1408] = 0\n 73842: u64 [a1 + 1400] = 0\n 73846: u64 [a1 + 1384] = 0x11\n 73851: a2 = a1\n 73853: a0 = 0x4\n 73856: a1 = s1 + 0x1780\n 73860: u64 [a2 + 1392] = 0\n 73864: ra = 0x23c\n 73868: jump @23\n      : @936 (gas: 12)\n 73872: a0 = s1 + 0x7ff\n 73876: a0 = a0 + 0x219\n 73880: u64 [a0 + 1464] = 0\n 73884: u64 [a0 + 1456] = 0\n 73888: u64 [a0 + 1448] = 0\n 73892: a2 = a0\n 73894: a0 = 0x4e487b7100000000\n 73904: a1 = s1 + 0x7ff\n 73908: a1 = a1 + 0x7c1\n 73912: u64 [a2 + 0x5c0] = a0\n 73916: a0 = 0\n 73918: ra = 608, jump @23\n      : @937 [@dyn 304] (gas: 12)\n 73925: a1 = s1 + 0x7ff\n 73929: a1 = a1 + 0x219\n 73933: u64 [a1 + 1440] = 0\n 73937: u64 [a1 + 1432] = 0\n 73941: u64 [a1 + 1416] = 0x41\n 73946: a2 = a1\n 73948: a0 = 0x4\n 73951: a1 = s1 + 0x7ff\n 73955: a1 = a1 + 0x7a1\n 73959: u64 [a2 + 1424] = 0\n 73963: ra = 0x23c\n 73967: jump @23\n      : @938 (gas: 13)\n 73971: a0 = s1 + 0x1000\n 73975: u64 [a0 + 4294965264] = 0\n 73979: a0 = s1 + 0x1000\n 73983: u64 [a0 + 4294965256] = 0\n 73987: a0 = s1 + 0x1000\n 73991: u64 [a0 + 4294965248] = 0\n 73995: a0 = 0x4e487b7100000000\n 74005: a1 = s1 + 0x7ff\n 74009: a1 = a1 + 0x1\n 74012: a2 = s1 + 0x1000\n 74016: u64 [a2 + 0xfffffffffffff818] = a0\n 74020: a0 = 0\n 74022: ra = 610, jump @23\n      : @939 [@dyn 305] (gas: 8)\n 74029: u64 [s1 + 2040] = 0\n 74033: u64 [s1 + 2032] = 0\n 74037: u64 [s1 + 2016] = 0x41\n 74042: a0 = 0x4\n 74045: a1 = s1 + 0x7e0\n 74049: u64 [s1 + 2024] = 0\n 74053: ra = 0x23c\n 74057: jump @23\n      : @940 (gas: 13)\n 74061: a0 = s1 + 0x1000\n 74065: u64 [a0 + 4294965328] = 0\n 74069: a0 = s1 + 0x1000\n 74073: u64 [a0 + 4294965320] = 0\n 74077: a0 = s1 + 0x1000\n 74081: u64 [a0 + 4294965312] = 0\n 74085: a0 = 0x4e487b7100000000\n 74095: a1 = s1 + 0x7ff\n 74099: a1 = a1 + 0x41\n 74102: a2 = s1 + 0x1000\n 74106: u64 [a2 + 0xfffffffffffff858] = a0\n 74110: a0 = 0\n 74112: ra = 612, jump @23\n      : @941 [@dyn 306] (gas: 13)\n 74119: a0 = s1 + 0x1000\n 74123: u64 [a0 + 4294965304] = 0\n 74127: a0 = s1 + 0x1000\n 74131: u64 [a0 + 4294965296] = 0\n 74135: a1 = s1 + 0x1000\n 74139: u64 [a1 + 4294965280] = 0x41\n 74144: a0 = 0x4\n 74147: a1 = s1 + 0x7ff\n 74151: a1 = a1 + 0x21\n 74154: a2 = s1 + 0x1000\n 74158: u64 [a2 + 4294965288] = 0\n 74162: ra = 0x23c\n 74166: jump @23\n      : @942 (gas: 9)\n 74170: u64 [a4 + 664] = 0\n 74174: u64 [a4 + 656] = 0\n 74178: u64 [a4 + 648] = 0\n 74182: a0 = 0x4e487b7100000000\n 74192: a1 = s1 + 0x7ff\n 74196: a1 = a1 + 0x4a1\n 74200: u64 [a4 + 0x2a0] = a0\n 74204: a0 = 0\n 74206: ra = 614, jump @23\n      : @943 [@dyn 307] (gas: 12)\n 74213: a0 = s1 + 0x7ff\n 74217: a0 = a0 + 0x219\n 74221: u64 [a0 + 640] = 0\n 74225: u64 [a0 + 632] = 0\n 74229: u64 [a0 + 624] = 0\n 74233: a2 = a0\n 74235: a0 = 0x4\n 74238: a1 = s1 + 0x7ff\n 74242: a1 = a1 + 0x481\n 74246: u64 [a2 + 616] = 0\n 74250: ra = 0x23c\n 74254: jump @23\n      : @944 (gas: 13)\n 74258: a0 = s1 + 0x1000\n 74262: u64 [a0 + 4294965392] = 0\n 74266: a0 = s1 + 0x1000\n 74270: u64 [a0 + 4294965384] = 0\n 74274: a0 = s1 + 0x1000\n 74278: u64 [a0 + 4294965376] = 0\n 74282: a0 = 0x4e487b7100000000\n 74292: a1 = s1 + 0x7ff\n 74296: a1 = a1 + 0x81\n 74300: a2 = s1 + 0x1000\n 74304: u64 [a2 + 0xfffffffffffff898] = a0\n 74308: a0 = 0\n 74310: ra = 616, jump @23\n      : @945 [@dyn 308] (gas: 13)\n 74317: a0 = s1 + 0x1000\n 74321: u64 [a0 + 4294965368] = 0\n 74325: a0 = s1 + 0x1000\n 74329: u64 [a0 + 4294965360] = 0\n 74333: a1 = s1 + 0x1000\n 74337: u64 [a1 + 4294965344] = 0x41\n 74342: a0 = 0x4\n 74345: a1 = s1 + 0x7ff\n 74349: a1 = a1 + 0x61\n 74352: a2 = s1 + 0x1000\n 74356: u64 [a2 + 4294965352] = 0\n 74360: ra = 0x23c\n 74364: jump @23\n      : @946 (gas: 10)\n 74368: a0 = s1 + 0x1218\n 74372: u64 [a0 + 1496] = 0\n 74376: u64 [a0 + 1488] = 0\n 74380: u64 [a0 + 1480] = 0\n 74384: a2 = a0\n 74386: a0 = 0x4e487b7100000000\n 74396: a1 = s1 + 0x17e0\n 74400: u64 [a2 + 0x5e0] = a0\n 74404: a0 = 0\n 74406: ra = 618, jump @23\n      : @947 [@dyn 309] (gas: 10)\n 74413: a1 = s1 + 0x1218\n 74417: u64 [a1 + 1472] = 0\n 74421: u64 [a1 + 1464] = 0\n 74425: u64 [a1 + 1448] = 0x12\n 74430: a2 = a1\n 74432: a0 = 0x4\n 74435: a1 = s1 + 0x17c0\n 74439: u64 [a2 + 1456] = 0\n 74443: ra = 0x23c\n 74447: jump @23\n      : @948 (gas: 11)\n 74451: a0 = s1 + 0x7ff\n 74455: a0 = a0 + 0x219\n 74459: u64 [a0 + 1528] = 0\n 74463: u64 [a0 + 1520] = 0\n 74467: u64 [a0 + 1512] = 0\n 74471: a2 = a0\n 74473: a0 = 0x4e487b7100000000\n 74483: a1 = s1 + 0x1000\n 74487: u64 [a2 + 0x600] = a0\n 74491: a0 = 0\n 74493: ra = 620, jump @23\n      : @949 [@dyn 310] (gas: 12)\n 74500: a1 = s1 + 0x7ff\n 74504: a1 = a1 + 0x219\n 74508: u64 [a1 + 1504] = 0\n 74512: u64 [a1 + 1496] = 0\n 74516: u64 [a1 + 1480] = 0x11\n 74521: a2 = a1\n 74523: a0 = 0x4\n 74526: a1 = s1 + 0x7ff\n 74530: a1 = a1 + 0x7e1\n 74534: u64 [a2 + 1488] = 0\n 74538: ra = 0x23c\n 74542: jump @23\n      : @950 (gas: 4)\n 74546: i32 a0 = a0 + 0\n 74548: u64 [s1 + 0x298] = a0\n 74552: a1 = 0x20\n 74555: ra = 622, jump @0\n      : @951 [@dyn 311] (gas: 68)\n 74562: a1 = u64 [s1 + 0x278]\n 74566: a1 = reverse a1\n 74568: a2 = u64 [s1 + 0x288]\n 74572: a2 = reverse a2\n 74574: a3 = u64 [s1 + 0x290]\n 74578: a3 = reverse a3\n 74580: a4 = u64 [s1 + 0x280]\n 74584: a4 = reverse a4\n 74586: a5 = a4 >> 0x38\n 74589: u8 [a0 + 0x1f] = a5\n 74592: a5 = a4 >> 0x30\n 74595: u8 [a0 + 0x1e] = a5\n 74598: a5 = a4 >> 0x28\n 74601: u8 [a0 + 0x1d] = a5\n 74604: a5 = a4 >> 0x20\n 74607: u8 [a0 + 0x1c] = a5\n 74610: a5 = a4 >> 0x18\n 74613: u8 [a0 + 0x1b] = a5\n 74616: a5 = a4 >> 0x10\n 74619: u8 [a0 + 0x1a] = a5\n 74622: a5 = a4 >> 0x8\n 74625: u8 [a0 + 0x19] = a5\n 74628: u8 [a0 + 0x18] = a4\n 74631: u8 [a0 + 0x10] = a3\n 74634: a4 = a3 >> 0x38\n 74637: u8 [a0 + 0x17] = a4\n 74640: a4 = a3 >> 0x30\n 74643: u8 [a0 + 0x16] = a4\n 74646: a4 = a3 >> 0x28\n 74649: u8 [a0 + 0x15] = a4\n 74652: a4 = a3 >> 0x20\n 74655: u8 [a0 + 0x14] = a4\n 74658: a4 = a3 >> 0x18\n 74661: u8 [a0 + 0x13] = a4\n 74664: a4 = a3 >> 0x10\n 74667: u8 [a0 + 0x12] = a4\n 74670: a3 = a3 >> 0x8\n 74673: u8 [a0 + 0x11] = a3\n 74676: u8 [a0 + 0x8] = a2\n 74679: a3 = a2 >> 0x38\n 74682: u8 [a0 + 0xf] = a3\n 74685: a3 = a2 >> 0x30\n 74688: u8 [a0 + 0xe] = a3\n 74691: a3 = a2 >> 0x28\n 74694: u8 [a0 + 0xd] = a3\n 74697: a3 = a2 >> 0x20\n 74700: u8 [a0 + 0xc] = a3\n 74703: a3 = a2 >> 0x18\n 74706: u8 [a0 + 0xb] = a3\n 74709: a3 = a2 >> 0x10\n 74712: u8 [a0 + 0xa] = a3\n 74715: a2 = a2 >> 0x8\n 74718: u8 [a0 + 0x9] = a2\n 74721: u8 [a0] = a1\n 74723: a2 = a1 >> 0x38\n 74726: u8 [a0 + 0x7] = a2\n 74729: a2 = a1 >> 0x30\n 74732: u8 [a0 + 0x6] = a2\n 74735: a2 = a1 >> 0x28\n 74738: u8 [a0 + 0x5] = a2\n 74741: a2 = a1 >> 0x20\n 74744: u8 [a0 + 0x4] = a2\n 74747: a2 = a1 >> 0x18\n 74750: u8 [a0 + 0x3] = a2\n 74753: a2 = a1 >> 0x10\n 74756: u8 [a0 + 0x2] = a2\n 74759: a1 = a1 >> 0x8\n 74762: fallthrough\n      : @952 (gas: 5)\n 74763: u8 [a0 + 0x1] = a1\n 74766: a1 = 0x20\n 74769: a0 = u64 [s1 + 0x298]\n 74773: ra = 0x82\n 74777: jump @0\n      : @953 (gas: 13)\n 74781: a0 = s1 + 0x1000\n 74785: u64 [a0 + 4294965456] = 0\n 74789: a0 = s1 + 0x1000\n 74793: u64 [a0 + 4294965448] = 0\n 74797: a0 = s1 + 0x1000\n 74801: u64 [a0 + 4294965440] = 0\n 74805: a0 = 0x4e487b7100000000\n 74815: a1 = s1 + 0x7ff\n 74819: a1 = a1 + 0xc1\n 74823: a2 = s1 + 0x1000\n 74827: u64 [a2 + 0xfffffffffffff8d8] = a0\n 74831: a0 = 0\n 74833: ra = 624, jump @23\n      : @954 [@dyn 312] (gas: 13)\n 74840: a0 = s1 + 0x1000\n 74844: u64 [a0 + 4294965432] = 0\n 74848: a0 = s1 + 0x1000\n 74852: u64 [a0 + 4294965424] = 0\n 74856: a1 = s1 + 0x1000\n 74860: u64 [a1 + 4294965408] = 0x11\n 74865: a0 = 0x4\n 74868: a1 = s1 + 0x7ff\n 74872: a1 = a1 + 0xa1\n 74876: a2 = s1 + 0x1000\n 74880: u64 [a2 + 4294965416] = 0\n 74884: ra = 0x23c\n 74888: jump @23\n      : @955 (gas: 40)\n 74892: sp = sp + 0xffffffffffffff00\n 74896: u64 [sp + 0xf8] = ra\n 74900: u64 [sp + 0xf0] = s0\n 74904: u64 [sp + 0xe8] = s1\n 74908: s0 = sp + 0x100\n 74912: sp = sp & 0xffffffffffffffe0\n 74915: s1 = sp\n 74917: u64 [s1 + 0x38] = a0\n 74920: a0 = u64 [a2]\n 74922: u64 [s1 + 0x58] = a0\n 74925: a0 = u64 [a2 + 0x8]\n 74928: u64 [s1 + 0x50] = a0\n 74931: a0 = u64 [a2 + 0x10]\n 74934: u64 [s1 + 0x48] = a0\n 74937: a0 = u64 [a2 + 0x18]\n 74940: u64 [s1 + 0x40] = a0\n 74943: a4 = u64 [a1 + 0x18]\n 74946: a3 = u64 [a1 + 0x10]\n 74949: a2 = u64 [a1 + 0x8]\n 74952: a0 = u64 [a1]\n 74954: u64 [s1 + 0x18] = a4\n 74957: u64 [s1 + 0xb8] = a4\n 74961: u64 [s1 + 0x20] = a3\n 74964: u64 [s1 + 0xb0] = a3\n 74968: u64 [s1 + 0x28] = a2\n 74971: u64 [s1 + 0xa8] = a2\n 74975: u64 [s1 + 0x30] = a0\n 74978: u64 [s1 + 0xa0] = a0\n 74982: u64 [s1 + 216] = 0\n 74986: u64 [s1 + 208] = 0\n 74990: u64 [s1 + 200] = 0\n 74994: u64 [s1 + 192] = 0\n 74998: u32 [s1 + 224] = 0x20\n 75003: i32 a1 = s1 + 0xa0\n 75007: i32 a3 = s1 + 0xc0\n 75011: i32 a4 = s1 + 0xe0\n 75015: a2 = 0xffffffffffffffff\n 75018: a0 = 0\n 75020: ecalli 9 // 'get_storage'\n 75022: fallthrough\n      : @956 (gas: 20)\n 75023: a0 = u64 [s1 + 0xd8]\n 75027: t0 = u64 [s1 + 0xc0]\n 75031: a2 = u64 [s1 + 0xd0]\n 75035: a3 = u64 [s1 + 0xc8]\n 75039: a1 = u64 [s1 + 0x40]\n 75042: a4 = a0 ^ a1\n 75045: a1 = a1 <u a0\n 75048: a0 = u64 [s1 + 0x48]\n 75051: a5 = a0 <u a2\n 75054: a5 = a1 if a4 != 0\n 75057: a1 = u64 [s1 + 0x50]\n 75060: t1 = a3 ^ a1\n 75063: a3 = a1 <u a3\n 75066: a1 = u64 [s1 + 0x58]\n 75069: a1 = a1 <u t0\n 75072: a1 = a3 if t1 != 0\n 75075: a0 = a0 ^ a2\n 75078: a0 = a0 | a4\n 75081: a1 = a5 if a0 != 0\n 75084: jump @960 if a1 == 0\n      : @957 (gas: 3)\n 75088: a1 = 0x20\n 75091: a0 = 0\n 75093: ra = 626, jump @0\n      : @958 [@dyn 313] (gas: 71)\n 75100: a1 = u64 [s1 + 0x18]\n 75103: a1 = reverse a1\n 75105: a2 = u64 [s1 + 0x20]\n 75108: a2 = reverse a2\n 75110: a3 = u64 [s1 + 0x28]\n 75113: a3 = reverse a3\n 75115: a4 = u64 [s1 + 0x30]\n 75118: a4 = reverse a4\n 75120: u8 [a0 + 0x18] = a4\n 75123: a5 = a4 >> 0x38\n 75126: u8 [a0 + 0x1f] = a5\n 75129: a5 = a4 >> 0x30\n 75132: u8 [a0 + 0x1e] = a5\n 75135: a5 = a4 >> 0x28\n 75138: u8 [a0 + 0x1d] = a5\n 75141: a5 = a4 >> 0x20\n 75144: u8 [a0 + 0x1c] = a5\n 75147: a5 = a4 >> 0x18\n 75150: u8 [a0 + 0x1b] = a5\n 75153: a5 = a4 >> 0x10\n 75156: u8 [a0 + 0x1a] = a5\n 75159: a4 = a4 >> 0x8\n 75162: u8 [a0 + 0x19] = a4\n 75165: u8 [a0 + 0x10] = a3\n 75168: a4 = a3 >> 0x38\n 75171: u8 [a0 + 0x17] = a4\n 75174: a4 = a3 >> 0x30\n 75177: u8 [a0 + 0x16] = a4\n 75180: a4 = a3 >> 0x28\n 75183: u8 [a0 + 0x15] = a4\n 75186: a4 = a3 >> 0x20\n 75189: u8 [a0 + 0x14] = a4\n 75192: a4 = a3 >> 0x18\n 75195: u8 [a0 + 0x13] = a4\n 75198: a4 = a3 >> 0x10\n 75201: u8 [a0 + 0x12] = a4\n 75204: a3 = a3 >> 0x8\n 75207: u8 [a0 + 0x11] = a3\n 75210: u8 [a0 + 0x8] = a2\n 75213: a3 = a2 >> 0x38\n 75216: u8 [a0 + 0xf] = a3\n 75219: a3 = a2 >> 0x30\n 75222: u8 [a0 + 0xe] = a3\n 75225: a3 = a2 >> 0x28\n 75228: u8 [a0 + 0xd] = a3\n 75231: a3 = a2 >> 0x20\n 75234: u8 [a0 + 0xc] = a3\n 75237: a3 = a2 >> 0x18\n 75240: u8 [a0 + 0xb] = a3\n 75243: a3 = a2 >> 0x10\n 75246: u8 [a0 + 0xa] = a3\n 75249: a2 = a2 >> 0x8\n 75252: u8 [a0 + 0x9] = a2\n 75255: u8 [a0] = a1\n 75257: a2 = a1 >> 0x38\n 75260: u8 [a0 + 0x7] = a2\n 75263: a2 = a1 >> 0x30\n 75266: u8 [a0 + 0x6] = a2\n 75269: a2 = a1 >> 0x28\n 75272: u8 [a0 + 0x5] = a2\n 75275: a2 = a1 >> 0x20\n 75278: u8 [a0 + 0x4] = a2\n 75281: a2 = a1 >> 0x18\n 75284: u8 [a0 + 0x3] = a2\n 75287: a2 = a1 >> 0x10\n 75290: u8 [a0 + 0x2] = a2\n 75293: a1 = a1 >> 0x8\n 75296: u8 [a0 + 0x1] = a1\n 75299: a1 = 0x20\n 75302: a0 = 0\n 75304: ra = 628, jump @0\n      : @959 [@dyn 314] (gas: 60)\n 75311: a1 = sp + 0xffffffffffffffe0\n 75314: a1 = a1 & 0xffffffffffffffe0\n 75317: u64 [s1 + 0x30] = a1\n 75320: sp = a1\n 75322: i32 a0 = a0 + 0\n 75324: i32 a2 = a1 + 0\n 75326: a1 = 0x20\n 75329: ecalli 10 // 'hash_keccak_256'\n 75331: a3 = u64 [s1 + 0x30]\n 75334: a0 = u64 [a3]\n 75336: a1 = u64 [a3 + 0x8]\n 75339: a2 = u64 [a3 + 0x18]\n 75342: a3 = u64 [a3 + 0x10]\n 75345: t0 = reverse a0\n 75347: a1 = reverse a1\n 75349: a2 = reverse a2\n 75351: a3 = reverse a3\n 75353: a0 = u64 [s1 + 0x48]\n 75356: a4 = a0 >> 0x3f\n 75359: a5 = u64 [s1 + 0x40]\n 75362: a5 = a5 << 0x1\n 75365: t1 = a5 | a4\n 75368: a4 = u64 [s1 + 0x50]\n 75371: a5 = a4 >> 0x3f\n 75374: a0 = a0 << 0x1\n 75377: t2 = a0 | a5\n 75380: a0 = u64 [s1 + 0x58]\n 75383: a5 = a0 >> 0x3f\n 75386: a4 = a4 << 0x1\n 75389: a4 = a4 | a5\n 75392: a5 = a0 << 0x1\n 75395: a4 = a4 + a3\n 75398: a5 = a5 + a2\n 75401: a2 = a5 <u a2\n 75404: a4 = a4 + a2\n 75407: a0 = a4 ^ a3\n 75410: a3 = a4 <u a3\n 75413: a3 = a2 if a0 == 0\n 75416: t2 = t2 + a1\n 75419: a3 = a3 + t2\n 75422: a0 = a3 <u t2\n 75425: t0 = t0 + t1\n 75428: a1 = t2 <u a1\n 75431: a1 = a1 + t0\n 75434: a0 = a0 + a1\n 75437: a1 = u64 [s1 + 0x38]\n 75440: u64 [a1 + 56] = 0\n 75443: u64 [a1 + 48] = 0\n 75446: u64 [a1 + 40] = 0\n 75449: u64 [a1 + 32] = 0\n 75452: u64 [a1] = a5\n 75454: u64 [a1 + 0x8] = a4\n 75457: u64 [a1 + 0x10] = a3\n 75460: u64 [a1 + 0x18] = a0\n 75463: sp = s0 + 0xffffffffffffff00\n 75467: ra = u64 [sp + 0xf8]\n 75471: s0 = u64 [sp + 0xf0]\n 75475: s1 = u64 [sp + 0xe8]\n 75479: sp = sp + 0x100\n 75483: ret\n      : @960 (gas: 8)\n 75485: u64 [s1 + 144] = 0\n 75489: u64 [s1 + 136] = 0\n 75493: u64 [s1 + 128] = 0\n 75497: a0 = 0x4e487b7100000000\n 75507: a1 = s1 + 0x80\n 75511: u64 [s1 + 0x98] = a0\n 75515: a0 = 0\n 75517: ra = 630, jump @23\n      : @961 [@dyn 315] (gas: 7)\n 75524: u64 [s1 + 120] = 0\n 75527: u64 [s1 + 112] = 0\n 75530: u64 [s1 + 96] = 0x32\n 75534: a0 = 0x4\n 75537: a1 = s1 + 0x60\n 75540: u64 [s1 + 104] = 0\n 75543: ra = 632, jump @23\n      : @962 [@dyn 316] (gas: 3)\n 75550: a1 = 0x24\n 75553: a0 = 0\n 75555: ra = 634, jump @0\n      : @963 [@dyn 317] (gas: 6)\n 75562: i32 a1 = a0 + 0\n 75564: a0 = 0x1\n 75567: a2 = 0x24\n 75570: ra = 0x27c\n 75574: ecalli 15 // 'seal_return'\n 75576: fallthrough\n      : @964 [@dyn 318] (gas: 16)\n 75577: sp = sp + 0xffffffffffffff80\n 75580: u64 [sp + 0x78] = ra\n 75583: u64 [sp + 0x70] = s0\n 75586: u64 [sp + 0x68] = s1\n 75589: a5 = u64 [a1 + 0x10]\n 75592: s1 = u64 [a1 + 0x18]\n 75595: a4 = u64 [a1 + 0x8]\n 75598: s0 = u64 [a1]\n 75600: a1 = a4 | s1\n 75603: a3 = s0 | a5\n 75606: a3 = a3 | a1\n 75609: a3 = a3 >> 0x20\n 75612: a1 = a1 | a5\n 75615: a1 = a1 << 0x20\n 75618: a1 = a1 | a3\n 75621: jump @977 if a1 != 0\n      : @965 (gas: 16)\n 75625: u64 [sp + 0x30] = s1\n 75628: u64 [sp + 0x38] = a5\n 75631: u64 [sp + 0x40] = a4\n 75634: u64 [sp + 0x8] = a0\n 75637: a0 = u64 [a2 + 0x18]\n 75640: u64 [sp + 0x60] = a0\n 75643: s1 = u64 [a2 + 0x10]\n 75646: a0 = u64 [a2 + 0x8]\n 75649: u64 [sp + 0x58] = a0\n 75652: a0 = u64 [a2]\n 75654: u64 [sp + 0x50] = a0\n 75657: u64 [sp + 0x28] = s0\n 75660: i32 a0 = s0 + 0\n 75662: a1 = 0x20\n 75665: u64 [sp + 0x10] = a0\n 75668: ra = 638, jump @0\n      : @966 [@dyn 319] (gas: 12)\n 75675: t0 = u64 [sp + 0x50]\n 75678: a1 = t0 | s1\n 75681: a2 = u64 [sp + 0x60]\n 75684: a3 = u64 [sp + 0x58]\n 75687: a2 = a2 | a3\n 75690: a1 = a1 | a2\n 75693: a1 = a1 >> 0x20\n 75696: u64 [sp + 0x48] = s1\n 75699: a2 = a2 | s1\n 75702: a2 = a2 << 0x20\n 75705: a1 = a1 | a2\n 75708: jump @977 if a1 != 0\n      : @967 (gas: 94)\n 75712: a1 = u8 [a0 + 0x19]\n 75715: a2 = u8 [a0 + 0x18]\n 75718: a3 = u8 [a0 + 0x1a]\n 75721: a4 = u8 [a0 + 0x1b]\n 75724: a1 = a1 << 0x8\n 75727: a1 = a1 | a2\n 75730: a3 = a3 << 0x10\n 75733: a4 = a4 << 0x18\n 75736: a3 = a3 | a4\n 75739: a1 = a1 | a3\n 75742: a2 = u8 [a0 + 0x1d]\n 75745: a3 = u8 [a0 + 0x1c]\n 75748: a4 = u8 [a0 + 0x1e]\n 75751: a5 = u8 [a0 + 0x1f]\n 75754: a2 = a2 << 0x8\n 75757: a2 = a2 | a3\n 75760: a4 = a4 << 0x10\n 75763: a5 = a5 << 0x18\n 75766: a4 = a4 | a5\n 75769: a2 = a2 | a4\n 75772: a2 = a2 << 0x20\n 75775: a1 = a1 | a2\n 75778: u64 [sp + 0x20] = a1\n 75781: a1 = u8 [a0 + 0x11]\n 75784: a2 = u8 [a0 + 0x10]\n 75787: a3 = u8 [a0 + 0x12]\n 75790: a4 = u8 [a0 + 0x13]\n 75793: a1 = a1 << 0x8\n 75796: a1 = a1 | a2\n 75799: a3 = a3 << 0x10\n 75802: a4 = a4 << 0x18\n 75805: a3 = a3 | a4\n 75808: a1 = a1 | a3\n 75811: a2 = u8 [a0 + 0x15]\n 75814: a3 = u8 [a0 + 0x14]\n 75817: a4 = u8 [a0 + 0x16]\n 75820: a5 = u8 [a0 + 0x17]\n 75823: a2 = a2 << 0x8\n 75826: a2 = a2 | a3\n 75829: a4 = a4 << 0x10\n 75832: a5 = a5 << 0x18\n 75835: a4 = a4 | a5\n 75838: a2 = a2 | a4\n 75841: a2 = a2 << 0x20\n 75844: a1 = a1 | a2\n 75847: u64 [sp + 0x18] = a1\n 75850: a1 = u8 [a0 + 0x9]\n 75853: a2 = u8 [a0 + 0x8]\n 75856: a3 = u8 [a0 + 0xa]\n 75859: a4 = u8 [a0 + 0xb]\n 75862: a1 = a1 << 0x8\n 75865: a1 = a1 | a2\n 75868: a3 = a3 << 0x10\n 75871: a4 = a4 << 0x18\n 75874: a3 = a3 | a4\n 75877: a1 = a1 | a3\n 75880: a2 = u8 [a0 + 0xd]\n 75883: a3 = u8 [a0 + 0xc]\n 75886: a4 = u8 [a0 + 0xe]\n 75889: a5 = u8 [a0 + 0xf]\n 75892: a2 = a2 << 0x8\n 75895: a2 = a2 | a3\n 75898: a4 = a4 << 0x10\n 75901: a5 = a5 << 0x18\n 75904: a4 = a4 | a5\n 75907: a2 = a2 | a4\n 75910: a2 = a2 << 0x20\n 75913: s0 = a2 | a1\n 75916: a1 = u8 [a0 + 0x1]\n 75919: a2 = u8 [a0]\n 75921: a3 = u8 [a0 + 0x2]\n 75924: a4 = u8 [a0 + 0x3]\n 75927: a1 = a1 << 0x8\n 75930: a1 = a1 | a2\n 75933: a3 = a3 << 0x10\n 75936: a4 = a4 << 0x18\n 75939: a3 = a3 | a4\n 75942: a1 = a1 | a3\n 75945: a2 = u8 [a0 + 0x5]\n 75948: a3 = u8 [a0 + 0x4]\n 75951: a4 = u8 [a0 + 0x6]\n 75954: a0 = u8 [a0 + 0x7]\n 75957: a2 = a2 << 0x8\n 75960: a2 = a2 | a3\n 75963: a4 = a4 << 0x10\n 75966: a0 = a0 << 0x18\n 75969: a0 = a0 | a4\n 75972: a0 = a0 | a2\n 75975: a0 = a0 << 0x20\n 75978: s1 = a0 | a1\n 75981: i32 a0 = t0 + 0\n 75983: a1 = 0x20\n 75986: u64 [sp] = a0\n 75988: ra = 640, jump @0\n      : @968 [@dyn 320] (gas: 72)\n 75995: a1 = s0 >> 0x38\n 75998: u8 [a0 + 0xf] = a1\n 76001: a1 = s0 >> 0x30\n 76004: u8 [a0 + 0xe] = a1\n 76007: a1 = s0 >> 0x28\n 76010: u8 [a0 + 0xd] = a1\n 76013: a1 = s0 >> 0x20\n 76016: u8 [a0 + 0xc] = a1\n 76019: a1 = s0 >> 0x18\n 76022: u8 [a0 + 0xb] = a1\n 76025: a1 = s0 >> 0x10\n 76028: u8 [a0 + 0xa] = a1\n 76031: a1 = s0 >> 0x8\n 76034: u8 [a0 + 0x9] = a1\n 76037: a1 = s1 >> 0x38\n 76040: u8 [a0 + 0x7] = a1\n 76043: a1 = s1 >> 0x30\n 76046: u8 [a0 + 0x6] = a1\n 76049: a1 = s1 >> 0x28\n 76052: u8 [a0 + 0x5] = a1\n 76055: a1 = s1 >> 0x20\n 76058: u8 [a0 + 0x4] = a1\n 76061: a1 = s1 >> 0x18\n 76064: u8 [a0 + 0x3] = a1\n 76067: a1 = s1 >> 0x10\n 76070: u8 [a0 + 0x2] = a1\n 76073: a1 = s1 >> 0x8\n 76076: u8 [a0 + 0x1] = a1\n 76079: t0 = u64 [sp + 0x18]\n 76082: a1 = t0 >> 0x38\n 76085: u8 [a0 + 0x17] = a1\n 76088: a1 = t0 >> 0x30\n 76091: u8 [a0 + 0x16] = a1\n 76094: a1 = t0 >> 0x28\n 76097: u8 [a0 + 0x15] = a1\n 76100: a1 = t0 >> 0x20\n 76103: u8 [a0 + 0x14] = a1\n 76106: a1 = t0 >> 0x18\n 76109: u8 [a0 + 0x13] = a1\n 76112: a1 = t0 >> 0x10\n 76115: u8 [a0 + 0x12] = a1\n 76118: a1 = t0 >> 0x8\n 76121: u8 [a0 + 0x11] = a1\n 76124: a5 = u64 [sp + 0x20]\n 76127: a1 = a5 >> 0x38\n 76130: u8 [a0 + 0x1f] = a1\n 76133: a1 = a5 >> 0x30\n 76136: u8 [a0 + 0x1e] = a1\n 76139: a1 = a5 >> 0x28\n 76142: u8 [a0 + 0x1d] = a1\n 76145: a1 = a5 >> 0x20\n 76148: u8 [a0 + 0x1c] = a1\n 76151: a1 = a5 >> 0x18\n 76154: u8 [a0 + 0x1b] = a1\n 76157: a1 = a5 >> 0x10\n 76160: u8 [a0 + 0x1a] = a1\n 76163: a1 = a5 >> 0x8\n 76166: u8 [a0 + 0x19] = a1\n 76169: a1 = u64 [sp + 0x48]\n 76172: a2 = u64 [sp + 0x60]\n 76175: a2 = a2 | a1\n 76178: a1 = 0xffffffe0\n 76188: a3 = u64 [sp + 0x50]\n 76191: a3 = a3 <u a1\n 76194: a4 = u64 [sp + 0x58]\n 76197: a3 = 0 if a4 != 0\n 76199: a3 = 0 if a2 != 0\n 76201: u8 [a0 + 0x10] = t0\n 76204: u8 [a0 + 0x8] = s0\n 76207: u8 [a0] = s1\n 76209: u8 [a0 + 0x18] = a5\n 76212: jump @977 if a3 == 0\n      : @969 (gas: 9)\n 76216: a0 = u64 [sp + 0x38]\n 76219: a3 = u64 [sp + 0x30]\n 76222: a0 = a0 | a3\n 76225: a3 = u64 [sp + 0x28]\n 76228: a1 = a3 <u a1\n 76231: a3 = u64 [sp + 0x40]\n 76234: a1 = 0 if a3 != 0\n 76236: a1 = 0 if a0 != 0\n 76238: jump @977 if a1 == 0\n      : @970 (gas: 15)\n 76242: a1 = reverse s1\n 76244: a3 = reverse s0\n 76246: a4 = reverse t0\n 76248: s1 = reverse a5\n 76250: a0 = s1 | a3\n 76253: u64 [sp + 0x40] = a1\n 76256: u64 [sp + 0x30] = a4\n 76259: a1 = a1 | a4\n 76262: a0 = a0 | a1\n 76265: a0 = a0 >> 0x20\n 76268: u64 [sp + 0x38] = a3\n 76271: a1 = a1 | a3\n 76274: a1 = a1 << 0x20\n 76277: a0 = a0 | a1\n 76280: jump @977 if a0 != 0\n      : @971 (gas: 8)\n 76284: a0 = u64 [sp]\n 76286: i32 a0 = a0 + 0x20\n 76289: a1 = u64 [sp + 0x10]\n 76292: i32 a1 = a1 + 0x20\n 76295: u64 [sp + 0x28] = a1\n 76298: i32 s0 = s1 + 0\n 76300: a1 = s0\n 76302: ra = 642, jump @0\n      : @972 [@dyn 321] (gas: 4)\n 76309: u64 [sp + 0x20] = a0\n 76312: a0 = u64 [sp + 0x28]\n 76315: a1 = s0\n 76317: ra = 644, jump @0\n      : @973 [@dyn 322] (gas: 4)\n 76324: a1 = a0\n 76326: a0 = u64 [sp + 0x20]\n 76329: a2 = s1\n 76331: ra = 646, jump @8\n      : @974 [@dyn 323] (gas: 28)\n 76338: a0 = u64 [sp + 0x50]\n 76341: a0 = a0 + s1\n 76344: u64 [sp + 0x28] = s1\n 76347: a1 = a0 <u s1\n 76350: a2 = u64 [sp + 0x58]\n 76353: a4 = u64 [sp + 0x30]\n 76356: a2 = a2 + a4\n 76359: a2 = a2 + a1\n 76362: a3 = a2 ^ a4\n 76365: a4 = a2 <u a4\n 76368: a4 = a1 if a3 == 0\n 76371: s1 = u64 [sp + 0x48]\n 76374: a5 = u64 [sp + 0x38]\n 76377: a1 = a5 + s1\n 76380: a4 = a4 + a1\n 76383: a3 = a4 <u a1\n 76386: a1 = a1 <u a5\n 76389: a5 = u64 [sp + 0x60]\n 76392: s0 = u64 [sp + 0x40]\n 76395: a5 = a5 + s0\n 76398: a1 = a1 + a5\n 76401: a1 = a1 + a3\n 76404: a1 = a1 | a4\n 76407: a3 = 0xffffffe0\n 76417: a3 = a0 <u a3\n 76420: a3 = 0 if a2 != 0\n 76422: a3 = 0 if a1 != 0\n 76424: jump @977 if a3 == 0\n      : @975 (gas: 3)\n 76428: i32 a0 = a0 + 0x20\n 76431: a1 = 0x20\n 76434: ra = 648, jump @0\n      : @976 [@dyn 324] (gas: 65)\n 76441: u8 [a0 + 31] = 0\n 76444: u8 [a0 + 30] = 0\n 76447: u8 [a0 + 29] = 0\n 76450: u8 [a0 + 28] = 0\n 76453: u8 [a0 + 27] = 0\n 76456: u8 [a0 + 26] = 0\n 76459: u8 [a0 + 25] = 0\n 76462: u8 [a0 + 24] = 0\n 76465: u8 [a0 + 23] = 0\n 76468: u8 [a0 + 22] = 0\n 76471: u8 [a0 + 21] = 0\n 76474: u8 [a0 + 20] = 0\n 76477: u8 [a0 + 19] = 0\n 76480: u8 [a0 + 18] = 0\n 76483: u8 [a0 + 17] = 0\n 76486: u8 [a0 + 16] = 0\n 76489: u8 [a0 + 15] = 0\n 76492: u8 [a0 + 14] = 0\n 76495: u8 [a0 + 13] = 0\n 76498: u8 [a0 + 12] = 0\n 76501: u8 [a0 + 11] = 0\n 76504: u8 [a0 + 10] = 0\n 76507: u8 [a0 + 9] = 0\n 76510: u8 [a0 + 8] = 0\n 76513: u8 [a0 + 7] = 0\n 76516: u8 [a0 + 6] = 0\n 76519: u8 [a0 + 5] = 0\n 76522: u8 [a0 + 4] = 0\n 76525: u8 [a0 + 3] = 0\n 76528: u8 [a0 + 2] = 0\n 76531: u8 [a0 + 1] = 0\n 76534: u8 [a0 + 0] = 0\n 76536: a0 = u64 [sp + 0x28]\n 76539: a0 = a0 + 0x1f\n 76542: s0 = 0x1ffffffe0\n 76552: a0 = a0 & s0\n 76555: a1 = u64 [sp + 0x50]\n 76558: a0 = a0 + a1\n 76561: a1 = a0 <u a1\n 76564: a3 = u64 [sp + 0x58]\n 76567: a2 = a3 + a1\n 76570: a3 = a2 <u a3\n 76573: a3 = a1 if a1 == 0\n 76576: a3 = a3 + s1\n 76579: a1 = a3 <u s1\n 76582: a4 = u64 [sp + 0x60]\n 76585: a1 = a1 + a4\n 76588: a4 = a0 + 0x20\n 76591: a0 = a4 <u a0\n 76594: a5 = a2 + a0\n 76597: a2 = a5 <u a2\n 76600: a2 = a0 if a0 == 0\n 76603: a2 = a2 + a3\n 76606: a0 = a2 <u a3\n 76609: a0 = a0 + a1\n 76612: a1 = u64 [sp + 0x8]\n 76615: u64 [a1] = a4\n 76617: u64 [a1 + 0x8] = a5\n 76620: u64 [a1 + 0x10] = a2\n 76623: u64 [a1 + 0x18] = a0\n 76626: ra = u64 [sp + 0x78]\n 76629: s0 = u64 [sp + 0x70]\n 76632: s1 = u64 [sp + 0x68]\n 76635: sp = sp + 0x80\n 76639: ret\n      : @977 (gas: 1)\n 76641: trap\n      : @978 (gas: 37)\n 76642: sp = sp + 0xffffffffffffff60\n 76646: u64 [sp + 0x98] = ra\n 76650: u64 [sp + 0x90] = s0\n 76654: u64 [sp + 0x88] = s1\n 76658: s0 = sp + 0xa0\n 76662: sp = sp & 0xffffffffffffffe0\n 76665: a4 = u64 [a1]\n 76667: s1 = u64 [a2 + 0x8]\n 76670: ra = u64 [a1 + 0x8]\n 76673: t1 = u64 [a2]\n 76675: a3 = a4 + 0x1f\n 76678: u64 [sp + 0x58] = a4\n 76681: t0 = a3 <u a4\n 76684: a5 = ra + t0\n 76687: u64 [sp + 0x40] = t1\n 76690: t1 = a3 <u t1\n 76693: a3 = a5 ^ s1\n 76696: u64 [sp + 0x48] = s1\n 76699: a4 = a5 <u s1\n 76702: a4 = t1 if a3 == 0\n 76705: t2 = u64 [a1 + 0x10]\n 76708: a3 = a5 <u ra\n 76711: a3 = t0 if t0 == 0\n 76714: t0 = u64 [a2 + 0x18]\n 76717: t1 = u64 [a1 + 0x18]\n 76720: s1 = u64 [a2 + 0x10]\n 76723: a3 = a3 + t2\n 76726: a1 = a3 <u t2\n 76729: a1 = a1 + t1\n 76732: a2 = a1 ^ t0\n 76735: a1 = a1 <s t0\n 76738: a5 = a3 <u s1\n 76741: a1 = a5 if a2 == 0\n 76744: a3 = a3 ^ s1\n 76747: a2 = a2 | a3\n 76750: a4 = a1 if a2 != 0\n 76753: jump @985 if a4 == 0\n      : @979 (gas: 14)\n 76757: u64 [sp + 0x28] = t0\n 76760: u64 [sp + 0x30] = s1\n 76763: u64 [sp + 0x38] = a0\n 76766: a0 = u64 [sp + 0x58]\n 76769: a0 = a0 | t2\n 76772: u64 [sp + 0x18] = t1\n 76775: a1 = ra | t1\n 76778: a0 = a0 | a1\n 76781: a0 = a0 >> 0x20\n 76784: u64 [sp + 0x20] = t2\n 76787: a1 = a1 | t2\n 76790: a1 = a1 << 0x20\n 76793: a0 = a0 | a1\n 76796: jump @984 if a0 != 0\n      : @980 (gas: 5)\n 76800: s1 = ra\n 76802: a1 = i32 [sp + 0x58]\n 76805: i32 a0 = sp + 0x60\n 76808: ecalli 5 // 'call_data_load'\n 76810: fallthrough\n      : @981 (gas: 8)\n 76811: t2 = u64 [sp + 0x78]\n 76814: a0 = u64 [sp + 0x70]\n 76817: a2 = u64 [sp + 0x68]\n 76820: u64 [sp + 0x50] = a0\n 76823: a0 = a0 | t2\n 76826: a1 = a2 <u 0x1\n 76829: a1 = 0 if a0 != 0\n 76831: jump @986 if a1 == 0\n      : @982 (gas: 46)\n 76835: a1 = u64 [sp + 0x60]\n 76838: a0 = u64 [sp + 0x58]\n 76841: a4 = a0 + 0x20\n 76844: a3 = a4 <u a0\n 76847: t1 = s1 + a3\n 76850: u64 [sp + 0x8] = a1\n 76853: a1 = a1 + a4\n 76856: t0 = a1 <u a4\n 76859: u64 [sp + 0x10] = a2\n 76862: a2 = a2 + t1\n 76865: a2 = a2 + t0\n 76868: a5 = a2 ^ t1\n 76871: a0 = a2 <u t1\n 76874: a0 = t0 if a5 == 0\n 76877: a5 = t1 <u s1\n 76880: a5 = a3 if a3 == 0\n 76883: a3 = u64 [sp + 0x20]\n 76886: ra = a3 + a5\n 76889: s1 = ra <u a3\n 76892: t0 = u64 [sp + 0x18]\n 76895: t0 = t0 + s1\n 76898: s1 = u64 [sp + 0x48]\n 76901: a5 = a2 ^ s1\n 76904: a2 = s1 <u a2\n 76907: s1 = u64 [sp + 0x40]\n 76910: a1 = s1 <u a1\n 76913: a1 = a2 if a5 != 0\n 76916: a2 = u64 [sp + 0x50]\n 76919: a2 = a2 + ra\n 76922: a5 = a2 <u ra\n 76925: u64 [sp + 0x58] = t2\n 76928: s1 = t0 + t2\n 76931: a5 = a5 + s1\n 76934: a0 = a0 + a2\n 76937: a2 = a0 <u a2\n 76940: a2 = a2 + a5\n 76943: s1 = u64 [sp + 0x28]\n 76946: a5 = a2 ^ s1\n 76949: a2 = s1 <u a2\n 76952: t2 = u64 [sp + 0x30]\n 76955: s1 = t2 <u a0\n 76958: s1 = a2 if a5 != 0\n 76961: a0 = a0 ^ t2\n 76964: a0 = a0 | a5\n 76967: a1 = s1 if a0 != 0\n 76970: jump @985 if a1 != 0\n      : @983 (gas: 19)\n 76973: a0 = u64 [sp + 0x38]\n 76976: a1 = u64 [sp + 0x8]\n 76979: u64 [a0 + 0x20] = a1\n 76982: u64 [a0] = a4\n 76984: a1 = u64 [sp + 0x10]\n 76987: u64 [a0 + 0x28] = a1\n 76990: u64 [a0 + 0x8] = t1\n 76993: a1 = u64 [sp + 0x50]\n 76996: u64 [a0 + 0x30] = a1\n 76999: u64 [a0 + 0x10] = ra\n 77002: a1 = u64 [sp + 0x58]\n 77005: u64 [a0 + 0x38] = a1\n 77008: u64 [a0 + 0x18] = t0\n 77011: sp = s0 + 0xffffffffffffff60\n 77015: ra = u64 [sp + 0x98]\n 77019: s0 = u64 [sp + 0x90]\n 77023: s1 = u64 [sp + 0x88]\n 77027: sp = sp + 0xa0\n 77031: ret\n      : @984 (gas: 1)\n 77033: trap\n      : @985 (gas: 4)\n 77034: a0 = 0\n 77036: a1 = 0\n 77038: ra = 0x28a\n 77042: jump @0\n      : @986 (gas: 2)\n 77046: a0 = 0\n 77048: ra = 650, jump @0\n      : @987 [@dyn 325] (gas: 6)\n 77055: i32 a1 = a0 + 0\n 77057: a0 = 0x1\n 77060: a2 = 0\n 77062: ra = 0x28c\n 77066: ecalli 15 // 'seal_return'\n 77068: fallthrough\n      : @988 [@dyn 326] (gas: 32)\n 77069: sp = sp + 0xffffffffffffff20\n 77073: u64 [sp + 0xd8] = ra\n 77077: u64 [sp + 0xd0] = s0\n 77081: u64 [sp + 0xc8] = s1\n 77085: s0 = sp + 0xe0\n 77089: sp = sp & 0xffffffffffffffe0\n 77092: s1 = sp\n 77094: u64 [s1 + 0x18] = a0\n 77097: a0 = u64 [a1]\n 77099: u64 [s1 + 0x38] = a0\n 77102: a0 = u64 [a1 + 0x8]\n 77105: u64 [s1 + 0x30] = a0\n 77108: a0 = u64 [a1 + 0x10]\n 77111: u64 [s1 + 0x28] = a0\n 77114: a0 = u64 [a1 + 0x18]\n 77117: u64 [s1 + 0x20] = a0\n 77120: u64 [s1 + 152] = 0\n 77124: u64 [s1 + 144] = 0\n 77128: u64 [s1 + 136] = 0\n 77132: u64 [s1 + 128] = 0x3\n 77137: u64 [s1 + 184] = 0\n 77141: u64 [s1 + 176] = 0\n 77145: u64 [s1 + 168] = 0\n 77149: u64 [s1 + 160] = 0\n 77153: u32 [s1 + 192] = 0x20\n 77158: i32 a1 = s1 + 0x80\n 77162: i32 a3 = s1 + 0xa0\n 77166: i32 a4 = s1 + 0xc0\n 77170: a2 = 0xffffffffffffffff\n 77173: a0 = 0\n 77175: ecalli 9 // 'get_storage'\n 77177: fallthrough\n      : @989 (gas: 20)\n 77178: a0 = u64 [s1 + 0xb8]\n 77182: t0 = u64 [s1 + 0xa0]\n 77186: a2 = u64 [s1 + 0xb0]\n 77190: a3 = u64 [s1 + 0xa8]\n 77194: a1 = u64 [s1 + 0x20]\n 77197: a4 = a0 ^ a1\n 77200: a1 = a1 <u a0\n 77203: a0 = u64 [s1 + 0x28]\n 77206: a5 = a0 <u a2\n 77209: a5 = a1 if a4 != 0\n 77212: a1 = u64 [s1 + 0x30]\n 77215: t1 = a3 ^ a1\n 77218: a3 = a1 <u a3\n 77221: a1 = u64 [s1 + 0x38]\n 77224: a1 = a1 <u t0\n 77227: a1 = a3 if t1 != 0\n 77230: a0 = a0 ^ a2\n 77233: a0 = a0 | a4\n 77236: a1 = a5 if a0 != 0\n 77239: jump @993 if a1 == 0\n      : @990 (gas: 3)\n 77243: a1 = 0x20\n 77246: a0 = 0\n 77248: ra = 654, jump @0\n      : @991 [@dyn 327] (gas: 35)\n 77255: u8 [a0 + 31] = 0x3\n 77259: u8 [a0 + 30] = 0\n 77262: u8 [a0 + 29] = 0\n 77265: u8 [a0 + 28] = 0\n 77268: u8 [a0 + 27] = 0\n 77271: u8 [a0 + 26] = 0\n 77274: u8 [a0 + 25] = 0\n 77277: u8 [a0 + 24] = 0\n 77280: u8 [a0 + 23] = 0\n 77283: u8 [a0 + 22] = 0\n 77286: u8 [a0 + 21] = 0\n 77289: u8 [a0 + 20] = 0\n 77292: u8 [a0 + 19] = 0\n 77295: u8 [a0 + 18] = 0\n 77298: u8 [a0 + 17] = 0\n 77301: u8 [a0 + 16] = 0\n 77304: u8 [a0 + 15] = 0\n 77307: u8 [a0 + 14] = 0\n 77310: u8 [a0 + 13] = 0\n 77313: u8 [a0 + 12] = 0\n 77316: u8 [a0 + 11] = 0\n 77319: u8 [a0 + 10] = 0\n 77322: u8 [a0 + 9] = 0\n 77325: u8 [a0 + 8] = 0\n 77328: u8 [a0 + 7] = 0\n 77331: u8 [a0 + 6] = 0\n 77334: u8 [a0 + 5] = 0\n 77337: u8 [a0 + 4] = 0\n 77340: u8 [a0 + 3] = 0\n 77343: u8 [a0 + 2] = 0\n 77346: u8 [a0 + 1] = 0\n 77349: u8 [a0 + 0] = 0\n 77351: a1 = 0x20\n 77354: a0 = 0\n 77356: ra = 656, jump @0\n      : @992 [@dyn 328] (gas: 60)\n 77363: a1 = sp + 0xffffffffffffffe0\n 77366: a1 = a1 & 0xffffffffffffffe0\n 77369: u64 [s1 + 0x10] = a1\n 77372: sp = a1\n 77374: i32 a0 = a0 + 0\n 77376: i32 a2 = a1 + 0\n 77378: a1 = 0x20\n 77381: ecalli 10 // 'hash_keccak_256'\n 77383: a3 = u64 [s1 + 0x10]\n 77386: a0 = u64 [a3]\n 77388: a1 = u64 [a3 + 0x8]\n 77391: a2 = u64 [a3 + 0x18]\n 77394: a3 = u64 [a3 + 0x10]\n 77397: t0 = reverse a0\n 77399: a1 = reverse a1\n 77401: a2 = reverse a2\n 77403: a3 = reverse a3\n 77405: a0 = u64 [s1 + 0x28]\n 77408: a4 = a0 >> 0x3e\n 77411: a5 = u64 [s1 + 0x20]\n 77414: a5 = a5 << 0x2\n 77417: t1 = a5 | a4\n 77420: a4 = u64 [s1 + 0x30]\n 77423: a5 = a4 >> 0x3e\n 77426: a0 = a0 << 0x2\n 77429: t2 = a0 | a5\n 77432: a0 = u64 [s1 + 0x38]\n 77435: a5 = a0 >> 0x3e\n 77438: a4 = a4 << 0x2\n 77441: a4 = a4 | a5\n 77444: a5 = a0 << 0x2\n 77447: a4 = a4 + a3\n 77450: a5 = a5 + a2\n 77453: a2 = a5 <u a2\n 77456: a4 = a4 + a2\n 77459: a0 = a4 ^ a3\n 77462: a3 = a4 <u a3\n 77465: a3 = a2 if a0 == 0\n 77468: t2 = t2 + a1\n 77471: a3 = a3 + t2\n 77474: a0 = a3 <u t2\n 77477: t0 = t0 + t1\n 77480: a1 = t2 <u a1\n 77483: a1 = a1 + t0\n 77486: a0 = a0 + a1\n 77489: a1 = u64 [s1 + 0x18]\n 77492: u64 [a1 + 56] = 0\n 77495: u64 [a1 + 48] = 0\n 77498: u64 [a1 + 40] = 0\n 77501: u64 [a1 + 32] = 0\n 77504: u64 [a1] = a5\n 77506: u64 [a1 + 0x8] = a4\n 77509: u64 [a1 + 0x10] = a3\n 77512: u64 [a1 + 0x18] = a0\n 77515: sp = s0 + 0xffffffffffffff20\n 77519: ra = u64 [sp + 0xd8]\n 77523: s0 = u64 [sp + 0xd0]\n 77527: s1 = u64 [sp + 0xc8]\n 77531: sp = sp + 0xe0\n 77535: ret\n      : @993 (gas: 8)\n 77537: u64 [s1 + 112] = 0\n 77540: u64 [s1 + 104] = 0\n 77543: u64 [s1 + 96] = 0\n 77546: a0 = 0x4e487b7100000000\n 77556: a1 = s1 + 0x60\n 77559: u64 [s1 + 0x78] = a0\n 77562: a0 = 0\n 77564: ra = 658, jump @23\n      : @994 [@dyn 329] (gas: 7)\n 77571: u64 [s1 + 88] = 0\n 77574: u64 [s1 + 80] = 0\n 77577: u64 [s1 + 64] = 0x32\n 77581: a0 = 0x4\n 77584: a1 = s1 + 0x40\n 77587: u64 [s1 + 72] = 0\n 77590: ra = 660, jump @23\n      : @995 [@dyn 330] (gas: 3)\n 77597: a1 = 0x24\n 77600: a0 = 0\n 77602: ra = 662, jump @0\n      : @996 [@dyn 331] (gas: 6)\n 77609: i32 a1 = a0 + 0\n 77611: a0 = 0x1\n 77614: a2 = 0x24\n 77617: ra = 0x298\n 77621: ecalli 15 // 'seal_return'\n 77623: fallthrough\n      : @997 [@dyn 332] (gas: 33)\n 77624: sp = sp + 0xffffffffffffffa0\n 77627: u64 [sp + 0x58] = ra\n 77630: u64 [sp + 0x50] = s0\n 77633: u64 [sp + 0x48] = s1\n 77636: s0 = sp + 0x60\n 77639: sp = sp & 0xfffffffffffffff0\n 77642: a2 = u64 [a1 + 0x10]\n 77645: a5 = u64 [a1 + 0x8]\n 77648: a4 = u64 [a1]\n 77650: a1 = u64 [a1 + 0x18]\n 77653: t0 = a2 << 0x3f\n 77656: a3 = a5 >> 0x1\n 77659: t0 = a3 | t0\n 77662: a3 = a1 << 0x3f\n 77665: a2 = a2 >> 0x1\n 77668: a3 = a3 | a2\n 77671: a5 = a5 << 0x3f\n 77674: a2 = a4 >> 0x1\n 77677: a5 = a5 | a2\n 77680: t1 = a1 >> 0x1\n 77683: a4 = a4 & 0x1\n 77686: a1 = -a4\n 77688: s1 = a4 <u 0x1\n 77691: a2 = a5 & 0x7f\n 77694: t2 = a1 & a3\n 77697: a3 = a1 & t0\n 77700: a2 = a5 if a4 != 0\n 77703: a4 = a1 & t1\n 77706: a1 = a2 <u 0x20\n 77709: a1 = 0 if a3 != 0\n 77711: a5 = t2 | a4\n 77714: a1 = 0 if a5 != 0\n 77716: jump @999 if s1 != a1\n      : @998 (gas: 10)\n 77719: u64 [a0] = a2\n 77721: u64 [a0 + 0x8] = a3\n 77724: u64 [a0 + 0x10] = t2\n 77727: u64 [a0 + 0x18] = a4\n 77730: sp = s0 + 0xffffffffffffffa0\n 77733: ra = u64 [sp + 0x58]\n 77736: s0 = u64 [sp + 0x50]\n 77739: s1 = u64 [sp + 0x48]\n 77742: sp = sp + 0x60\n 77745: ret\n      : @999 (gas: 8)\n 77747: u64 [sp + 48] = 0\n 77750: u64 [sp + 40] = 0\n 77753: u64 [sp + 32] = 0\n 77756: a0 = 0x4e487b7100000000\n 77766: a1 = sp + 0x20\n 77769: u64 [sp + 0x38] = a0\n 77772: a0 = 0\n 77774: ra = 666, jump @23\n      : @1000 [@dyn 333] (gas: 7)\n 77781: u64 [sp + 24] = 0\n 77784: u64 [sp + 16] = 0\n 77787: u64 [sp + 0] = 0x22\n 77790: a0 = 0x4\n 77793: a1 = sp\n 77795: u64 [sp + 8] = 0\n 77798: ra = 668, jump @23\n      : @1001 [@dyn 334] (gas: 3)\n 77805: a1 = 0x24\n 77808: a0 = 0\n 77810: ra = 670, jump @0\n      : @1002 [@dyn 335] (gas: 6)\n 77817: i32 a1 = a0 + 0\n 77819: a0 = 0x1\n 77822: a2 = 0x24\n 77825: ra = 0x2a0\n 77829: ecalli 15 // 'seal_return'\n 77831: fallthrough\n      : @1003 [@dyn 336] (gas: 15)\n 77832: sp = sp + 0xffffffffffffff80\n 77835: u64 [sp + 0x78] = ra\n 77838: u64 [sp + 0x70] = s0\n 77841: u64 [sp + 0x68] = s1\n 77844: s0 = sp + 0x80\n 77848: sp = sp & 0xfffffffffffffff0\n 77851: a1 = u64 [a0 + 0x18]\n 77854: a2 = u64 [a0 + 0x10]\n 77857: a3 = u64 [a0]\n 77859: a0 = u64 [a0 + 0x8]\n 77862: a4 = a2 | a1\n 77865: a5 = a3 <u 0xffffffffffffffc0\n 77868: a5 = 0 if a0 != 0\n 77870: a5 = 0 if a4 != 0\n 77872: jump @1006 if a5 == 0\n      : @1004 (gas: 14)\n 77876: a4 = a3 + 0x40\n 77879: u64 [sp + 0x18] = a4\n 77882: a3 = a4 <u a3\n 77885: a4 = a0 + a3\n 77888: u64 [sp + 0x10] = a4\n 77891: a0 = a4 <u a0\n 77894: a0 = a3 if a3 == 0\n 77897: s1 = a2 + a0\n 77900: a0 = s1 <u a2\n 77903: a0 = a0 + a1\n 77906: u64 [sp + 0x8] = a0\n 77909: a0 = 0x40\n 77912: a1 = 0x20\n 77915: ra = 674, jump @0\n      : @1005 [@dyn 337] (gas: 73)\n 77922: a1 = u64 [sp + 0x8]\n 77925: a1 = reverse a1\n 77927: a2 = reverse s1\n 77929: a3 = u64 [sp + 0x10]\n 77932: a3 = reverse a3\n 77934: a4 = u64 [sp + 0x18]\n 77937: a4 = reverse a4\n 77939: u8 [a0 + 0x18] = a4\n 77942: a5 = a4 >> 0x38\n 77945: u8 [a0 + 0x1f] = a5\n 77948: a5 = a4 >> 0x30\n 77951: u8 [a0 + 0x1e] = a5\n 77954: a5 = a4 >> 0x28\n 77957: u8 [a0 + 0x1d] = a5\n 77960: a5 = a4 >> 0x20\n 77963: u8 [a0 + 0x1c] = a5\n 77966: a5 = a4 >> 0x18\n 77969: u8 [a0 + 0x1b] = a5\n 77972: a5 = a4 >> 0x10\n 77975: u8 [a0 + 0x1a] = a5\n 77978: a4 = a4 >> 0x8\n 77981: u8 [a0 + 0x19] = a4\n 77984: u8 [a0 + 0x10] = a3\n 77987: a4 = a3 >> 0x38\n 77990: u8 [a0 + 0x17] = a4\n 77993: a4 = a3 >> 0x30\n 77996: u8 [a0 + 0x16] = a4\n 77999: a4 = a3 >> 0x28\n 78002: u8 [a0 + 0x15] = a4\n 78005: a4 = a3 >> 0x20\n 78008: u8 [a0 + 0x14] = a4\n 78011: a4 = a3 >> 0x18\n 78014: u8 [a0 + 0x13] = a4\n 78017: a4 = a3 >> 0x10\n 78020: u8 [a0 + 0x12] = a4\n 78023: a3 = a3 >> 0x8\n 78026: u8 [a0 + 0x11] = a3\n 78029: u8 [a0 + 0x8] = a2\n 78032: a3 = a2 >> 0x38\n 78035: u8 [a0 + 0xf] = a3\n 78038: a3 = a2 >> 0x30\n 78041: u8 [a0 + 0xe] = a3\n 78044: a3 = a2 >> 0x28\n 78047: u8 [a0 + 0xd] = a3\n 78050: a3 = a2 >> 0x20\n 78053: u8 [a0 + 0xc] = a3\n 78056: a3 = a2 >> 0x18\n 78059: u8 [a0 + 0xb] = a3\n 78062: a3 = a2 >> 0x10\n 78065: u8 [a0 + 0xa] = a3\n 78068: a2 = a2 >> 0x8\n 78071: u8 [a0 + 0x9] = a2\n 78074: u8 [a0] = a1\n 78076: a2 = a1 >> 0x38\n 78079: u8 [a0 + 0x7] = a2\n 78082: a2 = a1 >> 0x30\n 78085: u8 [a0 + 0x6] = a2\n 78088: a2 = a1 >> 0x28\n 78091: u8 [a0 + 0x5] = a2\n 78094: a2 = a1 >> 0x20\n 78097: u8 [a0 + 0x4] = a2\n 78100: a2 = a1 >> 0x18\n 78103: u8 [a0 + 0x3] = a2\n 78106: a2 = a1 >> 0x10\n 78109: u8 [a0 + 0x2] = a2\n 78112: a1 = a1 >> 0x8\n 78115: u8 [a0 + 0x1] = a1\n 78118: sp = s0 + 0xffffffffffffff80\n 78121: ra = u64 [sp + 0x78]\n 78124: s0 = u64 [sp + 0x70]\n 78127: s1 = u64 [sp + 0x68]\n 78130: sp = sp + 0x80\n 78134: ret\n      : @1006 (gas: 8)\n 78136: u64 [sp + 80] = 0\n 78139: u64 [sp + 72] = 0\n 78142: u64 [sp + 64] = 0\n 78145: a0 = 0x4e487b7100000000\n 78155: a1 = sp + 0x40\n 78158: u64 [sp + 0x58] = a0\n 78161: a0 = 0\n 78163: ra = 676, jump @23\n      : @1007 [@dyn 338] (gas: 7)\n 78170: u64 [sp + 56] = 0\n 78173: u64 [sp + 48] = 0\n 78176: u64 [sp + 32] = 0x41\n 78180: a0 = 0x4\n 78183: a1 = sp + 0x20\n 78186: u64 [sp + 40] = 0\n 78189: ra = 678, jump @23\n      : @1008 [@dyn 339] (gas: 3)\n 78196: a1 = 0x24\n 78199: a0 = 0\n 78201: ra = 680, jump @0\n      : @1009 [@dyn 340] (gas: 6)\n 78208: i32 a1 = a0 + 0\n 78210: a0 = 0x1\n 78213: a2 = 0x24\n 78216: ra = 0x2aa\n 78220: ecalli 15 // 'seal_return'\n 78222: fallthrough\n      : @1010 [@dyn 341] (gas: 45)\n 78223: sp = sp + 0xffffffffffffff80\n 78226: u64 [sp + 0x78] = ra\n 78229: u64 [sp + 0x70] = s0\n 78232: u64 [sp + 0x68] = s1\n 78235: s0 = sp + 0x80\n 78239: sp = sp & 0xfffffffffffffff0\n 78242: a4 = u64 [a1]\n 78244: t1 = u64 [a0 + 0x8]\n 78247: a5 = u64 [a1 + 0x8]\n 78250: ra = u64 [a0]\n 78252: s1 = a4 + 0x1f\n 78255: t2 = s1 <u a4\n 78258: a2 = a5 + t2\n 78261: s1 = s1 & 0xffffffffffffffe0\n 78264: u64 [sp + 0x18] = ra\n 78267: ra = ra + s1\n 78270: a4 = ra <u s1\n 78273: a3 = a2 + t1\n 78276: t0 = a3 + a4\n 78279: a3 = t0 ^ a2\n 78282: s1 = t0 <u a2\n 78285: s1 = a4 if a3 == 0\n 78288: a4 = u64 [a0 + 0x18]\n 78291: a2 = a2 <u a5\n 78294: a3 = u64 [a1 + 0x10]\n 78297: a0 = u64 [a0 + 0x10]\n 78300: a1 = u64 [a1 + 0x18]\n 78303: a2 = t2 if t2 == 0\n 78306: a2 = a2 + a3\n 78309: a3 = a2 <u a3\n 78312: a5 = a2 + a0\n 78315: t2 = a5 + s1\n 78318: a2 = a5 <u a2\n 78321: s1 = t2 <u a5\n 78324: a1 = a1 + a4\n 78327: a1 = a1 + a3\n 78330: a1 = a1 + a2\n 78333: s1 = s1 + a1\n 78336: a1 = s1 >u 0\n 78338: a2 = t2 >u 0\n 78340: a2 = a1 if s1 != 0\n 78343: a1 = t2 | s1\n 78346: a3 = t0 >u 0\n 78348: a3 = a2 if a1 != 0\n 78351: jump @1014 if a3 != 0\n      : @1011 (gas: 13)\n 78355: a1 = u64 [sp + 0x18]\n 78358: a1 = ra <u a1\n 78361: a2 = t0 ^ t1\n 78364: a3 = t0 <u t1\n 78367: a3 = a1 if a2 == 0\n 78370: a1 = t2 <u a0\n 78373: a2 = s1 ^ a4\n 78376: a4 = s1 <u a4\n 78379: a4 = a1 if a2 == 0\n 78382: a0 = t2 ^ a0\n 78385: a0 = a0 | a2\n 78388: a4 = a3 if a0 == 0\n 78391: jump @1014 if a4 != 0\n      : @1012 (gas: 6)\n 78395: a0 = 0x40\n 78398: a1 = 0x20\n 78401: u64 [sp + 0x18] = ra\n 78404: u64 [sp + 0x10] = t0\n 78407: u64 [sp + 0x8] = t2\n 78410: ra = 684, jump @0\n      : @1013 [@dyn 342] (gas: 73)\n 78417: a1 = reverse s1\n 78419: a2 = u64 [sp + 0x8]\n 78422: a2 = reverse a2\n 78424: a3 = u64 [sp + 0x10]\n 78427: a3 = reverse a3\n 78429: a4 = u64 [sp + 0x18]\n 78432: a4 = reverse a4\n 78434: u8 [a0 + 0x18] = a4\n 78437: a5 = a4 >> 0x38\n 78440: u8 [a0 + 0x1f] = a5\n 78443: a5 = a4 >> 0x30\n 78446: u8 [a0 + 0x1e] = a5\n 78449: a5 = a4 >> 0x28\n 78452: u8 [a0 + 0x1d] = a5\n 78455: a5 = a4 >> 0x20\n 78458: u8 [a0 + 0x1c] = a5\n 78461: a5 = a4 >> 0x18\n 78464: u8 [a0 + 0x1b] = a5\n 78467: a5 = a4 >> 0x10\n 78470: u8 [a0 + 0x1a] = a5\n 78473: a4 = a4 >> 0x8\n 78476: u8 [a0 + 0x19] = a4\n 78479: u8 [a0 + 0x10] = a3\n 78482: a4 = a3 >> 0x38\n 78485: u8 [a0 + 0x17] = a4\n 78488: a4 = a3 >> 0x30\n 78491: u8 [a0 + 0x16] = a4\n 78494: a4 = a3 >> 0x28\n 78497: u8 [a0 + 0x15] = a4\n 78500: a4 = a3 >> 0x20\n 78503: u8 [a0 + 0x14] = a4\n 78506: a4 = a3 >> 0x18\n 78509: u8 [a0 + 0x13] = a4\n 78512: a4 = a3 >> 0x10\n 78515: u8 [a0 + 0x12] = a4\n 78518: a3 = a3 >> 0x8\n 78521: u8 [a0 + 0x11] = a3\n 78524: u8 [a0 + 0x8] = a2\n 78527: a3 = a2 >> 0x38\n 78530: u8 [a0 + 0xf] = a3\n 78533: a3 = a2 >> 0x30\n 78536: u8 [a0 + 0xe] = a3\n 78539: a3 = a2 >> 0x28\n 78542: u8 [a0 + 0xd] = a3\n 78545: a3 = a2 >> 0x20\n 78548: u8 [a0 + 0xc] = a3\n 78551: a3 = a2 >> 0x18\n 78554: u8 [a0 + 0xb] = a3\n 78557: a3 = a2 >> 0x10\n 78560: u8 [a0 + 0xa] = a3\n 78563: a2 = a2 >> 0x8\n 78566: u8 [a0 + 0x9] = a2\n 78569: u8 [a0] = a1\n 78571: a2 = a1 >> 0x38\n 78574: u8 [a0 + 0x7] = a2\n 78577: a2 = a1 >> 0x30\n 78580: u8 [a0 + 0x6] = a2\n 78583: a2 = a1 >> 0x28\n 78586: u8 [a0 + 0x5] = a2\n 78589: a2 = a1 >> 0x20\n 78592: u8 [a0 + 0x4] = a2\n 78595: a2 = a1 >> 0x18\n 78598: u8 [a0 + 0x3] = a2\n 78601: a2 = a1 >> 0x10\n 78604: u8 [a0 + 0x2] = a2\n 78607: a1 = a1 >> 0x8\n 78610: u8 [a0 + 0x1] = a1\n 78613: sp = s0 + 0xffffffffffffff80\n 78616: ra = u64 [sp + 0x78]\n 78619: s0 = u64 [sp + 0x70]\n 78622: s1 = u64 [sp + 0x68]\n 78625: sp = sp + 0x80\n 78629: ret\n      : @1014 (gas: 8)\n 78631: u64 [sp + 80] = 0\n 78634: u64 [sp + 72] = 0\n 78637: u64 [sp + 64] = 0\n 78640: a0 = 0x4e487b7100000000\n 78650: a1 = sp + 0x40\n 78653: u64 [sp + 0x58] = a0\n 78656: a0 = 0\n 78658: ra = 686, jump @23\n      : @1015 [@dyn 343] (gas: 7)\n 78665: u64 [sp + 56] = 0\n 78668: u64 [sp + 48] = 0\n 78671: u64 [sp + 32] = 0x41\n 78675: a0 = 0x4\n 78678: a1 = sp + 0x20\n 78681: u64 [sp + 40] = 0\n 78684: ra = 688, jump @23\n      : @1016 [@dyn 344] (gas: 3)\n 78691: a1 = 0x24\n 78694: a0 = 0\n 78696: ra = 690, jump @0\n      : @1017 [@dyn 345] (gas: 6)\n 78703: i32 a1 = a0 + 0\n 78705: a0 = 0x1\n 78708: a2 = 0x24\n 78711: ra = 0x2b4\n 78715: ecalli 15 // 'seal_return'\n 78717: fallthrough\n      : @1018 [@dyn 346] (gas: 19)\n 78718: sp = sp + 0xfffffffffffffda0\n 78722: u64 [sp + 0x258] = ra\n 78726: u64 [sp + 0x250] = s0\n 78730: u64 [sp + 0x248] = s1\n 78734: s0 = sp + 0x260\n 78738: sp = sp & 0xffffffffffffffe0\n 78741: s1 = sp\n 78743: a2 = u64 [a1]\n 78745: u64 [s1 + 0x178] = a2\n 78749: a2 = u64 [a1 + 0x8]\n 78752: u64 [s1 + 0x170] = a2\n 78756: a2 = u64 [a1 + 0x10]\n 78759: u64 [s1 + 0x168] = a2\n 78763: a1 = u64 [a1 + 0x18]\n 78766: u64 [s1 + 0x160] = a1\n 78770: u64 [s1 + 0x10] = a0\n 78773: a0 = 0x40\n 78776: a1 = 0x20\n 78779: ra = 694, jump @0\n      : @1019 [@dyn 347] (gas: 84)\n 78786: a1 = u8 [a0 + 0x18]\n 78789: u64 [s1 + 0x60] = a1\n 78792: a1 = u8 [a0 + 0x19]\n 78795: u64 [s1 + 0x40] = a1\n 78798: a1 = u8 [a0 + 0x1a]\n 78801: u64 [s1 + 0x50] = a1\n 78804: a1 = u8 [a0 + 0x1b]\n 78807: u64 [s1 + 0x48] = a1\n 78810: a1 = u8 [a0 + 0x1c]\n 78813: u64 [s1 + 0x78] = a1\n 78816: a1 = u8 [a0 + 0x1d]\n 78819: u64 [s1 + 0x58] = a1\n 78822: a1 = u8 [a0 + 0x1e]\n 78825: u64 [s1 + 0x70] = a1\n 78828: a1 = u8 [a0 + 0x1f]\n 78831: u64 [s1 + 0x68] = a1\n 78834: a1 = u8 [a0 + 0x10]\n 78837: u64 [s1 + 0xa0] = a1\n 78841: a1 = u8 [a0 + 0x11]\n 78844: u64 [s1 + 0x80] = a1\n 78848: a1 = u8 [a0 + 0x12]\n 78851: u64 [s1 + 0x90] = a1\n 78855: a1 = u8 [a0 + 0x13]\n 78858: u64 [s1 + 0x88] = a1\n 78862: a1 = u8 [a0 + 0x14]\n 78865: u64 [s1 + 0xb8] = a1\n 78869: a1 = u8 [a0 + 0x15]\n 78872: u64 [s1 + 0x98] = a1\n 78876: a1 = u8 [a0 + 0x16]\n 78879: u64 [s1 + 0xb0] = a1\n 78883: a1 = u8 [a0 + 0x17]\n 78886: u64 [s1 + 0xa8] = a1\n 78890: a1 = u8 [a0 + 0x8]\n 78893: u64 [s1 + 0xe0] = a1\n 78897: a1 = u8 [a0 + 0x9]\n 78900: u64 [s1 + 0xc0] = a1\n 78904: a1 = u8 [a0 + 0xa]\n 78907: u64 [s1 + 0xd0] = a1\n 78911: a1 = u8 [a0 + 0xb]\n 78914: u64 [s1 + 0xc8] = a1\n 78918: a1 = u8 [a0 + 0xc]\n 78921: u64 [s1 + 0xf8] = a1\n 78925: a1 = u8 [a0 + 0xd]\n 78928: u64 [s1 + 0xd8] = a1\n 78932: a1 = u8 [a0 + 0xe]\n 78935: u64 [s1 + 0xf0] = a1\n 78939: a1 = u8 [a0 + 0xf]\n 78942: u64 [s1 + 0xe8] = a1\n 78946: a1 = u8 [a0]\n 78948: u64 [s1 + 0x140] = a1\n 78952: a1 = u8 [a0 + 0x1]\n 78955: u64 [s1 + 0x120] = a1\n 78959: a1 = u8 [a0 + 0x2]\n 78962: u64 [s1 + 0x130] = a1\n 78966: a1 = u8 [a0 + 0x3]\n 78969: u64 [s1 + 0x128] = a1\n 78973: a1 = u8 [a0 + 0x4]\n 78976: u64 [s1 + 0x158] = a1\n 78980: a1 = u8 [a0 + 0x5]\n 78983: u64 [s1 + 0x138] = a1\n 78987: a1 = u8 [a0 + 0x6]\n 78990: u64 [s1 + 0x150] = a1\n 78994: a0 = u8 [a0 + 0x7]\n 78997: u64 [s1 + 0x148] = a0\n 79001: u32 [s1 + 576] = 0x20\n 79006: a0 = u64 [s1 + 0x160]\n 79010: u64 [s1 + 0x218] = a0\n 79014: a0 = u64 [s1 + 0x168]\n 79018: u64 [s1 + 0x210] = a0\n 79022: a0 = u64 [s1 + 0x170]\n 79026: u64 [s1 + 0x208] = a0\n 79030: a0 = u64 [s1 + 0x178]\n 79034: u64 [s1 + 0x200] = a0\n 79038: u64 [s1 + 568] = 0\n 79042: u64 [s1 + 560] = 0\n 79046: u64 [s1 + 552] = 0\n 79050: u64 [s1 + 544] = 0\n 79054: i32 a1 = s1 + 0x200\n 79058: i32 a3 = s1 + 0x220\n 79062: i32 a4 = s1 + 0x240\n 79066: a2 = 0xffffffffffffffff\n 79069: a0 = 0\n 79071: ecalli 9 // 'get_storage'\n 79073: fallthrough\n      : @1020 (gas: 32)\n 79074: t1 = u64 [s1 + 0x230]\n 79078: t2 = u64 [s1 + 0x228]\n 79082: t0 = u64 [s1 + 0x238]\n 79086: a5 = u64 [s1 + 0x220]\n 79090: a0 = t1 << 0x3f\n 79093: a1 = t2 >> 0x1\n 79096: a0 = a0 | a1\n 79099: a1 = t0 << 0x3f\n 79102: a2 = t1 >> 0x1\n 79105: a1 = a1 | a2\n 79108: a2 = t2 << 0x3f\n 79111: a3 = a5 >> 0x1\n 79114: a4 = a3 | a2\n 79117: a2 = t0 >> 0x1\n 79120: u64 [s1 + 0x18] = a5\n 79123: a5 = a5 & 0x1\n 79126: a3 = -a5\n 79128: ra = a3 & a1\n 79131: a1 = a3 & a0\n 79134: a2 = a2 & a3\n 79137: a3 = a4 & 0x7f\n 79140: a4 = a3 if a5 == 0\n 79143: u64 [s1 + 0x118] = a4\n 79147: a0 = a4 <u 0x20\n 79150: u64 [s1 + 0x108] = a1\n 79154: a0 = 0 if a1 != 0\n 79156: u64 [s1 + 0x110] = ra\n 79160: u64 [s1 + 0x100] = a2\n 79164: a1 = ra | a2\n 79167: a0 = 0 if a1 != 0\n 79169: a1 = a5 <u 0x1\n 79172: jump @1044 if a1 != a0\n      : @1021 (gas: 108)\n 79176: u64 [s1 + 0x38] = a5\n 79179: u64 [s1 + 0x8] = a3\n 79182: u64 [s1 + 0x20] = t2\n 79185: u64 [s1 + 0x28] = t1\n 79188: u64 [s1 + 0x30] = t0\n 79191: a0 = u64 [s1 + 0x40]\n 79194: a0 = a0 << 0x8\n 79197: a1 = u64 [s1 + 0x60]\n 79200: a0 = a0 | a1\n 79203: a1 = u64 [s1 + 0x50]\n 79206: a1 = a1 << 0x10\n 79209: a2 = u64 [s1 + 0x48]\n 79212: a2 = a2 << 0x18\n 79215: a1 = a1 | a2\n 79218: a0 = a0 | a1\n 79221: a1 = u64 [s1 + 0x58]\n 79224: a1 = a1 << 0x8\n 79227: a2 = u64 [s1 + 0x78]\n 79230: a1 = a1 | a2\n 79233: a2 = u64 [s1 + 0x70]\n 79236: a2 = a2 << 0x10\n 79239: a3 = u64 [s1 + 0x68]\n 79242: a3 = a3 << 0x18\n 79245: a2 = a2 | a3\n 79248: a1 = a1 | a2\n 79251: a1 = a1 << 0x20\n 79254: t0 = a1 | a0\n 79257: a1 = u64 [s1 + 0x80]\n 79261: a1 = a1 << 0x8\n 79264: a0 = u64 [s1 + 0xa0]\n 79268: a1 = a1 | a0\n 79271: a2 = u64 [s1 + 0x90]\n 79275: a2 = a2 << 0x10\n 79278: a3 = u64 [s1 + 0x88]\n 79282: a3 = a3 << 0x18\n 79285: a2 = a2 | a3\n 79288: a1 = a1 | a2\n 79291: a2 = u64 [s1 + 0x98]\n 79295: a2 = a2 << 0x8\n 79298: a0 = u64 [s1 + 0xb8]\n 79302: a2 = a2 | a0\n 79305: a3 = u64 [s1 + 0xb0]\n 79309: a3 = a3 << 0x10\n 79312: a4 = u64 [s1 + 0xa8]\n 79316: a4 = a4 << 0x18\n 79319: a3 = a3 | a4\n 79322: a2 = a2 | a3\n 79325: a2 = a2 << 0x20\n 79328: a1 = a1 | a2\n 79331: a2 = u64 [s1 + 0xc0]\n 79335: a2 = a2 << 0x8\n 79338: a0 = u64 [s1 + 0xe0]\n 79342: a2 = a2 | a0\n 79345: a3 = u64 [s1 + 0xd0]\n 79349: a3 = a3 << 0x10\n 79352: a4 = u64 [s1 + 0xc8]\n 79356: a4 = a4 << 0x18\n 79359: a3 = a3 | a4\n 79362: a2 = a2 | a3\n 79365: a3 = u64 [s1 + 0xd8]\n 79369: a3 = a3 << 0x8\n 79372: a0 = u64 [s1 + 0xf8]\n 79376: a3 = a3 | a0\n 79379: a4 = u64 [s1 + 0xf0]\n 79383: a4 = a4 << 0x10\n 79386: a5 = u64 [s1 + 0xe8]\n 79390: a5 = a5 << 0x18\n 79393: a4 = a4 | a5\n 79396: a3 = a3 | a4\n 79399: a3 = a3 << 0x20\n 79402: a2 = a2 | a3\n 79405: a3 = u64 [s1 + 0x120]\n 79409: a3 = a3 << 0x8\n 79412: a0 = u64 [s1 + 0x140]\n 79416: a3 = a3 | a0\n 79419: a4 = u64 [s1 + 0x130]\n 79423: a4 = a4 << 0x10\n 79426: a5 = u64 [s1 + 0x128]\n 79430: a5 = a5 << 0x18\n 79433: a4 = a4 | a5\n 79436: a3 = a3 | a4\n 79439: a4 = u64 [s1 + 0x138]\n 79443: a4 = a4 << 0x8\n 79446: a0 = u64 [s1 + 0x158]\n 79450: a4 = a4 | a0\n 79453: a5 = u64 [s1 + 0x150]\n 79457: a5 = a5 << 0x10\n 79460: a0 = u64 [s1 + 0x148]\n 79464: a0 = a0 << 0x18\n 79467: a0 = a0 | a5\n 79470: a0 = a0 | a4\n 79473: a0 = a0 << 0x20\n 79476: a0 = a0 | a3\n 79479: a3 = reverse a0\n 79481: a2 = reverse a2\n 79483: a1 = reverse a1\n 79485: a4 = reverse t0\n 79487: a0 = a4 | a2\n 79490: u64 [s1 + 0xd0] = a3\n 79494: u64 [s1 + 0xc8] = a1\n 79498: a1 = a1 | a3\n 79501: a0 = a0 | a1\n 79504: a0 = a0 >> 0x20\n 79507: u64 [s1 + 0xd8] = a2\n 79511: a1 = a1 | a2\n 79514: a1 = a1 << 0x20\n 79517: a0 = a0 | a1\n 79520: jump @1041 if a0 != 0\n      : @1022 (gas: 5)\n 79524: i32 a0 = a4 + 0\n 79526: a1 = 0x20\n 79529: u64 [s1 + 0x158] = a0\n 79533: u64 [s1 + 0xc0] = a4\n 79537: ra = 696, jump @0\n      : @1023 [@dyn 348] (gas: 70)\n 79544: a1 = u64 [s1 + 0x118]\n 79548: a1 = reverse a1\n 79550: a2 = a1 >> 0x38\n 79553: u8 [a0 + 0x1f] = a2\n 79556: a2 = a1 >> 0x30\n 79559: u8 [a0 + 0x1e] = a2\n 79562: a2 = a1 >> 0x28\n 79565: u8 [a0 + 0x1d] = a2\n 79568: a2 = a1 >> 0x20\n 79571: u8 [a0 + 0x1c] = a2\n 79574: a2 = a1 >> 0x18\n 79577: u8 [a0 + 0x1b] = a2\n 79580: a2 = a1 >> 0x10\n 79583: u8 [a0 + 0x1a] = a2\n 79586: a2 = a1 >> 0x8\n 79589: u8 [a0 + 0x19] = a2\n 79592: a2 = u64 [s1 + 0x108]\n 79596: a2 = reverse a2\n 79598: u8 [a0 + 0x18] = a1\n 79601: a1 = a2 >> 0x38\n 79604: u8 [a0 + 0x17] = a1\n 79607: a1 = a2 >> 0x30\n 79610: u8 [a0 + 0x16] = a1\n 79613: a1 = a2 >> 0x28\n 79616: u8 [a0 + 0x15] = a1\n 79619: a1 = a2 >> 0x20\n 79622: u8 [a0 + 0x14] = a1\n 79625: a1 = a2 >> 0x18\n 79628: u8 [a0 + 0x13] = a1\n 79631: a1 = a2 >> 0x10\n 79634: u8 [a0 + 0x12] = a1\n 79637: a1 = u64 [s1 + 0x110]\n 79641: a1 = reverse a1\n 79643: u8 [a0 + 0x10] = a2\n 79646: a2 = a2 >> 0x8\n 79649: u8 [a0 + 0x11] = a2\n 79652: a2 = a1 >> 0x38\n 79655: u8 [a0 + 0xf] = a2\n 79658: a2 = a1 >> 0x30\n 79661: u8 [a0 + 0xe] = a2\n 79664: a2 = a1 >> 0x28\n 79667: u8 [a0 + 0xd] = a2\n 79670: a2 = a1 >> 0x20\n 79673: u8 [a0 + 0xc] = a2\n 79676: a2 = a1 >> 0x18\n 79679: u8 [a0 + 0xb] = a2\n 79682: a2 = a1 >> 0x10\n 79685: u8 [a0 + 0xa] = a2\n 79688: a2 = u64 [s1 + 0x100]\n 79692: a2 = reverse a2\n 79694: u8 [a0 + 0x8] = a1\n 79697: a1 = a1 >> 0x8\n 79700: u8 [a0 + 0x9] = a1\n 79703: a1 = a2 >> 0x38\n 79706: u8 [a0 + 0x7] = a1\n 79709: a1 = a2 >> 0x30\n 79712: u8 [a0 + 0x6] = a1\n 79715: a1 = a2 >> 0x28\n 79718: u8 [a0 + 0x5] = a1\n 79721: a1 = a2 >> 0x20\n 79724: u8 [a0 + 0x4] = a1\n 79727: a1 = a2 >> 0x18\n 79730: u8 [a0 + 0x3] = a1\n 79733: a1 = a2 >> 0x10\n 79736: u8 [a0 + 0x2] = a1\n 79739: u8 [a0] = a2\n 79741: a2 = a2 >> 0x8\n 79744: u8 [a0 + 0x1] = a2\n 79747: a0 = u64 [s1 + 0x38]\n 79750: jump @1027 if a0 != 0\n      : @1024 (gas: 10)\n 79754: a0 = u64 [s1 + 0xd8]\n 79758: a1 = u64 [s1 + 0xd0]\n 79762: a0 = a0 | a1\n 79765: a1 = 0xffffffe0\n 79775: a2 = u64 [s1 + 0xc0]\n 79779: a1 = a2 <u a1\n 79782: a2 = u64 [s1 + 0xc8]\n 79786: a1 = 0 if a2 != 0\n 79788: a1 = 0 if a0 != 0\n 79790: jump @1041 if a1 == 0\n      : @1025 (gas: 7)\n 79794: a0 = u64 [s1 + 0x18]\n 79797: a0 = a0 & 0xffffffffffffff00\n 79801: u64 [s1 + 0x170] = a0\n 79805: a0 = u64 [s1 + 0x158]\n 79809: i32 a0 = a0 + 0x20\n 79812: a1 = 0x20\n 79815: ra = 698, jump @0\n      : @1026 [@dyn 349] (gas: 74)\n 79822: t0 = 0\n 79824: t1 = 0\n 79826: u64 [s1 + 376] = 0\n 79830: a1 = u64 [s1 + 0x170]\n 79834: a3 = reverse a1\n 79836: a4 = a3 >> 0x30\n 79839: u8 [a0 + 0x1e] = a4\n 79842: a4 = a3 >> 0x28\n 79845: u8 [a0 + 0x1d] = a4\n 79848: a4 = a3 >> 0x20\n 79851: u8 [a0 + 0x1c] = a4\n 79854: a4 = a3 >> 0x18\n 79857: u8 [a0 + 0x1b] = a4\n 79860: a4 = a3 >> 0x10\n 79863: u8 [a0 + 0x1a] = a4\n 79866: a1 = u64 [s1 + 0x20]\n 79869: a4 = reverse a1\n 79871: u8 [a0 + 0x18] = a3\n 79874: a3 = a3 >> 0x8\n 79877: u8 [a0 + 0x19] = a3\n 79880: a3 = a4 >> 0x38\n 79883: u8 [a0 + 0x17] = a3\n 79886: a3 = a4 >> 0x30\n 79889: u8 [a0 + 0x16] = a3\n 79892: a3 = a4 >> 0x28\n 79895: u8 [a0 + 0x15] = a3\n 79898: a3 = a4 >> 0x20\n 79901: u8 [a0 + 0x14] = a3\n 79904: a3 = a4 >> 0x18\n 79907: u8 [a0 + 0x13] = a3\n 79910: a3 = a4 >> 0x10\n 79913: u8 [a0 + 0x12] = a3\n 79916: a1 = u64 [s1 + 0x28]\n 79919: a3 = reverse a1\n 79921: u8 [a0 + 0x10] = a4\n 79924: a4 = a4 >> 0x8\n 79927: u8 [a0 + 0x11] = a4\n 79930: a4 = a3 >> 0x38\n 79933: u8 [a0 + 0xf] = a4\n 79936: a4 = a3 >> 0x30\n 79939: u8 [a0 + 0xe] = a4\n 79942: a4 = a3 >> 0x28\n 79945: u8 [a0 + 0xd] = a4\n 79948: a4 = a3 >> 0x20\n 79951: u8 [a0 + 0xc] = a4\n 79954: a4 = a3 >> 0x18\n 79957: u8 [a0 + 0xb] = a4\n 79960: a4 = a3 >> 0x10\n 79963: u8 [a0 + 0xa] = a4\n 79966: a1 = u64 [s1 + 0x30]\n 79969: a4 = reverse a1\n 79971: u8 [a0 + 31] = 0\n 79974: u8 [a0 + 0x8] = a3\n 79977: a3 = a3 >> 0x8\n 79980: u8 [a0 + 0x9] = a3\n 79983: u8 [a0] = a4\n 79985: a3 = a4 >> 0x38\n 79988: u8 [a0 + 0x7] = a3\n 79991: a3 = a4 >> 0x30\n 79994: u8 [a0 + 0x6] = a3\n 79997: a3 = a4 >> 0x28\n 80000: u8 [a0 + 0x5] = a3\n 80003: a3 = a4 >> 0x20\n 80006: u8 [a0 + 0x4] = a3\n 80009: a3 = a4 >> 0x18\n 80012: u8 [a0 + 0x3] = a3\n 80015: a3 = a4 >> 0x10\n 80018: u8 [a0 + 0x2] = a3\n 80021: a4 = a4 >> 0x8\n 80024: u8 [a0 + 0x1] = a4\n 80027: a0 = u64 [s1 + 0x8]\n 80030: a0 = a0 >u 0\n 80032: ra = a0 << 0x5\n 80035: jump @1037\n      : @1027 (gas: 3)\n 80038: a1 = 0x20\n 80041: a0 = 0\n 80043: ra = 700, jump @0\n      : @1028 [@dyn 350] (gas: 71)\n 80050: a1 = u64 [s1 + 0x160]\n 80054: a1 = reverse a1\n 80056: a2 = u64 [s1 + 0x168]\n 80060: a2 = reverse a2\n 80062: a3 = u64 [s1 + 0x170]\n 80066: a3 = reverse a3\n 80068: a4 = u64 [s1 + 0x178]\n 80072: a4 = reverse a4\n 80074: u8 [a0 + 0x18] = a4\n 80077: a5 = a4 >> 0x38\n 80080: u8 [a0 + 0x1f] = a5\n 80083: a5 = a4 >> 0x30\n 80086: u8 [a0 + 0x1e] = a5\n 80089: a5 = a4 >> 0x28\n 80092: u8 [a0 + 0x1d] = a5\n 80095: a5 = a4 >> 0x20\n 80098: u8 [a0 + 0x1c] = a5\n 80101: a5 = a4 >> 0x18\n 80104: u8 [a0 + 0x1b] = a5\n 80107: a5 = a4 >> 0x10\n 80110: u8 [a0 + 0x1a] = a5\n 80113: a4 = a4 >> 0x8\n 80116: u8 [a0 + 0x19] = a4\n 80119: u8 [a0 + 0x10] = a3\n 80122: a4 = a3 >> 0x38\n 80125: u8 [a0 + 0x17] = a4\n 80128: a4 = a3 >> 0x30\n 80131: u8 [a0 + 0x16] = a4\n 80134: a4 = a3 >> 0x28\n 80137: u8 [a0 + 0x15] = a4\n 80140: a4 = a3 >> 0x20\n 80143: u8 [a0 + 0x14] = a4\n 80146: a4 = a3 >> 0x18\n 80149: u8 [a0 + 0x13] = a4\n 80152: a4 = a3 >> 0x10\n 80155: u8 [a0 + 0x12] = a4\n 80158: a3 = a3 >> 0x8\n 80161: u8 [a0 + 0x11] = a3\n 80164: u8 [a0 + 0x8] = a2\n 80167: a3 = a2 >> 0x38\n 80170: u8 [a0 + 0xf] = a3\n 80173: a3 = a2 >> 0x30\n 80176: u8 [a0 + 0xe] = a3\n 80179: a3 = a2 >> 0x28\n 80182: u8 [a0 + 0xd] = a3\n 80185: a3 = a2 >> 0x20\n 80188: u8 [a0 + 0xc] = a3\n 80191: a3 = a2 >> 0x18\n 80194: u8 [a0 + 0xb] = a3\n 80197: a3 = a2 >> 0x10\n 80200: u8 [a0 + 0xa] = a3\n 80203: a2 = a2 >> 0x8\n 80206: u8 [a0 + 0x9] = a2\n 80209: u8 [a0] = a1\n 80211: a2 = a1 >> 0x38\n 80214: u8 [a0 + 0x7] = a2\n 80217: a2 = a1 >> 0x30\n 80220: u8 [a0 + 0x6] = a2\n 80223: a2 = a1 >> 0x28\n 80226: u8 [a0 + 0x5] = a2\n 80229: a2 = a1 >> 0x20\n 80232: u8 [a0 + 0x4] = a2\n 80235: a2 = a1 >> 0x18\n 80238: u8 [a0 + 0x3] = a2\n 80241: a2 = a1 >> 0x10\n 80244: u8 [a0 + 0x2] = a2\n 80247: a1 = a1 >> 0x8\n 80250: u8 [a0 + 0x1] = a1\n 80253: a1 = 0x20\n 80256: a0 = 0\n 80258: ra = 702, jump @0\n      : @1029 [@dyn 351] (gas: 9)\n 80265: a1 = sp + 0xffffffffffffffe0\n 80268: a1 = a1 & 0xffffffffffffffe0\n 80271: sp = a1\n 80273: i32 a0 = a0 + 0\n 80275: u64 [s1 + 0x158] = a1\n 80279: i32 a2 = a1 + 0\n 80281: a1 = 0x20\n 80284: ecalli 10 // 'hash_keccak_256'\n 80286: fallthrough\n      : @1030 (gas: 9)\n 80287: a0 = u64 [s1 + 0x18]\n 80290: a0 = a0 <u 0x2\n 80293: a1 = u64 [s1 + 0x20]\n 80296: a0 = 0 if a1 != 0\n 80298: a1 = u64 [s1 + 0x30]\n 80301: a2 = u64 [s1 + 0x28]\n 80304: a1 = a1 | a2\n 80307: a0 = 0 if a1 != 0\n 80309: jump @1032 if a0 == 0\n      : @1031 (gas: 5)\n 80312: ra = 0\n 80314: t0 = 0\n 80316: t1 = 0\n 80318: u64 [s1 + 376] = 0\n 80322: jump @1037\n      : @1032 (gas: 30)\n 80325: u64 [s1 + 360] = 0\n 80329: u64 [s1 + 352] = 0\n 80333: u64 [s1 + 368] = 0\n 80337: u64 [s1 + 376] = 0\n 80341: a0 = u64 [s1 + 0x158]\n 80345: a4 = u64 [a0]\n 80347: a1 = u64 [s1 + 0xc0]\n 80351: a2 = a1 + 0x20\n 80354: u64 [s1 + 0xf8] = a2\n 80358: a1 = a2 <u a1\n 80361: a2 = u64 [s1 + 0xc8]\n 80365: a3 = a2 + a1\n 80368: u64 [s1 + 0xf0] = a3\n 80372: a3 = a3 <u a2\n 80375: a3 = a1 if a1 == 0\n 80378: a1 = u64 [a0 + 0x8]\n 80381: a2 = u64 [a0 + 0x10]\n 80384: a0 = u64 [a0 + 0x18]\n 80387: a5 = reverse a4\n 80389: a4 = reverse a1\n 80391: a2 = reverse a2\n 80393: t2 = reverse a0\n 80395: a0 = u64 [s1 + 0xd8]\n 80399: a3 = a3 + a0\n 80402: u64 [s1 + 0xe8] = a3\n 80406: a0 = a3 <u a0\n 80409: a1 = u64 [s1 + 0xd0]\n 80413: a0 = a0 + a1\n 80416: u64 [s1 + 0xe0] = a0\n 80420: fallthrough\n      : @1033 (gas: 20)\n 80421: u64 [s1 + 0x140] = a4\n 80425: u64 [s1 + 0x210] = a4\n 80429: u64 [s1 + 0x150] = a2\n 80433: u64 [s1 + 0x208] = a2\n 80437: u64 [s1 + 0x148] = t2\n 80441: u64 [s1 + 0x200] = t2\n 80445: u64 [s1 + 0x158] = a5\n 80449: u64 [s1 + 0x218] = a5\n 80453: u64 [s1 + 568] = 0\n 80457: u64 [s1 + 560] = 0\n 80461: u64 [s1 + 552] = 0\n 80465: u64 [s1 + 544] = 0\n 80469: u32 [s1 + 576] = 0x20\n 80474: i32 a1 = s1 + 0x200\n 80478: i32 a3 = s1 + 0x220\n 80482: i32 a4 = s1 + 0x240\n 80486: a2 = 0xffffffffffffffff\n 80489: a0 = 0\n 80491: ecalli 9 // 'get_storage'\n 80493: fallthrough\n      : @1034 (gas: 30)\n 80494: a1 = u64 [s1 + 0xf8]\n 80498: a0 = u64 [s1 + 0x168]\n 80502: a0 = a0 + a1\n 80505: a1 = a0 <u a1\n 80508: a4 = u64 [s1 + 0xf0]\n 80512: a2 = u64 [s1 + 0x160]\n 80516: a2 = a2 + a4\n 80519: a2 = a2 + a1\n 80522: a3 = a2 ^ a4\n 80525: a4 = a2 <u a4\n 80528: a4 = a1 if a3 == 0\n 80531: a3 = u64 [s1 + 0xe8]\n 80535: a1 = u64 [s1 + 0x170]\n 80539: a1 = a1 + a3\n 80542: t0 = a1 <u a3\n 80545: a5 = u64 [s1 + 0x178]\n 80549: a3 = u64 [s1 + 0xe0]\n 80553: a5 = a5 + a3\n 80556: a3 = a5 + t0\n 80559: a4 = a4 + a1\n 80562: a1 = a4 <u a1\n 80565: a1 = a1 + a3\n 80568: a1 = a1 | a2\n 80571: a2 = a0 | a4\n 80574: a2 = a2 | a1\n 80577: a1 = a1 | a4\n 80580: a2 = a2 >> 0x20\n 80583: a1 = a1 << 0x20\n 80586: a1 = a1 | a2\n 80589: jump @1041 if a1 != 0\n      : @1035 (gas: 11)\n 80593: a1 = u64 [s1 + 0x238]\n 80597: u64 [s1 + 0x130] = a1\n 80601: a1 = u64 [s1 + 0x230]\n 80605: u64 [s1 + 0x138] = a1\n 80609: a1 = u64 [s1 + 0x228]\n 80613: u64 [s1 + 0x128] = a1\n 80617: a1 = u64 [s1 + 0x220]\n 80621: u64 [s1 + 0x120] = a1\n 80625: i32 a0 = a0 + 0\n 80627: a1 = 0x20\n 80630: ra = 704, jump @0\n      : @1036 [@dyn 352] (gas: 114)\n 80637: a1 = u64 [s1 + 0x120]\n 80641: a1 = reverse a1\n 80643: a2 = a1 >> 0x38\n 80646: u8 [a0 + 0x1f] = a2\n 80649: a2 = a1 >> 0x30\n 80652: u8 [a0 + 0x1e] = a2\n 80655: a2 = a1 >> 0x28\n 80658: u8 [a0 + 0x1d] = a2\n 80661: a2 = a1 >> 0x20\n 80664: u8 [a0 + 0x1c] = a2\n 80667: a2 = a1 >> 0x18\n 80670: u8 [a0 + 0x1b] = a2\n 80673: a2 = a1 >> 0x10\n 80676: u8 [a0 + 0x1a] = a2\n 80679: a2 = a1 >> 0x8\n 80682: u8 [a0 + 0x19] = a2\n 80685: a2 = u64 [s1 + 0x128]\n 80689: a2 = reverse a2\n 80691: u8 [a0 + 0x18] = a1\n 80694: a1 = a2 >> 0x38\n 80697: u8 [a0 + 0x17] = a1\n 80700: a1 = a2 >> 0x30\n 80703: u8 [a0 + 0x16] = a1\n 80706: a1 = a2 >> 0x28\n 80709: u8 [a0 + 0x15] = a1\n 80712: a1 = a2 >> 0x20\n 80715: u8 [a0 + 0x14] = a1\n 80718: a1 = a2 >> 0x18\n 80721: u8 [a0 + 0x13] = a1\n 80724: a1 = a2 >> 0x10\n 80727: u8 [a0 + 0x12] = a1\n 80730: a1 = u64 [s1 + 0x130]\n 80734: a1 = reverse a1\n 80736: a3 = u64 [s1 + 0x138]\n 80740: a3 = reverse a3\n 80742: u8 [a0 + 0x10] = a2\n 80745: a2 = a2 >> 0x8\n 80748: u8 [a0 + 0x11] = a2\n 80751: u8 [a0 + 0x8] = a3\n 80754: a2 = a3 >> 0x38\n 80757: u8 [a0 + 0xf] = a2\n 80760: a2 = a3 >> 0x30\n 80763: u8 [a0 + 0xe] = a2\n 80766: a2 = a3 >> 0x28\n 80769: u8 [a0 + 0xd] = a2\n 80772: a2 = a3 >> 0x20\n 80775: u8 [a0 + 0xc] = a2\n 80778: a2 = a3 >> 0x18\n 80781: u8 [a0 + 0xb] = a2\n 80784: a2 = a3 >> 0x10\n 80787: u8 [a0 + 0xa] = a2\n 80790: a3 = a3 >> 0x8\n 80793: u8 [a0 + 0x9] = a3\n 80796: u8 [a0] = a1\n 80798: a2 = a1 >> 0x38\n 80801: u8 [a0 + 0x7] = a2\n 80804: a2 = a1 >> 0x30\n 80807: u8 [a0 + 0x6] = a2\n 80810: a2 = a1 >> 0x28\n 80813: u8 [a0 + 0x5] = a2\n 80816: a2 = a1 >> 0x20\n 80819: u8 [a0 + 0x4] = a2\n 80822: a2 = a1 >> 0x18\n 80825: u8 [a0 + 0x3] = a2\n 80828: a2 = a1 >> 0x10\n 80831: u8 [a0 + 0x2] = a2\n 80834: a1 = a1 >> 0x8\n 80837: u8 [a0 + 0x1] = a1\n 80840: t2 = u64 [s1 + 0x148]\n 80844: t2 = t2 + 0x1\n 80847: a0 = t2 <u 0x1\n 80850: a2 = u64 [s1 + 0x150]\n 80854: a2 = a2 + a0\n 80857: a0 = u64 [s1 + 0x168]\n 80861: ra = a0 + 0x20\n 80864: a1 = ra <u a0\n 80867: a0 = u64 [s1 + 0x160]\n 80871: t0 = a0 + a1\n 80874: a3 = t0 <u a0\n 80877: a3 = a1 if a1 == 0\n 80880: a0 = u64 [s1 + 0x170]\n 80884: t1 = a0 + a3\n 80887: a3 = t1 <u a0\n 80890: a4 = u64 [s1 + 0x178]\n 80894: a4 = a4 + a3\n 80897: a0 = u64 [s1 + 0x110]\n 80901: a1 = t1 <u a0\n 80904: u64 [s1 + 0x170] = a1\n 80908: a1 = u64 [s1 + 0x118]\n 80912: a5 = ra <u a1\n 80915: a3 = u64 [s1 + 0x108]\n 80919: a1 = t0 ^ a3\n 80922: a3 = t0 <u a3\n 80925: a3 = a5 if a1 == 0\n 80928: a5 = u64 [s1 + 0x100]\n 80932: a1 = a4 ^ a5\n 80935: u64 [s1 + 0x178] = a4\n 80939: a5 = a4 <u a5\n 80942: a4 = u64 [s1 + 0x170]\n 80946: a5 = a4 if a1 == 0\n 80949: a4 = t1 ^ a0\n 80952: a1 = a1 | a4\n 80955: a4 = t2 | a2\n 80958: a4 = a4 <u 0x1\n 80961: a0 = u64 [s1 + 0x140]\n 80965: a4 = a4 + a0\n 80968: a0 = a4 <u a0\n 80971: a3 = a5 if a1 != 0\n 80974: a5 = u64 [s1 + 0x158]\n 80978: a5 = a5 + a0\n 80981: u64 [s1 + 0x168] = ra\n 80985: u64 [s1 + 0x160] = t0\n 80989: u64 [s1 + 0x170] = t1\n 80993: jump @1033 if a3 != 0\n      : @1037 (gas: 37)\n 80997: a3 = ra + 0x3f\n 81000: a0 = a3 <u ra\n 81003: a4 = t0 + a0\n 81006: a1 = a4 <u t0\n 81009: a1 = a0 if a0 == 0\n 81012: a1 = a1 + t1\n 81015: a0 = a1 <u t1\n 81018: a2 = u64 [s1 + 0x178]\n 81022: a0 = a0 + a2\n 81025: a3 = a3 & 0xffffffffffffffe0\n 81028: t1 = u64 [s1 + 0xc0]\n 81032: a2 = a3 + t1\n 81035: u64 [s1 + 0x170] = a2\n 81039: a2 = a2 <u a3\n 81042: t0 = u64 [s1 + 0xc8]\n 81046: a3 = a4 + t0\n 81049: a3 = a3 + a2\n 81052: a5 = a3 ^ a4\n 81055: a4 = a3 <u a4\n 81058: a4 = a2 if a5 == 0\n 81061: t2 = u64 [s1 + 0xd8]\n 81065: a2 = a1 + t2\n 81068: a4 = a4 + a2\n 81071: a5 = a4 <u a2\n 81074: a1 = a2 <u a1\n 81077: ra = u64 [s1 + 0xd0]\n 81081: a0 = a0 + ra\n 81084: a0 = a0 + a1\n 81087: a5 = a5 + a0\n 81090: a0 = a5 >u 0\n 81092: a1 = a4 >u 0\n 81094: a1 = a0 if a5 != 0\n 81097: a0 = a4 | a5\n 81100: u64 [s1 + 0x178] = a3\n 81104: a2 = a3 >u 0\n 81106: a2 = a1 if a0 != 0\n 81109: jump @1042 if a2 != 0\n      : @1038 (gas: 14)\n 81113: a0 = u64 [s1 + 0x170]\n 81117: a0 = a0 <u t1\n 81120: a2 = u64 [s1 + 0x178]\n 81124: a1 = a2 ^ t0\n 81127: a2 = a2 <u t0\n 81130: a2 = a0 if a1 == 0\n 81133: a0 = a4 <u t2\n 81136: a1 = a5 ^ ra\n 81139: a3 = a5 <u ra\n 81142: a3 = a0 if a1 == 0\n 81145: a0 = a4 ^ t2\n 81148: a0 = a0 | a1\n 81151: a3 = a2 if a0 == 0\n 81154: jump @1042 if a3 != 0\n      : @1039 (gas: 5)\n 81158: a0 = 0x40\n 81161: a1 = 0x20\n 81164: u64 [s1 + 0x168] = a5\n 81168: u64 [s1 + 0x160] = a4\n 81172: ra = 706, jump @0\n      : @1040 [@dyn 353] (gas: 83)\n 81179: a1 = u64 [s1 + 0x170]\n 81183: a1 = reverse a1\n 81185: a2 = a1 >> 0x38\n 81188: u8 [a0 + 0x1f] = a2\n 81191: a2 = a1 >> 0x30\n 81194: u8 [a0 + 0x1e] = a2\n 81197: a2 = a1 >> 0x28\n 81200: u8 [a0 + 0x1d] = a2\n 81203: a2 = a1 >> 0x20\n 81206: u8 [a0 + 0x1c] = a2\n 81209: a2 = a1 >> 0x18\n 81212: u8 [a0 + 0x1b] = a2\n 81215: a2 = a1 >> 0x10\n 81218: u8 [a0 + 0x1a] = a2\n 81221: a2 = u64 [s1 + 0x178]\n 81225: a2 = reverse a2\n 81227: u8 [a0 + 0x18] = a1\n 81230: a1 = a1 >> 0x8\n 81233: u8 [a0 + 0x19] = a1\n 81236: a1 = a2 >> 0x38\n 81239: u8 [a0 + 0x17] = a1\n 81242: a1 = a2 >> 0x30\n 81245: u8 [a0 + 0x16] = a1\n 81248: a1 = a2 >> 0x28\n 81251: u8 [a0 + 0x15] = a1\n 81254: a1 = a2 >> 0x20\n 81257: u8 [a0 + 0x14] = a1\n 81260: a1 = a2 >> 0x18\n 81263: u8 [a0 + 0x13] = a1\n 81266: a1 = a2 >> 0x10\n 81269: u8 [a0 + 0x12] = a1\n 81272: a1 = u64 [s1 + 0x160]\n 81276: a1 = reverse a1\n 81278: u8 [a0 + 0x10] = a2\n 81281: a2 = a2 >> 0x8\n 81284: u8 [a0 + 0x11] = a2\n 81287: a2 = a1 >> 0x38\n 81290: u8 [a0 + 0xf] = a2\n 81293: a2 = a1 >> 0x30\n 81296: u8 [a0 + 0xe] = a2\n 81299: a2 = a1 >> 0x28\n 81302: u8 [a0 + 0xd] = a2\n 81305: a2 = a1 >> 0x20\n 81308: u8 [a0 + 0xc] = a2\n 81311: a2 = a1 >> 0x18\n 81314: u8 [a0 + 0xb] = a2\n 81317: a2 = a1 >> 0x10\n 81320: u8 [a0 + 0xa] = a2\n 81323: a2 = u64 [s1 + 0x168]\n 81327: a2 = reverse a2\n 81329: u8 [a0 + 0x8] = a1\n 81332: a1 = a1 >> 0x8\n 81335: u8 [a0 + 0x9] = a1\n 81338: a1 = a2 >> 0x38\n 81341: u8 [a0 + 0x7] = a1\n 81344: a1 = a2 >> 0x30\n 81347: u8 [a0 + 0x6] = a1\n 81350: a1 = a2 >> 0x28\n 81353: u8 [a0 + 0x5] = a1\n 81356: a1 = a2 >> 0x20\n 81359: u8 [a0 + 0x4] = a1\n 81362: a1 = a2 >> 0x18\n 81365: u8 [a0 + 0x3] = a1\n 81368: a1 = a2 >> 0x10\n 81371: u8 [a0 + 0x2] = a1\n 81374: u8 [a0] = a2\n 81376: a2 = a2 >> 0x8\n 81379: u8 [a0 + 0x1] = a2\n 81382: a0 = u64 [s1 + 0x10]\n 81385: a1 = u64 [s1 + 0xc0]\n 81389: u64 [a0] = a1\n 81391: a1 = u64 [s1 + 0xd0]\n 81395: u64 [a0 + 0x18] = a1\n 81398: a1 = u64 [s1 + 0xc8]\n 81402: u64 [a0 + 0x8] = a1\n 81405: a1 = u64 [s1 + 0xd8]\n 81409: u64 [a0 + 0x10] = a1\n 81412: sp = s0 + 0xfffffffffffffda0\n 81416: ra = u64 [sp + 0x258]\n 81420: s0 = u64 [sp + 0x250]\n 81424: s1 = u64 [sp + 0x248]\n 81428: sp = sp + 0x260\n 81432: ret\n      : @1041 (gas: 1)\n 81434: trap\n      : @1042 (gas: 8)\n 81435: u64 [s1 + 496] = 0\n 81439: u64 [s1 + 488] = 0\n 81443: u64 [s1 + 480] = 0\n 81447: a0 = 0x4e487b7100000000\n 81457: a1 = s1 + 0x1e0\n 81461: u64 [s1 + 0x1f8] = a0\n 81465: a0 = 0\n 81467: ra = 708, jump @23\n      : @1043 [@dyn 354] (gas: 8)\n 81474: u64 [s1 + 472] = 0\n 81478: u64 [s1 + 464] = 0\n 81482: u64 [s1 + 448] = 0x41\n 81487: a0 = 0x4\n 81490: a1 = s1 + 0x1c0\n 81494: u64 [s1 + 456] = 0\n 81498: ra = 0x2c8\n 81502: jump @23\n      : @1044 (gas: 8)\n 81506: u64 [s1 + 432] = 0\n 81510: u64 [s1 + 424] = 0\n 81514: u64 [s1 + 416] = 0\n 81518: a0 = 0x4e487b7100000000\n 81528: a1 = s1 + 0x1a0\n 81532: u64 [s1 + 0x1b8] = a0\n 81536: a0 = 0\n 81538: ra = 710, jump @23\n      : @1045 [@dyn 355] (gas: 7)\n 81545: u64 [s1 + 408] = 0\n 81549: u64 [s1 + 400] = 0\n 81553: u64 [s1 + 384] = 0x22\n 81558: a0 = 0x4\n 81561: a1 = s1 + 0x180\n 81565: u64 [s1 + 392] = 0\n 81569: ra = 712, jump @23\n      : @1046 [@dyn 356] (gas: 3)\n 81576: a1 = 0x24\n 81579: a0 = 0\n 81581: ra = 714, jump @0\n      : @1047 [@dyn 357] (gas: 6)\n 81588: i32 a1 = a0 + 0\n 81590: a0 = 0x1\n 81593: a2 = 0x24\n 81596: ra = 0x2cc\n 81600: ecalli 15 // 'seal_return'\n 81602: fallthrough\n      : @1048 [@dyn 358] (gas: 32)\n 81603: sp = sp + 0xffffffffffffff20\n 81607: u64 [sp + 0xd8] = ra\n 81611: u64 [sp + 0xd0] = s0\n 81615: u64 [sp + 0xc8] = s1\n 81619: s0 = sp + 0xe0\n 81623: sp = sp & 0xffffffffffffffe0\n 81626: s1 = sp\n 81628: u64 [s1 + 0x18] = a0\n 81631: a0 = u64 [a1]\n 81633: u64 [s1 + 0x20] = a0\n 81636: a0 = u64 [a1 + 0x8]\n 81639: u64 [s1 + 0x28] = a0\n 81642: a0 = u64 [a1 + 0x10]\n 81645: u64 [s1 + 0x30] = a0\n 81648: a0 = u64 [a1 + 0x18]\n 81651: u64 [s1 + 0x38] = a0\n 81654: u64 [s1 + 152] = 0\n 81658: u64 [s1 + 144] = 0\n 81662: u64 [s1 + 136] = 0\n 81666: u64 [s1 + 128] = 0x1\n 81671: u64 [s1 + 184] = 0\n 81675: u64 [s1 + 176] = 0\n 81679: u64 [s1 + 168] = 0\n 81683: u64 [s1 + 160] = 0\n 81687: u32 [s1 + 192] = 0x20\n 81692: i32 a1 = s1 + 0x80\n 81696: i32 a3 = s1 + 0xa0\n 81700: i32 a4 = s1 + 0xc0\n 81704: a2 = 0xffffffffffffffff\n 81707: a0 = 0\n 81709: ecalli 9 // 'get_storage'\n 81711: fallthrough\n      : @1049 (gas: 20)\n 81712: a0 = u64 [s1 + 0xb8]\n 81716: t0 = u64 [s1 + 0xa0]\n 81720: a2 = u64 [s1 + 0xb0]\n 81724: a3 = u64 [s1 + 0xa8]\n 81728: a1 = u64 [s1 + 0x38]\n 81731: a4 = a0 ^ a1\n 81734: a1 = a1 <u a0\n 81737: a0 = u64 [s1 + 0x30]\n 81740: a5 = a0 <u a2\n 81743: a5 = a1 if a4 != 0\n 81746: a1 = u64 [s1 + 0x28]\n 81749: t1 = a3 ^ a1\n 81752: a3 = a1 <u a3\n 81755: a1 = u64 [s1 + 0x20]\n 81758: a1 = a1 <u t0\n 81761: a1 = a3 if t1 != 0\n 81764: a0 = a0 ^ a2\n 81767: a0 = a0 | a4\n 81770: a1 = a5 if a0 != 0\n 81773: jump @1053 if a1 == 0\n      : @1050 (gas: 3)\n 81777: a1 = 0x20\n 81780: a0 = 0\n 81782: ra = 718, jump @0\n      : @1051 [@dyn 359] (gas: 35)\n 81789: u8 [a0 + 31] = 0x1\n 81793: u8 [a0 + 30] = 0\n 81796: u8 [a0 + 29] = 0\n 81799: u8 [a0 + 28] = 0\n 81802: u8 [a0 + 27] = 0\n 81805: u8 [a0 + 26] = 0\n 81808: u8 [a0 + 25] = 0\n 81811: u8 [a0 + 24] = 0\n 81814: u8 [a0 + 23] = 0\n 81817: u8 [a0 + 22] = 0\n 81820: u8 [a0 + 21] = 0\n 81823: u8 [a0 + 20] = 0\n 81826: u8 [a0 + 19] = 0\n 81829: u8 [a0 + 18] = 0\n 81832: u8 [a0 + 17] = 0\n 81835: u8 [a0 + 16] = 0\n 81838: u8 [a0 + 15] = 0\n 81841: u8 [a0 + 14] = 0\n 81844: u8 [a0 + 13] = 0\n 81847: u8 [a0 + 12] = 0\n 81850: u8 [a0 + 11] = 0\n 81853: u8 [a0 + 10] = 0\n 81856: u8 [a0 + 9] = 0\n 81859: u8 [a0 + 8] = 0\n 81862: u8 [a0 + 7] = 0\n 81865: u8 [a0 + 6] = 0\n 81868: u8 [a0 + 5] = 0\n 81871: u8 [a0 + 4] = 0\n 81874: u8 [a0 + 3] = 0\n 81877: u8 [a0 + 2] = 0\n 81880: u8 [a0 + 1] = 0\n 81883: u8 [a0 + 0] = 0\n 81885: a1 = 0x20\n 81888: a0 = 0\n 81890: ra = 720, jump @0\n      : @1052 [@dyn 360] (gas: 70)\n 81897: a1 = sp + 0xffffffffffffffe0\n 81900: a1 = a1 & 0xffffffffffffffe0\n 81903: u64 [s1 + 0x10] = a1\n 81906: sp = a1\n 81908: i32 a0 = a0 + 0\n 81910: i32 a2 = a1 + 0\n 81912: a1 = 0x20\n 81915: ecalli 10 // 'hash_keccak_256'\n 81917: t0 = u64 [s1 + 0x10]\n 81920: a0 = u64 [t0 + 0x18]\n 81923: a1 = u64 [t0 + 0x10]\n 81926: a3 = reverse a0\n 81928: a1 = reverse a1\n 81930: a4 = 0x3\n 81933: a0 = u64 [s1 + 0x20]\n 81936: a2 = a0 << 0x1\n 81939: t1 = a2 + a0\n 81942: a4 = a0 mulhu a4\n 81945: a2 = u64 [s1 + 0x28]\n 81948: a5 = a2 << 0x1\n 81951: a5 = a5 + a2\n 81954: a4 = a4 + a5\n 81957: t1 = t1 + a3\n 81960: a3 = t1 <u a3\n 81963: a0 = a1 + a4\n 81966: ra = a0 + a3\n 81969: a0 = ra ^ a1\n 81972: a1 = ra <u a1\n 81975: a1 = a3 if a0 == 0\n 81978: a0 = a4 <u a5\n 81981: a4 = 0x3\n 81984: a3 = a2 mulhu a4\n 81987: a0 = a0 + a3\n 81990: a2 = u64 [s1 + 0x30]\n 81993: a3 = a2 << 0x1\n 81996: t2 = a3 + a2\n 81999: a4 = a2 mulhu a4\n 82002: a5 = u64 [t0]\n 82004: a2 = u64 [s1 + 0x38]\n 82007: a3 = a2 << 0x1\n 82010: a3 = a3 + a2\n 82013: a3 = a3 + a4\n 82016: a4 = reverse a5\n 82018: a3 = a3 + a4\n 82021: a4 = u64 [t0 + 0x8]\n 82024: t2 = t2 + a0\n 82027: a0 = t2 <u a0\n 82030: a0 = a0 + a3\n 82033: a3 = reverse a4\n 82035: t2 = t2 + a3\n 82038: a3 = t2 <u a3\n 82041: a0 = a0 + a3\n 82044: a1 = a1 + t2\n 82047: a3 = a1 <u t2\n 82050: a0 = a0 + a3\n 82053: a3 = u64 [s1 + 0x18]\n 82056: u64 [a3] = t1\n 82058: u64 [a3 + 0x8] = ra\n 82061: u64 [a3 + 0x10] = a1\n 82064: u64 [a3 + 0x18] = a0\n 82067: u64 [a3 + 56] = 0\n 82070: u64 [a3 + 48] = 0\n 82073: u64 [a3 + 40] = 0\n 82076: u64 [a3 + 32] = 0\n 82079: sp = s0 + 0xffffffffffffff20\n 82083: ra = u64 [sp + 0xd8]\n 82087: s0 = u64 [sp + 0xd0]\n 82091: s1 = u64 [sp + 0xc8]\n 82095: sp = sp + 0xe0\n 82099: ret\n      : @1053 (gas: 8)\n 82101: u64 [s1 + 112] = 0\n 82104: u64 [s1 + 104] = 0\n 82107: u64 [s1 + 96] = 0\n 82110: a0 = 0x4e487b7100000000\n 82120: a1 = s1 + 0x60\n 82123: u64 [s1 + 0x78] = a0\n 82126: a0 = 0\n 82128: ra = 722, jump @23\n      : @1054 [@dyn 361] (gas: 7)\n 82135: u64 [s1 + 88] = 0\n 82138: u64 [s1 + 80] = 0\n 82141: u64 [s1 + 64] = 0x32\n 82145: a0 = 0x4\n 82148: a1 = s1 + 0x40\n 82151: u64 [s1 + 72] = 0\n 82154: ra = 724, jump @23\n      : @1055 [@dyn 362] (gas: 3)\n 82161: a1 = 0x24\n 82164: a0 = 0\n 82166: ra = 726, jump @0\n      : @1056 [@dyn 363] (gas: 6)\n 82173: i32 a1 = a0 + 0\n 82175: a0 = 0x1\n 82178: a2 = 0x24\n 82181: ra = 0x2d8\n 82185: ecalli 15 // 'seal_return'\n 82187: fallthrough\n      : @1057 [@dyn 364] (gas: 12)\n 82188: sp = sp + 0xffffffffffffffd0\n 82191: u64 [sp + 0x28] = ra\n 82194: u64 [sp + 0x20] = s0\n 82197: u64 [sp + 0x18] = s1\n 82200: a1 = u64 [a0 + 0x10]\n 82203: a2 = u64 [a0 + 0x18]\n 82206: a3 = u64 [a0 + 0x8]\n 82209: a0 = u64 [a0]\n 82211: a2 = a2 | a3\n 82214: a0 = a0 | a1\n 82217: a0 = a0 | a2\n 82220: jump @1059 if a0 == 0\n      : @1058 (gas: 5)\n 82223: ra = u64 [sp + 0x28]\n 82226: s0 = u64 [sp + 0x20]\n 82229: s1 = u64 [sp + 0x18]\n 82232: sp = sp + 0x30\n 82235: ret\n      : @1059 (gas: 3)\n 82237: a0 = 0x40\n 82240: a1 = 0x20\n 82243: ra = 730, jump @0\n      : @1060 [@dyn 365] (gas: 102)\n 82250: a1 = u8 [a0 + 0x11]\n 82253: a2 = u8 [a0 + 0x10]\n 82256: a3 = u8 [a0 + 0x12]\n 82259: a4 = u8 [a0 + 0x13]\n 82262: a1 = a1 << 0x8\n 82265: a1 = a1 | a2\n 82268: a3 = a3 << 0x10\n 82271: a4 = a4 << 0x18\n 82274: a3 = a3 | a4\n 82277: a1 = a1 | a3\n 82280: a2 = u8 [a0 + 0x15]\n 82283: a3 = u8 [a0 + 0x14]\n 82286: a4 = u8 [a0 + 0x16]\n 82289: a5 = u8 [a0 + 0x17]\n 82292: a2 = a2 << 0x8\n 82295: a2 = a2 | a3\n 82298: a4 = a4 << 0x10\n 82301: a5 = a5 << 0x18\n 82304: a4 = a4 | a5\n 82307: a2 = a2 | a4\n 82310: a2 = a2 << 0x20\n 82313: a1 = a1 | a2\n 82316: a2 = u8 [a0 + 0x1]\n 82319: a3 = u8 [a0]\n 82321: a4 = u8 [a0 + 0x2]\n 82324: a5 = u8 [a0 + 0x3]\n 82327: a2 = a2 << 0x8\n 82330: a2 = a2 | a3\n 82333: a4 = a4 << 0x10\n 82336: a5 = a5 << 0x18\n 82339: a4 = a4 | a5\n 82342: a2 = a2 | a4\n 82345: a3 = u8 [a0 + 0x5]\n 82348: a4 = u8 [a0 + 0x4]\n 82351: a5 = u8 [a0 + 0x6]\n 82354: s1 = u8 [a0 + 0x7]\n 82357: a3 = a3 << 0x8\n 82360: a3 = a3 | a4\n 82363: a5 = a5 << 0x10\n 82366: s1 = s1 << 0x18\n 82369: a5 = a5 | s1\n 82372: a3 = a3 | a5\n 82375: a3 = a3 << 0x20\n 82378: a2 = a2 | a3\n 82381: a3 = u8 [a0 + 0x19]\n 82384: a4 = u8 [a0 + 0x18]\n 82387: a5 = u8 [a0 + 0x1a]\n 82390: s1 = u8 [a0 + 0x1b]\n 82393: a3 = a3 << 0x8\n 82396: a3 = a3 | a4\n 82399: a5 = a5 << 0x10\n 82402: s1 = s1 << 0x18\n 82405: a5 = a5 | s1\n 82408: a3 = a3 | a5\n 82411: a4 = u8 [a0 + 0x1d]\n 82414: a5 = u8 [a0 + 0x1c]\n 82417: s1 = u8 [a0 + 0x1e]\n 82420: s0 = u8 [a0 + 0x1f]\n 82423: a4 = a4 << 0x8\n 82426: a4 = a4 | a5\n 82429: s1 = s1 << 0x10\n 82432: s0 = s0 << 0x18\n 82435: s0 = s0 | s1\n 82438: a4 = a4 | s0\n 82441: a4 = a4 << 0x20\n 82444: a3 = a3 | a4\n 82447: a4 = u8 [a0 + 0x9]\n 82450: a5 = u8 [a0 + 0x8]\n 82453: s1 = u8 [a0 + 0xa]\n 82456: s0 = u8 [a0 + 0xb]\n 82459: a4 = a4 << 0x8\n 82462: a4 = a4 | a5\n 82465: s1 = s1 << 0x10\n 82468: s0 = s0 << 0x18\n 82471: s0 = s0 | s1\n 82474: a4 = a4 | s0\n 82477: a5 = u8 [a0 + 0xd]\n 82480: s1 = u8 [a0 + 0xc]\n 82483: s0 = u8 [a0 + 0xe]\n 82486: a0 = u8 [a0 + 0xf]\n 82489: a5 = a5 << 0x8\n 82492: a5 = a5 | s1\n 82495: s0 = s0 << 0x10\n 82498: a0 = a0 << 0x18\n 82501: a0 = a0 | s0\n 82504: a0 = a0 | a5\n 82507: a0 = a0 << 0x20\n 82510: a0 = a0 | a4\n 82513: s0 = reverse a0\n 82515: a3 = reverse a3\n 82517: s1 = reverse a2\n 82519: a0 = reverse a1\n 82521: u64 [sp + 0x8] = a0\n 82524: a0 = a0 | s1\n 82527: u64 [sp + 0x10] = a3\n 82530: a1 = a3 | s0\n 82533: a1 = a1 | a0\n 82536: a1 = a1 >> 0x20\n 82539: a0 = a0 | s0\n 82542: a0 = a0 << 0x20\n 82545: a0 = a0 | a1\n 82548: jump @1067 if a0 != 0\n      : @1061 (gas: 4)\n 82552: a0 = i32 [sp + 0x10]\n 82555: a1 = 0x20\n 82558: u64 [sp] = a0\n 82560: ra = 732, jump @0\n      : @1062 [@dyn 366] (gas: 41)\n 82567: u8 [a0 + 31] = 0\n 82570: u8 [a0 + 30] = 0\n 82573: u8 [a0 + 29] = 0\n 82576: u8 [a0 + 28] = 0\n 82579: u8 [a0 + 27] = 0\n 82582: u8 [a0 + 26] = 0\n 82585: u8 [a0 + 25] = 0\n 82588: u8 [a0 + 24] = 0\n 82591: u8 [a0 + 23] = 0\n 82594: u8 [a0 + 22] = 0\n 82597: u8 [a0 + 21] = 0\n 82600: u8 [a0 + 20] = 0\n 82603: u8 [a0 + 19] = 0\n 82606: u8 [a0 + 18] = 0\n 82609: u8 [a0 + 17] = 0\n 82612: u8 [a0 + 16] = 0\n 82615: u8 [a0 + 15] = 0\n 82618: u8 [a0 + 14] = 0\n 82621: u8 [a0 + 13] = 0\n 82624: u8 [a0 + 12] = 0\n 82627: u8 [a0 + 11] = 0\n 82630: u8 [a0 + 10] = 0\n 82633: u8 [a0 + 9] = 0\n 82636: u8 [a0 + 8] = 0\n 82639: u8 [a0 + 7] = 0\n 82642: u8 [a0 + 6] = 0\n 82645: u8 [a0 + 5] = 0\n 82648: u8 [a0 + 3] = 0xa0\n 82653: u8 [a0 + 2] = 0x79\n 82657: u8 [a0 + 1] = 0xc3\n 82662: u8 [a0 + 0] = 0x8\n 82665: s1 = s1 | s0\n 82668: s0 = 0x100000000\n 82678: a1 = 0xfffffffc\n 82688: a2 = u64 [sp + 0x10]\n 82691: a1 = a2 <u a1\n 82694: a2 = u64 [sp + 0x8]\n 82697: a1 = 0 if a2 != 0\n 82699: a1 = 0 if s1 != 0\n 82701: u8 [a0 + 4] = 0\n 82704: jump @1067 if a1 == 0\n      : @1063 (gas: 4)\n 82708: a0 = u64 [sp]\n 82710: i32 a0 = a0 + 0x4\n 82713: a1 = 0x20\n 82716: ra = 734, jump @0\n      : @1064 [@dyn 367] (gas: 39)\n 82723: u8 [a0 + 31] = 0x20\n 82727: u8 [a0 + 30] = 0\n 82730: u8 [a0 + 29] = 0\n 82733: u8 [a0 + 28] = 0\n 82736: u8 [a0 + 27] = 0\n 82739: u8 [a0 + 26] = 0\n 82742: u8 [a0 + 25] = 0\n 82745: u8 [a0 + 24] = 0\n 82748: u8 [a0 + 23] = 0\n 82751: u8 [a0 + 22] = 0\n 82754: u8 [a0 + 21] = 0\n 82757: u8 [a0 + 20] = 0\n 82760: u8 [a0 + 19] = 0\n 82763: u8 [a0 + 18] = 0\n 82766: u8 [a0 + 17] = 0\n 82769: u8 [a0 + 16] = 0\n 82772: u8 [a0 + 15] = 0\n 82775: u8 [a0 + 14] = 0\n 82778: u8 [a0 + 13] = 0\n 82781: u8 [a0 + 12] = 0\n 82784: u8 [a0 + 11] = 0\n 82787: u8 [a0 + 10] = 0\n 82790: u8 [a0 + 9] = 0\n 82793: u8 [a0 + 8] = 0\n 82796: u8 [a0 + 7] = 0\n 82799: u8 [a0 + 6] = 0\n 82802: u8 [a0 + 5] = 0\n 82805: u8 [a0 + 4] = 0\n 82808: u8 [a0 + 3] = 0\n 82811: u8 [a0 + 2] = 0\n 82814: u8 [a0 + 1] = 0\n 82817: a1 = s0 + 0xffffffffffffffdc\n 82820: a2 = u64 [sp + 0x10]\n 82823: a1 = a2 <u a1\n 82826: a2 = u64 [sp + 0x8]\n 82829: a1 = 0 if a2 != 0\n 82831: a1 = 0 if s1 != 0\n 82833: u8 [a0 + 0] = 0\n 82835: jump @1067 if a1 == 0\n      : @1065 (gas: 4)\n 82839: a0 = u64 [sp]\n 82841: i32 a0 = a0 + 0x24\n 82844: a1 = 0x20\n 82847: ra = 736, jump @0\n      : @1066 [@dyn 368] (gas: 39)\n 82854: u8 [a0 + 31] = 0x9\n 82858: u8 [a0 + 30] = 0\n 82861: u8 [a0 + 29] = 0\n 82864: u8 [a0 + 28] = 0\n 82867: u8 [a0 + 27] = 0\n 82870: u8 [a0 + 26] = 0\n 82873: u8 [a0 + 25] = 0\n 82876: u8 [a0 + 24] = 0\n 82879: u8 [a0 + 23] = 0\n 82882: u8 [a0 + 22] = 0\n 82885: u8 [a0 + 21] = 0\n 82888: u8 [a0 + 20] = 0\n 82891: u8 [a0 + 19] = 0\n 82894: u8 [a0 + 18] = 0\n 82897: u8 [a0 + 17] = 0\n 82900: u8 [a0 + 16] = 0\n 82903: u8 [a0 + 15] = 0\n 82906: u8 [a0 + 14] = 0\n 82909: u8 [a0 + 13] = 0\n 82912: u8 [a0 + 12] = 0\n 82915: u8 [a0 + 11] = 0\n 82918: u8 [a0 + 10] = 0\n 82921: u8 [a0 + 9] = 0\n 82924: u8 [a0 + 8] = 0\n 82927: u8 [a0 + 7] = 0\n 82930: u8 [a0 + 6] = 0\n 82933: u8 [a0 + 5] = 0\n 82936: u8 [a0 + 4] = 0\n 82939: u8 [a0 + 3] = 0\n 82942: u8 [a0 + 2] = 0\n 82945: u8 [a0 + 1] = 0\n 82948: a1 = 0xffffffbc\n 82958: a2 = u64 [sp + 0x10]\n 82961: a1 = a2 <u a1\n 82964: a2 = u64 [sp + 0x8]\n 82967: a1 = 0 if a2 != 0\n 82969: a1 = 0 if s1 != 0\n 82971: u8 [a0 + 0] = 0\n 82973: jump @1068 if a1 != 0\n      : @1067 (gas: 1)\n 82976: trap\n      : @1068 (gas: 4)\n 82977: s0 = u64 [sp]\n 82979: i32 a0 = s0 + 0x44\n 82982: a1 = 0x20\n 82985: ra = 738, jump @0\n      : @1069 [@dyn 369] (gas: 35)\n 82992: u8 [a0 + 31] = 0\n 82995: u8 [a0 + 30] = 0\n 82998: u8 [a0 + 29] = 0\n 83001: u8 [a0 + 28] = 0\n 83004: u8 [a0 + 27] = 0\n 83007: u8 [a0 + 26] = 0\n 83010: u8 [a0 + 25] = 0\n 83013: u8 [a0 + 24] = 0\n 83016: u8 [a0 + 23] = 0\n 83019: u8 [a0 + 22] = 0\n 83022: u8 [a0 + 21] = 0\n 83025: u8 [a0 + 20] = 0\n 83028: u8 [a0 + 19] = 0\n 83031: u8 [a0 + 18] = 0\n 83034: u8 [a0 + 17] = 0\n 83037: u8 [a0 + 16] = 0\n 83040: u8 [a0 + 15] = 0\n 83043: u8 [a0 + 14] = 0\n 83046: u8 [a0 + 13] = 0\n 83049: u8 [a0 + 12] = 0\n 83052: u8 [a0 + 11] = 0\n 83055: u8 [a0 + 10] = 0\n 83058: u8 [a0 + 9] = 0\n 83061: u8 [a0 + 8] = 0x6e\n 83065: u8 [a0 + 7] = 0x69\n 83069: u8 [a0 + 6] = 0x6d\n 83073: u8 [a0 + 5] = 0x64\n 83077: u8 [a0 + 4] = 0x61\n 83081: u8 [a0 + 3] = 0x20\n 83085: u8 [a0 + 2] = 0x74\n 83089: u8 [a0 + 1] = 0x6f\n 83093: u8 [a0 + 0] = 0x4e\n 83096: a1 = 0x64\n 83099: a0 = s0\n 83101: ra = 740, jump @0\n      : @1070 [@dyn 370] (gas: 6)\n 83108: i32 a1 = a0 + 0\n 83110: a0 = 0x1\n 83113: a2 = 0x64\n 83116: ra = 0x2e6\n 83120: ecalli 15 // 'seal_return'\n 83122: fallthrough\n      : @1071 [@dyn 371] (gas: 12)\n 83123: sp = sp + 0xffffffffffffffd0\n 83126: u64 [sp + 0x28] = ra\n 83129: u64 [sp + 0x20] = s0\n 83132: u64 [sp + 0x18] = s1\n 83135: a1 = u64 [a0 + 0x10]\n 83138: a2 = u64 [a0 + 0x18]\n 83141: a3 = u64 [a0 + 0x8]\n 83144: a0 = u64 [a0]\n 83146: a2 = a2 | a3\n 83149: a0 = a0 | a1\n 83152: a0 = a0 | a2\n 83155: jump @1073 if a0 == 0\n      : @1072 (gas: 5)\n 83158: ra = u64 [sp + 0x28]\n 83161: s0 = u64 [sp + 0x20]\n 83164: s1 = u64 [sp + 0x18]\n 83167: sp = sp + 0x30\n 83170: ret\n      : @1073 (gas: 3)\n 83172: a0 = 0x40\n 83175: a1 = 0x20\n 83178: ra = 744, jump @0\n      : @1074 [@dyn 372] (gas: 102)\n 83185: a1 = u8 [a0 + 0x11]\n 83188: a2 = u8 [a0 + 0x10]\n 83191: a3 = u8 [a0 + 0x12]\n 83194: a4 = u8 [a0 + 0x13]\n 83197: a1 = a1 << 0x8\n 83200: a1 = a1 | a2\n 83203: a3 = a3 << 0x10\n 83206: a4 = a4 << 0x18\n 83209: a3 = a3 | a4\n 83212: a1 = a1 | a3\n 83215: a2 = u8 [a0 + 0x15]\n 83218: a3 = u8 [a0 + 0x14]\n 83221: a4 = u8 [a0 + 0x16]\n 83224: a5 = u8 [a0 + 0x17]\n 83227: a2 = a2 << 0x8\n 83230: a2 = a2 | a3\n 83233: a4 = a4 << 0x10\n 83236: a5 = a5 << 0x18\n 83239: a4 = a4 | a5\n 83242: a2 = a2 | a4\n 83245: a2 = a2 << 0x20\n 83248: a1 = a1 | a2\n 83251: a2 = u8 [a0 + 0x1]\n 83254: a3 = u8 [a0]\n 83256: a4 = u8 [a0 + 0x2]\n 83259: a5 = u8 [a0 + 0x3]\n 83262: a2 = a2 << 0x8\n 83265: a2 = a2 | a3\n 83268: a4 = a4 << 0x10\n 83271: a5 = a5 << 0x18\n 83274: a4 = a4 | a5\n 83277: a2 = a2 | a4\n 83280: a3 = u8 [a0 + 0x5]\n 83283: a4 = u8 [a0 + 0x4]\n 83286: a5 = u8 [a0 + 0x6]\n 83289: s1 = u8 [a0 + 0x7]\n 83292: a3 = a3 << 0x8\n 83295: a3 = a3 | a4\n 83298: a5 = a5 << 0x10\n 83301: s1 = s1 << 0x18\n 83304: a5 = a5 | s1\n 83307: a3 = a3 | a5\n 83310: a3 = a3 << 0x20\n 83313: a2 = a2 | a3\n 83316: a3 = u8 [a0 + 0x19]\n 83319: a4 = u8 [a0 + 0x18]\n 83322: a5 = u8 [a0 + 0x1a]\n 83325: s1 = u8 [a0 + 0x1b]\n 83328: a3 = a3 << 0x8\n 83331: a3 = a3 | a4\n 83334: a5 = a5 << 0x10\n 83337: s1 = s1 << 0x18\n 83340: a5 = a5 | s1\n 83343: a3 = a3 | a5\n 83346: a4 = u8 [a0 + 0x1d]\n 83349: a5 = u8 [a0 + 0x1c]\n 83352: s1 = u8 [a0 + 0x1e]\n 83355: s0 = u8 [a0 + 0x1f]\n 83358: a4 = a4 << 0x8\n 83361: a4 = a4 | a5\n 83364: s1 = s1 << 0x10\n 83367: s0 = s0 << 0x18\n 83370: s0 = s0 | s1\n 83373: a4 = a4 | s0\n 83376: a4 = a4 << 0x20\n 83379: a3 = a3 | a4\n 83382: a4 = u8 [a0 + 0x9]\n 83385: a5 = u8 [a0 + 0x8]\n 83388: s1 = u8 [a0 + 0xa]\n 83391: s0 = u8 [a0 + 0xb]\n 83394: a4 = a4 << 0x8\n 83397: a4 = a4 | a5\n 83400: s1 = s1 << 0x10\n 83403: s0 = s0 << 0x18\n 83406: s0 = s0 | s1\n 83409: a4 = a4 | s0\n 83412: a5 = u8 [a0 + 0xd]\n 83415: s1 = u8 [a0 + 0xc]\n 83418: s0 = u8 [a0 + 0xe]\n 83421: a0 = u8 [a0 + 0xf]\n 83424: a5 = a5 << 0x8\n 83427: a5 = a5 | s1\n 83430: s0 = s0 << 0x10\n 83433: a0 = a0 << 0x18\n 83436: a0 = a0 | s0\n 83439: a0 = a0 | a5\n 83442: a0 = a0 << 0x20\n 83445: a0 = a0 | a4\n 83448: s0 = reverse a0\n 83450: a3 = reverse a3\n 83452: s1 = reverse a2\n 83454: a0 = reverse a1\n 83456: u64 [sp + 0x8] = a0\n 83459: a0 = a0 | s1\n 83462: u64 [sp + 0x10] = a3\n 83465: a1 = a3 | s0\n 83468: a1 = a1 | a0\n 83471: a1 = a1 >> 0x20\n 83474: a0 = a0 | s0\n 83477: a0 = a0 << 0x20\n 83480: a0 = a0 | a1\n 83483: jump @1081 if a0 != 0\n      : @1075 (gas: 4)\n 83487: a0 = i32 [sp + 0x10]\n 83490: a1 = 0x20\n 83493: u64 [sp] = a0\n 83495: ra = 746, jump @0\n      : @1076 [@dyn 373] (gas: 41)\n 83502: u8 [a0 + 31] = 0\n 83505: u8 [a0 + 30] = 0\n 83508: u8 [a0 + 29] = 0\n 83511: u8 [a0 + 28] = 0\n 83514: u8 [a0 + 27] = 0\n 83517: u8 [a0 + 26] = 0\n 83520: u8 [a0 + 25] = 0\n 83523: u8 [a0 + 24] = 0\n 83526: u8 [a0 + 23] = 0\n 83529: u8 [a0 + 22] = 0\n 83532: u8 [a0 + 21] = 0\n 83535: u8 [a0 + 20] = 0\n 83538: u8 [a0 + 19] = 0\n 83541: u8 [a0 + 18] = 0\n 83544: u8 [a0 + 17] = 0\n 83547: u8 [a0 + 16] = 0\n 83550: u8 [a0 + 15] = 0\n 83553: u8 [a0 + 14] = 0\n 83556: u8 [a0 + 13] = 0\n 83559: u8 [a0 + 12] = 0\n 83562: u8 [a0 + 11] = 0\n 83565: u8 [a0 + 10] = 0\n 83568: u8 [a0 + 9] = 0\n 83571: u8 [a0 + 8] = 0\n 83574: u8 [a0 + 7] = 0\n 83577: u8 [a0 + 6] = 0\n 83580: u8 [a0 + 5] = 0\n 83583: u8 [a0 + 3] = 0xa0\n 83588: u8 [a0 + 2] = 0x79\n 83592: u8 [a0 + 1] = 0xc3\n 83597: u8 [a0 + 0] = 0x8\n 83600: s1 = s1 | s0\n 83603: s0 = 0x100000000\n 83613: a1 = 0xfffffffc\n 83623: a2 = u64 [sp + 0x10]\n 83626: a1 = a2 <u a1\n 83629: a2 = u64 [sp + 0x8]\n 83632: a1 = 0 if a2 != 0\n 83634: a1 = 0 if s1 != 0\n 83636: u8 [a0 + 4] = 0\n 83639: jump @1081 if a1 == 0\n      : @1077 (gas: 4)\n 83643: a0 = u64 [sp]\n 83645: i32 a0 = a0 + 0x4\n 83648: a1 = 0x20\n 83651: ra = 748, jump @0\n      : @1078 [@dyn 374] (gas: 39)\n 83658: u8 [a0 + 31] = 0x20\n 83662: u8 [a0 + 30] = 0\n 83665: u8 [a0 + 29] = 0\n 83668: u8 [a0 + 28] = 0\n 83671: u8 [a0 + 27] = 0\n 83674: u8 [a0 + 26] = 0\n 83677: u8 [a0 + 25] = 0\n 83680: u8 [a0 + 24] = 0\n 83683: u8 [a0 + 23] = 0\n 83686: u8 [a0 + 22] = 0\n 83689: u8 [a0 + 21] = 0\n 83692: u8 [a0 + 20] = 0\n 83695: u8 [a0 + 19] = 0\n 83698: u8 [a0 + 18] = 0\n 83701: u8 [a0 + 17] = 0\n 83704: u8 [a0 + 16] = 0\n 83707: u8 [a0 + 15] = 0\n 83710: u8 [a0 + 14] = 0\n 83713: u8 [a0 + 13] = 0\n 83716: u8 [a0 + 12] = 0\n 83719: u8 [a0 + 11] = 0\n 83722: u8 [a0 + 10] = 0\n 83725: u8 [a0 + 9] = 0\n 83728: u8 [a0 + 8] = 0\n 83731: u8 [a0 + 7] = 0\n 83734: u8 [a0 + 6] = 0\n 83737: u8 [a0 + 5] = 0\n 83740: u8 [a0 + 4] = 0\n 83743: u8 [a0 + 3] = 0\n 83746: u8 [a0 + 2] = 0\n 83749: u8 [a0 + 1] = 0\n 83752: a1 = s0 + 0xffffffffffffffdc\n 83755: a2 = u64 [sp + 0x10]\n 83758: a1 = a2 <u a1\n 83761: a2 = u64 [sp + 0x8]\n 83764: a1 = 0 if a2 != 0\n 83766: a1 = 0 if s1 != 0\n 83768: u8 [a0 + 0] = 0\n 83770: jump @1081 if a1 == 0\n      : @1079 (gas: 4)\n 83774: a0 = u64 [sp]\n 83776: i32 a0 = a0 + 0x24\n 83779: a1 = 0x20\n 83782: ra = 750, jump @0\n      : @1080 [@dyn 375] (gas: 39)\n 83789: u8 [a0 + 31] = 0x11\n 83793: u8 [a0 + 30] = 0\n 83796: u8 [a0 + 29] = 0\n 83799: u8 [a0 + 28] = 0\n 83802: u8 [a0 + 27] = 0\n 83805: u8 [a0 + 26] = 0\n 83808: u8 [a0 + 25] = 0\n 83811: u8 [a0 + 24] = 0\n 83814: u8 [a0 + 23] = 0\n 83817: u8 [a0 + 22] = 0\n 83820: u8 [a0 + 21] = 0\n 83823: u8 [a0 + 20] = 0\n 83826: u8 [a0 + 19] = 0\n 83829: u8 [a0 + 18] = 0\n 83832: u8 [a0 + 17] = 0\n 83835: u8 [a0 + 16] = 0\n 83838: u8 [a0 + 15] = 0\n 83841: u8 [a0 + 14] = 0\n 83844: u8 [a0 + 13] = 0\n 83847: u8 [a0 + 12] = 0\n 83850: u8 [a0 + 11] = 0\n 83853: u8 [a0 + 10] = 0\n 83856: u8 [a0 + 9] = 0\n 83859: u8 [a0 + 8] = 0\n 83862: u8 [a0 + 7] = 0\n 83865: u8 [a0 + 6] = 0\n 83868: u8 [a0 + 5] = 0\n 83871: u8 [a0 + 4] = 0\n 83874: u8 [a0 + 3] = 0\n 83877: u8 [a0 + 2] = 0\n 83880: u8 [a0 + 1] = 0\n 83883: a1 = 0xffffffbc\n 83893: a2 = u64 [sp + 0x10]\n 83896: a1 = a2 <u a1\n 83899: a2 = u64 [sp + 0x8]\n 83902: a1 = 0 if a2 != 0\n 83904: a1 = 0 if s1 != 0\n 83906: u8 [a0 + 0] = 0\n 83908: jump @1082 if a1 != 0\n      : @1081 (gas: 1)\n 83911: trap\n      : @1082 (gas: 4)\n 83912: s0 = u64 [sp]\n 83914: i32 a0 = s0 + 0x44\n 83917: a1 = 0x20\n 83920: ra = 752, jump @0\n      : @1083 [@dyn 376] (gas: 36)\n 83927: u8 [a0 + 31] = 0\n 83930: u8 [a0 + 30] = 0\n 83933: u8 [a0 + 29] = 0\n 83936: u8 [a0 + 28] = 0\n 83939: u8 [a0 + 27] = 0\n 83942: u8 [a0 + 26] = 0\n 83945: u8 [a0 + 25] = 0\n 83948: u8 [a0 + 24] = 0\n 83951: u8 [a0 + 23] = 0\n 83954: u8 [a0 + 22] = 0\n 83957: u8 [a0 + 21] = 0\n 83960: u8 [a0 + 20] = 0\n 83963: u8 [a0 + 19] = 0\n 83966: u8 [a0 + 18] = 0\n 83969: u8 [a0 + 17] = 0\n 83972: u8 [a0 + 16] = 0x64\n 83976: u8 [a0 + 15] = 0x49\n 83980: u8 [a0 + 14] = 0x78\n 83984: u8 [a0 + 13] = 0x6f\n 83988: u8 [a0 + 12] = 0x42\n 83992: u8 [a0 + 11] = 0x74\n 83996: u8 [a0 + 10] = 0x6f\n 84000: u8 [a0 + 9] = 0x6f\n 84004: u8 [a0 + 8] = 0x6c\n 84008: a4 = 0x20\n 84011: u8 [a0 + 0x7] = a4\n 84014: u8 [a0 + 6] = 0x64\n 84018: u8 [a0 + 5] = 0x69\n 84022: u8 [a0 + 4] = 0x6c\n 84026: u8 [a0 + 3] = 0x61\n 84030: u8 [a0 + 2] = 0x76\n 84034: u8 [a0 + 1] = 0x6e\n 84038: u8 [a0 + 0] = 0x49\n 84041: a1 = 0x64\n 84044: a0 = s0\n 84046: ra = 754, jump @0\n      : @1084 [@dyn 377] (gas: 6)\n 84053: i32 a1 = a0 + 0\n 84055: a0 = 0x1\n 84058: a2 = 0x64\n 84061: ra = 0x2f4\n 84065: ecalli 15 // 'seal_return'\n 84067: fallthrough\n      : @1085 [@dyn 378] (gas: 73)\n 84068: sp = sp + 0xffffffffffffff40\n 84072: u64 [sp + 0xb8] = ra\n 84076: u64 [sp + 0xb0] = s0\n 84080: u64 [sp + 0xa8] = s1\n 84084: s0 = sp + 0xc0\n 84088: sp = sp & 0xffffffffffffffe0\n 84091: a2 = u64 [a1 + 0x10]\n 84094: u64 [sp + 0x38] = a2\n 84097: a2 = u64 [a1]\n 84099: u64 [sp + 0x30] = a2\n 84102: a2 = u64 [a1 + 0x18]\n 84105: u64 [sp + 0x28] = a2\n 84108: a1 = u64 [a1 + 0x8]\n 84111: u64 [sp + 0x18] = a1\n 84114: s1 = u64 [a0 + 0x18]\n 84117: a2 = u64 [a0 + 0x10]\n 84120: u64 [sp + 0x8] = a2\n 84123: a1 = u64 [a0 + 0x8]\n 84126: u64 [sp + 0x10] = a1\n 84129: a0 = u64 [a0]\n 84131: u64 [sp + 0x20] = a0\n 84134: u64 [sp + 0x78] = s1\n 84137: u64 [sp + 0x70] = a2\n 84140: u64 [sp + 0x68] = a1\n 84143: u64 [sp + 0x60] = a0\n 84146: u64 [sp + 152] = 0\n 84150: u64 [sp + 144] = 0\n 84154: u64 [sp + 136] = 0\n 84158: u64 [sp + 128] = 0\n 84162: u32 [sp + 64] = 0x20\n 84166: i32 a1 = sp + 0x60\n 84169: i32 a3 = sp + 0x80\n 84173: i32 a4 = sp + 0x40\n 84176: a2 = 0xffffffffffffffff\n 84179: a0 = 0\n 84181: ecalli 9 // 'get_storage'\n 84183: a0 = u64 [sp + 0x80]\n 84187: a1 = u64 [sp + 0x28]\n 84190: a2 = u64 [sp + 0x18]\n 84193: a1 = a1 | a2\n 84196: a2 = u64 [sp + 0x38]\n 84199: a3 = u64 [sp + 0x30]\n 84202: a2 = a2 | a3\n 84205: a1 = a1 | a2\n 84208: a0 = a0 & 0xffffffffffffff00\n 84212: a1 = a1 >u 0\n 84214: a0 = a0 | a1\n 84217: u64 [sp + 0x78] = s1\n 84220: a1 = u64 [sp + 0x90]\n 84224: a2 = u64 [sp + 0x8]\n 84227: u64 [sp + 0x70] = a2\n 84230: a2 = u64 [sp + 0x98]\n 84234: a3 = u64 [sp + 0x10]\n 84237: u64 [sp + 0x68] = a3\n 84240: a3 = u64 [sp + 0x88]\n 84244: a4 = u64 [sp + 0x20]\n 84247: u64 [sp + 0x60] = a4\n 84250: u64 [sp + 0x98] = a2\n 84254: u64 [sp + 0x90] = a1\n 84258: u64 [sp + 0x88] = a3\n 84262: u64 [sp + 0x80] = a0\n 84266: i32 a1 = sp + 0x60\n 84269: i32 a3 = sp + 0x80\n 84273: a2 = 0xffffffffffffffff\n 84276: a4 = 0x20\n 84279: a0 = 0\n 84281: ecalli 17 // 'set_storage'\n 84283: sp = s0 + 0xffffffffffffff40\n 84287: ra = u64 [sp + 0xb8]\n 84291: s0 = u64 [sp + 0xb0]\n 84295: s1 = u64 [sp + 0xa8]\n 84299: sp = sp + 0xc0\n 84303: ret\n      : @1086 (gas: 40)\n 84305: sp = sp + 0xfffffffffffffe80\n 84309: u64 [sp + 0x178] = ra\n 84313: u64 [sp + 0x170] = s0\n 84317: u64 [sp + 0x168] = s1\n 84321: s0 = sp + 0x180\n 84325: sp = sp & 0xffffffffffffffe0\n 84328: s1 = sp\n 84330: u64 [s1 + 0x18] = a0\n 84333: a0 = u64 [a2 + 0x18]\n 84336: u64 [s1 + 0x38] = a0\n 84339: a0 = u64 [a2 + 0x10]\n 84342: u64 [s1 + 0x30] = a0\n 84345: a0 = u64 [a2 + 0x8]\n 84348: u64 [s1 + 0x28] = a0\n 84351: a0 = u64 [a2]\n 84353: u64 [s1 + 0x20] = a0\n 84356: a4 = u64 [a1 + 0x18]\n 84359: a3 = u64 [a1 + 0x10]\n 84362: a2 = u64 [a1 + 0x8]\n 84365: a0 = u64 [a1]\n 84367: u64 [s1 + 0x98] = a4\n 84371: u64 [s1 + 0x138] = a4\n 84375: u64 [s1 + 0xa0] = a3\n 84379: u64 [s1 + 0x130] = a3\n 84383: u64 [s1 + 0xa8] = a2\n 84387: u64 [s1 + 0x128] = a2\n 84391: u64 [s1 + 0xb0] = a0\n 84395: u64 [s1 + 0x120] = a0\n 84399: u64 [s1 + 344] = 0\n 84403: u64 [s1 + 336] = 0\n 84407: u64 [s1 + 328] = 0\n 84411: u64 [s1 + 320] = 0\n 84415: u32 [s1 + 352] = 0x20\n 84420: i32 a1 = s1 + 0x120\n 84424: i32 a3 = s1 + 0x140\n 84428: i32 a4 = s1 + 0x160\n 84432: a2 = 0xffffffffffffffff\n 84435: a0 = 0\n 84437: ecalli 9 // 'get_storage'\n 84439: fallthrough\n      : @1087 (gas: 32)\n 84440: t1 = u64 [s1 + 0x150]\n 84444: t2 = u64 [s1 + 0x148]\n 84448: t0 = u64 [s1 + 0x158]\n 84452: a5 = u64 [s1 + 0x140]\n 84456: a0 = t1 << 0x3f\n 84459: a1 = t2 >> 0x1\n 84462: a0 = a0 | a1\n 84465: a1 = t0 << 0x3f\n 84468: a2 = t1 >> 0x1\n 84471: a1 = a1 | a2\n 84474: a2 = t2 << 0x3f\n 84477: a3 = a5 >> 0x1\n 84480: a4 = a3 | a2\n 84483: a2 = t0 >> 0x1\n 84486: u64 [s1 + 0xb8] = a5\n 84490: a5 = a5 & 0x1\n 84493: a3 = -a5\n 84495: ra = a3 & a1\n 84498: a1 = a3 & a0\n 84501: a2 = a2 & a3\n 84504: a3 = a4 & 0x7f\n 84507: a4 = a3 if a5 == 0\n 84510: u64 [s1 + 0x78] = a4\n 84513: a0 = a4 <u 0x20\n 84516: u64 [s1 + 0x68] = a1\n 84519: a0 = 0 if a1 != 0\n 84521: u64 [s1 + 0x70] = ra\n 84524: u64 [s1 + 0x60] = a2\n 84527: a1 = ra | a2\n 84530: a0 = 0 if a1 != 0\n 84532: a1 = a5 <u 0x1\n 84535: jump @1106 if a1 != a0\n      : @1088 (gas: 17)\n 84539: u64 [s1 + 0xd8] = a5\n 84543: u64 [s1 + 0x90] = a3\n 84547: u64 [s1 + 0xc0] = t2\n 84551: u64 [s1 + 0xc8] = t1\n 84555: u64 [s1 + 0xd0] = t0\n 84559: a2 = u64 [s1 + 0x20]\n 84562: a3 = u64 [s1 + 0x30]\n 84565: a0 = a2 | a3\n 84568: a1 = u64 [s1 + 0x38]\n 84571: a4 = u64 [s1 + 0x28]\n 84574: a1 = a1 | a4\n 84577: a0 = a0 | a1\n 84580: a0 = a0 >> 0x20\n 84583: a1 = a1 | a3\n 84586: a1 = a1 << 0x20\n 84589: a0 = a0 | a1\n 84592: jump @1105 if a0 != 0\n      : @1089 (gas: 4)\n 84596: i32 a0 = a2 + 0\n 84598: a1 = 0x20\n 84601: u64 [s1 + 0x88] = a0\n 84605: ra = 758, jump @0\n      : @1090 [@dyn 379] (gas: 70)\n 84612: a1 = u64 [s1 + 0x78]\n 84615: a1 = reverse a1\n 84617: a2 = a1 >> 0x38\n 84620: u8 [a0 + 0x1f] = a2\n 84623: a2 = a1 >> 0x30\n 84626: u8 [a0 + 0x1e] = a2\n 84629: a2 = a1 >> 0x28\n 84632: u8 [a0 + 0x1d] = a2\n 84635: a2 = a1 >> 0x20\n 84638: u8 [a0 + 0x1c] = a2\n 84641: a2 = a1 >> 0x18\n 84644: u8 [a0 + 0x1b] = a2\n 84647: a2 = a1 >> 0x10\n 84650: u8 [a0 + 0x1a] = a2\n 84653: a2 = a1 >> 0x8\n 84656: u8 [a0 + 0x19] = a2\n 84659: a2 = u64 [s1 + 0x68]\n 84662: a2 = reverse a2\n 84664: u8 [a0 + 0x18] = a1\n 84667: a1 = a2 >> 0x38\n 84670: u8 [a0 + 0x17] = a1\n 84673: a1 = a2 >> 0x30\n 84676: u8 [a0 + 0x16] = a1\n 84679: a1 = a2 >> 0x28\n 84682: u8 [a0 + 0x15] = a1\n 84685: a1 = a2 >> 0x20\n 84688: u8 [a0 + 0x14] = a1\n 84691: a1 = a2 >> 0x18\n 84694: u8 [a0 + 0x13] = a1\n 84697: a1 = a2 >> 0x10\n 84700: u8 [a0 + 0x12] = a1\n 84703: a1 = u64 [s1 + 0x70]\n 84706: a1 = reverse a1\n 84708: u8 [a0 + 0x10] = a2\n 84711: a2 = a2 >> 0x8\n 84714: u8 [a0 + 0x11] = a2\n 84717: a2 = a1 >> 0x38\n 84720: u8 [a0 + 0xf] = a2\n 84723: a2 = a1 >> 0x30\n 84726: u8 [a0 + 0xe] = a2\n 84729: a2 = a1 >> 0x28\n 84732: u8 [a0 + 0xd] = a2\n 84735: a2 = a1 >> 0x20\n 84738: u8 [a0 + 0xc] = a2\n 84741: a2 = a1 >> 0x18\n 84744: u8 [a0 + 0xb] = a2\n 84747: a2 = a1 >> 0x10\n 84750: u8 [a0 + 0xa] = a2\n 84753: a2 = u64 [s1 + 0x60]\n 84756: a2 = reverse a2\n 84758: u8 [a0 + 0x8] = a1\n 84761: a1 = a1 >> 0x8\n 84764: u8 [a0 + 0x9] = a1\n 84767: a1 = a2 >> 0x38\n 84770: u8 [a0 + 0x7] = a1\n 84773: a1 = a2 >> 0x30\n 84776: u8 [a0 + 0x6] = a1\n 84779: a1 = a2 >> 0x28\n 84782: u8 [a0 + 0x5] = a1\n 84785: a1 = a2 >> 0x20\n 84788: u8 [a0 + 0x4] = a1\n 84791: a1 = a2 >> 0x18\n 84794: u8 [a0 + 0x3] = a1\n 84797: a1 = a2 >> 0x10\n 84800: u8 [a0 + 0x2] = a1\n 84803: u8 [a0] = a2\n 84805: a2 = a2 >> 0x8\n 84808: u8 [a0 + 0x1] = a2\n 84811: a0 = u64 [s1 + 0xd8]\n 84815: jump @1094 if a0 != 0\n      : @1091 (gas: 10)\n 84819: a0 = u64 [s1 + 0x38]\n 84822: a1 = u64 [s1 + 0x30]\n 84825: a0 = a0 | a1\n 84828: a1 = 0xffffffe0\n 84838: a2 = u64 [s1 + 0x20]\n 84841: a1 = a2 <u a1\n 84844: a2 = u64 [s1 + 0x28]\n 84847: a1 = 0 if a2 != 0\n 84849: a1 = 0 if a0 != 0\n 84851: jump @1105 if a1 == 0\n      : @1092 (gas: 7)\n 84855: a0 = u64 [s1 + 0xb8]\n 84859: a0 = a0 & 0xffffffffffffff00\n 84863: u64 [s1 + 0xb8] = a0\n 84867: a0 = u64 [s1 + 0x88]\n 84871: i32 a0 = a0 + 0x20\n 84874: a1 = 0x20\n 84877: ra = 760, jump @0\n      : @1093 [@dyn 380] (gas: 74)\n 84884: t0 = 0\n 84886: t1 = 0\n 84888: u64 [s1 + 216] = 0\n 84892: a1 = u64 [s1 + 0xb8]\n 84896: a3 = reverse a1\n 84898: a4 = a3 >> 0x30\n 84901: u8 [a0 + 0x1e] = a4\n 84904: a4 = a3 >> 0x28\n 84907: u8 [a0 + 0x1d] = a4\n 84910: a4 = a3 >> 0x20\n 84913: u8 [a0 + 0x1c] = a4\n 84916: a4 = a3 >> 0x18\n 84919: u8 [a0 + 0x1b] = a4\n 84922: a4 = a3 >> 0x10\n 84925: u8 [a0 + 0x1a] = a4\n 84928: a1 = u64 [s1 + 0xc0]\n 84932: a4 = reverse a1\n 84934: u8 [a0 + 0x18] = a3\n 84937: a3 = a3 >> 0x8\n 84940: u8 [a0 + 0x19] = a3\n 84943: a3 = a4 >> 0x38\n 84946: u8 [a0 + 0x17] = a3\n 84949: a3 = a4 >> 0x30\n 84952: u8 [a0 + 0x16] = a3\n 84955: a3 = a4 >> 0x28\n 84958: u8 [a0 + 0x15] = a3\n 84961: a3 = a4 >> 0x20\n 84964: u8 [a0 + 0x14] = a3\n 84967: a3 = a4 >> 0x18\n 84970: u8 [a0 + 0x13] = a3\n 84973: a3 = a4 >> 0x10\n 84976: u8 [a0 + 0x12] = a3\n 84979: a1 = u64 [s1 + 0xc8]\n 84983: a3 = reverse a1\n 84985: u8 [a0 + 0x10] = a4\n 84988: a4 = a4 >> 0x8\n 84991: u8 [a0 + 0x11] = a4\n 84994: a4 = a3 >> 0x38\n 84997: u8 [a0 + 0xf] = a4\n 85000: a4 = a3 >> 0x30\n 85003: u8 [a0 + 0xe] = a4\n 85006: a4 = a3 >> 0x28\n 85009: u8 [a0 + 0xd] = a4\n 85012: a4 = a3 >> 0x20\n 85015: u8 [a0 + 0xc] = a4\n 85018: a4 = a3 >> 0x18\n 85021: u8 [a0 + 0xb] = a4\n 85024: a4 = a3 >> 0x10\n 85027: u8 [a0 + 0xa] = a4\n 85030: a1 = u64 [s1 + 0xd0]\n 85034: a4 = reverse a1\n 85036: u8 [a0 + 31] = 0\n 85039: u8 [a0 + 0x8] = a3\n 85042: a3 = a3 >> 0x8\n 85045: u8 [a0 + 0x9] = a3\n 85048: u8 [a0] = a4\n 85050: a3 = a4 >> 0x38\n 85053: u8 [a0 + 0x7] = a3\n 85056: a3 = a4 >> 0x30\n 85059: u8 [a0 + 0x6] = a3\n 85062: a3 = a4 >> 0x28\n 85065: u8 [a0 + 0x5] = a3\n 85068: a3 = a4 >> 0x20\n 85071: u8 [a0 + 0x4] = a3\n 85074: a3 = a4 >> 0x18\n 85077: u8 [a0 + 0x3] = a3\n 85080: a3 = a4 >> 0x10\n 85083: u8 [a0 + 0x2] = a3\n 85086: a4 = a4 >> 0x8\n 85089: u8 [a0 + 0x1] = a4\n 85092: a0 = u64 [s1 + 0x90]\n 85096: a0 = a0 >u 0\n 85098: ra = a0 << 0x5\n 85101: jump @1104\n      : @1094 (gas: 3)\n 85104: a1 = 0x20\n 85107: a0 = 0\n 85109: ra = 762, jump @0\n      : @1095 [@dyn 381] (gas: 71)\n 85116: a1 = u64 [s1 + 0x98]\n 85120: a1 = reverse a1\n 85122: a2 = u64 [s1 + 0xa0]\n 85126: a2 = reverse a2\n 85128: a3 = u64 [s1 + 0xa8]\n 85132: a3 = reverse a3\n 85134: a4 = u64 [s1 + 0xb0]\n 85138: a4 = reverse a4\n 85140: u8 [a0 + 0x18] = a4\n 85143: a5 = a4 >> 0x38\n 85146: u8 [a0 + 0x1f] = a5\n 85149: a5 = a4 >> 0x30\n 85152: u8 [a0 + 0x1e] = a5\n 85155: a5 = a4 >> 0x28\n 85158: u8 [a0 + 0x1d] = a5\n 85161: a5 = a4 >> 0x20\n 85164: u8 [a0 + 0x1c] = a5\n 85167: a5 = a4 >> 0x18\n 85170: u8 [a0 + 0x1b] = a5\n 85173: a5 = a4 >> 0x10\n 85176: u8 [a0 + 0x1a] = a5\n 85179: a4 = a4 >> 0x8\n 85182: u8 [a0 + 0x19] = a4\n 85185: u8 [a0 + 0x10] = a3\n 85188: a4 = a3 >> 0x38\n 85191: u8 [a0 + 0x17] = a4\n 85194: a4 = a3 >> 0x30\n 85197: u8 [a0 + 0x16] = a4\n 85200: a4 = a3 >> 0x28\n 85203: u8 [a0 + 0x15] = a4\n 85206: a4 = a3 >> 0x20\n 85209: u8 [a0 + 0x14] = a4\n 85212: a4 = a3 >> 0x18\n 85215: u8 [a0 + 0x13] = a4\n 85218: a4 = a3 >> 0x10\n 85221: u8 [a0 + 0x12] = a4\n 85224: a3 = a3 >> 0x8\n 85227: u8 [a0 + 0x11] = a3\n 85230: u8 [a0 + 0x8] = a2\n 85233: a3 = a2 >> 0x38\n 85236: u8 [a0 + 0xf] = a3\n 85239: a3 = a2 >> 0x30\n 85242: u8 [a0 + 0xe] = a3\n 85245: a3 = a2 >> 0x28\n 85248: u8 [a0 + 0xd] = a3\n 85251: a3 = a2 >> 0x20\n 85254: u8 [a0 + 0xc] = a3\n 85257: a3 = a2 >> 0x18\n 85260: u8 [a0 + 0xb] = a3\n 85263: a3 = a2 >> 0x10\n 85266: u8 [a0 + 0xa] = a3\n 85269: a2 = a2 >> 0x8\n 85272: u8 [a0 + 0x9] = a2\n 85275: u8 [a0] = a1\n 85277: a2 = a1 >> 0x38\n 85280: u8 [a0 + 0x7] = a2\n 85283: a2 = a1 >> 0x30\n 85286: u8 [a0 + 0x6] = a2\n 85289: a2 = a1 >> 0x28\n 85292: u8 [a0 + 0x5] = a2\n 85295: a2 = a1 >> 0x20\n 85298: u8 [a0 + 0x4] = a2\n 85301: a2 = a1 >> 0x18\n 85304: u8 [a0 + 0x3] = a2\n 85307: a2 = a1 >> 0x10\n 85310: u8 [a0 + 0x2] = a2\n 85313: a1 = a1 >> 0x8\n 85316: u8 [a0 + 0x1] = a1\n 85319: a1 = 0x20\n 85322: a0 = 0\n 85324: ra = 764, jump @0\n      : @1096 [@dyn 382] (gas: 9)\n 85331: a1 = sp + 0xffffffffffffffe0\n 85334: a1 = a1 & 0xffffffffffffffe0\n 85337: sp = a1\n 85339: i32 a0 = a0 + 0\n 85341: u64 [s1 + 0xb0] = a1\n 85345: i32 a2 = a1 + 0\n 85347: a1 = 0x20\n 85350: ecalli 10 // 'hash_keccak_256'\n 85352: fallthrough\n      : @1097 (gas: 9)\n 85353: a0 = u64 [s1 + 0xb8]\n 85357: a0 = a0 <u 0x2\n 85360: a1 = u64 [s1 + 0xc0]\n 85364: a0 = 0 if a1 != 0\n 85366: a1 = u64 [s1 + 0xd0]\n 85370: a2 = u64 [s1 + 0xc8]\n 85374: a1 = a1 | a2\n 85377: a0 = 0 if a1 != 0\n 85379: jump @1099 if a0 == 0\n      : @1098 (gas: 5)\n 85382: ra = 0\n 85384: t0 = 0\n 85386: t1 = 0\n 85388: u64 [s1 + 216] = 0\n 85392: jump @1104\n      : @1099 (gas: 30)\n 85395: u64 [s1 + 200] = 0\n 85399: u64 [s1 + 192] = 0\n 85403: u64 [s1 + 208] = 0\n 85407: u64 [s1 + 216] = 0\n 85411: a0 = u64 [s1 + 0xb0]\n 85415: a4 = u64 [a0]\n 85417: a1 = u64 [s1 + 0x20]\n 85420: a2 = a1 + 0x20\n 85423: u64 [s1 + 0x58] = a2\n 85426: a1 = a2 <u a1\n 85429: a2 = u64 [s1 + 0x28]\n 85432: a3 = a2 + a1\n 85435: u64 [s1 + 0x50] = a3\n 85438: a3 = a3 <u a2\n 85441: a3 = a1 if a1 == 0\n 85444: a1 = u64 [a0 + 0x8]\n 85447: a2 = u64 [a0 + 0x10]\n 85450: a0 = u64 [a0 + 0x18]\n 85453: a5 = reverse a4\n 85455: a4 = reverse a1\n 85457: a2 = reverse a2\n 85459: t2 = reverse a0\n 85461: a0 = u64 [s1 + 0x30]\n 85464: a3 = a3 + a0\n 85467: u64 [s1 + 0x48] = a3\n 85470: a0 = a3 <u a0\n 85473: a1 = u64 [s1 + 0x38]\n 85476: a0 = a0 + a1\n 85479: u64 [s1 + 0x40] = a0\n 85482: fallthrough\n      : @1100 (gas: 20)\n 85483: u64 [s1 + 0xa0] = a4\n 85487: u64 [s1 + 0x130] = a4\n 85491: u64 [s1 + 0xb0] = a2\n 85495: u64 [s1 + 0x128] = a2\n 85499: u64 [s1 + 0xa8] = t2\n 85503: u64 [s1 + 0x120] = t2\n 85507: u64 [s1 + 0xb8] = a5\n 85511: u64 [s1 + 0x138] = a5\n 85515: u64 [s1 + 344] = 0\n 85519: u64 [s1 + 336] = 0\n 85523: u64 [s1 + 328] = 0\n 85527: u64 [s1 + 320] = 0\n 85531: u32 [s1 + 352] = 0x20\n 85536: i32 a1 = s1 + 0x120\n 85540: i32 a3 = s1 + 0x140\n 85544: i32 a4 = s1 + 0x160\n 85548: a2 = 0xffffffffffffffff\n 85551: a0 = 0\n 85553: ecalli 9 // 'get_storage'\n 85555: fallthrough\n      : @1101 (gas: 30)\n 85556: a1 = u64 [s1 + 0x58]\n 85559: a0 = u64 [s1 + 0xc8]\n 85563: a0 = a0 + a1\n 85566: a1 = a0 <u a1\n 85569: a4 = u64 [s1 + 0x50]\n 85572: a2 = u64 [s1 + 0xc0]\n 85576: a2 = a2 + a4\n 85579: a2 = a2 + a1\n 85582: a3 = a2 ^ a4\n 85585: a4 = a2 <u a4\n 85588: a4 = a1 if a3 == 0\n 85591: a3 = u64 [s1 + 0x48]\n 85594: a1 = u64 [s1 + 0xd0]\n 85598: a1 = a1 + a3\n 85601: t0 = a1 <u a3\n 85604: a5 = u64 [s1 + 0xd8]\n 85608: a3 = u64 [s1 + 0x40]\n 85611: a5 = a5 + a3\n 85614: a3 = a5 + t0\n 85617: a4 = a4 + a1\n 85620: a1 = a4 <u a1\n 85623: a1 = a1 + a3\n 85626: a1 = a1 | a2\n 85629: a2 = a0 | a4\n 85632: a2 = a2 | a1\n 85635: a1 = a1 | a4\n 85638: a2 = a2 >> 0x20\n 85641: a1 = a1 << 0x20\n 85644: a1 = a1 | a2\n 85647: jump @1105 if a1 != 0\n      : @1102 (gas: 11)\n 85651: a1 = u64 [s1 + 0x158]\n 85655: u64 [s1 + 0x90] = a1\n 85659: a1 = u64 [s1 + 0x150]\n 85663: u64 [s1 + 0x98] = a1\n 85667: a1 = u64 [s1 + 0x148]\n 85671: u64 [s1 + 0x88] = a1\n 85675: a1 = u64 [s1 + 0x140]\n 85679: u64 [s1 + 0x80] = a1\n 85683: i32 a0 = a0 + 0\n 85685: a1 = 0x20\n 85688: ra = 766, jump @0\n      : @1103 [@dyn 383] (gas: 114)\n 85695: a1 = u64 [s1 + 0x80]\n 85699: a1 = reverse a1\n 85701: a2 = a1 >> 0x38\n 85704: u8 [a0 + 0x1f] = a2\n 85707: a2 = a1 >> 0x30\n 85710: u8 [a0 + 0x1e] = a2\n 85713: a2 = a1 >> 0x28\n 85716: u8 [a0 + 0x1d] = a2\n 85719: a2 = a1 >> 0x20\n 85722: u8 [a0 + 0x1c] = a2\n 85725: a2 = a1 >> 0x18\n 85728: u8 [a0 + 0x1b] = a2\n 85731: a2 = a1 >> 0x10\n 85734: u8 [a0 + 0x1a] = a2\n 85737: a2 = a1 >> 0x8\n 85740: u8 [a0 + 0x19] = a2\n 85743: a2 = u64 [s1 + 0x88]\n 85747: a2 = reverse a2\n 85749: u8 [a0 + 0x18] = a1\n 85752: a1 = a2 >> 0x38\n 85755: u8 [a0 + 0x17] = a1\n 85758: a1 = a2 >> 0x30\n 85761: u8 [a0 + 0x16] = a1\n 85764: a1 = a2 >> 0x28\n 85767: u8 [a0 + 0x15] = a1\n 85770: a1 = a2 >> 0x20\n 85773: u8 [a0 + 0x14] = a1\n 85776: a1 = a2 >> 0x18\n 85779: u8 [a0 + 0x13] = a1\n 85782: a1 = a2 >> 0x10\n 85785: u8 [a0 + 0x12] = a1\n 85788: a1 = u64 [s1 + 0x90]\n 85792: a1 = reverse a1\n 85794: a3 = u64 [s1 + 0x98]\n 85798: a3 = reverse a3\n 85800: u8 [a0 + 0x10] = a2\n 85803: a2 = a2 >> 0x8\n 85806: u8 [a0 + 0x11] = a2\n 85809: u8 [a0 + 0x8] = a3\n 85812: a2 = a3 >> 0x38\n 85815: u8 [a0 + 0xf] = a2\n 85818: a2 = a3 >> 0x30\n 85821: u8 [a0 + 0xe] = a2\n 85824: a2 = a3 >> 0x28\n 85827: u8 [a0 + 0xd] = a2\n 85830: a2 = a3 >> 0x20\n 85833: u8 [a0 + 0xc] = a2\n 85836: a2 = a3 >> 0x18\n 85839: u8 [a0 + 0xb] = a2\n 85842: a2 = a3 >> 0x10\n 85845: u8 [a0 + 0xa] = a2\n 85848: a3 = a3 >> 0x8\n 85851: u8 [a0 + 0x9] = a3\n 85854: u8 [a0] = a1\n 85856: a2 = a1 >> 0x38\n 85859: u8 [a0 + 0x7] = a2\n 85862: a2 = a1 >> 0x30\n 85865: u8 [a0 + 0x6] = a2\n 85868: a2 = a1 >> 0x28\n 85871: u8 [a0 + 0x5] = a2\n 85874: a2 = a1 >> 0x20\n 85877: u8 [a0 + 0x4] = a2\n 85880: a2 = a1 >> 0x18\n 85883: u8 [a0 + 0x3] = a2\n 85886: a2 = a1 >> 0x10\n 85889: u8 [a0 + 0x2] = a2\n 85892: a1 = a1 >> 0x8\n 85895: u8 [a0 + 0x1] = a1\n 85898: t2 = u64 [s1 + 0xa8]\n 85902: t2 = t2 + 0x1\n 85905: a0 = t2 <u 0x1\n 85908: a2 = u64 [s1 + 0xb0]\n 85912: a2 = a2 + a0\n 85915: a0 = u64 [s1 + 0xc8]\n 85919: ra = a0 + 0x20\n 85922: a1 = ra <u a0\n 85925: a0 = u64 [s1 + 0xc0]\n 85929: t0 = a0 + a1\n 85932: a3 = t0 <u a0\n 85935: a3 = a1 if a1 == 0\n 85938: a0 = u64 [s1 + 0xd0]\n 85942: t1 = a0 + a3\n 85945: a3 = t1 <u a0\n 85948: a4 = u64 [s1 + 0xd8]\n 85952: a4 = a4 + a3\n 85955: a0 = u64 [s1 + 0x70]\n 85958: a1 = t1 <u a0\n 85961: u64 [s1 + 0xd0] = a1\n 85965: a1 = u64 [s1 + 0x78]\n 85968: a5 = ra <u a1\n 85971: a3 = u64 [s1 + 0x68]\n 85974: a1 = t0 ^ a3\n 85977: a3 = t0 <u a3\n 85980: a3 = a5 if a1 == 0\n 85983: a5 = u64 [s1 + 0x60]\n 85986: a1 = a4 ^ a5\n 85989: u64 [s1 + 0xd8] = a4\n 85993: a5 = a4 <u a5\n 85996: a4 = u64 [s1 + 0xd0]\n 86000: a5 = a4 if a1 == 0\n 86003: a4 = t1 ^ a0\n 86006: a1 = a1 | a4\n 86009: a4 = t2 | a2\n 86012: a4 = a4 <u 0x1\n 86015: a0 = u64 [s1 + 0xa0]\n 86019: a4 = a4 + a0\n 86022: a0 = a4 <u a0\n 86025: a3 = a5 if a1 != 0\n 86028: a5 = u64 [s1 + 0xb8]\n 86032: a5 = a5 + a0\n 86035: u64 [s1 + 0xc8] = ra\n 86039: u64 [s1 + 0xc0] = t0\n 86043: u64 [s1 + 0xd0] = t1\n 86047: jump @1100 if a3 != 0\n      : @1104 (gas: 38)\n 86051: a1 = u64 [s1 + 0x20]\n 86054: a0 = a1 + ra\n 86057: a3 = a0 <u a1\n 86060: a2 = u64 [s1 + 0x28]\n 86063: a1 = a2 + t0\n 86066: a1 = a1 + a3\n 86069: a4 = a1 ^ a2\n 86072: a5 = a1 <u a2\n 86075: a5 = a3 if a4 == 0\n 86078: a4 = u64 [s1 + 0x30]\n 86081: a2 = a4 + t1\n 86084: a5 = a5 + a2\n 86087: t0 = a5 <u a2\n 86090: a2 = a2 <u a4\n 86093: a4 = u64 [s1 + 0x38]\n 86096: a3 = u64 [s1 + 0xd8]\n 86100: a4 = a4 + a3\n 86103: a2 = a2 + a4\n 86106: a2 = a2 + t0\n 86109: a3 = a0 + 0x20\n 86112: a0 = a3 <u a0\n 86115: a4 = a1 + a0\n 86118: a1 = a4 <u a1\n 86121: a1 = a0 if a0 == 0\n 86124: a1 = a1 + a5\n 86127: a0 = a1 <u a5\n 86130: a0 = a0 + a2\n 86133: a2 = u64 [s1 + 0x18]\n 86136: u64 [a2] = a3\n 86138: u64 [a2 + 0x8] = a4\n 86141: u64 [a2 + 0x10] = a1\n 86144: u64 [a2 + 0x18] = a0\n 86147: sp = s0 + 0xfffffffffffffe80\n 86151: ra = u64 [sp + 0x178]\n 86155: s0 = u64 [sp + 0x170]\n 86159: s1 = u64 [sp + 0x168]\n 86163: sp = sp + 0x180\n 86167: ret\n      : @1105 (gas: 1)\n 86169: trap\n      : @1106 (gas: 8)\n 86170: u64 [s1 + 272] = 0\n 86174: u64 [s1 + 264] = 0\n 86178: u64 [s1 + 256] = 0\n 86182: a0 = 0x4e487b7100000000\n 86192: a1 = s1 + 0x100\n 86196: u64 [s1 + 0x118] = a0\n 86200: a0 = 0\n 86202: ra = 768, jump @23\n      : @1107 [@dyn 384] (gas: 7)\n 86209: u64 [s1 + 248] = 0\n 86213: u64 [s1 + 240] = 0\n 86217: u64 [s1 + 224] = 0x22\n 86222: a0 = 0x4\n 86225: a1 = s1 + 0xe0\n 86229: u64 [s1 + 232] = 0\n 86233: ra = 770, jump @23\n      : @1108 [@dyn 385] (gas: 3)\n 86240: a1 = 0x24\n 86243: a0 = 0\n 86245: ra = 772, jump @0\n      : @1109 [@dyn 386] (gas: 6)\n 86252: i32 a1 = a0 + 0\n 86254: a0 = 0x1\n 86257: a2 = 0x24\n 86260: ra = 0x306\n 86264: ecalli 15 // 'seal_return'\n 86266: fallthrough\n      : @1110 [@dyn 387] (gas: 7)\n 86267: a3 = u64 [a1 + 0x18]\n 86270: a4 = u64 [a1 + 0x10]\n 86273: a2 = u64 [a1 + 0x8]\n 86276: a3 = a3 | a4\n 86279: a4 = a2 <u 0x1\n 86282: a4 = 0 if a3 != 0\n 86284: jump @1112 if a4 == 0\n      : @1111 (gas: 16)\n 86287: a1 = u64 [a1]\n 86289: a3 = a1 + 0x1f\n 86292: a1 = a3 <u a1\n 86295: a1 = a1 + a2\n 86298: a1 = a1 & 0x1\n 86301: a3 = a3 & 0xffffffffffffffe0\n 86304: a2 = a3 + 0x20\n 86307: a3 = a2 <u a3\n 86310: a4 = a1 + a3\n 86313: a1 = a4 <u a1\n 86316: a1 = a3 if a3 == 0\n 86319: u64 [a0 + 24] = 0\n 86322: u64 [a0] = a2\n 86324: u64 [a0 + 0x8] = a4\n 86327: u64 [a0 + 0x10] = a1\n 86330: ret\n      : @1112 (gas: 13)\n 86332: sp = sp + 0xffffffffffffffb0\n 86335: u64 [sp + 0x48] = ra\n 86338: u64 [sp + 0x40] = s0\n 86341: s0 = sp + 0x50\n 86344: sp = sp & 0xfffffffffffffff0\n 86347: u64 [sp + 48] = 0\n 86350: u64 [sp + 40] = 0\n 86353: u64 [sp + 32] = 0\n 86356: a0 = 0x4e487b7100000000\n 86366: a1 = sp + 0x20\n 86369: u64 [sp + 0x38] = a0\n 86372: a0 = 0\n 86374: ra = 776, jump @23\n      : @1113 [@dyn 388] (gas: 7)\n 86381: u64 [sp + 24] = 0\n 86384: u64 [sp + 16] = 0\n 86387: u64 [sp + 0] = 0x41\n 86390: a0 = 0x4\n 86393: a1 = sp\n 86395: u64 [sp + 8] = 0\n 86398: ra = 778, jump @23\n      : @1114 [@dyn 389] (gas: 3)\n 86405: a1 = 0x24\n 86408: a0 = 0\n 86410: ra = 780, jump @0\n      : @1115 [@dyn 390] (gas: 6)\n 86417: i32 a1 = a0 + 0\n 86419: a0 = 0x1\n 86422: a2 = 0x24\n 86425: ra = 0x30e\n 86429: ecalli 15 // 'seal_return'\n 86431: fallthrough\n      : @1116 [@dyn 391] (gas: 29)\n 86432: sp = sp + 0xffffffffffffff90\n 86435: u64 [sp + 0x68] = ra\n 86438: u64 [sp + 0x60] = s0\n 86441: u64 [sp + 0x58] = s1\n 86444: s0 = sp + 0x70\n 86447: sp = sp & 0xfffffffffffffff0\n 86450: s1 = u64 [a3]\n 86452: a4 = u64 [a2]\n 86454: u64 [sp] = a4\n 86456: t2 = u64 [a3 + 0x8]\n 86459: a5 = u64 [a2 + 0x8]\n 86462: a4 = u64 [a3 + 0x10]\n 86465: t0 = u64 [a2 + 0x10]\n 86468: t1 = u64 [a3 + 0x18]\n 86471: a2 = u64 [a2 + 0x18]\n 86474: ra = t2 ^ a5\n 86477: a5 = t2 <u a5\n 86480: u64 [sp + 0x8] = s1\n 86483: a3 = u64 [sp]\n 86485: a3 = s1 <u a3\n 86488: a3 = a5 if ra != 0\n 86491: a5 = t1 ^ a2\n 86494: a2 = t1 <u a2\n 86497: s1 = a4 <u t0\n 86500: s1 = a2 if a5 != 0\n 86503: a2 = a4 ^ t0\n 86506: a2 = a2 | a5\n 86509: a3 = s1 if a2 != 0\n 86512: jump @1118 if a3 == 0\n      : @1117 (gas: 39)\n 86515: t0 = u64 [a1 + 0x18]\n 86518: ra = u64 [a1 + 0x10]\n 86521: a5 = u64 [a1 + 0x8]\n 86524: a1 = u64 [a1]\n 86526: s1 = a4 >> 0x3a\n 86529: t1 = t1 << 0x6\n 86532: t1 = t1 | s1\n 86535: a2 = t2 >> 0x3a\n 86538: a4 = a4 << 0x6\n 86541: a2 = a2 | a4\n 86544: a3 = u64 [sp + 0x8]\n 86547: a4 = a3 >> 0x3a\n 86550: t2 = t2 << 0x6\n 86553: a4 = t2 | a4\n 86556: a3 = a3 << 0x6\n 86559: a1 = a1 + a3\n 86562: a3 = a1 <u a3\n 86565: a5 = a5 + a4\n 86568: a5 = a5 + a3\n 86571: s1 = a5 ^ a4\n 86574: a4 = a5 <u a4\n 86577: a4 = a3 if s1 == 0\n 86580: ra = ra + a2\n 86583: a4 = a4 + ra\n 86586: a3 = a4 <u ra\n 86589: a2 = ra <u a2\n 86592: t0 = t0 + t1\n 86595: a2 = a2 + t0\n 86598: a2 = a2 + a3\n 86601: u64 [a0] = a1\n 86603: u64 [a0 + 0x8] = a5\n 86606: u64 [a0 + 0x10] = a4\n 86609: u64 [a0 + 0x18] = a2\n 86612: sp = s0 + 0xffffffffffffff90\n 86615: ra = u64 [sp + 0x68]\n 86618: s0 = u64 [sp + 0x60]\n 86621: s1 = u64 [sp + 0x58]\n 86624: sp = sp + 0x70\n 86627: ret\n      : @1118 (gas: 8)\n 86629: u64 [sp + 64] = 0\n 86632: u64 [sp + 56] = 0\n 86635: u64 [sp + 48] = 0\n 86638: a0 = 0x4e487b7100000000\n 86648: a1 = sp + 0x30\n 86651: u64 [sp + 0x48] = a0\n 86654: a0 = 0\n 86656: ra = 784, jump @23\n      : @1119 [@dyn 392] (gas: 7)\n 86663: u64 [sp + 40] = 0\n 86666: u64 [sp + 32] = 0\n 86669: u64 [sp + 16] = 0x32\n 86673: a0 = 0x4\n 86676: a1 = sp + 0x10\n 86679: u64 [sp + 24] = 0\n 86682: ra = 786, jump @23\n      : @1120 [@dyn 393] (gas: 3)\n 86689: a1 = 0x24\n 86692: a0 = 0\n 86694: ra = 788, jump @0\n      : @1121 [@dyn 394] (gas: 6)\n 86701: i32 a1 = a0 + 0\n 86703: a0 = 0x1\n 86706: a2 = 0x24\n 86709: ra = 0x316\n 86713: ecalli 15 // 'seal_return'\n 86715: fallthrough\n      : @1122 [@dyn 395] (gas: 45)\n 86716: sp = sp + 0xffffffffffffff90\n 86719: u64 [sp + 0x68] = ra\n 86722: u64 [sp + 0x60] = s0\n 86725: u64 [sp + 0x58] = s1\n 86728: s0 = sp + 0x70\n 86731: sp = sp & 0xfffffffffffffff0\n 86734: a3 = u64 [a1 + 0x18]\n 86737: u64 [sp + 0x8] = a3\n 86740: a4 = u64 [a2 + 0x18]\n 86743: t2 = u64 [a1]\n 86745: u64 [sp] = t2\n 86747: a3 = u64 [a1 + 0x8]\n 86750: s1 = u64 [a2 + 0x8]\n 86753: a5 = u64 [a2]\n 86755: t1 = u64 [a1 + 0x10]\n 86758: t0 = u64 [a2 + 0x10]\n 86761: a2 = s1 + a3\n 86764: t2 = t2 + a5\n 86767: a5 = t2 <u a5\n 86770: a2 = a2 + a5\n 86773: ra = a2 ^ s1\n 86776: s1 = a2 <u s1\n 86779: s1 = a5 if ra == 0\n 86782: a1 = t0 + t1\n 86785: a5 = u64 [sp + 0x8]\n 86788: a5 = a5 + a4\n 86791: a4 = a1 <u t0\n 86794: a4 = a4 + a5\n 86797: a5 = a1 + s1\n 86800: a1 = a5 <u a1\n 86803: ra = a4 + a1\n 86806: a4 = a2 ^ a3\n 86809: a3 = a2 <u a3\n 86812: a1 = u64 [sp]\n 86814: s1 = t2 <u a1\n 86817: s1 = a3 if a4 != 0\n 86820: t0 = a5 <u t1\n 86823: a1 = u64 [sp + 0x8]\n 86826: a4 = ra ^ a1\n 86829: a3 = ra <u a1\n 86832: a3 = t0 if a4 == 0\n 86835: a1 = a5 ^ t1\n 86838: a1 = a1 | a4\n 86841: s1 = a3 if a1 != 0\n 86844: jump @1124 if s1 != 0\n      : @1123 (gas: 10)\n 86847: u64 [a0] = t2\n 86849: u64 [a0 + 0x8] = a2\n 86852: u64 [a0 + 0x10] = a5\n 86855: u64 [a0 + 0x18] = ra\n 86858: sp = s0 + 0xffffffffffffff90\n 86861: ra = u64 [sp + 0x68]\n 86864: s0 = u64 [sp + 0x60]\n 86867: s1 = u64 [sp + 0x58]\n 86870: sp = sp + 0x70\n 86873: ret\n      : @1124 (gas: 8)\n 86875: u64 [sp + 64] = 0\n 86878: u64 [sp + 56] = 0\n 86881: u64 [sp + 48] = 0\n 86884: a0 = 0x4e487b7100000000\n 86894: a1 = sp + 0x30\n 86897: u64 [sp + 0x48] = a0\n 86900: a0 = 0\n 86902: ra = 792, jump @23\n      : @1125 [@dyn 396] (gas: 7)\n 86909: u64 [sp + 40] = 0\n 86912: u64 [sp + 32] = 0\n 86915: u64 [sp + 16] = 0x11\n 86919: a0 = 0x4\n 86922: a1 = sp + 0x10\n 86925: u64 [sp + 24] = 0\n 86928: ra = 794, jump @23\n      : @1126 [@dyn 397] (gas: 3)\n 86935: a1 = 0x24\n 86938: a0 = 0\n 86940: ra = 796, jump @0\n      : @1127 [@dyn 398] (gas: 6)\n 86947: i32 a1 = a0 + 0\n 86949: a0 = 0x1\n 86952: a2 = 0x24\n 86955: ra = 0x31e\n 86959: ecalli 15 // 'seal_return'\n 86961: fallthrough\n      : @1128 [@dyn 399] (gas: 16)\n 86962: sp = sp + 0xfffffffffffffec0\n 86966: u64 [sp + 0x138] = ra\n 86970: u64 [sp + 0x130] = s0\n 86974: u64 [sp + 0x128] = s1\n 86978: s0 = sp + 0x140\n 86982: sp = sp & 0xfffffffffffffff0\n 86985: a4 = u64 [a2 + 0x18]\n 86988: a5 = u64 [a2 + 0x10]\n 86991: t0 = u64 [a2 + 0x8]\n 86994: u64 [sp + 0x58] = a4\n 86997: u64 [sp + 0x50] = a5\n 87000: a4 = a4 | a5\n 87003: a5 = t0 <u 0x1\n 87006: a5 = 0 if a4 != 0\n 87008: u64 [sp] = a0\n 87010: jump @1147 if a5 == 0\n      : @1129 (gas: 29)\n 87014: a0 = u64 [a3 + 0x18]\n 87017: u64 [sp + 0x18] = a0\n 87020: a0 = u64 [a3 + 0x10]\n 87023: u64 [sp + 0x20] = a0\n 87026: a0 = u64 [a3 + 0x8]\n 87029: u64 [sp + 0x8] = a0\n 87032: a0 = u64 [a3]\n 87034: u64 [sp + 0x10] = a0\n 87037: a0 = u64 [a2]\n 87039: a2 = u64 [a1 + 0x18]\n 87042: u64 [sp + 0x68] = a2\n 87045: a2 = u64 [a1 + 0x10]\n 87048: u64 [sp + 0x70] = a2\n 87051: a2 = u64 [a1 + 0x8]\n 87054: u64 [sp + 0x60] = a2\n 87057: a1 = u64 [a1]\n 87059: u64 [sp + 0x78] = a1\n 87062: s1 = a0 + 0x1f\n 87065: u64 [sp + 0x40] = a0\n 87068: a0 = s1 <u a0\n 87071: u64 [sp + 0x48] = t0\n 87074: a0 = a0 + t0\n 87077: a0 = a0 & 0x1\n 87080: u64 [sp + 0x98] = a0\n 87084: s1 = s1 & 0xffffffffffffffe0\n 87087: u64 [sp + 0x90] = s1\n 87091: a0 = 0x40\n 87094: a1 = 0x20\n 87097: ra = 800, jump @0\n      : @1130 [@dyn 400] (gas: 119)\n 87104: a1 = u8 [a0 + 0x19]\n 87107: a2 = u8 [a0 + 0x18]\n 87110: a3 = u8 [a0 + 0x1a]\n 87113: a4 = u8 [a0 + 0x1b]\n 87116: a1 = a1 << 0x8\n 87119: a1 = a1 | a2\n 87122: a3 = a3 << 0x10\n 87125: a4 = a4 << 0x18\n 87128: a3 = a3 | a4\n 87131: a1 = a1 | a3\n 87134: a2 = u8 [a0 + 0x1d]\n 87137: a3 = u8 [a0 + 0x1c]\n 87140: a4 = u8 [a0 + 0x1e]\n 87143: a5 = u8 [a0 + 0x1f]\n 87146: a2 = a2 << 0x8\n 87149: a2 = a2 | a3\n 87152: a4 = a4 << 0x10\n 87155: a5 = a5 << 0x18\n 87158: a4 = a4 | a5\n 87161: a2 = a2 | a4\n 87164: a2 = a2 << 0x20\n 87167: t0 = a2 | a1\n 87170: a2 = u8 [a0 + 0x11]\n 87173: a3 = u8 [a0 + 0x10]\n 87176: a4 = u8 [a0 + 0x12]\n 87179: a5 = u8 [a0 + 0x13]\n 87182: a2 = a2 << 0x8\n 87185: a2 = a2 | a3\n 87188: a4 = a4 << 0x10\n 87191: a5 = a5 << 0x18\n 87194: a4 = a4 | a5\n 87197: a2 = a2 | a4\n 87200: a3 = u8 [a0 + 0x15]\n 87203: a4 = u8 [a0 + 0x14]\n 87206: a5 = u8 [a0 + 0x16]\n 87209: a1 = u8 [a0 + 0x17]\n 87212: a3 = a3 << 0x8\n 87215: a3 = a3 | a4\n 87218: a5 = a5 << 0x10\n 87221: a1 = a1 << 0x18\n 87224: a1 = a1 | a5\n 87227: a1 = a1 | a3\n 87230: a1 = a1 << 0x20\n 87233: a2 = a2 | a1\n 87236: a1 = u8 [a0 + 0x9]\n 87239: a3 = u8 [a0 + 0x8]\n 87242: a4 = u8 [a0 + 0xa]\n 87245: a5 = u8 [a0 + 0xb]\n 87248: a1 = a1 << 0x8\n 87251: a1 = a1 | a3\n 87254: a4 = a4 << 0x10\n 87257: a5 = a5 << 0x18\n 87260: a4 = a4 | a5\n 87263: a1 = a1 | a4\n 87266: a3 = u8 [a0 + 0xd]\n 87269: a4 = u8 [a0 + 0xc]\n 87272: a5 = u8 [a0 + 0xe]\n 87275: s1 = u8 [a0 + 0xf]\n 87278: a3 = a3 << 0x8\n 87281: a3 = a3 | a4\n 87284: a5 = a5 << 0x10\n 87287: s1 = s1 << 0x18\n 87290: a5 = a5 | s1\n 87293: a3 = a3 | a5\n 87296: a3 = a3 << 0x20\n 87299: a3 = a3 | a1\n 87302: a1 = u8 [a0 + 0x1]\n 87305: a4 = u8 [a0]\n 87307: a5 = u8 [a0 + 0x2]\n 87310: s1 = u8 [a0 + 0x3]\n 87313: a1 = a1 << 0x8\n 87316: a1 = a1 | a4\n 87319: a5 = a5 << 0x10\n 87322: s1 = s1 << 0x18\n 87325: a5 = a5 | s1\n 87328: a1 = a1 | a5\n 87331: a4 = u8 [a0 + 0x5]\n 87334: a5 = u8 [a0 + 0x4]\n 87337: s1 = u8 [a0 + 0x6]\n 87340: a0 = u8 [a0 + 0x7]\n 87343: a4 = a4 << 0x8\n 87346: a4 = a4 | a5\n 87349: s1 = s1 << 0x10\n 87352: a0 = a0 << 0x18\n 87355: a0 = a0 | s1\n 87358: a0 = a0 | a4\n 87361: a0 = a0 << 0x20\n 87364: a0 = a0 | a1\n 87367: t1 = reverse a0\n 87369: t2 = reverse a3\n 87371: a3 = reverse a2\n 87373: a2 = reverse t0\n 87375: a1 = u64 [sp + 0x90]\n 87379: a0 = a1 + 0x3f\n 87382: a1 = a0 <u a1\n 87385: a4 = u64 [sp + 0x98]\n 87389: a1 = a1 + a4\n 87392: a0 = a0 & 0xffffffffffffffe0\n 87395: a0 = a0 + a2\n 87398: u64 [sp + 0x88] = a2\n 87402: u64 [sp + 0x38] = a0\n 87405: a2 = a0 <u a2\n 87408: a1 = a1 + a3\n 87411: a4 = a1 + a2\n 87414: a1 = a4 ^ a3\n 87417: u64 [sp + 0x80] = a3\n 87421: a0 = a4 <u a3\n 87424: a0 = a2 if a1 == 0\n 87427: a5 = t2 + a0\n 87430: a1 = a5 <u t2\n 87433: s1 = t1 + a1\n 87436: a2 = a5 >u 0\n 87438: a3 = s1 >u 0\n 87440: a3 = a2 if s1 == 0\n 87443: a2 = a5 | s1\n 87446: u64 [sp + 0x30] = a4\n 87449: a4 = a4 >u 0\n 87451: a4 = a3 if a2 != 0\n 87454: jump @1145 if a4 != 0\n      : @1131 (gas: 7)\n 87458: a2 = s1 ^ t1\n 87461: a3 = s1 <u t1\n 87464: a1 = a3 if a2 != 0\n 87467: a3 = a5 ^ t2\n 87470: a2 = a2 | a3\n 87473: a0 = a1 if a2 != 0\n 87476: jump @1145 if a0 != 0\n      : @1132 (gas: 6)\n 87480: a0 = 0x40\n 87483: a1 = 0x20\n 87486: u64 [sp + 0x98] = t2\n 87490: u64 [sp + 0x90] = t1\n 87494: u64 [sp + 0x28] = a5\n 87497: ra = 802, jump @0\n      : @1133 [@dyn 401] (gas: 79)\n 87504: a1 = reverse s1\n 87506: a2 = u64 [sp + 0x28]\n 87509: a2 = reverse a2\n 87511: a3 = u64 [sp + 0x30]\n 87514: a3 = reverse a3\n 87516: a4 = u64 [sp + 0x38]\n 87519: a4 = reverse a4\n 87521: u8 [a0 + 0x18] = a4\n 87524: a5 = a4 >> 0x38\n 87527: u8 [a0 + 0x1f] = a5\n 87530: a5 = a4 >> 0x30\n 87533: u8 [a0 + 0x1e] = a5\n 87536: a5 = a4 >> 0x28\n 87539: u8 [a0 + 0x1d] = a5\n 87542: a5 = a4 >> 0x20\n 87545: u8 [a0 + 0x1c] = a5\n 87548: a5 = a4 >> 0x18\n 87551: u8 [a0 + 0x1b] = a5\n 87554: a5 = a4 >> 0x10\n 87557: u8 [a0 + 0x1a] = a5\n 87560: a4 = a4 >> 0x8\n 87563: u8 [a0 + 0x19] = a4\n 87566: u8 [a0 + 0x10] = a3\n 87569: a4 = a3 >> 0x38\n 87572: u8 [a0 + 0x17] = a4\n 87575: a4 = a3 >> 0x30\n 87578: u8 [a0 + 0x16] = a4\n 87581: a4 = a3 >> 0x28\n 87584: u8 [a0 + 0x15] = a4\n 87587: a4 = a3 >> 0x20\n 87590: u8 [a0 + 0x14] = a4\n 87593: a4 = a3 >> 0x18\n 87596: u8 [a0 + 0x13] = a4\n 87599: a4 = a3 >> 0x10\n 87602: u8 [a0 + 0x12] = a4\n 87605: a3 = a3 >> 0x8\n 87608: u8 [a0 + 0x11] = a3\n 87611: u8 [a0 + 0x8] = a2\n 87614: a3 = a2 >> 0x38\n 87617: u8 [a0 + 0xf] = a3\n 87620: a3 = a2 >> 0x30\n 87623: u8 [a0 + 0xe] = a3\n 87626: a3 = a2 >> 0x28\n 87629: u8 [a0 + 0xd] = a3\n 87632: a3 = a2 >> 0x20\n 87635: u8 [a0 + 0xc] = a3\n 87638: a3 = a2 >> 0x18\n 87641: u8 [a0 + 0xb] = a3\n 87644: a3 = a2 >> 0x10\n 87647: u8 [a0 + 0xa] = a3\n 87650: a2 = a2 >> 0x8\n 87653: u8 [a0 + 0x9] = a2\n 87656: u8 [a0] = a1\n 87658: a2 = a1 >> 0x38\n 87661: u8 [a0 + 0x7] = a2\n 87664: a2 = a1 >> 0x30\n 87667: u8 [a0 + 0x6] = a2\n 87670: a2 = a1 >> 0x28\n 87673: u8 [a0 + 0x5] = a2\n 87676: a2 = a1 >> 0x20\n 87679: u8 [a0 + 0x4] = a2\n 87682: a2 = a1 >> 0x18\n 87685: u8 [a0 + 0x3] = a2\n 87688: a2 = a1 >> 0x10\n 87691: u8 [a0 + 0x2] = a2\n 87694: a1 = a1 >> 0x8\n 87697: a4 = u64 [sp + 0x88]\n 87701: a5 = u64 [sp + 0x98]\n 87705: a2 = a4 | a5\n 87708: a3 = u64 [sp + 0x80]\n 87712: s1 = u64 [sp + 0x90]\n 87716: a3 = a3 | s1\n 87719: a2 = a2 | a3\n 87722: a2 = a2 >> 0x20\n 87725: a3 = a3 | a5\n 87728: a3 = a3 << 0x20\n 87731: a2 = a2 | a3\n 87734: u8 [a0 + 0x1] = a1\n 87737: jump @1144 if a2 != 0\n      : @1134 (gas: 4)\n 87741: i32 a0 = a4 + 0\n 87743: a1 = 0x20\n 87746: u64 [sp + 0x38] = a0\n 87749: ra = 804, jump @0\n      : @1135 [@dyn 402] (gas: 102)\n 87756: t2 = u64 [sp + 0x40]\n 87759: a1 = u64 [sp + 0x78]\n 87762: a1 = a1 + t2\n 87765: a3 = a1 <u t2\n 87768: t1 = u64 [sp + 0x48]\n 87771: a2 = u64 [sp + 0x60]\n 87774: a2 = a2 + t1\n 87777: a4 = a2 + a3\n 87780: a5 = a4 ^ t1\n 87783: a2 = a4 <u t1\n 87786: a2 = a3 if a5 == 0\n 87789: a5 = u64 [sp + 0x8]\n 87792: a3 = a4 ^ a5\n 87795: a4 = a5 <u a4\n 87798: a5 = u64 [sp + 0x10]\n 87801: a1 = a5 <u a1\n 87804: s1 = u64 [sp + 0x50]\n 87807: a5 = u64 [sp + 0x70]\n 87810: a5 = a5 + s1\n 87813: a1 = a4 if a3 != 0\n 87816: a3 = a5 <u s1\n 87819: ra = u64 [sp + 0x58]\n 87822: a4 = u64 [sp + 0x68]\n 87825: a4 = a4 + ra\n 87828: a3 = a3 + a4\n 87831: a2 = a2 + a5\n 87834: a4 = a2 <u a5\n 87837: a3 = a3 + a4\n 87840: a5 = u64 [sp + 0x18]\n 87843: a4 = a3 ^ a5\n 87846: a3 = a5 <u a3\n 87849: t0 = u64 [sp + 0x20]\n 87852: a5 = t0 <u a2\n 87855: a3 = a5 if a4 == 0\n 87858: a2 = a2 ^ t0\n 87861: a2 = a2 | a4\n 87864: a1 = a3 if a2 != 0\n 87867: a2 = reverse t2\n 87869: a3 = a2 >> 0x38\n 87872: u8 [a0 + 0x1f] = a3\n 87875: a3 = a2 >> 0x30\n 87878: u8 [a0 + 0x1e] = a3\n 87881: a3 = a2 >> 0x28\n 87884: u8 [a0 + 0x1d] = a3\n 87887: a3 = a2 >> 0x20\n 87890: u8 [a0 + 0x1c] = a3\n 87893: a3 = a2 >> 0x18\n 87896: u8 [a0 + 0x1b] = a3\n 87899: a3 = a2 >> 0x10\n 87902: u8 [a0 + 0x1a] = a3\n 87905: a3 = a2 >> 0x8\n 87908: u8 [a0 + 0x19] = a3\n 87911: a3 = reverse t1\n 87913: u8 [a0 + 0x18] = a2\n 87916: a2 = a3 >> 0x38\n 87919: u8 [a0 + 0x17] = a2\n 87922: a2 = a3 >> 0x30\n 87925: u8 [a0 + 0x16] = a2\n 87928: a2 = a3 >> 0x28\n 87931: u8 [a0 + 0x15] = a2\n 87934: a2 = a3 >> 0x20\n 87937: u8 [a0 + 0x14] = a2\n 87940: a2 = a3 >> 0x18\n 87943: u8 [a0 + 0x13] = a2\n 87946: a2 = a3 >> 0x10\n 87949: u8 [a0 + 0x12] = a2\n 87952: a2 = reverse s1\n 87954: u8 [a0 + 0x10] = a3\n 87957: a3 = a3 >> 0x8\n 87960: u8 [a0 + 0x11] = a3\n 87963: a3 = a2 >> 0x38\n 87966: u8 [a0 + 0xf] = a3\n 87969: a3 = a2 >> 0x30\n 87972: u8 [a0 + 0xe] = a3\n 87975: a3 = a2 >> 0x28\n 87978: u8 [a0 + 0xd] = a3\n 87981: a3 = a2 >> 0x20\n 87984: u8 [a0 + 0xc] = a3\n 87987: a3 = a2 >> 0x18\n 87990: u8 [a0 + 0xb] = a3\n 87993: a3 = a2 >> 0x10\n 87996: u8 [a0 + 0xa] = a3\n 87999: a3 = reverse ra\n 88001: u8 [a0 + 0x8] = a2\n 88004: a2 = a2 >> 0x8\n 88007: u8 [a0 + 0x9] = a2\n 88010: a2 = a3 >> 0x38\n 88013: u8 [a0 + 0x7] = a2\n 88016: a2 = a3 >> 0x30\n 88019: u8 [a0 + 0x6] = a2\n 88022: a2 = a3 >> 0x28\n 88025: u8 [a0 + 0x5] = a2\n 88028: a2 = a3 >> 0x20\n 88031: u8 [a0 + 0x4] = a2\n 88034: a2 = a3 >> 0x18\n 88037: u8 [a0 + 0x3] = a2\n 88040: a2 = a3 >> 0x10\n 88043: u8 [a0 + 0x2] = a2\n 88046: u8 [a0] = a3\n 88048: a3 = a3 >> 0x8\n 88051: u8 [a0 + 0x1] = a3\n 88054: jump @1151 if a1 != 0\n      : @1136 (gas: 12)\n 88058: a2 = u64 [sp + 0x78]\n 88061: a3 = u64 [sp + 0x70]\n 88064: a0 = a2 | a3\n 88067: a1 = u64 [sp + 0x60]\n 88070: a5 = u64 [sp + 0x68]\n 88073: a1 = a1 | a5\n 88076: a0 = a0 | a1\n 88079: a0 = a0 >> 0x20\n 88082: a1 = a1 | a3\n 88085: a1 = a1 << 0x20\n 88088: a0 = a0 | a1\n 88091: jump @1144 if a0 != 0\n      : @1137 (gas: 8)\n 88095: a0 = t2 | s1\n 88098: a1 = t1 | ra\n 88101: a0 = a0 | a1\n 88104: a0 = a0 >> 0x20\n 88107: a1 = a1 | s1\n 88110: a1 = a1 << 0x20\n 88113: a0 = a0 | a1\n 88116: jump @1144 if a0 != 0\n      : @1138 (gas: 11)\n 88120: a0 = u64 [sp + 0x98]\n 88124: a1 = u64 [sp + 0x90]\n 88128: a0 = a0 | a1\n 88131: a3 = 0xffffffe0\n 88141: a1 = u64 [sp + 0x88]\n 88145: u64 [sp + 0x70] = a3\n 88148: a1 = a1 <u a3\n 88151: a3 = u64 [sp + 0x80]\n 88155: a1 = 0 if a3 != 0\n 88157: a1 = 0 if a0 != 0\n 88159: jump @1144 if a1 == 0\n      : @1139 (gas: 7)\n 88163: i32 a2 = a2 + 0\n 88165: u64 [sp + 0x78] = a2\n 88168: a0 = u64 [sp + 0x38]\n 88171: i32 a0 = a0 + 0x20\n 88174: i32 s1 = t2 + 0\n 88176: a1 = s1\n 88178: ra = 806, jump @0\n      : @1140 [@dyn 403] (gas: 5)\n 88185: i32 a0 = a0 + 0\n 88187: a1 = s1\n 88189: a2 = u64 [sp + 0x78]\n 88192: ecalli 4 // 'call_data_copy'\n 88194: fallthrough\n      : @1141 (gas: 28)\n 88195: a1 = u64 [sp + 0x88]\n 88199: t0 = u64 [sp + 0x40]\n 88202: t0 = t0 + a1\n 88205: a1 = t0 <u a1\n 88208: a2 = u64 [sp + 0x48]\n 88211: a0 = u64 [sp + 0x80]\n 88215: a2 = a2 + a0\n 88218: a2 = a2 + a1\n 88221: a3 = a2 ^ a0\n 88224: a4 = a2 <u a0\n 88227: a4 = a1 if a3 == 0\n 88230: a1 = u64 [sp + 0x50]\n 88233: a3 = u64 [sp + 0x98]\n 88237: a1 = a1 + a3\n 88240: a3 = a1 <u a3\n 88243: a5 = u64 [sp + 0x58]\n 88246: s1 = u64 [sp + 0x90]\n 88250: a5 = a5 + s1\n 88253: a3 = a3 + a5\n 88256: a4 = a4 + a1\n 88259: a1 = a4 <u a1\n 88262: a1 = a1 + a3\n 88265: a1 = a1 | a4\n 88268: a3 = u64 [sp + 0x70]\n 88271: a3 = t0 <u a3\n 88274: a3 = 0 if a2 != 0\n 88276: a3 = 0 if a1 != 0\n 88278: jump @1144 if a3 == 0\n      : @1142 (gas: 4)\n 88282: s1 = a0\n 88284: i32 a0 = t0 + 0x20\n 88287: a1 = 0x20\n 88290: ra = 808, jump @0\n      : @1143 [@dyn 404] (gas: 46)\n 88297: u8 [a0 + 31] = 0\n 88300: u8 [a0 + 30] = 0\n 88303: u8 [a0 + 29] = 0\n 88306: u8 [a0 + 28] = 0\n 88309: u8 [a0 + 27] = 0\n 88312: u8 [a0 + 26] = 0\n 88315: u8 [a0 + 25] = 0\n 88318: u8 [a0 + 24] = 0\n 88321: u8 [a0 + 23] = 0\n 88324: u8 [a0 + 22] = 0\n 88327: u8 [a0 + 21] = 0\n 88330: u8 [a0 + 20] = 0\n 88333: u8 [a0 + 19] = 0\n 88336: u8 [a0 + 18] = 0\n 88339: u8 [a0 + 17] = 0\n 88342: u8 [a0 + 16] = 0\n 88345: u8 [a0 + 15] = 0\n 88348: u8 [a0 + 14] = 0\n 88351: u8 [a0 + 13] = 0\n 88354: u8 [a0 + 12] = 0\n 88357: u8 [a0 + 11] = 0\n 88360: u8 [a0 + 10] = 0\n 88363: u8 [a0 + 9] = 0\n 88366: u8 [a0 + 8] = 0\n 88369: u8 [a0 + 7] = 0\n 88372: u8 [a0 + 6] = 0\n 88375: u8 [a0 + 5] = 0\n 88378: u8 [a0 + 4] = 0\n 88381: u8 [a0 + 3] = 0\n 88384: u8 [a0 + 2] = 0\n 88387: u8 [a0 + 1] = 0\n 88390: u8 [a0 + 0] = 0\n 88392: a0 = u64 [sp]\n 88394: a1 = u64 [sp + 0x88]\n 88398: u64 [a0] = a1\n 88400: a1 = u64 [sp + 0x90]\n 88404: u64 [a0 + 0x18] = a1\n 88407: u64 [a0 + 0x8] = s1\n 88410: a1 = u64 [sp + 0x98]\n 88414: u64 [a0 + 0x10] = a1\n 88417: sp = s0 + 0xfffffffffffffec0\n 88421: ra = u64 [sp + 0x138]\n 88425: s0 = u64 [sp + 0x130]\n 88429: s1 = u64 [sp + 0x128]\n 88433: sp = sp + 0x140\n 88437: ret\n      : @1144 (gas: 1)\n 88439: trap\n      : @1145 (gas: 8)\n 88440: u64 [sp + 272] = 0\n 88444: u64 [sp + 264] = 0\n 88448: u64 [sp + 256] = 0\n 88452: a0 = 0x4e487b7100000000\n 88462: a1 = sp + 0x100\n 88466: u64 [sp + 0x118] = a0\n 88470: a0 = 0\n 88472: ra = 810, jump @23\n      : @1146 [@dyn 405] (gas: 8)\n 88479: u64 [sp + 248] = 0\n 88483: u64 [sp + 240] = 0\n 88487: u64 [sp + 224] = 0x41\n 88492: a0 = 0x4\n 88495: a1 = sp + 0xe0\n 88499: u64 [sp + 232] = 0\n 88503: ra = 0x32e\n 88507: jump @23\n      : @1147 (gas: 8)\n 88511: u64 [sp + 208] = 0\n 88515: u64 [sp + 200] = 0\n 88519: u64 [sp + 192] = 0\n 88523: a0 = 0x4e487b7100000000\n 88533: a1 = sp + 0xc0\n 88537: u64 [sp + 0xd8] = a0\n 88541: a0 = 0\n 88543: ra = 812, jump @23\n      : @1148 [@dyn 406] (gas: 7)\n 88550: u64 [sp + 184] = 0\n 88554: u64 [sp + 176] = 0\n 88558: u64 [sp + 160] = 0x41\n 88563: a0 = 0x4\n 88566: a1 = sp + 0xa0\n 88570: u64 [sp + 168] = 0\n 88574: ra = 814, jump @23\n      : @1149 [@dyn 407] (gas: 3)\n 88581: a1 = 0x24\n 88584: a0 = 0\n 88586: ra = 816, jump @0\n      : @1150 [@dyn 408] (gas: 5)\n 88593: i32 a1 = a0 + 0\n 88595: a0 = 0x1\n 88598: a2 = 0x24\n 88601: ecalli 15 // 'seal_return'\n 88603: fallthrough\n      : @1151 (gas: 3)\n 88604: a0 = 0\n 88606: a1 = 0\n 88608: ra = 818, jump @0\n      : @1152 [@dyn 409] (gas: 6)\n 88615: i32 a1 = a0 + 0\n 88617: a0 = 0x1\n 88620: a2 = 0\n 88622: ra = 0x334\n 88626: ecalli 15 // 'seal_return'\n 88628: fallthrough\n      : @1153 [@dyn 410] (gas: 19)\n 88629: sp = sp + 0xffffffffffffff50\n 88633: u64 [sp + 0xa8] = ra\n 88637: u64 [sp + 0xa0] = s0\n 88641: u64 [sp + 0x98] = s1\n 88645: t0 = u64 [a1 + 0x10]\n 88648: s0 = u64 [a1 + 0x18]\n 88651: a5 = u64 [a1 + 0x8]\n 88654: s1 = u64 [a1]\n 88656: u64 [sp + 0x90] = a5\n 88660: u64 [sp + 0x78] = s0\n 88663: a1 = a5 | s0\n 88666: a5 = s1 | t0\n 88669: a5 = a5 | a1\n 88672: a5 = a5 >> 0x20\n 88675: a1 = a1 | t0\n 88678: a1 = a1 << 0x20\n 88681: a1 = a1 | a5\n 88684: u64 [sp + 0x28] = a0\n 88687: jump @1166 if a1 != 0\n      : @1154 (gas: 29)\n 88691: s0 = t0\n 88693: a0 = u64 [a4 + 0x18]\n 88696: u64 [sp] = a0\n 88698: a0 = u64 [a4 + 0x10]\n 88701: u64 [sp + 0x8] = a0\n 88704: a0 = u64 [a4 + 0x8]\n 88707: u64 [sp + 0x10] = a0\n 88710: a0 = u64 [a4]\n 88712: u64 [sp + 0x18] = a0\n 88715: a0 = u64 [a3 + 0x18]\n 88718: u64 [sp + 0x70] = a0\n 88721: a0 = u64 [a3 + 0x10]\n 88724: u64 [sp + 0x68] = a0\n 88727: a0 = u64 [a3 + 0x8]\n 88730: u64 [sp + 0x60] = a0\n 88733: a0 = u64 [a3]\n 88735: u64 [sp + 0x58] = a0\n 88738: a0 = u64 [a2 + 0x18]\n 88741: u64 [sp + 0x40] = a0\n 88744: a0 = u64 [a2 + 0x10]\n 88747: u64 [sp + 0x48] = a0\n 88750: a0 = u64 [a2 + 0x8]\n 88753: u64 [sp + 0x38] = a0\n 88756: a0 = u64 [a2]\n 88758: u64 [sp + 0x50] = a0\n 88761: i32 a0 = s1 + 0\n 88763: a1 = 0x20\n 88766: u64 [sp + 0x88] = a0\n 88770: ra = 822, jump @0\n      : @1155 [@dyn 411] (gas: 43)\n 88777: u8 [a0 + 31] = 0x40\n 88781: u8 [a0 + 30] = 0\n 88784: u8 [a0 + 29] = 0\n 88787: u8 [a0 + 28] = 0\n 88790: u8 [a0 + 27] = 0\n 88793: u8 [a0 + 26] = 0\n 88796: u8 [a0 + 25] = 0\n 88799: u8 [a0 + 24] = 0\n 88802: u8 [a0 + 23] = 0\n 88805: u8 [a0 + 22] = 0\n 88808: u8 [a0 + 21] = 0\n 88811: u8 [a0 + 20] = 0\n 88814: u8 [a0 + 19] = 0\n 88817: u8 [a0 + 18] = 0\n 88820: u8 [a0 + 17] = 0\n 88823: u8 [a0 + 16] = 0\n 88826: u8 [a0 + 15] = 0\n 88829: u8 [a0 + 14] = 0\n 88832: u8 [a0 + 13] = 0\n 88835: u8 [a0 + 12] = 0\n 88838: u8 [a0 + 11] = 0\n 88841: u8 [a0 + 10] = 0\n 88844: u8 [a0 + 9] = 0\n 88847: u8 [a0 + 8] = 0\n 88850: u8 [a0 + 7] = 0\n 88853: u8 [a0 + 6] = 0\n 88856: u8 [a0 + 5] = 0\n 88859: u8 [a0 + 4] = 0\n 88862: u8 [a0 + 3] = 0\n 88865: u8 [a0 + 2] = 0\n 88868: u8 [a0 + 1] = 0\n 88871: u64 [sp + 0x20] = s0\n 88874: a2 = u64 [sp + 0x78]\n 88877: a2 = a2 | s0\n 88880: a1 = 0xffffffc0\n 88890: u64 [sp + 0x80] = s1\n 88894: a1 = s1 <u a1\n 88897: a3 = u64 [sp + 0x90]\n 88901: a1 = 0 if a3 != 0\n 88903: u64 [sp + 0x30] = a2\n 88906: a1 = 0 if a2 != 0\n 88908: u8 [a0 + 0] = 0\n 88910: jump @1166 if a1 == 0\n      : @1156 (gas: 4)\n 88914: a0 = u64 [sp + 0x88]\n 88918: i32 a0 = a0 + 0x40\n 88921: a1 = 0x20\n 88924: ra = 824, jump @0\n      : @1157 [@dyn 412] (gas: 80)\n 88931: t0 = u64 [sp + 0x58]\n 88934: a1 = reverse t0\n 88936: a2 = a1 >> 0x38\n 88939: u8 [a0 + 0x1f] = a2\n 88942: a2 = a1 >> 0x30\n 88945: u8 [a0 + 0x1e] = a2\n 88948: a2 = a1 >> 0x28\n 88951: u8 [a0 + 0x1d] = a2\n 88954: a2 = a1 >> 0x20\n 88957: u8 [a0 + 0x1c] = a2\n 88960: a2 = a1 >> 0x18\n 88963: u8 [a0 + 0x1b] = a2\n 88966: a2 = a1 >> 0x10\n 88969: u8 [a0 + 0x1a] = a2\n 88972: a2 = a1 >> 0x8\n 88975: u8 [a0 + 0x19] = a2\n 88978: t1 = u64 [sp + 0x60]\n 88981: a2 = reverse t1\n 88983: u8 [a0 + 0x18] = a1\n 88986: a1 = a2 >> 0x38\n 88989: u8 [a0 + 0x17] = a1\n 88992: a1 = a2 >> 0x30\n 88995: u8 [a0 + 0x16] = a1\n 88998: a1 = a2 >> 0x28\n 89001: u8 [a0 + 0x15] = a1\n 89004: a1 = a2 >> 0x20\n 89007: u8 [a0 + 0x14] = a1\n 89010: a1 = a2 >> 0x18\n 89013: u8 [a0 + 0x13] = a1\n 89016: a1 = a2 >> 0x10\n 89019: u8 [a0 + 0x12] = a1\n 89022: a5 = u64 [sp + 0x68]\n 89025: a3 = reverse a5\n 89027: u8 [a0 + 0x10] = a2\n 89030: a2 = a2 >> 0x8\n 89033: u8 [a0 + 0x11] = a2\n 89036: a1 = a3 >> 0x38\n 89039: u8 [a0 + 0xf] = a1\n 89042: a1 = a3 >> 0x30\n 89045: u8 [a0 + 0xe] = a1\n 89048: a1 = a3 >> 0x28\n 89051: u8 [a0 + 0xd] = a1\n 89054: a1 = a3 >> 0x20\n 89057: u8 [a0 + 0xc] = a1\n 89060: a1 = a3 >> 0x18\n 89063: u8 [a0 + 0xb] = a1\n 89066: a1 = a3 >> 0x10\n 89069: u8 [a0 + 0xa] = a1\n 89072: a4 = u64 [sp + 0x70]\n 89075: a1 = reverse a4\n 89077: u8 [a0 + 0x8] = a3\n 89080: a3 = a3 >> 0x8\n 89083: u8 [a0 + 0x9] = a3\n 89086: a2 = a1 >> 0x38\n 89089: u8 [a0 + 0x7] = a2\n 89092: a2 = a1 >> 0x30\n 89095: u8 [a0 + 0x6] = a2\n 89098: a2 = a1 >> 0x28\n 89101: u8 [a0 + 0x5] = a2\n 89104: a2 = a1 >> 0x20\n 89107: u8 [a0 + 0x4] = a2\n 89110: a2 = a1 >> 0x18\n 89113: u8 [a0 + 0x3] = a2\n 89116: a2 = a1 >> 0x10\n 89119: u8 [a0 + 0x2] = a2\n 89122: a2 = u64 [sp + 0x40]\n 89125: s0 = u64 [sp + 0x38]\n 89128: s0 = s0 | a2\n 89131: s1 = u64 [sp + 0x50]\n 89134: a2 = u64 [sp + 0x48]\n 89137: a3 = s1 | a2\n 89140: a3 = a3 | s0\n 89143: a2 = a2 | s0\n 89146: a3 = a3 >> 0x20\n 89149: a2 = a2 << 0x20\n 89152: a2 = a2 | a3\n 89155: u8 [a0] = a1\n 89157: a1 = a1 >> 0x8\n 89160: u8 [a0 + 0x1] = a1\n 89163: jump @1166 if a2 != 0\n      : @1158 (gas: 13)\n 89167: s0 = t0\n 89169: a1 = a4\n 89171: a4 = a5\n 89173: a5 = t1\n 89175: a0 = t0 | a4\n 89178: a1 = t1 | a1\n 89181: a0 = a0 | a1\n 89184: a0 = a0 >> 0x20\n 89187: a1 = a1 | a4\n 89190: a1 = a1 << 0x20\n 89193: a0 = a0 | a1\n 89196: a1 = u64 [sp + 0x80]\n 89200: jump @1166 if a0 != 0\n      : @1159 (gas: 9)\n 89204: a0 = 0xffffffa0\n 89214: u64 [sp + 0x48] = a0\n 89217: a0 = a1 <u a0\n 89220: a2 = u64 [sp + 0x90]\n 89224: a0 = 0 if a2 != 0\n 89226: a2 = u64 [sp + 0x30]\n 89229: a0 = 0 if a2 != 0\n 89231: a2 = u64 [sp + 0x88]\n 89235: jump @1166 if a0 == 0\n      : @1160 (gas: 6)\n 89239: i32 s1 = s1 + 0\n 89241: u64 [sp + 0x50] = s1\n 89244: i32 a0 = a2 + 0x60\n 89247: i32 s1 = s0 + 0\n 89249: a1 = s1\n 89251: ra = 826, jump @0\n      : @1161 [@dyn 413] (gas: 5)\n 89258: i32 a0 = a0 + 0\n 89260: a1 = s1\n 89262: a2 = u64 [sp + 0x50]\n 89265: ecalli 4 // 'call_data_copy'\n 89267: fallthrough\n      : @1162 (gas: 27)\n 89268: a0 = u64 [sp + 0x80]\n 89272: a0 = a0 + s0\n 89275: a1 = a0 <u s0\n 89278: a4 = u64 [sp + 0x60]\n 89281: a2 = u64 [sp + 0x90]\n 89285: a2 = a2 + a4\n 89288: a2 = a2 + a1\n 89291: a3 = a2 ^ a4\n 89294: a4 = a2 <u a4\n 89297: a4 = a1 if a3 == 0\n 89300: s0 = u64 [sp + 0x20]\n 89303: a3 = u64 [sp + 0x68]\n 89306: a1 = a3 + s0\n 89309: a3 = a1 <u a3\n 89312: s1 = u64 [sp + 0x78]\n 89315: a5 = u64 [sp + 0x70]\n 89318: a5 = a5 + s1\n 89321: a3 = a3 + a5\n 89324: a4 = a4 + a1\n 89327: a1 = a4 <u a1\n 89330: a1 = a1 + a3\n 89333: a1 = a1 | a4\n 89336: a3 = u64 [sp + 0x48]\n 89339: a3 = a0 <u a3\n 89342: a3 = 0 if a2 != 0\n 89344: a3 = 0 if a1 != 0\n 89346: jump @1166 if a3 == 0\n      : @1163 (gas: 3)\n 89350: i32 a0 = a0 + 0x60\n 89353: a1 = 0x20\n 89356: ra = 828, jump @0\n      : @1164 [@dyn 414] (gas: 60)\n 89363: u8 [a0 + 31] = 0\n 89366: u8 [a0 + 30] = 0\n 89369: u8 [a0 + 29] = 0\n 89372: u8 [a0 + 28] = 0\n 89375: u8 [a0 + 27] = 0\n 89378: u8 [a0 + 26] = 0\n 89381: u8 [a0 + 25] = 0\n 89384: u8 [a0 + 24] = 0\n 89387: u8 [a0 + 23] = 0\n 89390: u8 [a0 + 22] = 0\n 89393: u8 [a0 + 21] = 0\n 89396: u8 [a0 + 20] = 0\n 89399: u8 [a0 + 19] = 0\n 89402: u8 [a0 + 18] = 0\n 89405: u8 [a0 + 17] = 0\n 89408: u8 [a0 + 16] = 0\n 89411: u8 [a0 + 15] = 0\n 89414: u8 [a0 + 14] = 0\n 89417: u8 [a0 + 13] = 0\n 89420: u8 [a0 + 12] = 0\n 89423: u8 [a0 + 11] = 0\n 89426: u8 [a0 + 10] = 0\n 89429: u8 [a0 + 9] = 0\n 89432: u8 [a0 + 8] = 0\n 89435: u8 [a0 + 7] = 0\n 89438: u8 [a0 + 6] = 0\n 89441: u8 [a0 + 5] = 0\n 89444: u8 [a0 + 4] = 0\n 89447: u8 [a0 + 3] = 0\n 89450: u8 [a0 + 2] = 0\n 89453: u8 [a0 + 1] = 0\n 89456: u8 [a0 + 0] = 0\n 89458: a0 = u64 [sp + 0x58]\n 89461: a0 = a0 + 0x1f\n 89464: a1 = 0x1ffffffe0\n 89474: a0 = a0 & a1\n 89477: a1 = u64 [sp + 0x80]\n 89481: a0 = a0 + a1\n 89484: a1 = a0 <u a1\n 89487: a3 = u64 [sp + 0x90]\n 89491: a2 = a3 + a1\n 89494: a3 = a2 <u a3\n 89497: a3 = a1 if a1 == 0\n 89500: a3 = a3 + s0\n 89503: a1 = a3 <u s0\n 89506: a1 = a1 + s1\n 89509: a4 = a0 + 0x60\n 89512: u64 [sp + 0x90] = a4\n 89516: a0 = a4 <u a0\n 89519: s1 = a2 + a0\n 89522: s0 = s1 <u a2\n 89525: s0 = a0 if a0 == 0\n 89528: s0 = s0 + a3\n 89531: a0 = s0 <u a3\n 89534: a0 = a0 + a1\n 89537: u64 [sp + 0x80] = a0\n 89541: a0 = u64 [sp + 0x88]\n 89545: i32 a0 = a0 + 0x20\n 89548: a1 = 0x20\n 89551: ra = 830, jump @0\n      : @1165 [@dyn 415] (gas: 80)\n 89558: a1 = u64 [sp]\n 89560: a1 = reverse a1\n 89562: a2 = u64 [sp + 0x8]\n 89565: a2 = reverse a2\n 89567: a3 = u64 [sp + 0x10]\n 89570: a3 = reverse a3\n 89572: a4 = u64 [sp + 0x18]\n 89575: a4 = reverse a4\n 89577: a5 = a4 >> 0x38\n 89580: u8 [a0 + 0x1f] = a5\n 89583: a5 = a4 >> 0x30\n 89586: u8 [a0 + 0x1e] = a5\n 89589: a5 = a4 >> 0x28\n 89592: u8 [a0 + 0x1d] = a5\n 89595: a5 = a4 >> 0x20\n 89598: u8 [a0 + 0x1c] = a5\n 89601: a5 = a4 >> 0x18\n 89604: u8 [a0 + 0x1b] = a5\n 89607: a5 = a4 >> 0x10\n 89610: u8 [a0 + 0x1a] = a5\n 89613: a5 = a4 >> 0x8\n 89616: u8 [a0 + 0x19] = a5\n 89619: u8 [a0 + 0x18] = a4\n 89622: a4 = a3 >> 0x38\n 89625: u8 [a0 + 0x17] = a4\n 89628: a4 = a3 >> 0x30\n 89631: u8 [a0 + 0x16] = a4\n 89634: a4 = a3 >> 0x28\n 89637: u8 [a0 + 0x15] = a4\n 89640: a4 = a3 >> 0x20\n 89643: u8 [a0 + 0x14] = a4\n 89646: a4 = a3 >> 0x18\n 89649: u8 [a0 + 0x13] = a4\n 89652: a4 = a3 >> 0x10\n 89655: u8 [a0 + 0x12] = a4\n 89658: a4 = a3 >> 0x8\n 89661: u8 [a0 + 0x11] = a4\n 89664: u8 [a0 + 0x10] = a3\n 89667: a3 = a2 >> 0x38\n 89670: u8 [a0 + 0xf] = a3\n 89673: a3 = a2 >> 0x30\n 89676: u8 [a0 + 0xe] = a3\n 89679: a3 = a2 >> 0x28\n 89682: u8 [a0 + 0xd] = a3\n 89685: a3 = a2 >> 0x20\n 89688: u8 [a0 + 0xc] = a3\n 89691: a3 = a2 >> 0x18\n 89694: u8 [a0 + 0xb] = a3\n 89697: a3 = a2 >> 0x10\n 89700: u8 [a0 + 0xa] = a3\n 89703: a3 = a2 >> 0x8\n 89706: u8 [a0 + 0x9] = a3\n 89709: u8 [a0 + 0x8] = a2\n 89712: a2 = a1 >> 0x38\n 89715: u8 [a0 + 0x7] = a2\n 89718: a2 = a1 >> 0x30\n 89721: u8 [a0 + 0x6] = a2\n 89724: a2 = a1 >> 0x28\n 89727: u8 [a0 + 0x5] = a2\n 89730: a2 = a1 >> 0x20\n 89733: u8 [a0 + 0x4] = a2\n 89736: a2 = a1 >> 0x18\n 89739: u8 [a0 + 0x3] = a2\n 89742: a2 = a1 >> 0x10\n 89745: u8 [a0 + 0x2] = a2\n 89748: a2 = a1 >> 0x8\n 89751: u8 [a0 + 0x1] = a2\n 89754: u8 [a0] = a1\n 89756: a0 = u64 [sp + 0x28]\n 89759: a1 = u64 [sp + 0x90]\n 89763: u64 [a0] = a1\n 89765: u64 [a0 + 0x8] = s1\n 89768: u64 [a0 + 0x10] = s0\n 89771: a1 = u64 [sp + 0x80]\n 89775: u64 [a0 + 0x18] = a1\n 89778: ra = u64 [sp + 0xa8]\n 89782: s0 = u64 [sp + 0xa0]\n 89786: s1 = u64 [sp + 0x98]\n 89790: sp = sp + 0xb0\n 89794: ret\n      : @1166 (gas: 1)\n 89796: trap\n      : @1167 [export #0: 'call'] (gas: 2)\n 89797: a0 = 0\n 89799: ra = 832, jump @29\n      : @1168 [@dyn 416] [export #1: 'deploy'] (gas: 2)\n 89806: a0 = 0x1\n 89809: ra = 834, jump @29\n      : @1169 [@dyn 417] (gas: 1)\n 89816: trap\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"addItem(string,uint256)": "62d6bbdf",
							"admin()": "f851a440",
							"adminWithdraw(address,uint256)": "401d4482",
							"allItems(uint256)": "ff68fa6e",
							"allLootBoxes(uint256)": "bfa178c3",
							"buyLootBox(uint256)": "e6b9d987",
							"createLootBox(string,uint256,(uint256,uint256)[])": "4e47644d",
							"deleteItem(uint256)": "654fc833",
							"deleteLootBox(uint256)": "19a82f4b",
							"deletedItems(uint256)": "04f6dad8",
							"getAllLootBoxesCount()": "99258c23",
							"getLootBoxInfo(uint256)": "3a4d5c30",
							"getLootBoxItems(uint256)": "fccff61b",
							"lootBoxItems(uint256,uint256)": "0928deb2"
						}
					},
					"irOptimized": "/// @use-src 0:\"contracts/4_LootBox.sol\"\nobject \"LootBoxGame_676\" {\n    code {\n        {\n            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:1417:1435  \"admin = msg.sender\" */ 0x00, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ or(and(sload(/** @src 0:1417:1435  \"admin = msg.sender\" */ 0x00), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:1425:1435  \"msg.sender\" */ caller()))\n            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n            let _2 := datasize(\"LootBoxGame_676_deployed\")\n            codecopy(_1, dataoffset(\"LootBoxGame_676_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/4_LootBox.sol\"\n    object \"LootBoxGame_676_deployed\" {\n        code {\n            {\n                /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x04f6dad8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:537:581  \"mapping(uint256 => bool) public deletedItems\" */ 2)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        mstore(_1, iszero(iszero(and(sload(keccak256(0, 64)), 0xff))))\n                        return(_1, 32)\n                    }\n                    case 0x0928deb2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value := calldataload(36)\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 0:691:745  \"mapping(uint256 => WeightedItem[]) public lootBoxItems\"\n                        if iszero(lt(value, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:691:745  \"mapping(uint256 => WeightedItem[]) public lootBoxItems\" */ dataSlot)))\n                        {\n                            revert(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0, 0)\n                        }\n                        /// @src 0:691:745  \"mapping(uint256 => WeightedItem[]) public lootBoxItems\"\n                        let slot, offset := storage_array_index_access_struct_WeightedItem__dyn(dataSlot, value)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let _2 := sload(/** @src 0:691:745  \"mapping(uint256 => WeightedItem[]) public lootBoxItems\" */ slot)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let _3 := sload(/** @src 0:691:745  \"mapping(uint256 => WeightedItem[]) public lootBoxItems\" */ add(slot, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1))\n                        let memPos := mload(64)\n                        mstore(memPos, _2)\n                        mstore(add(memPos, 32), _3)\n                        return(memPos, 64)\n                    }\n                    case 0x19a82f4b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        /// @src 0:783:824  \"require(msg.sender == admin, \\\"Not admin\\\")\"\n                        require_helper_stringliteral_fa7e(/** @src 0:791:810  \"msg.sender == admin\" */ eq(/** @src 0:791:801  \"msg.sender\" */ caller(), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        /// @src 0:5135:5197  \"require(_lootBoxId < allLootBoxes.length, \\\"Invalid lootBoxId\\\")\"\n                        require_helper_stringliteral_e1e1(/** @src 0:5143:5175  \"_lootBoxId < allLootBoxes.length\" */ lt(value_1, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:5156:5168  \"allLootBoxes\" */ 0x03)))\n                        /// @src 0:5228:5252  \"allLootBoxes[_lootBoxId]\"\n                        let _4, _5 := storage_array_index_access_struct_LootBox__dyn(value_1)\n                        /// @src 0:5270:5279  \"lb.exists\"\n                        let _6 := add(_4, /** @src 0:5156:5168  \"allLootBoxes\" */ 0x03)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        if iszero(and(sload(/** @src 0:5270:5279  \"lb.exists\" */ _6), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0xff))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 23)\n                            mstore(add(memPtr, 68), \"LootBox already deleted\")\n                            revert(memPtr, 100)\n                        }\n                        mstore(0, value_1)\n                        mstore(32, 4)\n                        let dataSlot_1 := keccak256(0, 64)\n                        /// @src 0:5440:5453  \"uint256 i = 0\"\n                        let var_i := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0\n                        /// @src 0:5435:5921  \"for (uint256 i = 0; i < items.length; i++) {...\"\n                        for { }\n                        /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1\n                        /// @src 0:5440:5453  \"uint256 i = 0\"\n                        {\n                            /// @src 0:5473:5476  \"i++\"\n                            var_i := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ add(/** @src 0:5473:5476  \"i++\" */ var_i, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1)\n                        }\n                        /// @src 0:5473:5476  \"i++\"\n                        {\n                            /// @src 0:5455:5471  \"i < items.length\"\n                            if iszero(lt(var_i, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:5459:5471  \"items.length\" */ dataSlot_1)))\n                            /// @src 0:5455:5471  \"i < items.length\"\n                            { break }\n                            /// @src 0:5509:5517  \"items[i]\"\n                            let _7, _8 := storage_array_index_access_struct_WeightedItem__dyn(dataSlot_1, var_i)\n                            /// @src 0:5880:5896  \"allItems[itemId]\"\n                            let _9, _10 := storage_array_index_access_struct_Item__dyn(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:5509:5524  \"items[i].itemId\" */ _7))\n                            /// @src 0:5880:5902  \"allItems[itemId].inUse\"\n                            let _11 := add(_9, 2)\n                            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                            sstore(_11, and(sload(_11), not(255)))\n                        }\n                        sstore(_6, and(sload(_6), not(255)))\n                        /// @src 0:5964:5999  \"LootBoxDeleted(_lootBoxId, lb.name)\"\n                        let _12 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ mload(64)\n                        mstore(_12, 32)\n                        /// @src 0:5964:5999  \"LootBoxDeleted(_lootBoxId, lb.name)\"\n                        log2(_12, sub(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ abi_encode_string_storage(_4, add(_12, 32)), /** @src 0:5964:5999  \"LootBoxDeleted(_lootBoxId, lb.name)\" */ _12), 0x28700c4a9a1aa25838f0276f65d0e0e4c50338114ecb4eda2fe4a07e3071d7af, value_1)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        return(0, 0)\n                    }\n                    case 0x3a4d5c30 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_2 := calldataload(4)\n                        /// @src 0:6762:6824  \"require(_lootBoxId < allLootBoxes.length, \\\"Invalid lootBoxId\\\")\"\n                        require_helper_stringliteral_e1e1(/** @src 0:6770:6802  \"_lootBoxId < allLootBoxes.length\" */ lt(value_2, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:6783:6795  \"allLootBoxes\" */ 0x03)))\n                        /// @src 0:6855:6879  \"allLootBoxes[_lootBoxId]\"\n                        let _13, _14 := storage_array_index_access_struct_LootBox__dyn(value_2)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        mstore(0, value_2)\n                        mstore(32, 4)\n                        let length := sload(keccak256(0, 64))\n                        let _15 := sload(/** @src 0:6969:6977  \"lb.price\" */ add(_13, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1))\n                        let value_3 := and(sload(/** @src 0:6979:6988  \"lb.exists\" */ add(_13, /** @src 0:6783:6795  \"allLootBoxes\" */ 0x03)), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0xff)\n                        let _16 := sload(/** @src 0:6990:7004  \"lb.totalWeight\" */ add(_13, 2))\n                        /// @src 0:6952:7017  \"return (lb.name, lb.price, lb.exists, lb.totalWeight, itemsCount)\"\n                        let var_name_mpos := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:6952:7017  \"return (lb.name, lb.price, lb.exists, lb.totalWeight, itemsCount)\" */ _13)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, 160)\n                        let tail := abi_encode_string(var_name_mpos, add(memPos_1, 160))\n                        mstore(add(memPos_1, 32), _15)\n                        mstore(add(memPos_1, 64), iszero(iszero(value_3)))\n                        mstore(add(memPos_1, 96), _16)\n                        mstore(add(memPos_1, 128), length)\n                        return(memPos_1, sub(tail, memPos_1))\n                    }\n                    case 0x401d4482 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_4 := calldataload(4)\n                        let _17 := and(value_4, sub(shl(160, 1), 1))\n                        if iszero(eq(value_4, _17)) { revert(0, 0) }\n                        let value_5 := calldataload(36)\n                        /// @src 0:783:824  \"require(msg.sender == admin, \\\"Not admin\\\")\"\n                        require_helper_stringliteral_fa7e(/** @src 0:791:810  \"msg.sender == admin\" */ eq(/** @src 0:791:801  \"msg.sender\" */ caller(), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        if /** @src 0:9712:9744  \"_amount <= address(this).balance\" */ gt(value_5, /** @src 0:9723:9744  \"address(this).balance\" */ selfbalance())\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 29)\n                            mstore(add(memPtr_1, 68), \"Insufficient contract balance\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 0:9828:9856  \"_to.call{value: _amount}(\\\"\\\")\"\n                        let expr_component := call(gas(), _17, value_5, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0, 0, 0, 0)\n                        /// @src 0:9828:9856  \"_to.call{value: _amount}(\\\"\\\")\"\n                        let data := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _18 := returndatasize()\n                            let _19 := array_allocation_size_bytes(_18)\n                            let memPtr_2 := mload(64)\n                            finalize_allocation(memPtr_2, _19)\n                            mstore(memPtr_2, _18)\n                            data := memPtr_2\n                            returndatacopy(add(memPtr_2, 32), 0, returndatasize())\n                        }\n                        if iszero(expr_component)\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 24)\n                            mstore(add(memPtr_3, 68), \"Withdraw transfer failed\")\n                            revert(memPtr_3, 100)\n                        }\n                        return(0, 0)\n                    }\n                    case 0x4e47644d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let offset_1 := calldataload(4)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0, value1 := abi_decode_string_calldata(add(4, offset_1), calldatasize())\n                        let value_6 := calldataload(36)\n                        let offset_2 := calldataload(68)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                        let length_1 := calldataload(add(4, offset_2))\n                        if gt(length_1, 0xffffffffffffffff) { revert(0, 0) }\n                        let arrayPos := add(offset_2, 36)\n                        if gt(add(add(offset_2, shl(6, length_1)), 36), calldatasize()) { revert(0, 0) }\n                        /// @src 0:783:824  \"require(msg.sender == admin, \\\"Not admin\\\")\"\n                        require_helper_stringliteral_fa7e(/** @src 0:791:810  \"msg.sender == admin\" */ eq(/** @src 0:791:801  \"msg.sender\" */ caller(), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        if /** @src 0:3457:3474  \"_items.length > 0\" */ iszero(length_1)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 17)\n                            mstore(add(memPtr_4, 68), \"No items provided\")\n                            revert(memPtr_4, 100)\n                        }\n                        /// @src 0:3560:3587  \"uint256 totalWeightTemp = 0\"\n                        let var_totalWeightTemp := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0\n                        /// @src 0:3603:3616  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0\n                        /// @src 0:3598:4101  \"for (uint256 i = 0; i < _items.length; i++) {...\"\n                        for { }\n                        /** @src 0:3618:3635  \"i < _items.length\" */ lt(var_i_1, length_1)\n                        /// @src 0:3603:3616  \"uint256 i = 0\"\n                        {\n                            /// @src 0:3637:3640  \"i++\"\n                            var_i_1 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ add(/** @src 0:3637:3640  \"i++\" */ var_i_1, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1)\n                        }\n                        /// @src 0:3637:3640  \"i++\"\n                        {\n                            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                            let value_7 := calldataload(/** @src 0:3710:3719  \"_items[i]\" */ calldata_array_index_access_struct_WeightedItem_calldata_dyn_calldata(arrayPos, length_1, var_i_1))\n                            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                            if iszero(/** @src 0:3710:3744  \"_items[i].itemId < allItems.length\" */ lt(value_7, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(1)))\n                            {\n                                let memPtr_5 := mload(64)\n                                mstore(memPtr_5, shl(229, 4594637))\n                                mstore(add(memPtr_5, 4), 32)\n                                mstore(add(memPtr_5, 36), 30)\n                                mstore(add(memPtr_5, 68), \"Invalid itemId in WeightedItem\")\n                                revert(memPtr_5, 100)\n                            }\n                            mstore(0, calldataload(/** @src 0:3844:3853  \"_items[i]\" */ calldata_array_index_access_struct_WeightedItem_calldata_dyn_calldata(arrayPos, length_1, var_i_1)))\n                            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                            mstore(32, /** @src 0:3831:3843  \"deletedItems\" */ 0x02)\n                            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                            if iszero(/** @src 0:3830:3861  \"!deletedItems[_items[i].itemId]\" */ iszero(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ and(sload(keccak256(0, 64)), 0xff)))\n                            {\n                                let memPtr_6 := mload(64)\n                                mstore(memPtr_6, shl(229, 4594637))\n                                mstore(add(memPtr_6, 4), 32)\n                                mstore(add(memPtr_6, 36), 15)\n                                mstore(add(memPtr_6, 68), \"Item is deleted\")\n                                revert(memPtr_6, 100)\n                            }\n                            if /** @src 0:3903:3923  \"_items[i].weight > 0\" */ iszero(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ calldataload(/** @src 0:3903:3919  \"_items[i].weight\" */ add(/** @src 0:3903:3912  \"_items[i]\" */ calldata_array_index_access_struct_WeightedItem_calldata_dyn_calldata(arrayPos, length_1, var_i_1), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 32)))\n                            {\n                                let memPtr_7 := mload(64)\n                                mstore(memPtr_7, shl(229, 4594637))\n                                mstore(add(memPtr_7, 4), 32)\n                                mstore(add(memPtr_7, 36), 18)\n                                mstore(add(memPtr_7, 68), \"Weight must be > 0\")\n                                revert(memPtr_7, 100)\n                            }\n                            /// @src 0:4001:4027  \"allItems[_items[i].itemId]\"\n                            let _20, _21 := storage_array_index_access_struct_Item__dyn(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ calldataload(/** @src 0:4010:4019  \"_items[i]\" */ calldata_array_index_access_struct_WeightedItem_calldata_dyn_calldata(arrayPos, length_1, var_i_1)))\n                            /// @src 0:4001:4033  \"allItems[_items[i].itemId].inUse\"\n                            let _22 := add(_20, /** @src 0:3831:3843  \"deletedItems\" */ 0x02)\n                            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                            sstore(_22, or(and(sload(_22), not(255)), 1))\n                            /// @src 0:4055:4090  \"totalWeightTemp += _items[i].weight\"\n                            var_totalWeightTemp := checked_add_uint256(var_totalWeightTemp, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ calldataload(/** @src 0:4074:4090  \"_items[i].weight\" */ add(/** @src 0:4074:4083  \"_items[i]\" */ calldata_array_index_access_struct_WeightedItem_calldata_dyn_calldata(arrayPos, length_1, var_i_1), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 32)))\n                        }\n                        let memPtr_8 := mload(64)\n                        let newFreePtr := add(memPtr_8, 128)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_8))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr_8, abi_decode_available_length_string(/** @src 0:4201:4360  \"LootBox({...\" */ value0, value1, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ calldatasize()))\n                        /// @src 0:4201:4360  \"LootBox({...\"\n                        let _23 := add(memPtr_8, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 32)\n                        mstore(_23, value_6)\n                        /// @src 0:4201:4360  \"LootBox({...\"\n                        let _24 := add(memPtr_8, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 64)\n                        mstore(_24, var_totalWeightTemp)\n                        /// @src 0:4201:4360  \"LootBox({...\"\n                        let _25 := add(memPtr_8, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 96)\n                        mstore(_25, 1)\n                        let oldLen := sload(/** @src 0:4170:4182  \"allLootBoxes\" */ 0x03)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 0:4170:4182  \"allLootBoxes\" */ 0x03, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ add(oldLen, 1))\n                        let slot_1, offset_3 := storage_array_index_access_struct_LootBox__dyn(oldLen)\n                        if offset_3\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0)\n                            revert(0, 36)\n                        }\n                        let _26 := mload(memPtr_8)\n                        let newLen := mload(_26)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _27 := extract_byte_array_length(sload(slot_1))\n                        if gt(_27, 0x1f)\n                        {\n                            mstore(0, slot_1)\n                            let data_1 := keccak256(0, 32)\n                            let deleteStart := add(data_1, shr(5, add(newLen, 0x1f)))\n                            if lt(newLen, 32) { deleteStart := data_1 }\n                            let _28 := add(data_1, shr(5, add(_27, 0x1f)))\n                            let start := deleteStart\n                            for { } lt(start, _28) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, slot_1)\n                            let dstPtr := keccak256(0, srcOffset)\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 32) }\n                            {\n                                sstore(dstPtr, mload(add(_26, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_26, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 0:4170:4182  \"allLootBoxes\" */ 0x03, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ newLen), 248), not(0)))))\n                            }\n                            sstore(slot_1, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_8 := 0\n                            if newLen\n                            {\n                                value_8 := mload(add(_26, srcOffset))\n                            }\n                            sstore(slot_1, or(and(value_8, not(shr(shl(/** @src 0:4170:4182  \"allLootBoxes\" */ 0x03, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ newLen), not(0)))), shl(1, newLen)))\n                        }\n                        sstore(add(slot_1, 1), mload(_23))\n                        sstore(add(slot_1, /** @src 0:3831:3843  \"deletedItems\" */ 0x02), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ mload(_24))\n                        update_storage_value_offset_bool_to_bool(add(slot_1, /** @src 0:4170:4182  \"allLootBoxes\" */ 0x03), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ iszero(iszero(mload(_25))))\n                        /// @src 0:4404:4423  \"allLootBoxes.length\"\n                        let expr := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:4170:4182  \"allLootBoxes\" */ 0x03)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let diff := add(expr, not(0))\n                        if gt(diff, expr)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 0:4488:4501  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0\n                        /// @src 0:4483:4739  \"for (uint256 i = 0; i < _items.length; i++) {...\"\n                        for { }\n                        /** @src 0:4503:4520  \"i < _items.length\" */ lt(var_i_2, length_1)\n                        /// @src 0:4488:4501  \"uint256 i = 0\"\n                        {\n                            /// @src 0:4522:4525  \"i++\"\n                            var_i_2 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ add(/** @src 0:4522:4525  \"i++\" */ var_i_2, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1)\n                        }\n                        /// @src 0:4522:4525  \"i++\"\n                        {\n                            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                            mstore(0, diff)\n                            mstore(32, 4)\n                            let dataSlot_2 := keccak256(0, 64)\n                            let value_9 := calldataload(/** @src 0:4633:4642  \"_items[i]\" */ calldata_array_index_access_struct_WeightedItem_calldata_dyn_calldata(arrayPos, length_1, var_i_2))\n                            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                            let value_10 := calldataload(/** @src 0:4679:4695  \"_items[i].weight\" */ add(/** @src 0:4679:4688  \"_items[i]\" */ calldata_array_index_access_struct_WeightedItem_calldata_dyn_calldata(arrayPos, length_1, var_i_2), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 32))\n                            let memPtr_9 := mload(64)\n                            finalize_allocation_17304(memPtr_9)\n                            mstore(memPtr_9, value_9)\n                            /// @src 0:4590:4714  \"WeightedItem({...\"\n                            let _29 := add(memPtr_9, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 32)\n                            mstore(_29, value_10)\n                            let oldLen_1 := sload(dataSlot_2)\n                            if iszero(lt(oldLen_1, 18446744073709551616))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 36)\n                            }\n                            sstore(dataSlot_2, add(oldLen_1, 1))\n                            let slot_2, offset_4 := storage_array_index_access_struct_WeightedItem__dyn(dataSlot_2, oldLen_1)\n                            if offset_4\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0)\n                                revert(0, 36)\n                            }\n                            sstore(slot_2, mload(memPtr_9))\n                            sstore(add(slot_2, 1), mload(_29))\n                        }\n                        /// @src 0:4754:4797  \"LootBoxCreated(newLootBoxId, _name, _price)\"\n                        let _30 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ mload(64)\n                        /// @src 0:4754:4797  \"LootBoxCreated(newLootBoxId, _name, _price)\"\n                        log2(_30, sub(abi_encode_string_calldata_uint256(_30, value0, value1, value_6), _30), 0xd2034633bb649b3feb2f458597e5ae3311c9287b664bb513a5b28495e6890467, diff)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, diff)\n                        return(memPos_2, 32)\n                    }\n                    case 0x62d6bbdf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let offset_5 := calldataload(4)\n                        if gt(offset_5, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0_1, value1_1 := abi_decode_string_calldata(add(4, offset_5), calldatasize())\n                        let value_11 := calldataload(36)\n                        /// @src 0:783:824  \"require(msg.sender == admin, \\\"Not admin\\\")\"\n                        require_helper_stringliteral_fa7e(/** @src 0:791:810  \"msg.sender == admin\" */ eq(/** @src 0:791:801  \"msg.sender\" */ caller(), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        let memPtr_10 := mload(64)\n                        let newFreePtr_1 := add(memPtr_10, 96)\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_10))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, newFreePtr_1)\n                        mstore(memPtr_10, abi_decode_available_length_string(/** @src 0:1903:1959  \"Item({name: _name, basePrice: _basePrice, inUse: false})\" */ value0_1, value1_1, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ calldatasize()))\n                        /// @src 0:1903:1959  \"Item({name: _name, basePrice: _basePrice, inUse: false})\"\n                        let _31 := add(memPtr_10, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 32)\n                        mstore(_31, value_11)\n                        /// @src 0:1903:1959  \"Item({name: _name, basePrice: _basePrice, inUse: false})\"\n                        let _32 := add(memPtr_10, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 64)\n                        mstore(_32, 0)\n                        let oldLen_2 := sload(1)\n                        if iszero(lt(oldLen_2, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        sstore(1, add(oldLen_2, 1))\n                        let slot_3, offset_6 := storage_array_index_access_struct_Item__dyn(oldLen_2)\n                        if offset_6\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0)\n                            revert(0, 36)\n                        }\n                        let _33 := mload(memPtr_10)\n                        let newLen_1 := mload(_33)\n                        if gt(newLen_1, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _34 := extract_byte_array_length(sload(slot_3))\n                        if gt(_34, 31)\n                        {\n                            mstore(0, slot_3)\n                            let data_2 := keccak256(0, 32)\n                            let deleteStart_1 := add(data_2, shr(5, add(newLen_1, 31)))\n                            if lt(newLen_1, 32) { deleteStart_1 := data_2 }\n                            let _35 := add(data_2, shr(5, add(_34, 31)))\n                            let start_1 := deleteStart_1\n                            for { } lt(start_1, _35) { start_1 := add(start_1, 1) }\n                            { sstore(start_1, 0) }\n                        }\n                        let srcOffset_1 := 0\n                        srcOffset_1 := 32\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(0, slot_3)\n                            let dstPtr_1 := keccak256(0, srcOffset_1)\n                            let i_1 := 0\n                            for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                            {\n                                sstore(dstPtr_1, mload(add(_33, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, 32)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(_33, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(slot_3, add(shl(1, newLen_1), 1))\n                        }\n                        default {\n                            let value_12 := 0\n                            if newLen_1\n                            {\n                                value_12 := mload(add(_33, srcOffset_1))\n                            }\n                            sstore(slot_3, or(and(value_12, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n                        }\n                        sstore(add(slot_3, 1), mload(_31))\n                        update_storage_value_offset_bool_to_bool(add(slot_3, 2), iszero(iszero(mload(_32))))\n                        /// @src 0:1988:2003  \"allItems.length\"\n                        let expr_1 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(1)\n                        let diff_1 := add(expr_1, not(0))\n                        if gt(diff_1, expr_1)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 0:2022:2058  \"ItemAdded(itemId, _name, _basePrice)\"\n                        let _36 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ mload(64)\n                        /// @src 0:2022:2058  \"ItemAdded(itemId, _name, _basePrice)\"\n                        log2(_36, sub(abi_encode_string_calldata_uint256(_36, value0_1, value1_1, value_11), _36), 0x0444434676a57f70f8479401c50fb4add3e31052f88f4b35e155b7759e5968e5, diff_1)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, diff_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x654fc833 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_13 := calldataload(4)\n                        /// @src 0:783:824  \"require(msg.sender == admin, \\\"Not admin\\\")\"\n                        require_helper_stringliteral_fa7e(/** @src 0:791:810  \"msg.sender == admin\" */ eq(/** @src 0:791:801  \"msg.sender\" */ caller(), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        if iszero(/** @src 0:2486:2511  \"_itemId < allItems.length\" */ lt(value_13, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(1)))\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, 36), 14)\n                            mstore(add(memPtr_11, 68), \"Invalid itemId\")\n                            revert(memPtr_11, 100)\n                        }\n                        /// @src 0:2549:2566  \"allItems[_itemId]\"\n                        let _37, _38 := storage_array_index_access_struct_Item__dyn(value_13)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        if iszero(/** @src 0:2548:2572  \"!allItems[_itemId].inUse\" */ iszero(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ and(sload(/** @src 0:2549:2572  \"allItems[_itemId].inUse\" */ add(_37, 2)), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0xff)))\n                        {\n                            let memPtr_12 := mload(64)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 32)\n                            mstore(add(memPtr_12, 36), 25)\n                            mstore(add(memPtr_12, 68), \"Item is used in a lootbox\")\n                            revert(memPtr_12, 100)\n                        }\n                        mstore(0, value_13)\n                        mstore(32, /** @src 0:2549:2572  \"allItems[_itemId].inUse\" */ 2)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        if iszero(/** @src 0:2620:2642  \"!deletedItems[_itemId]\" */ iszero(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ and(sload(keccak256(0, 64)), 0xff)))\n                        {\n                            let memPtr_13 := mload(64)\n                            mstore(memPtr_13, shl(229, 4594637))\n                            mstore(add(memPtr_13, 4), 32)\n                            mstore(add(memPtr_13, 36), 20)\n                            mstore(add(memPtr_13, 68), \"Item already deleted\")\n                            revert(memPtr_13, 100)\n                        }\n                        mstore(0, value_13)\n                        mstore(32, /** @src 0:2549:2572  \"allItems[_itemId].inUse\" */ 2)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        sstore(dataSlot_3, or(and(sload(dataSlot_3), not(255)), 1))\n                        /// @src 0:2742:2759  \"allItems[_itemId]\"\n                        let _39, _40 := storage_array_index_access_struct_Item__dyn(value_13)\n                        /// @src 0:2721:2765  \"ItemDeleted(_itemId, allItems[_itemId].name)\"\n                        let _41 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ mload(64)\n                        mstore(_41, 32)\n                        /// @src 0:2721:2765  \"ItemDeleted(_itemId, allItems[_itemId].name)\"\n                        log2(_41, sub(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ abi_encode_string_storage(_39, add(_41, 32)), /** @src 0:2721:2765  \"ItemDeleted(_itemId, allItems[_itemId].name)\" */ _41), 0xe0ad93833f221813aa90a974b345a7c84b0a6919c97eeef8f45ee4fd584a0a61, value_13)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        return(0, 0)\n                    }\n                    case 0x99258c23 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let length_2 := sload(/** @src 0:6317:6329  \"allLootBoxes\" */ 0x03)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, length_2)\n                        return(memPos_4, 32)\n                    }\n                    case 0xbfa178c3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_14 := calldataload(4)\n                        /// @src 0:589:618  \"LootBox[] public allLootBoxes\"\n                        if iszero(lt(value_14, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:589:618  \"LootBox[] public allLootBoxes\" */ 3)))\n                        {\n                            revert(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0, 0)\n                        }\n                        /// @src 0:589:618  \"LootBox[] public allLootBoxes\"\n                        let slot_4, offset_7 := storage_array_index_access_struct_LootBox__dyn(value_14)\n                        let ret_mpos := copy_array_from_storage_to_memory_string(slot_4)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let _42 := sload(/** @src 0:589:618  \"LootBox[] public allLootBoxes\" */ add(slot_4, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1))\n                        let _43 := sload(/** @src 0:589:618  \"LootBox[] public allLootBoxes\" */ add(slot_4, 2))\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let value_15 := and(sload(/** @src 0:589:618  \"LootBox[] public allLootBoxes\" */ add(slot_4, 3)), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, 128)\n                        let tail_1 := abi_encode_string(ret_mpos, add(memPos_5, 128))\n                        mstore(add(memPos_5, 32), _42)\n                        mstore(add(memPos_5, 64), _43)\n                        mstore(add(memPos_5, 96), iszero(iszero(value_15)))\n                        return(memPos_5, sub(tail_1, memPos_5))\n                    }\n                    case 0xe6b9d987 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_16 := calldataload(4)\n                        /// @src 0:7756:7818  \"require(_lootBoxId < allLootBoxes.length, \\\"Invalid lootBoxId\\\")\"\n                        require_helper_stringliteral_e1e1(/** @src 0:7764:7796  \"_lootBoxId < allLootBoxes.length\" */ lt(value_16, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:7777:7789  \"allLootBoxes\" */ 0x03)))\n                        /// @src 0:7849:7873  \"allLootBoxes[_lootBoxId]\"\n                        let _44, _45 := storage_array_index_access_struct_LootBox__dyn(value_16)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        if iszero(and(sload(/** @src 0:7891:7900  \"lb.exists\" */ add(_44, /** @src 0:7777:7789  \"allLootBoxes\" */ 0x03)), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0xff))\n                        {\n                            let memPtr_14 := mload(64)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 32)\n                            mstore(add(memPtr_14, 36), 22)\n                            mstore(add(memPtr_14, 68), \"LootBox does not exist\")\n                            revert(memPtr_14, 100)\n                        }\n                        if /** @src 0:7971:7992  \"msg.value >= lb.price\" */ lt(/** @src 0:7971:7980  \"msg.value\" */ callvalue(), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:7984:7992  \"lb.price\" */ add(_44, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1)))\n                        {\n                            let memPtr_15 := mload(64)\n                            mstore(memPtr_15, shl(229, 4594637))\n                            mstore(add(memPtr_15, 4), 32)\n                            mstore(add(memPtr_15, 36), 36)\n                            mstore(add(memPtr_15, 68), \"Not enough Ether to buy this loo\")\n                            mstore(add(memPtr_15, 100), \"tbox\")\n                            revert(memPtr_15, 132)\n                        }\n                        mstore(0, value_16)\n                        mstore(32, 4)\n                        let dataSlot_4 := keccak256(0, 64)\n                        /// @src 0:8117:8129  \"items.length\"\n                        let expr_2 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:8117:8129  \"items.length\" */ dataSlot_4)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        if /** @src 0:8117:8133  \"items.length > 0\" */ iszero(expr_2)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        {\n                            let memPtr_16 := mload(64)\n                            mstore(memPtr_16, shl(229, 4594637))\n                            mstore(add(memPtr_16, 4), 32)\n                            mstore(add(memPtr_16, 36), 19)\n                            mstore(add(memPtr_16, 68), \"No items in lootbox\")\n                            revert(memPtr_16, 100)\n                        }\n                        let diff_2 := add(/** @src 0:8375:8387  \"block.number\" */ number(), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ not(0))\n                        if gt(diff_2, /** @src 0:8375:8387  \"block.number\" */ number())\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:8327:8479  \"abi.encodePacked(...\"\n                        let expr_mpos := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ mload(64)\n                        /// @src 0:8327:8479  \"abi.encodePacked(...\"\n                        let _46 := add(expr_mpos, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 32)\n                        mstore(_46, /** @src 0:8365:8392  \"blockhash(block.number - 1)\" */ blockhash(/** @src 0:8375:8391  \"block.number - 1\" */ diff_2))\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        mstore(add(/** @src 0:8327:8479  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 64), shl(96, /** @src 0:8414:8424  \"msg.sender\" */ caller()))\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        mstore(add(/** @src 0:8327:8479  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 84), /** @src 0:8446:8461  \"block.timestamp\" */ timestamp())\n                        /// @src 0:8327:8479  \"abi.encodePacked(...\"\n                        mstore(expr_mpos, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 84)\n                        /// @src 0:8327:8479  \"abi.encodePacked(...\"\n                        finalize_allocation(expr_mpos, 116)\n                        /// @src 0:8300:8493  \"keccak256(...\"\n                        let _47 := keccak256(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ _46, mload(/** @src 0:8300:8493  \"keccak256(...\" */ expr_mpos))\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let _48 := sload(/** @src 0:8506:8520  \"lb.totalWeight\" */ add(_44, 2))\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        if iszero(_48)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x12)\n                            revert(0, 0x24)\n                        }\n                        let r := mod(_47, _48)\n                        /// @src 0:8574:8596  \"uint256 cumulative = 0\"\n                        let var_cumulative := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0\n                        /// @src 0:8606:8635  \"uint256 selectedItemIndex = 0\"\n                        let var_selectedItemIndex := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0\n                        /// @src 0:8651:8664  \"uint256 i = 0\"\n                        let var_i_3 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0\n                        /// @src 0:8646:8856  \"for (uint256 i = 0; i < items.length; i++) {...\"\n                        for { }\n                        /** @src 0:8666:8682  \"i < items.length\" */ lt(var_i_3, expr_2)\n                        /// @src 0:8651:8664  \"uint256 i = 0\"\n                        {\n                            /// @src 0:8684:8687  \"i++\"\n                            var_i_3 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ add(/** @src 0:8684:8687  \"i++\" */ var_i_3, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1)\n                        }\n                        /// @src 0:8684:8687  \"i++\"\n                        {\n                            /// @src 0:8717:8725  \"items[i]\"\n                            let _49, _50 := storage_array_index_access_struct_WeightedItem__dyn(dataSlot_4, var_i_3)\n                            /// @src 0:8703:8732  \"cumulative += items[i].weight\"\n                            var_cumulative := checked_add_uint256(var_cumulative, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:8717:8732  \"items[i].weight\" */ add(_49, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1)))\n                            /// @src 0:8746:8846  \"if (rand < cumulative) {...\"\n                            if /** @src 0:8750:8767  \"rand < cumulative\" */ lt(r, var_cumulative)\n                            /// @src 0:8746:8846  \"if (rand < cumulative) {...\"\n                            {\n                                /// @src 0:8787:8808  \"selectedItemIndex = i\"\n                                var_selectedItemIndex := var_i_3\n                                /// @src 0:8826:8831  \"break\"\n                                break\n                            }\n                        }\n                        /// @src 0:8933:8957  \"items[selectedItemIndex]\"\n                        let _51, _52 := storage_array_index_access_struct_WeightedItem__dyn(dataSlot_4, var_selectedItemIndex)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let _53 := sload(/** @src 0:9000:9012  \"wItem.itemId\" */ _51)\n                        /// @src 0:8991:9013  \"allItems[wItem.itemId]\"\n                        let _54, _55 := storage_array_index_access_struct_Item__dyn(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ _53)\n                        /// @src 0:9069:9217  \"LootBoxPurchased(...\"\n                        let _56 := /** @src 0:33:9919  \"contract LootBoxGame {...\" */ mload(64)\n                        mstore(_56, 96)\n                        let tail_2 := abi_encode_string_storage(_44, add(_56, 96))\n                        mstore(add(_56, 32), _53)\n                        mstore(add(_56, 64), sub(tail_2, _56))\n                        /// @src 0:9069:9217  \"LootBoxPurchased(...\"\n                        log3(_56, sub(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ abi_encode_string_storage(_54, tail_2), /** @src 0:9069:9217  \"LootBoxPurchased(...\" */ _56), 0xb9c45395a97ec494b330384a3b28e46287b7fe329aa8996d4e268b963aed4b14, /** @src 0:8414:8424  \"msg.sender\" */ caller(), /** @src 0:9069:9217  \"LootBoxPurchased(...\" */ value_16)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        return(0, 0)\n                    }\n                    case 0xf851a440 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_17 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, value_17)\n                        return(memPos_6, 32)\n                    }\n                    case 0xfccff61b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_18 := calldataload(4)\n                        /// @src 0:7345:7407  \"require(_lootBoxId < allLootBoxes.length, \\\"Invalid lootBoxId\\\")\"\n                        require_helper_stringliteral_e1e1(/** @src 0:7353:7385  \"_lootBoxId < allLootBoxes.length\" */ lt(value_18, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(/** @src 0:7366:7378  \"allLootBoxes\" */ 0x03)))\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        mstore(0, value_18)\n                        mstore(32, 4)\n                        let dataSlot_5 := keccak256(0, 64)\n                        let length_3 := sload(dataSlot_5)\n                        if gt(length_3, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let memPtr_17 := mload(64)\n                        finalize_allocation(memPtr_17, add(shl(5, length_3), 32))\n                        mstore(memPtr_17, length_3)\n                        let mpos := memPtr_17\n                        mpos := add(memPtr_17, 32)\n                        let mpos_1 := mpos\n                        mstore(0, dataSlot_5)\n                        let spos := keccak256(0, 32)\n                        let i_2 := 0\n                        for { } lt(i_2, length_3) { i_2 := add(i_2, 1) }\n                        {\n                            let memPtr_18 := mload(64)\n                            finalize_allocation_17304(memPtr_18)\n                            mstore(memPtr_18, sload(spos))\n                            mstore(add(memPtr_18, 32), sload(add(spos, 1)))\n                            mstore(mpos, memPtr_18)\n                            mpos := add(mpos, 32)\n                            spos := add(spos, 2)\n                        }\n                        let memPos_7 := mload(64)\n                        let tail_3 := add(memPos_7, 32)\n                        mstore(memPos_7, 32)\n                        let pos := tail_3\n                        let length_4 := mload(memPtr_17)\n                        mstore(tail_3, length_4)\n                        pos := add(memPos_7, 64)\n                        let srcPtr := mpos_1\n                        let i_3 := 0\n                        for { } lt(i_3, length_4) { i_3 := add(i_3, 1) }\n                        {\n                            let _57 := mload(srcPtr)\n                            mstore(pos, mload(_57))\n                            mstore(add(pos, 32), mload(add(_57, 32)))\n                            pos := add(pos, 64)\n                            srcPtr := add(srcPtr, 32)\n                        }\n                        return(memPos_7, sub(pos, memPos_7))\n                    }\n                    case 0xff68fa6e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_19 := calldataload(4)\n                        /// @src 0:508:530  \"Item[] public allItems\"\n                        if iszero(lt(value_19, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ sload(1)))\n                        /// @src 0:508:530  \"Item[] public allItems\"\n                        {\n                            revert(/** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0, 0)\n                        }\n                        /// @src 0:508:530  \"Item[] public allItems\"\n                        let slot_5, offset_8 := storage_array_index_access_struct_Item__dyn(value_19)\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(slot_5)\n                        /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                        let _58 := sload(/** @src 0:508:530  \"Item[] public allItems\" */ add(slot_5, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1))\n                        let value_20 := and(sload(/** @src 0:508:530  \"Item[] public allItems\" */ add(slot_5, 2)), /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0xff)\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, 96)\n                        let tail_4 := abi_encode_string(ret_mpos_1, add(memPos_8, 96))\n                        mstore(add(memPos_8, 32), _58)\n                        mstore(add(memPos_8, 64), iszero(iszero(value_20)))\n                        return(memPos_8, sub(tail_4, memPos_8))\n                    }\n                }\n                revert(0, 0)\n            }\n            function storage_array_index_access_struct_WeightedItem__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0x20)\n                slot := add(data, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_string_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function storage_array_index_access_struct_LootBox__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 0:5156:5168  \"allLootBoxes\" */ 0x03)))\n                /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:5156:5168  \"allLootBoxes\" */ 0x03)\n                /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0x20)\n                slot := add(data, shl(2, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_17304(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(memPtr, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function storage_array_index_access_struct_Item__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(1)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 1)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0x20)\n                slot := add(data, mul(index, 3))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n            function require_helper_stringliteral_fa7e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 9)\n                    mstore(add(memPtr, 68), \"Not admin\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_e1e1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"Invalid lootBoxId\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_offset_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            function abi_encode_string_storage(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                mstore(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(pos, 0x20), and(slotValue, not(255)))\n                    ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ value)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:33:9919  \"contract LootBoxGame {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(pos, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(pos, i), 0x20)\n                }\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function calldata_array_index_access_struct_WeightedItem_calldata_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(base_ref, shl(6, index))\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:33:9919  \"contract LootBoxGame {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:33:9919  \"contract LootBoxGame {...\"\n            function abi_encode_string_calldata_uint256(headStart, value0, value1, value2) -> tail\n            {\n                mstore(headStart, 64)\n                mstore(add(headStart, 64), value1)\n                calldatacopy(add(headStart, 96), value0, value1)\n                mstore(add(add(headStart, value1), 96), 0)\n                tail := add(add(headStart, and(add(value1, 31), not(31))), 96)\n                mstore(add(headStart, 0x20), value2)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cd256470c898f6fd6822c4f4b5ae50a4d47262e5ad91da08b11c64fde42bfae964736f6c634300081c0033\"\n    }\n}\n",
					"hash": "cf8a0b71eb27fccae663a9b445fd2af2b9e206f5e3be7f606608e40c63381087",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"contracts/4_LootBox.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "contracts/4_LootBox.sol",
					"exportedSymbols": {
						"LootBoxGame": [
							676
						]
					},
					"id": 677,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LootBoxGame",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676
							],
							"name": "LootBoxGame",
							"nameLocation": "42:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "LootBoxGame.Item",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "128:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "121:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "121:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "basePrice",
											"nameLocation": "150:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "142:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "142:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "inUse",
											"nameLocation": "174:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "169:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 6,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "169:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "106:4:0",
									"nodeType": "StructDefinition",
									"scope": 676,
									"src": "99:88:0",
									"visibility": "public"
								},
								{
									"canonicalName": "LootBoxGame.WeightedItem",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "231:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "223:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "223:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "255:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "247:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "247:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WeightedItem",
									"nameLocation": "200:12:0",
									"nodeType": "StructDefinition",
									"scope": 676,
									"src": "193:76:0",
									"visibility": "public"
								},
								{
									"canonicalName": "LootBoxGame.LootBox",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "307:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "300:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 14,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "300:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "329:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "321:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 16,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "321:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "totalWeight",
											"nameLocation": "353:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "345:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "345:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "380:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "375:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 20,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "375:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LootBox",
									"nameLocation": "282:7:0",
									"nodeType": "StructDefinition",
									"scope": 676,
									"src": "275:200:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 24,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "496:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "481:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "481:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff68fa6e",
									"id": 28,
									"mutability": "mutable",
									"name": "allItems",
									"nameLocation": "522:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "508:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
										"typeString": "struct LootBoxGame.Item[]"
									},
									"typeName": {
										"baseType": {
											"id": 26,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 25,
												"name": "Item",
												"nameLocations": [
													"508:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "508:4:0"
											},
											"referencedDeclaration": 8,
											"src": "508:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$8_storage_ptr",
												"typeString": "struct LootBoxGame.Item"
											}
										},
										"id": 27,
										"nodeType": "ArrayTypeName",
										"src": "508:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage_ptr",
											"typeString": "struct LootBoxGame.Item[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "04f6dad8",
									"id": 32,
									"mutability": "mutable",
									"name": "deletedItems",
									"nameLocation": "569:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "537:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 31,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "545:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "537:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 30,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "556:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bfa178c3",
									"id": 36,
									"mutability": "mutable",
									"name": "allLootBoxes",
									"nameLocation": "606:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "589:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
										"typeString": "struct LootBoxGame.LootBox[]"
									},
									"typeName": {
										"baseType": {
											"id": 34,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 33,
												"name": "LootBox",
												"nameLocations": [
													"589:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "589:7:0"
											},
											"referencedDeclaration": 22,
											"src": "589:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
												"typeString": "struct LootBoxGame.LootBox"
											}
										},
										"id": 35,
										"nodeType": "ArrayTypeName",
										"src": "589:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage_ptr",
											"typeString": "struct LootBoxGame.LootBox[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0928deb2",
									"id": 42,
									"mutability": "mutable",
									"name": "lootBoxItems",
									"nameLocation": "733:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "691:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct LootBoxGame.WeightedItem[])"
									},
									"typeName": {
										"id": 41,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 37,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "699:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "691:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct LootBoxGame.WeightedItem[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 39,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 38,
													"name": "WeightedItem",
													"nameLocations": [
														"710:12:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 13,
													"src": "710:12:0"
												},
												"referencedDeclaration": 13,
												"src": "710:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
													"typeString": "struct LootBoxGame.WeightedItem"
												}
											},
											"id": 40,
											"nodeType": "ArrayTypeName",
											"src": "710:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
												"typeString": "struct LootBoxGame.WeightedItem[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "773:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 45,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "791:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "795:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "791:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 47,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "805:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "791:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061646d696e",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "812:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															},
															"value": "Not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "783:41:0"
											},
											{
												"id": 52,
												"nodeType": "PlaceholderStatement",
												"src": "834:1:0"
											}
										]
									},
									"id": 54,
									"name": "onlyAdmin",
									"nameLocation": "761:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:0"
									},
									"src": "752:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0444434676a57f70f8479401c50fb4add3e31052f88f4b35e155b7759e5968e5",
									"id": 62,
									"name": "ItemAdded",
									"nameLocation": "892:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "918:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "902:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "933:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "926:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "926:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"indexed": false,
												"mutability": "mutable",
												"name": "basePrice",
												"nameLocation": "947:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "939:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:56:0"
									},
									"src": "886:72:0"
								},
								{
									"anonymous": false,
									"eventSelector": "e0ad93833f221813aa90a974b345a7c84b0a6919c97eeef8f45ee4fd584a0a61",
									"id": 68,
									"name": "ItemDeleted",
									"nameLocation": "969:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "997:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "981:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1005:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 65,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:37:0"
									},
									"src": "963:55:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d2034633bb649b3feb2f458597e5ae3311c9287b664bb513a5b28495e6890467",
									"id": 76,
									"name": "LootBoxCreated",
									"nameLocation": "1030:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "lootBoxId",
												"nameLocation": "1061:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1045:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1072:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 71,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1093:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1085:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:55:0"
									},
									"src": "1024:76:0"
								},
								{
									"anonymous": false,
									"eventSelector": "28700c4a9a1aa25838f0276f65d0e0e4c50338114ecb4eda2fe4a07e3071d7af",
									"id": 82,
									"name": "LootBoxDeleted",
									"nameLocation": "1111:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "lootBoxId",
												"nameLocation": "1142:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1126:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1160:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1153:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 79,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1153:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:40:0"
									},
									"src": "1105:61:0"
								},
								{
									"anonymous": false,
									"eventSelector": "b9c45395a97ec494b330384a3b28e46287b7fe329aa8996d4e268b963aed4b14",
									"id": 94,
									"name": "LootBoxPurchased",
									"nameLocation": "1178:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1220:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1204:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "lootBoxId",
												"nameLocation": "1251:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1235:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "lootBoxName",
												"nameLocation": "1277:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1270:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 87,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1270:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1298:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemName",
												"nameLocation": "1329:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 91,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1322:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:149:0"
									},
									"src": "1172:172:0"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1407:35:0",
										"statements": [
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 97,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1417:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 98,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1425:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1429:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1425:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1417:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1417:18:0"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:0:0"
									},
									"scope": 676,
									"src": "1393:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1879:210:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 119,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "1915:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																},
																{
																	"id": 120,
																	"name": "_basePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "1933:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1952:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "Item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1903:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Item_$8_storage_ptr_$",
																	"typeString": "type(struct LootBoxGame.Item storage pointer)"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"1909:4:0",
																"1922:9:0",
																"1945:5:0"
															],
															"names": [
																"name",
																"basePrice",
																"inUse"
															],
															"nodeType": "FunctionCall",
															"src": "1903:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$8_memory_ptr",
																"typeString": "struct LootBoxGame.Item memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Item_$8_memory_ptr",
																"typeString": "struct LootBoxGame.Item memory"
															}
														],
														"expression": {
															"id": 115,
															"name": "allItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1889:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
																"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1898:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1889:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Item_$8_storage_$dyn_storage_ptr_$_t_struct$_Item_$8_storage_$returns$__$attached_to$_t_array$_t_struct$_Item_$8_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LootBoxGame.Item storage ref[] storage pointer,struct LootBoxGame.Item storage ref)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1889:71:0"
											},
											{
												"assignments": [
													126
												],
												"declarations": [
													{
														"constant": false,
														"id": 126,
														"mutability": "mutable",
														"name": "itemId",
														"nameLocation": "1979:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "1971:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1971:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 127,
															"name": "allItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1988:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
																"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1997:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1988:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2006:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1988:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1971:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 133,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "2032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 134,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2040:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 135,
															"name": "_basePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2047:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 132,
														"name": "ItemAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2022:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,uint256)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "EmitStatement",
												"src": "2017:41:0"
											},
											{
												"expression": {
													"id": 138,
													"name": "itemId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 126,
													"src": "2076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 139,
												"nodeType": "Return",
												"src": "2069:13:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "1494:255:0",
										"text": " @notice Add a new item to the global item list.\n @param _name Name of the item.\n @param _basePrice Some base price or reference price (optional usage).\n @return itemId The index of the newly created item in `allItems`."
									},
									"functionSelector": "62d6bbdf",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 110,
												"name": "onlyAdmin",
												"nameLocations": [
													"1839:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "1839:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1839:9:0"
										}
									],
									"name": "addItem",
									"nameLocation": "1763:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1787:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1771:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1771:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_basePrice",
												"nameLocation": "1802:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1794:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:43:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1866:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:9:0"
									},
									"scope": 676,
									"src": "1754:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2468:304:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 150,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "2486:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 151,
																	"name": "allItems",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "2496:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
																		"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2505:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2496:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206974656d4964",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2513:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff5dfc6fe03d15f5c83ecb062282726e5d7a19727d641c3c9776cb93d5e1703f",
																"typeString": "literal_string \"Invalid itemId\""
															},
															"value": "Invalid itemId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff5dfc6fe03d15f5c83ecb062282726e5d7a19727d641c3c9776cb93d5e1703f",
																"typeString": "literal_string \"Invalid itemId\""
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2478:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2548:24:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 158,
																		"name": "allItems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "2549:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
																			"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
																		}
																	},
																	"id": 160,
																	"indexExpression": {
																		"id": 159,
																		"name": "_itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "2558:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2549:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$8_storage",
																		"typeString": "struct LootBoxGame.Item storage ref"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2567:5:0",
																"memberName": "inUse",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "2549:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d206973207573656420696e2061206c6f6f74626f78",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2574:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5cea7b65a70ad8a53592b6e1717a95f51cb2588ce1a613fc882ad33bac62a90",
																"typeString": "literal_string \"Item is used in a lootbox\""
															},
															"value": "Item is used in a lootbox"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5cea7b65a70ad8a53592b6e1717a95f51cb2588ce1a613fc882ad33bac62a90",
																"typeString": "literal_string \"Item is used in a lootbox\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2540:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "2540:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2620:22:0",
															"subExpression": {
																"baseExpression": {
																	"id": 167,
																	"name": "deletedItems",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "2621:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 169,
																"indexExpression": {
																	"id": 168,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "2634:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2621:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d20616c72656164792064656c65746564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2644:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_157c231b5193b86c394e5f05a5d79acf58060bc71ef25a77f89906a8b0df1f8a",
																"typeString": "literal_string \"Item already deleted\""
															},
															"value": "Item already deleted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_157c231b5193b86c394e5f05a5d79acf58060bc71ef25a77f89906a8b0df1f8a",
																"typeString": "literal_string \"Item already deleted\""
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2612:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2612:55:0"
											},
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 174,
															"name": "deletedItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2678:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 176,
														"indexExpression": {
															"id": 175,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "2691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2702:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2678:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2678:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 181,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "2733:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 182,
																	"name": "allItems",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "2742:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
																		"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
																	}
																},
																"id": 184,
																"indexExpression": {
																	"id": 183,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "2751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2742:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$8_storage",
																	"typeString": "struct LootBoxGame.Item storage ref"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2760:4:0",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "2742:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 180,
														"name": "ItemDeleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2721:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2721:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "EmitStatement",
												"src": "2716:49:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2095:312:0",
										"text": " @notice Admin can delete an item if it is not in use by any lootbox.\n         We'll mark it as \"deleted\" in `deletedItems` mapping and remove\n         it from availability. (We won't actually remove from array to keep it simple.)\n @param _itemId The ID of the item to delete."
									},
									"functionSelector": "654fc833",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 146,
												"name": "onlyAdmin",
												"nameLocations": [
													"2458:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "2458:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2458:9:0"
										}
									],
									"name": "deleteItem",
									"nameLocation": "2421:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_itemId",
												"nameLocation": "2440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2432:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2431:17:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:0"
									},
									"scope": 676,
									"src": "2412:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "3439:1394:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 206,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "3457:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3464:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3457:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3473:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3457:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206974656d732070726f7669646564",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3476:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68098a02874c9486988a4d5cb31c3dc734c6cfa0e02b04f9451fdf3b7ffaa91c",
																"typeString": "literal_string \"No items provided\""
															},
															"value": "No items provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68098a02874c9486988a4d5cb31c3dc734c6cfa0e02b04f9451fdf3b7ffaa91c",
																"typeString": "literal_string \"No items provided\""
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3449:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3449:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "3449:47:0"
											},
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "totalWeightTemp",
														"nameLocation": "3568:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3560:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3560:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"hexValue": "30",
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3586:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3560:27:0"
											},
											{
												"body": {
													"id": 277,
													"nodeType": "Block",
													"src": "3642:459:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 229,
																					"name": "_items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 198,
																					"src": "3710:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																						"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
																					}
																				},
																				"id": 231,
																				"indexExpression": {
																					"id": 230,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 218,
																					"src": "3717:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3710:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_WeightedItem_$13_calldata_ptr",
																					"typeString": "struct LootBoxGame.WeightedItem calldata"
																				}
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3720:6:0",
																			"memberName": "itemId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 10,
																			"src": "3710:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"id": 233,
																				"name": "allItems",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "3729:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
																					"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
																				}
																			},
																			"id": 234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3738:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "3729:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3710:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c6964206974656d496420696e2057656967687465644974656d",
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3762:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5741a42f38dd47d3df31b71d56d47cb0cdbdd90acbf7efe2af5f74701d7a7edb",
																			"typeString": "literal_string \"Invalid itemId in WeightedItem\""
																		},
																		"value": "Invalid itemId in WeightedItem"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5741a42f38dd47d3df31b71d56d47cb0cdbdd90acbf7efe2af5f74701d7a7edb",
																			"typeString": "literal_string \"Invalid itemId in WeightedItem\""
																		}
																	],
																	"id": 228,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3685:123:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 238,
															"nodeType": "ExpressionStatement",
															"src": "3685:123:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3830:31:0",
																		"subExpression": {
																			"baseExpression": {
																				"id": 240,
																				"name": "deletedItems",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 32,
																				"src": "3831:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																					"typeString": "mapping(uint256 => bool)"
																				}
																			},
																			"id": 245,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 241,
																						"name": "_items",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 198,
																						"src": "3844:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																							"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
																						}
																					},
																					"id": 243,
																					"indexExpression": {
																						"id": 242,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 218,
																						"src": "3851:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3844:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WeightedItem_$13_calldata_ptr",
																						"typeString": "struct LootBoxGame.WeightedItem calldata"
																					}
																				},
																				"id": 244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3854:6:0",
																				"memberName": "itemId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 10,
																				"src": "3844:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3831:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4974656d2069732064656c65746564",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3863:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f3ed42a2062a8c38b3ea1f4b65ce8e426d8bb3a6f4292a0e6475e753d7e42709",
																			"typeString": "literal_string \"Item is deleted\""
																		},
																		"value": "Item is deleted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f3ed42a2062a8c38b3ea1f4b65ce8e426d8bb3a6f4292a0e6475e753d7e42709",
																			"typeString": "literal_string \"Item is deleted\""
																		}
																	],
																	"id": 239,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3822:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3822:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 249,
															"nodeType": "ExpressionStatement",
															"src": "3822:59:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 251,
																					"name": "_items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 198,
																					"src": "3903:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																						"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
																					}
																				},
																				"id": 253,
																				"indexExpression": {
																					"id": 252,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 218,
																					"src": "3910:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3903:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_WeightedItem_$13_calldata_ptr",
																					"typeString": "struct LootBoxGame.WeightedItem calldata"
																				}
																			},
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3913:6:0",
																			"memberName": "weight",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 12,
																			"src": "3903:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3922:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3903:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "576569676874206d757374206265203e2030",
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3925:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_925a6593a330bc4bbf2f4bf97c1cd59cd0f86ea9d6cbd884bb0e0420f2f43ea7",
																			"typeString": "literal_string \"Weight must be > 0\""
																		},
																		"value": "Weight must be > 0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_925a6593a330bc4bbf2f4bf97c1cd59cd0f86ea9d6cbd884bb0e0420f2f43ea7",
																			"typeString": "literal_string \"Weight must be > 0\""
																		}
																	],
																	"id": 250,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3895:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3895:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 259,
															"nodeType": "ExpressionStatement",
															"src": "3895:51:0"
														},
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 260,
																			"name": "allItems",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "4001:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
																				"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
																			}
																		},
																		"id": 265,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 261,
																					"name": "_items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 198,
																					"src": "4010:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																						"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
																					}
																				},
																				"id": 263,
																				"indexExpression": {
																					"id": 262,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 218,
																					"src": "4017:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4010:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_WeightedItem_$13_calldata_ptr",
																					"typeString": "struct LootBoxGame.WeightedItem calldata"
																				}
																			},
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4020:6:0",
																			"memberName": "itemId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 10,
																			"src": "4010:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4001:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$8_storage",
																			"typeString": "struct LootBoxGame.Item storage ref"
																		}
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4028:5:0",
																	"memberName": "inUse",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "4001:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4036:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4001:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "4001:39:0"
														},
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 270,
																	"name": "totalWeightTemp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4055:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 271,
																			"name": "_items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "4074:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
																			}
																		},
																		"id": 273,
																		"indexExpression": {
																			"id": 272,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "4081:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4074:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeightedItem_$13_calldata_ptr",
																			"typeString": "struct LootBoxGame.WeightedItem calldata"
																		}
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4084:6:0",
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 12,
																	"src": "4074:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4055:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "4055:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "3618:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 222,
															"name": "_items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "3622:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3629:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3622:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3618:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 278,
												"initializationExpression": {
													"assignments": [
														218
													],
													"declarations": [
														{
															"constant": false,
															"id": 218,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3611:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 278,
															"src": "3603:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 217,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3603:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 220,
													"initialValue": {
														"hexValue": "30",
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3615:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3603:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3637:3:0",
														"subExpression": {
															"id": 225,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3637:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 227,
													"nodeType": "ExpressionStatement",
													"src": "3637:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3598:503:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 283,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "4233:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																},
																{
																	"id": 284,
																	"name": "_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "4263:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 285,
																	"name": "totalWeightTemp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4300:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "74727565",
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4341:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 282,
																"name": "LootBox",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "4201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_LootBox_$22_storage_ptr_$",
																	"typeString": "type(struct LootBoxGame.LootBox storage pointer)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"4227:4:0",
																"4256:5:0",
																"4287:11:0",
																"4333:6:0"
															],
															"names": [
																"name",
																"price",
																"totalWeight",
																"exists"
															],
															"nodeType": "FunctionCall",
															"src": "4201:159:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LootBox_$22_memory_ptr",
																"typeString": "struct LootBoxGame.LootBox memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_LootBox_$22_memory_ptr",
																"typeString": "struct LootBoxGame.LootBox memory"
															}
														],
														"expression": {
															"id": 279,
															"name": "allLootBoxes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "4170:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
																"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4183:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4170:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_LootBox_$22_storage_$dyn_storage_ptr_$_t_struct$_LootBox_$22_storage_$returns$__$attached_to$_t_array$_t_struct$_LootBox_$22_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LootBoxGame.LootBox storage ref[] storage pointer,struct LootBoxGame.LootBox storage ref)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4170:200:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "4170:200:0"
											},
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "newLootBoxId",
														"nameLocation": "4389:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "4381:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 292,
															"name": "allLootBoxes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "4404:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
																"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4417:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4404:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4426:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4404:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4381:46:0"
											},
											{
												"body": {
													"id": 324,
													"nodeType": "Block",
													"src": "4527:212:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 313,
																						"name": "_items",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 198,
																						"src": "4633:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																							"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
																						}
																					},
																					"id": 315,
																					"indexExpression": {
																						"id": 314,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 298,
																						"src": "4640:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4633:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WeightedItem_$13_calldata_ptr",
																						"typeString": "struct LootBoxGame.WeightedItem calldata"
																					}
																				},
																				"id": 316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4643:6:0",
																				"memberName": "itemId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 10,
																				"src": "4633:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 317,
																						"name": "_items",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 198,
																						"src": "4679:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																							"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
																						}
																					},
																					"id": 319,
																					"indexExpression": {
																						"id": 318,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 298,
																						"src": "4686:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4679:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WeightedItem_$13_calldata_ptr",
																						"typeString": "struct LootBoxGame.WeightedItem calldata"
																					}
																				},
																				"id": 320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4689:6:0",
																				"memberName": "weight",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 12,
																				"src": "4679:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 312,
																			"name": "WeightedItem",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "4590:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_WeightedItem_$13_storage_ptr_$",
																				"typeString": "type(struct LootBoxGame.WeightedItem storage pointer)"
																			}
																		},
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"4625:6:0",
																			"4671:6:0"
																		],
																		"names": [
																			"itemId",
																			"weight"
																		],
																		"nodeType": "FunctionCall",
																		"src": "4590:124:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeightedItem_$13_memory_ptr",
																			"typeString": "struct LootBoxGame.WeightedItem memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_WeightedItem_$13_memory_ptr",
																			"typeString": "struct LootBoxGame.WeightedItem memory"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 308,
																			"name": "lootBoxItems",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 42,
																			"src": "4541:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_$",
																				"typeString": "mapping(uint256 => struct LootBoxGame.WeightedItem storage ref[] storage ref)"
																			}
																		},
																		"id": 310,
																		"indexExpression": {
																			"id": 309,
																			"name": "newLootBoxId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "4554:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4541:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage",
																			"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage ref"
																		}
																	},
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4568:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4541:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr_$_t_struct$_WeightedItem_$13_storage_$returns$__$attached_to$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct LootBoxGame.WeightedItem storage ref[] storage pointer,struct LootBoxGame.WeightedItem storage ref)"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4541:187:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "4541:187:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 301,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "4503:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 302,
															"name": "_items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4507:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct LootBoxGame.WeightedItem calldata[] calldata"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4514:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4507:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4503:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 325,
												"initializationExpression": {
													"assignments": [
														298
													],
													"declarations": [
														{
															"constant": false,
															"id": 298,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4496:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 325,
															"src": "4488:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 297,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 300,
													"initialValue": {
														"hexValue": "30",
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4488:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4522:3:0",
														"subExpression": {
															"id": 305,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "4522:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 307,
													"nodeType": "ExpressionStatement",
													"src": "4522:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4483:256:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 327,
															"name": "newLootBoxId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "4769:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 328,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "4783:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 329,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "4790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "LootBoxCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "4754:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,uint256)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4754:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "EmitStatement",
												"src": "4749:48:0"
											},
											{
												"expression": {
													"id": 332,
													"name": "newLootBoxId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "4814:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 204,
												"id": 333,
												"nodeType": "Return",
												"src": "4807:19:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2778:495:0",
										"text": " @notice Create a new lootbox with an array of weighted items.\n         Example usage:\n         WeightedItem[] => (itemId=1, weight=50), (itemId=2, weight=30), ...\n         totalWeight = 80 in that case.\n @param _name  Name of this lootbox (for display).\n @param _price Price in Wei to buy this lootbox.\n @param _items Array of WeightedItem (itemId, weight).\n @return lootBoxId The index of the newly created lootbox in `allLootBoxes`."
									},
									"functionSelector": "4e47644d",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 200,
												"name": "onlyAdmin",
												"nameLocations": [
													"3411:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "3411:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3411:9:0"
										}
									],
									"name": "createLootBox",
									"nameLocation": "3287:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "3326:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3310:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3310:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "3349:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_items",
												"nameLocation": "3389:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3365:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct LootBoxGame.WeightedItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 196,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 195,
															"name": "WeightedItem",
															"nameLocations": [
																"3365:12:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 13,
															"src": "3365:12:0"
														},
														"referencedDeclaration": 13,
														"src": "3365:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
															"typeString": "struct LootBoxGame.WeightedItem"
														}
													},
													"id": 197,
													"nodeType": "ArrayTypeName",
													"src": "3365:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
														"typeString": "struct LootBoxGame.WeightedItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3300:101:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3430:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:9:0"
									},
									"scope": 676,
									"src": "3278:1555:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "5125:881:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "_lootBoxId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "5143:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 345,
																	"name": "allLootBoxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "5156:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
																		"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5169:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5156:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5143:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c6f6f74426f784964",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e105d496b2b45571c5f9b842cc4fab720713798500aa2653198d595004e174",
																"typeString": "literal_string \"Invalid lootBoxId\""
															},
															"value": "Invalid lootBoxId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e105d496b2b45571c5f9b842cc4fab720713798500aa2653198d595004e174",
																"typeString": "literal_string \"Invalid lootBoxId\""
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5135:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "5135:62:0"
											},
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "lb",
														"nameLocation": "5223:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 412,
														"src": "5207:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
															"typeString": "struct LootBoxGame.LootBox"
														},
														"typeName": {
															"id": 352,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 351,
																"name": "LootBox",
																"nameLocations": [
																	"5207:7:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "5207:7:0"
															},
															"referencedDeclaration": 22,
															"src": "5207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																"typeString": "struct LootBoxGame.LootBox"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"baseExpression": {
														"id": 354,
														"name": "allLootBoxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "5228:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
															"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "_lootBoxId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "5241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5228:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LootBox_$22_storage",
														"typeString": "struct LootBoxGame.LootBox storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5207:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 359,
																"name": "lb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "5270:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																	"typeString": "struct LootBoxGame.LootBox storage pointer"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5273:6:0",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "5270:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f6f74426f7820616c72656164792064656c65746564",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5281:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3cf0ae3ee5b82eabc0e0a53bf093866f5d72a1dd586e0c45df17868b7dc412ed",
																"typeString": "literal_string \"LootBox already deleted\""
															},
															"value": "LootBox already deleted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3cf0ae3ee5b82eabc0e0a53bf093866f5d72a1dd586e0c45df17868b7dc412ed",
																"typeString": "literal_string \"LootBox already deleted\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5262:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "5262:45:0"
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "items",
														"nameLocation": "5393:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 412,
														"src": "5370:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
															"typeString": "struct LootBoxGame.WeightedItem[]"
														},
														"typeName": {
															"baseType": {
																"id": 366,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 365,
																	"name": "WeightedItem",
																	"nameLocations": [
																		"5370:12:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 13,
																	"src": "5370:12:0"
																},
																"referencedDeclaration": 13,
																"src": "5370:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
																	"typeString": "struct LootBoxGame.WeightedItem"
																}
															},
															"id": 367,
															"nodeType": "ArrayTypeName",
															"src": "5370:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
																"typeString": "struct LootBoxGame.WeightedItem[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"baseExpression": {
														"id": 369,
														"name": "lootBoxItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "5401:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct LootBoxGame.WeightedItem storage ref[] storage ref)"
														}
													},
													"id": 371,
													"indexExpression": {
														"id": 370,
														"name": "_lootBoxId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "5414:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5401:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage",
														"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5370:55:0"
											},
											{
												"body": {
													"id": 398,
													"nodeType": "Block",
													"src": "5478:443:0",
													"statements": [
														{
															"assignments": [
																385
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 385,
																	"mutability": "mutable",
																	"name": "itemId",
																	"nameLocation": "5500:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 398,
																	"src": "5492:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 384,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5492:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 390,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 386,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "5509:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
																			"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage pointer"
																		}
																	},
																	"id": 388,
																	"indexExpression": {
																		"id": 387,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "5515:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5509:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeightedItem_$13_storage",
																		"typeString": "struct LootBoxGame.WeightedItem storage ref"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5518:6:0",
																"memberName": "itemId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "5509:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5492:32:0"
														},
														{
															"expression": {
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 391,
																			"name": "allItems",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "5880:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
																				"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
																			}
																		},
																		"id": 393,
																		"indexExpression": {
																			"id": 392,
																			"name": "itemId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "5889:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5880:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$8_storage",
																			"typeString": "struct LootBoxGame.Item storage ref"
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5897:5:0",
																	"memberName": "inUse",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "5880:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5880:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 397,
															"nodeType": "ExpressionStatement",
															"src": "5880:30:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 377,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "5455:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 378,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5459:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
																"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage pointer"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5465:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5459:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5455:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"initializationExpression": {
													"assignments": [
														374
													],
													"declarations": [
														{
															"constant": false,
															"id": 374,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5448:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 399,
															"src": "5440:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 373,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5440:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 376,
													"initialValue": {
														"hexValue": "30",
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5452:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5440:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5473:3:0",
														"subExpression": {
															"id": 381,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "5473:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 383,
													"nodeType": "ExpressionStatement",
													"src": "5473:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5435:486:0"
											},
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 400,
															"name": "lb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5931:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																"typeString": "struct LootBoxGame.LootBox storage pointer"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5934:6:0",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5931:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5931:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "5931:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 407,
															"name": "_lootBoxId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "5979:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 408,
																"name": "lb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "5991:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																	"typeString": "struct LootBoxGame.LootBox storage pointer"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5994:4:0",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "5991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 406,
														"name": "LootBoxDeleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "5964:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5964:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "EmitStatement",
												"src": "5959:40:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "4839:219:0",
										"text": " @notice Delete a lootbox by ID. This sets `exists = false` and\n         makes items available for other lootboxes or deletion if needed.\n @param _lootBoxId The ID of the lootbox to delete."
									},
									"functionSelector": "19a82f4b",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 340,
												"name": "onlyAdmin",
												"nameLocations": [
													"5115:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "5115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5115:9:0"
										}
									],
									"name": "deleteLootBox",
									"nameLocation": "5072:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "_lootBoxId",
												"nameLocation": "5094:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "5086:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5085:20:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5125:0:0"
									},
									"scope": 676,
									"src": "5063:943:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "6300:43:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 419,
														"name": "allLootBoxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "6317:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
															"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6330:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6317:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 421,
												"nodeType": "Return",
												"src": "6310:26:0"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "6059:172:0",
										"text": " @notice Return the number of lootboxes in `allLootBoxes` array.\n         Some might be deleted, so front-end can filter those out by `exists` flag."
									},
									"functionSelector": "99258c23",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllLootBoxesCount",
									"nameLocation": "6245:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6265:2:0"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6291:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6290:9:0"
									},
									"scope": 676,
									"src": "6236:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "6752:272:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 440,
																"name": "_lootBoxId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "6770:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 441,
																	"name": "allLootBoxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "6783:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
																		"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6796:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6783:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6770:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c6f6f74426f784964",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6804:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e105d496b2b45571c5f9b842cc4fab720713798500aa2653198d595004e174",
																"typeString": "literal_string \"Invalid lootBoxId\""
															},
															"value": "Invalid lootBoxId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e105d496b2b45571c5f9b842cc4fab720713798500aa2653198d595004e174",
																"typeString": "literal_string \"Invalid lootBoxId\""
															}
														],
														"id": 439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6762:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "6762:62:0"
											},
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "lb",
														"nameLocation": "6850:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "6834:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
															"typeString": "struct LootBoxGame.LootBox"
														},
														"typeName": {
															"id": 448,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 447,
																"name": "LootBox",
																"nameLocations": [
																	"6834:7:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "6834:7:0"
															},
															"referencedDeclaration": 22,
															"src": "6834:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																"typeString": "struct LootBoxGame.LootBox"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"baseExpression": {
														"id": 450,
														"name": "allLootBoxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "6855:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
															"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
														}
													},
													"id": 452,
													"indexExpression": {
														"id": 451,
														"name": "_lootBoxId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "6868:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6855:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LootBox_$22_storage",
														"typeString": "struct LootBoxGame.LootBox storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6834:45:0"
											},
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "itemsCount",
														"nameLocation": "6897:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "6889:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 456,
															"name": "lootBoxItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "6910:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => struct LootBoxGame.WeightedItem storage ref[] storage ref)"
															}
														},
														"id": 458,
														"indexExpression": {
															"id": 457,
															"name": "_lootBoxId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "6923:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6910:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage",
															"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage ref"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6935:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6910:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6889:52:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 461,
																"name": "lb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "6960:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																	"typeString": "struct LootBoxGame.LootBox storage pointer"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6963:4:0",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "6960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 463,
																"name": "lb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "6969:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																	"typeString": "struct LootBoxGame.LootBox storage pointer"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6972:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "6969:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 465,
																"name": "lb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "6979:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																	"typeString": "struct LootBoxGame.LootBox storage pointer"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6982:6:0",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "6979:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 467,
																"name": "lb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "6990:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																	"typeString": "struct LootBoxGame.LootBox storage pointer"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6993:11:0",
															"memberName": "totalWeight",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "6990:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 469,
															"name": "itemsCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "7006:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 470,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6959:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(string storage ref,uint256,bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 438,
												"id": 471,
												"nodeType": "Return",
												"src": "6952:65:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "6349:142:0",
										"text": " @notice Get info about a lootbox by ID.\n         This helps front-end list all lootboxes with their name, price, etc."
									},
									"functionSelector": "3a4d5c30",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLootBoxInfo",
									"nameLocation": "6505:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "_lootBoxId",
												"nameLocation": "6528:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "6520:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6519:20:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "6614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "6600:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6600:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "6640:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "6632:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "6664:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "6659:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6659:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "totalWeight",
												"nameLocation": "6694:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "6686:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "itemsCount",
												"nameLocation": "6727:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "6719:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6586:161:0"
									},
									"scope": 676,
									"src": "6496:528:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "7335:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 484,
																"name": "_lootBoxId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "7353:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 485,
																	"name": "allLootBoxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "7366:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
																		"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7379:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7366:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7353:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c6f6f74426f784964",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7387:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e105d496b2b45571c5f9b842cc4fab720713798500aa2653198d595004e174",
																"typeString": "literal_string \"Invalid lootBoxId\""
															},
															"value": "Invalid lootBoxId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e105d496b2b45571c5f9b842cc4fab720713798500aa2653198d595004e174",
																"typeString": "literal_string \"Invalid lootBoxId\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7345:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7345:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "7345:62:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 491,
														"name": "lootBoxItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "7424:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct LootBoxGame.WeightedItem storage ref[] storage ref)"
														}
													},
													"id": 493,
													"indexExpression": {
														"id": 492,
														"name": "_lootBoxId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7437:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7424:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage",
														"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 482,
												"id": 494,
												"nodeType": "Return",
												"src": "7417:31:0"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "7030:177:0",
										"text": " @notice Get items for a specific lootbox by ID.\n @param _lootBoxId The ID of the lootbox.\n @return Array of WeightedItem structs for this lootbox."
									},
									"functionSelector": "fccff61b",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLootBoxItems",
									"nameLocation": "7221:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_lootBoxId",
												"nameLocation": "7245:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "7237:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:20:0"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "7307:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LootBoxGame.WeightedItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 479,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 478,
															"name": "WeightedItem",
															"nameLocations": [
																"7307:12:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 13,
															"src": "7307:12:0"
														},
														"referencedDeclaration": 13,
														"src": "7307:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
															"typeString": "struct LootBoxGame.WeightedItem"
														}
													},
													"id": 480,
													"nodeType": "ArrayTypeName",
													"src": "7307:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
														"typeString": "struct LootBoxGame.WeightedItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7306:23:0"
									},
									"scope": 676,
									"src": "7212:243:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7746:1688:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "_lootBoxId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "7764:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 504,
																	"name": "allLootBoxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "7777:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
																		"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7790:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7777:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7764:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c6f6f74426f784964",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7798:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e105d496b2b45571c5f9b842cc4fab720713798500aa2653198d595004e174",
																"typeString": "literal_string \"Invalid lootBoxId\""
															},
															"value": "Invalid lootBoxId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e105d496b2b45571c5f9b842cc4fab720713798500aa2653198d595004e174",
																"typeString": "literal_string \"Invalid lootBoxId\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7756:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "7756:62:0"
											},
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "lb",
														"nameLocation": "7844:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "7828:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
															"typeString": "struct LootBoxGame.LootBox"
														},
														"typeName": {
															"id": 511,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 510,
																"name": "LootBox",
																"nameLocations": [
																	"7828:7:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "7828:7:0"
															},
															"referencedDeclaration": 22,
															"src": "7828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																"typeString": "struct LootBoxGame.LootBox"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"baseExpression": {
														"id": 513,
														"name": "allLootBoxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "7849:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_LootBox_$22_storage_$dyn_storage",
															"typeString": "struct LootBoxGame.LootBox storage ref[] storage ref"
														}
													},
													"id": 515,
													"indexExpression": {
														"id": 514,
														"name": "_lootBoxId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "7862:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7849:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LootBox_$22_storage",
														"typeString": "struct LootBoxGame.LootBox storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7828:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 518,
																"name": "lb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "7891:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																	"typeString": "struct LootBoxGame.LootBox storage pointer"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7894:6:0",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "7891:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f6f74426f7820646f6573206e6f74206578697374",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7902:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ce71f55e5fea24fc5d73ec2d7ef48de481dd1c94775b99084f0d850c1066df1",
																"typeString": "literal_string \"LootBox does not exist\""
															},
															"value": "LootBox does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ce71f55e5fea24fc5d73ec2d7ef48de481dd1c94775b99084f0d850c1066df1",
																"typeString": "literal_string \"LootBox does not exist\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7883:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7883:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "7883:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 524,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7971:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7975:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7971:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 526,
																	"name": "lb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "7984:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																		"typeString": "struct LootBoxGame.LootBox storage pointer"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7987:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 17,
																"src": "7984:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7971:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820457468657220746f206275792074686973206c6f6f74626f78",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7994:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f786e49ff2751bb931138c66879d2d1fcf6f4325ba058e7a15060b2ccb57d67f",
																"typeString": "literal_string \"Not enough Ether to buy this lootbox\""
															},
															"value": "Not enough Ether to buy this lootbox"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f786e49ff2751bb931138c66879d2d1fcf6f4325ba058e7a15060b2ccb57d67f",
																"typeString": "literal_string \"Not enough Ether to buy this lootbox\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7963:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "7963:70:0"
											},
											{
												"assignments": [
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "items",
														"nameLocation": "8067:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "8044:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
															"typeString": "struct LootBoxGame.WeightedItem[]"
														},
														"typeName": {
															"baseType": {
																"id": 534,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 533,
																	"name": "WeightedItem",
																	"nameLocations": [
																		"8044:12:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 13,
																	"src": "8044:12:0"
																},
																"referencedDeclaration": 13,
																"src": "8044:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
																	"typeString": "struct LootBoxGame.WeightedItem"
																}
															},
															"id": 535,
															"nodeType": "ArrayTypeName",
															"src": "8044:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
																"typeString": "struct LootBoxGame.WeightedItem[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 540,
												"initialValue": {
													"baseExpression": {
														"id": 537,
														"name": "lootBoxItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "8075:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct LootBoxGame.WeightedItem storage ref[] storage ref)"
														}
													},
													"id": 539,
													"indexExpression": {
														"id": 538,
														"name": "_lootBoxId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "8088:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8075:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage",
														"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8044:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 542,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "8117:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
																		"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage pointer"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8123:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8117:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8117:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206974656d7320696e206c6f6f74626f78",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8135:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee614b8ff6f2fbe2b6ee9a03326d09c5b9229e1bb5165298aec379dc61c28d6f",
																"typeString": "literal_string \"No items in lootbox\""
															},
															"value": "No items in lootbox"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee614b8ff6f2fbe2b6ee9a03326d09c5b9229e1bb5165298aec379dc61c28d6f",
																"typeString": "literal_string \"No items in lootbox\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8109:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "8109:48:0"
											},
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "rand",
														"nameLocation": "8272:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "8264:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 549,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 557,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "8375:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 558,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8381:6:0",
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "8375:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 559,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8390:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "8375:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 556,
																					"name": "blockhash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967291,
																					"src": "8365:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																						"typeString": "function (uint256) view returns (bytes32)"
																					}
																				},
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8365:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"expression": {
																					"id": 562,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "8414:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8418:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "8414:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 564,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "8446:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8452:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "8446:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 554,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "8327:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "8331:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "8327:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8327:152:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 553,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "8300:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8300:193:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 551,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:224:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"expression": {
															"id": 569,
															"name": "lb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "8506:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																"typeString": "struct LootBoxGame.LootBox storage pointer"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8509:11:0",
														"memberName": "totalWeight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "8506:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8279:241:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8264:256:0"
											},
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "cumulative",
														"nameLocation": "8582:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "8574:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8574:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 576,
												"initialValue": {
													"hexValue": "30",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8595:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8574:22:0"
											},
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "selectedItemIndex",
														"nameLocation": "8614:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "8606:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 580,
												"initialValue": {
													"hexValue": "30",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8634:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8606:29:0"
											},
											{
												"body": {
													"id": 609,
													"nodeType": "Block",
													"src": "8689:167:0",
													"statements": [
														{
															"expression": {
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 592,
																	"name": "cumulative",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "8703:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 593,
																			"name": "items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "8717:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
																				"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage pointer"
																			}
																		},
																		"id": 595,
																		"indexExpression": {
																			"id": 594,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8723:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8717:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeightedItem_$13_storage",
																			"typeString": "struct LootBoxGame.WeightedItem storage ref"
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8726:6:0",
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 12,
																	"src": "8717:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8703:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "8703:29:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 599,
																	"name": "rand",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "8750:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 600,
																	"name": "cumulative",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "8757:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8750:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 608,
															"nodeType": "IfStatement",
															"src": "8746:100:0",
															"trueBody": {
																"id": 607,
																"nodeType": "Block",
																"src": "8769:77:0",
																"statements": [
																	{
																		"expression": {
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 602,
																				"name": "selectedItemIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "8787:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 603,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "8807:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8787:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 605,
																		"nodeType": "ExpressionStatement",
																		"src": "8787:21:0"
																	},
																	{
																		"id": 606,
																		"nodeType": "Break",
																		"src": "8826:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "8666:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 586,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "8670:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
																"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage pointer"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8676:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8670:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8666:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 610,
												"initializationExpression": {
													"assignments": [
														582
													],
													"declarations": [
														{
															"constant": false,
															"id": 582,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8659:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 610,
															"src": "8651:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 581,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8651:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 584,
													"initialValue": {
														"hexValue": "30",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8651:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8684:3:0",
														"subExpression": {
															"id": 589,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "8684:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 591,
													"nodeType": "ExpressionStatement",
													"src": "8684:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8646:210:0"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "wItem",
														"nameLocation": "8925:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "8904:26:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
															"typeString": "struct LootBoxGame.WeightedItem"
														},
														"typeName": {
															"id": 612,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 611,
																"name": "WeightedItem",
																"nameLocations": [
																	"8904:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 13,
																"src": "8904:12:0"
															},
															"referencedDeclaration": 13,
															"src": "8904:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
																"typeString": "struct LootBoxGame.WeightedItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 617,
												"initialValue": {
													"baseExpression": {
														"id": 614,
														"name": "items",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "8933:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_WeightedItem_$13_storage_$dyn_storage_ptr",
															"typeString": "struct LootBoxGame.WeightedItem storage ref[] storage pointer"
														}
													},
													"id": 616,
													"indexExpression": {
														"id": 615,
														"name": "selectedItemIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "8939:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8933:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WeightedItem_$13_storage",
														"typeString": "struct LootBoxGame.WeightedItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8904:53:0"
											},
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "itemInfo",
														"nameLocation": "8980:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "8967:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$8_storage_ptr",
															"typeString": "struct LootBoxGame.Item"
														},
														"typeName": {
															"id": 619,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 618,
																"name": "Item",
																"nameLocations": [
																	"8967:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 8,
																"src": "8967:4:0"
															},
															"referencedDeclaration": 8,
															"src": "8967:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$8_storage_ptr",
																"typeString": "struct LootBoxGame.Item"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"baseExpression": {
														"id": 621,
														"name": "allItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "8991:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Item_$8_storage_$dyn_storage",
															"typeString": "struct LootBoxGame.Item storage ref[] storage ref"
														}
													},
													"id": 624,
													"indexExpression": {
														"expression": {
															"id": 622,
															"name": "wItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "9000:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
																"typeString": "struct LootBoxGame.WeightedItem storage pointer"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9006:6:0",
														"memberName": "itemId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "9000:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8991:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$8_storage",
														"typeString": "struct LootBoxGame.Item storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8967:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 627,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9099:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9103:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "_lootBoxId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "9123:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 630,
																"name": "lb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "9147:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LootBox_$22_storage_ptr",
																	"typeString": "struct LootBoxGame.LootBox storage pointer"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9150:4:0",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "9147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 632,
																"name": "wItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "9168:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WeightedItem_$13_storage_ptr",
																	"typeString": "struct LootBoxGame.WeightedItem storage pointer"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9174:6:0",
															"memberName": "itemId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "9168:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 634,
																"name": "itemInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "9194:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$8_storage_ptr",
																	"typeString": "struct LootBoxGame.Item storage pointer"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9203:4:0",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "9194:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 626,
														"name": "LootBoxPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "9069:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory,uint256,string memory)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9069:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "EmitStatement",
												"src": "9064:153:0"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "7461:223:0",
										"text": " @notice Buy a lootbox using Ether (msg.value must be >= lootbox price).\n         Randomly select an item based on the weight distribution.\n @param _lootBoxId The ID of the lootbox to purchase."
									},
									"functionSelector": "e6b9d987",
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyLootBox",
									"nameLocation": "7698:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "_lootBoxId",
												"nameLocation": "7717:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7709:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7708:20:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7746:0:0"
									},
									"scope": 676,
									"src": "7689:1745:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "9681:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 650,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "9712:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 653,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9731:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LootBoxGame_$676",
																				"typeString": "contract LootBoxGame"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LootBoxGame_$676",
																				"typeString": "contract LootBoxGame"
																			}
																		],
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9723:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 651,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9723:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9723:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9737:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "9723:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9712:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9758:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															},
															"value": "Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															}
														],
														"id": 649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9691:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9691:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "9691:108:0"
											},
											{
												"assignments": [
													661,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9815:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "9810:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 660,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9810:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 668,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9853:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 662,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "9828:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9832:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "9828:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 664,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "9844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9828:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9828:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9809:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "9874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177207472616e73666572206661696c6564",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9883:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a",
																"typeString": "literal_string \"Withdraw transfer failed\""
															},
															"value": "Withdraw transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a",
																"typeString": "literal_string \"Withdraw transfer failed\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9866:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "9866:44:0"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "9498:78:0",
										"text": " @notice Admin can withdraw Ether from the contract balance."
									},
									"functionSelector": "401d4482",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 647,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 646,
												"name": "onlyAdmin",
												"nameLocations": [
													"9667:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "9667:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9667:9:0"
										}
									],
									"name": "adminWithdraw",
									"nameLocation": "9590:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9620:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "9604:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9604:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9633:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "9625:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9603:38:0"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9681:0:0"
									},
									"scope": 676,
									"src": "9581:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 677,
							"src": "33:9886:0",
							"usedErrors": [],
							"usedEvents": [
								62,
								68,
								76,
								82,
								94
							]
						}
					],
					"src": "0:9919:0"
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/4_LootBox.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"file": "contracts/4_LootBox.sol",
					"start": -1,
					"end": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/4_LootBox.sol:208:9:\n    |\n208 |         uint256 itemsCount = lootBoxItems[_lootBoxId].length;\n    |         ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/4_LootBox.sol:203:13:\n    |\n203 |             uint256 itemsCount\n    |             ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"file": "contracts/4_LootBox.sol",
					"start": 6889,
					"end": 6907
				},
				"type": "Warning"
			}
		],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}
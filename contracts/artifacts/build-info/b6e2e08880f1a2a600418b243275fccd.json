{
	"id": "b6e2e08880f1a2a600418b243275fccd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_Storage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\ncontract Storage {\n\n    uint256 number;\n\n    /**\n     * @dev Store value in variable\n     * @param num value to store\n     */\n    function store(uint256 num) public {\n        number = num;\n    }\n\n    /**\n     * @dev Return value \n     * @return value of 'number'\n     */\n    function retrieve() public view returns (uint256){\n        return number;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/1_Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"name": "retrieve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "store",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Store & retrieve value in a variable\",\"kind\":\"dev\",\"methods\":{\"retrieve()\":{\"details\":\"Return value \",\"returns\":{\"_0\":\"value of 'number'\"}},\"store(uint256)\":{\"details\":\"Store value in variable\",\"params\":{\"num\":\"value to store\"}}},\"title\":\"Storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Storage.sol\":\"Storage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/1_Storage.sol\":{\"keccak256\":\"0xa3de51030e5784d1fc25677298a0bd61bf7eac541ca2fc94232f1b7dc5a89e21\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aac95d61b7ce356e2da8d93eb66abfabbeadebb4f44d3d78fd14414e7ac918ba\",\"dweb:/ipfs/QmZ6otiNvDfrWzEiQJBAdWUurwEvsemrbBZgD9hj6qSki1\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "Store & retrieve value in a variable",
						"kind": "dev",
						"methods": {
							"retrieve()": {
								"details": "Return value ",
								"returns": {
									"_0": "value of 'number'"
								}
							},
							"store(uint256)": {
								"details": "Store value in variable",
								"params": {
									"num": "value to store"
								}
							}
						},
						"title": "Storage",
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/1_Storage.sol:Storage",
								"label": "number",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 0/65552 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 850\n// Code size = 2520 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20000]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20000] = a1\n    42: a1 = 0x20010\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20010\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 6)\n    64: sp = sp + 0xfffffffffffffff0\n    67: u64 [sp + 0x8] = ra\n    70: u64 [sp] = s0\n    72: s0 = a0 & 0x1\n    75: ecalli 2 // 'call_data_size'\n    77: fallthrough\n      : @9 (gas: 2)\n    78: u32 [0x20004] = a0\n    83: jump @11 if s0 == 0\n      : @10 (gas: 1)\n    86: ra = 2, jump @12\n      : @11 [@dyn 1] (gas: 1)\n    90: ra = 4, jump @26\n      : @12 [@dyn 2] (gas: 9)\n    95: sp = sp + 0xffffffffffffffc0\n    98: u64 [sp + 0x38] = ra\n   101: u64 [sp + 0x30] = s0\n   104: u64 [sp + 0x28] = s1\n   107: s0 = sp + 0x40\n   110: sp = sp & 0xffffffffffffffe0\n   113: a0 = 0x40\n   116: a1 = 0x20\n   119: ra = 6, jump @0\n      : @13 [@dyn 3] (gas: 39)\n   123: u8 [a0 + 31] = 0x80\n   128: u8 [a0 + 30] = 0\n   131: u8 [a0 + 29] = 0\n   134: u8 [a0 + 28] = 0\n   137: u8 [a0 + 27] = 0\n   140: u8 [a0 + 26] = 0\n   143: u8 [a0 + 25] = 0\n   146: u8 [a0 + 24] = 0\n   149: u8 [a0 + 23] = 0\n   152: u8 [a0 + 22] = 0\n   155: u8 [a0 + 21] = 0\n   158: u8 [a0 + 20] = 0\n   161: u8 [a0 + 19] = 0\n   164: u8 [a0 + 18] = 0\n   167: u8 [a0 + 17] = 0\n   170: u8 [a0 + 16] = 0\n   173: u8 [a0 + 15] = 0\n   176: u8 [a0 + 14] = 0\n   179: u8 [a0 + 13] = 0\n   182: u8 [a0 + 12] = 0\n   185: u8 [a0 + 11] = 0\n   188: u8 [a0 + 10] = 0\n   191: u8 [a0 + 9] = 0\n   194: u8 [a0 + 8] = 0\n   197: u8 [a0 + 7] = 0\n   200: u8 [a0 + 6] = 0\n   203: u8 [a0 + 5] = 0\n   206: u8 [a0 + 4] = 0\n   209: u8 [a0 + 3] = 0\n   212: u8 [a0 + 2] = 0\n   215: u8 [a0 + 1] = 0\n   218: u8 [a0 + 0] = 0\n   220: u64 [sp + 24] = 0\n   223: u64 [sp + 0] = 0\n   225: u64 [sp + 8] = 0\n   228: u64 [sp + 16] = 0\n   231: i32 a0 = sp + 0\n   233: ecalli 7 // 'value_transferred'\n   235: fallthrough\n      : @14 (gas: 8)\n   236: a0 = u64 [sp + 0x10]\n   239: a1 = u64 [sp + 0x18]\n   242: a2 = u64 [sp + 0x8]\n   245: a3 = u64 [sp]\n   247: a1 = a1 | a2\n   250: a0 = a0 | a3\n   253: a0 = a0 | a1\n   256: jump @18 if a0 != 0\n      : @15 (gas: 3)\n   260: a0 = 0x40\n   263: a1 = 0x20\n   266: ra = 8, jump @0\n      : @16 [@dyn 4] (gas: 100)\n   271: a1 = u8 [a0 + 0x11]\n   274: a2 = u8 [a0 + 0x10]\n   277: a3 = u8 [a0 + 0x12]\n   280: a4 = u8 [a0 + 0x13]\n   283: a1 = a1 << 0x8\n   286: a1 = a1 | a2\n   289: a3 = a3 << 0x10\n   292: a4 = a4 << 0x18\n   295: a3 = a3 | a4\n   298: a1 = a1 | a3\n   301: a2 = u8 [a0 + 0x15]\n   304: a3 = u8 [a0 + 0x14]\n   307: a4 = u8 [a0 + 0x16]\n   310: a5 = u8 [a0 + 0x17]\n   313: a2 = a2 << 0x8\n   316: a2 = a2 | a3\n   319: a4 = a4 << 0x10\n   322: a5 = a5 << 0x18\n   325: a4 = a4 | a5\n   328: a2 = a2 | a4\n   331: a2 = a2 << 0x20\n   334: t0 = a2 | a1\n   337: a2 = u8 [a0 + 0x1]\n   340: a3 = u8 [a0]\n   342: a4 = u8 [a0 + 0x2]\n   345: a5 = u8 [a0 + 0x3]\n   348: a2 = a2 << 0x8\n   351: a2 = a2 | a3\n   354: a4 = a4 << 0x10\n   357: a5 = a5 << 0x18\n   360: a4 = a4 | a5\n   363: a2 = a2 | a4\n   366: a3 = u8 [a0 + 0x5]\n   369: a4 = u8 [a0 + 0x4]\n   372: a5 = u8 [a0 + 0x6]\n   375: s1 = u8 [a0 + 0x7]\n   378: a3 = a3 << 0x8\n   381: a3 = a3 | a4\n   384: a5 = a5 << 0x10\n   387: s1 = s1 << 0x18\n   390: a5 = a5 | s1\n   393: a3 = a3 | a5\n   396: a3 = a3 << 0x20\n   399: a2 = a2 | a3\n   402: a3 = u8 [a0 + 0x19]\n   405: a4 = u8 [a0 + 0x18]\n   408: a5 = u8 [a0 + 0x1a]\n   411: s1 = u8 [a0 + 0x1b]\n   414: a3 = a3 << 0x8\n   417: a3 = a3 | a4\n   420: a5 = a5 << 0x10\n   423: s1 = s1 << 0x18\n   426: a5 = a5 | s1\n   429: a3 = a3 | a5\n   432: a4 = u8 [a0 + 0x1d]\n   435: a5 = u8 [a0 + 0x1c]\n   438: s1 = u8 [a0 + 0x1e]\n   441: a1 = u8 [a0 + 0x1f]\n   444: a4 = a4 << 0x8\n   447: a4 = a4 | a5\n   450: s1 = s1 << 0x10\n   453: a1 = a1 << 0x18\n   456: a1 = a1 | s1\n   459: a1 = a1 | a4\n   462: a1 = a1 << 0x20\n   465: a3 = a3 | a1\n   468: a1 = u8 [a0 + 0x9]\n   471: a4 = u8 [a0 + 0x8]\n   474: a5 = u8 [a0 + 0xa]\n   477: s1 = u8 [a0 + 0xb]\n   480: a1 = a1 << 0x8\n   483: a1 = a1 | a4\n   486: a5 = a5 << 0x10\n   489: s1 = s1 << 0x18\n   492: a5 = a5 | s1\n   495: a1 = a1 | a5\n   498: a4 = u8 [a0 + 0xd]\n   501: a5 = u8 [a0 + 0xc]\n   504: s1 = u8 [a0 + 0xe]\n   507: a0 = u8 [a0 + 0xf]\n   510: a4 = a4 << 0x8\n   513: a4 = a4 | a5\n   516: s1 = s1 << 0x10\n   519: a0 = a0 << 0x18\n   522: a0 = a0 | s1\n   525: a0 = a0 | a4\n   528: a0 = a0 << 0x20\n   531: a0 = a0 | a1\n   534: a0 = reverse a0\n   536: s1 = reverse a3\n   538: a1 = reverse a2\n   540: a2 = reverse t0\n   542: a1 = a1 | a2\n   545: a2 = s1 | a0\n   548: a2 = a2 | a1\n   551: a2 = a2 >> 0x20\n   554: a0 = a0 | a1\n   557: a0 = a0 << 0x20\n   560: a0 = a0 | a2\n   563: jump @20 if a0 == 0\n      : @17 (gas: 1)\n   566: trap\n      : @18 (gas: 3)\n   567: a0 = 0\n   569: a1 = 0\n   571: ra = 10, jump @0\n      : @19 [@dyn 5] (gas: 5)\n   576: i32 a1 = a0 + 0\n   578: a0 = 0x1\n   581: a2 = 0\n   583: ecalli 4 // 'seal_return'\n   585: fallthrough\n      : @20 (gas: 4)\n   586: i32 s1 = s1 + 0\n   588: a0 = s1\n   590: a1 = 0\n   592: ra = 12, jump @0\n      : @21 [@dyn 6] (gas: 5)\n   597: i32 a0 = a0 + 0\n   599: a1 = 0\n   601: a2 = 0\n   603: ecalli 0 // 'call_data_copy'\n   604: fallthrough\n      : @22 (gas: 2)\n   605: a1 = i32 [0x20008]\n   610: jump @24 if a1 == 0\n      : @23 (gas: 4)\n   613: a0 = 0x30010\n   618: i32 a0 = a0 + 0\n   620: ecalli 5 // 'set_immutable_data'\n   622: fallthrough\n      : @24 (gas: 3)\n   623: a0 = s1\n   625: a1 = 0\n   627: ra = 14, jump @0\n      : @25 [@dyn 7] (gas: 6)\n   632: i32 a1 = a0 + 0\n   634: a0 = 0\n   636: a2 = 0\n   638: ra = 0x10\n   641: ecalli 4 // 'seal_return'\n   643: fallthrough\n      : @26 [@dyn 8] (gas: 8)\n   644: sp = sp + 0xffffffffffffffc0\n   647: u64 [sp + 0x38] = ra\n   650: u64 [sp + 0x30] = s0\n   653: s0 = sp + 0x40\n   656: sp = sp & 0xffffffffffffffe0\n   659: a0 = 0x40\n   662: a1 = 0x20\n   665: ra = 18, jump @0\n      : @27 [@dyn 9] (gas: 34)\n   670: u8 [a0 + 31] = 0x80\n   675: u8 [a0 + 30] = 0\n   678: u8 [a0 + 29] = 0\n   681: u8 [a0 + 28] = 0\n   684: u8 [a0 + 27] = 0\n   687: u8 [a0 + 26] = 0\n   690: u8 [a0 + 25] = 0\n   693: u8 [a0 + 24] = 0\n   696: u8 [a0 + 23] = 0\n   699: u8 [a0 + 22] = 0\n   702: u8 [a0 + 21] = 0\n   705: u8 [a0 + 20] = 0\n   708: u8 [a0 + 19] = 0\n   711: u8 [a0 + 18] = 0\n   714: u8 [a0 + 17] = 0\n   717: u8 [a0 + 16] = 0\n   720: u8 [a0 + 15] = 0\n   723: u8 [a0 + 14] = 0\n   726: u8 [a0 + 13] = 0\n   729: u8 [a0 + 12] = 0\n   732: u8 [a0 + 11] = 0\n   735: u8 [a0 + 10] = 0\n   738: u8 [a0 + 9] = 0\n   741: u8 [a0 + 8] = 0\n   744: u8 [a0 + 7] = 0\n   747: u8 [a0 + 3] = 0\n   750: u8 [a0 + 2] = 0\n   753: u8 [a0 + 1] = 0\n   756: u8 [a0 + 0] = 0\n   758: a1 = i32 [0x20004]\n   763: u8 [a0 + 6] = 0\n   766: u8 [a0 + 5] = 0\n   769: u8 [a0 + 4] = 0\n   772: jump @32 if a1 <u 4\n      : @28 (gas: 4)\n   776: i32 a0 = sp + 0\n   778: a1 = 0\n   780: ecalli 1 // 'call_data_load'\n   782: fallthrough\n      : @29 (gas: 2)\n   783: a0 = i32 [sp + 0x1c]\n   786: jump @33 if a0 == 778358465\n      : @30 (gas: 1)\n   793: jump @32 if a0 != 1616328221\n      : @31 (gas: 14)\n   800: ra = 0x14\n   803: sp = sp + 0xffffffffffffff40\n   807: u64 [sp + 0xb8] = ra\n   811: u64 [sp + 0xb0] = s0\n   815: u64 [sp + 0xa8] = s1\n   819: s0 = sp + 0xc0\n   823: sp = sp & 0xffffffffffffffe0\n   826: u64 [sp + 56] = 0\n   829: u64 [sp + 48] = 0\n   832: u64 [sp + 40] = 0\n   835: u64 [sp + 32] = 0\n   838: i32 a0 = sp + 0x20\n   841: ecalli 7 // 'value_transferred'\n   843: jump @47\n      : @32 [@dyn 10] (gas: 1)\n   846: ra = 22, jump @56\n      : @33 [@dyn 11] (gas: 14)\n   851: ra = 0x18\n   854: sp = sp + 0xffffffffffffff60\n   858: u64 [sp + 0x98] = ra\n   862: u64 [sp + 0x90] = s0\n   866: u64 [sp + 0x88] = s1\n   870: s0 = sp + 0xa0\n   874: sp = sp & 0xffffffffffffffe0\n   877: u64 [sp + 56] = 0\n   880: u64 [sp + 48] = 0\n   883: u64 [sp + 40] = 0\n   886: u64 [sp + 32] = 0\n   889: i32 a0 = sp + 0x20\n   892: ecalli 7 // 'value_transferred'\n   894: jump @36\n      : @34 [@dyn 12] (gas: 7)\n   897: sp = sp + 0xfffffffffffffff0\n   900: u64 [sp + 0x8] = ra\n   903: u64 [sp] = s0\n   905: s0 = a0\n   907: a0 = 0x40\n   910: a1 = 0x20\n   913: ra = 26, jump @0\n      : @35 [@dyn 13] (gas: 100)\n   918: a1 = u8 [a0 + 0x1]\n   921: a2 = u8 [a0]\n   923: a3 = u8 [a0 + 0x2]\n   926: a4 = u8 [a0 + 0x3]\n   929: a1 = a1 << 0x8\n   932: a1 = a1 | a2\n   935: a3 = a3 << 0x10\n   938: a4 = a4 << 0x18\n   941: a3 = a3 | a4\n   944: a1 = a1 | a3\n   947: a2 = u8 [a0 + 0x5]\n   950: a3 = u8 [a0 + 0x4]\n   953: a4 = u8 [a0 + 0x6]\n   956: a5 = u8 [a0 + 0x7]\n   959: a2 = a2 << 0x8\n   962: a2 = a2 | a3\n   965: a4 = a4 << 0x10\n   968: a5 = a5 << 0x18\n   971: a4 = a4 | a5\n   974: a2 = a2 | a4\n   977: a2 = a2 << 0x20\n   980: t0 = a2 | a1\n   983: a2 = u8 [a0 + 0x9]\n   986: a3 = u8 [a0 + 0x8]\n   989: a4 = u8 [a0 + 0xa]\n   992: a5 = u8 [a0 + 0xb]\n   995: a2 = a2 << 0x8\n   998: a2 = a2 | a3\n  1001: a4 = a4 << 0x10\n  1004: a5 = a5 << 0x18\n  1007: a4 = a4 | a5\n  1010: a2 = a2 | a4\n  1013: a3 = u8 [a0 + 0xd]\n  1016: a4 = u8 [a0 + 0xc]\n  1019: a5 = u8 [a0 + 0xe]\n  1022: a1 = u8 [a0 + 0xf]\n  1025: a3 = a3 << 0x8\n  1028: a3 = a3 | a4\n  1031: a5 = a5 << 0x10\n  1034: a1 = a1 << 0x18\n  1037: a1 = a1 | a5\n  1040: a1 = a1 | a3\n  1043: a1 = a1 << 0x20\n  1046: t1 = a1 | a2\n  1049: a1 = u8 [a0 + 0x11]\n  1052: a3 = u8 [a0 + 0x10]\n  1055: a4 = u8 [a0 + 0x12]\n  1058: a5 = u8 [a0 + 0x13]\n  1061: a1 = a1 << 0x8\n  1064: a1 = a1 | a3\n  1067: a4 = a4 << 0x10\n  1070: a5 = a5 << 0x18\n  1073: a4 = a4 | a5\n  1076: a1 = a1 | a4\n  1079: a3 = u8 [a0 + 0x15]\n  1082: a4 = u8 [a0 + 0x14]\n  1085: a5 = u8 [a0 + 0x16]\n  1088: a2 = u8 [a0 + 0x17]\n  1091: a3 = a3 << 0x8\n  1094: a3 = a3 | a4\n  1097: a5 = a5 << 0x10\n  1100: a2 = a2 << 0x18\n  1103: a2 = a2 | a5\n  1106: a2 = a2 | a3\n  1109: a2 = a2 << 0x20\n  1112: a3 = a2 | a1\n  1115: a1 = u8 [a0 + 0x19]\n  1118: a2 = u8 [a0 + 0x18]\n  1121: a4 = u8 [a0 + 0x1a]\n  1124: a5 = u8 [a0 + 0x1b]\n  1127: a1 = a1 << 0x8\n  1130: a1 = a1 | a2\n  1133: a4 = a4 << 0x10\n  1136: a5 = a5 << 0x18\n  1139: a4 = a4 | a5\n  1142: a1 = a1 | a4\n  1145: a2 = u8 [a0 + 0x1d]\n  1148: a4 = u8 [a0 + 0x1c]\n  1151: a5 = u8 [a0 + 0x1e]\n  1154: a0 = u8 [a0 + 0x1f]\n  1157: a2 = a2 << 0x8\n  1160: a2 = a2 | a4\n  1163: a5 = a5 << 0x10\n  1166: a0 = a0 << 0x18\n  1169: a0 = a0 | a5\n  1172: a0 = a0 | a2\n  1175: a0 = a0 << 0x20\n  1178: a0 = a0 | a1\n  1181: a0 = reverse a0\n  1183: a1 = reverse a3\n  1185: a2 = reverse t1\n  1187: a3 = reverse t0\n  1189: u64 [s0 + 0x18] = a3\n  1192: u64 [s0 + 0x10] = a2\n  1195: u64 [s0 + 0x8] = a1\n  1198: u64 [s0] = a0\n  1200: ra = u64 [sp + 0x8]\n  1203: s0 = u64 [sp]\n  1205: sp = sp + 0x10\n  1208: ret\n      : @36 (gas: 8)\n  1210: a0 = u64 [sp + 0x30]\n  1213: a1 = u64 [sp + 0x38]\n  1216: a2 = u64 [sp + 0x28]\n  1219: a3 = u64 [sp + 0x20]\n  1222: a1 = a1 | a2\n  1225: a0 = a0 | a3\n  1228: a0 = a0 | a1\n  1231: jump @41 if a0 != 0\n      : @37 (gas: 2)\n  1235: a0 = i32 [0x20004]\n  1240: jump @41 if a0 <=u 3\n      : @38 (gas: 26)\n  1245: u64 [sp + 88] = 0\n  1248: u64 [sp + 80] = 0\n  1251: u64 [sp + 72] = 0\n  1254: u64 [sp + 64] = 0\n  1257: u64 [sp + 120] = 0\n  1260: u64 [sp + 112] = 0\n  1263: u64 [sp + 104] = 0\n  1266: u64 [sp + 96] = 0\n  1269: u32 [sp + 128] = 0x20\n  1274: i32 a1 = sp + 0x40\n  1277: i32 a3 = sp + 0x60\n  1280: i32 a4 = sp + 0x80\n  1284: a2 = 0xffffffffffffffff\n  1287: a0 = 0\n  1289: ecalli 3 // 'get_storage'\n  1291: a0 = u64 [sp + 0x78]\n  1294: u64 [sp] = a0\n  1296: a0 = u64 [sp + 0x70]\n  1299: u64 [sp + 0x8] = a0\n  1302: a0 = u64 [sp + 0x68]\n  1305: u64 [sp + 0x10] = a0\n  1308: a0 = u64 [sp + 0x60]\n  1311: u64 [sp + 0x18] = a0\n  1314: a0 = 0x40\n  1317: a1 = 0x20\n  1320: ra = 28, jump @0\n      : @39 [@dyn 14] (gas: 100)\n  1325: a1 = u8 [a0 + 0x11]\n  1328: a2 = u8 [a0 + 0x10]\n  1331: a3 = u8 [a0 + 0x12]\n  1334: a4 = u8 [a0 + 0x13]\n  1337: a1 = a1 << 0x8\n  1340: a1 = a1 | a2\n  1343: a3 = a3 << 0x10\n  1346: a4 = a4 << 0x18\n  1349: a3 = a3 | a4\n  1352: a1 = a1 | a3\n  1355: a2 = u8 [a0 + 0x15]\n  1358: a3 = u8 [a0 + 0x14]\n  1361: a4 = u8 [a0 + 0x16]\n  1364: a5 = u8 [a0 + 0x17]\n  1367: a2 = a2 << 0x8\n  1370: a2 = a2 | a3\n  1373: a4 = a4 << 0x10\n  1376: a5 = a5 << 0x18\n  1379: a4 = a4 | a5\n  1382: a2 = a2 | a4\n  1385: a2 = a2 << 0x20\n  1388: t0 = a2 | a1\n  1391: a2 = u8 [a0 + 0x1]\n  1394: a3 = u8 [a0]\n  1396: a4 = u8 [a0 + 0x2]\n  1399: a5 = u8 [a0 + 0x3]\n  1402: a2 = a2 << 0x8\n  1405: a2 = a2 | a3\n  1408: a4 = a4 << 0x10\n  1411: a5 = a5 << 0x18\n  1414: a4 = a4 | a5\n  1417: a2 = a2 | a4\n  1420: a3 = u8 [a0 + 0x5]\n  1423: a4 = u8 [a0 + 0x4]\n  1426: a5 = u8 [a0 + 0x6]\n  1429: s1 = u8 [a0 + 0x7]\n  1432: a3 = a3 << 0x8\n  1435: a3 = a3 | a4\n  1438: a5 = a5 << 0x10\n  1441: s1 = s1 << 0x18\n  1444: a5 = a5 | s1\n  1447: a3 = a3 | a5\n  1450: a3 = a3 << 0x20\n  1453: a2 = a2 | a3\n  1456: a3 = u8 [a0 + 0x19]\n  1459: a4 = u8 [a0 + 0x18]\n  1462: a5 = u8 [a0 + 0x1a]\n  1465: s1 = u8 [a0 + 0x1b]\n  1468: a3 = a3 << 0x8\n  1471: a3 = a3 | a4\n  1474: a5 = a5 << 0x10\n  1477: s1 = s1 << 0x18\n  1480: a5 = a5 | s1\n  1483: a3 = a3 | a5\n  1486: a4 = u8 [a0 + 0x1d]\n  1489: a5 = u8 [a0 + 0x1c]\n  1492: s1 = u8 [a0 + 0x1e]\n  1495: a1 = u8 [a0 + 0x1f]\n  1498: a4 = a4 << 0x8\n  1501: a4 = a4 | a5\n  1504: s1 = s1 << 0x10\n  1507: a1 = a1 << 0x18\n  1510: a1 = a1 | s1\n  1513: a1 = a1 | a4\n  1516: a1 = a1 << 0x20\n  1519: a3 = a3 | a1\n  1522: a1 = u8 [a0 + 0x9]\n  1525: a4 = u8 [a0 + 0x8]\n  1528: a5 = u8 [a0 + 0xa]\n  1531: s1 = u8 [a0 + 0xb]\n  1534: a1 = a1 << 0x8\n  1537: a1 = a1 | a4\n  1540: a5 = a5 << 0x10\n  1543: s1 = s1 << 0x18\n  1546: a5 = a5 | s1\n  1549: a1 = a1 | a5\n  1552: a4 = u8 [a0 + 0xd]\n  1555: a5 = u8 [a0 + 0xc]\n  1558: s1 = u8 [a0 + 0xe]\n  1561: a0 = u8 [a0 + 0xf]\n  1564: a4 = a4 << 0x8\n  1567: a4 = a4 | a5\n  1570: s1 = s1 << 0x10\n  1573: a0 = a0 << 0x18\n  1576: a0 = a0 | s1\n  1579: a0 = a0 | a4\n  1582: a0 = a0 << 0x20\n  1585: a0 = a0 | a1\n  1588: a1 = reverse a0\n  1590: a0 = reverse a3\n  1592: a2 = reverse a2\n  1594: a3 = reverse t0\n  1596: a2 = a2 | a3\n  1599: a3 = a0 | a1\n  1602: a3 = a3 | a2\n  1605: a3 = a3 >> 0x20\n  1608: a1 = a1 | a2\n  1611: a1 = a1 << 0x20\n  1614: a1 = a1 | a3\n  1617: jump @43 if a1 == 0\n      : @40 (gas: 1)\n  1620: trap\n      : @41 (gas: 3)\n  1621: a0 = 0\n  1623: a1 = 0\n  1625: ra = 30, jump @0\n      : @42 [@dyn 15] (gas: 5)\n  1630: i32 a1 = a0 + 0\n  1632: a0 = 0x1\n  1635: a2 = 0\n  1637: ecalli 4 // 'seal_return'\n  1639: fallthrough\n      : @43 (gas: 4)\n  1640: i32 s1 = a0 + 0\n  1642: a1 = 0x20\n  1645: a0 = s1\n  1647: ra = 32, jump @0\n      : @44 [@dyn 16] (gas: 71)\n  1652: a1 = u64 [sp]\n  1654: a1 = reverse a1\n  1656: a2 = u64 [sp + 0x8]\n  1659: a2 = reverse a2\n  1661: a3 = u64 [sp + 0x10]\n  1664: a3 = reverse a3\n  1666: a4 = u64 [sp + 0x18]\n  1669: a4 = reverse a4\n  1671: a5 = a4 >> 0x38\n  1674: u8 [a0 + 0x1f] = a5\n  1677: a5 = a4 >> 0x30\n  1680: u8 [a0 + 0x1e] = a5\n  1683: a5 = a4 >> 0x28\n  1686: u8 [a0 + 0x1d] = a5\n  1689: a5 = a4 >> 0x20\n  1692: u8 [a0 + 0x1c] = a5\n  1695: a5 = a4 >> 0x18\n  1698: u8 [a0 + 0x1b] = a5\n  1701: a5 = a4 >> 0x10\n  1704: u8 [a0 + 0x1a] = a5\n  1707: a5 = a4 >> 0x8\n  1710: u8 [a0 + 0x19] = a5\n  1713: u8 [a0 + 0x18] = a4\n  1716: u8 [a0 + 0x10] = a3\n  1719: a4 = a3 >> 0x38\n  1722: u8 [a0 + 0x17] = a4\n  1725: a4 = a3 >> 0x30\n  1728: u8 [a0 + 0x16] = a4\n  1731: a4 = a3 >> 0x28\n  1734: u8 [a0 + 0x15] = a4\n  1737: a4 = a3 >> 0x20\n  1740: u8 [a0 + 0x14] = a4\n  1743: a4 = a3 >> 0x18\n  1746: u8 [a0 + 0x13] = a4\n  1749: a4 = a3 >> 0x10\n  1752: u8 [a0 + 0x12] = a4\n  1755: a3 = a3 >> 0x8\n  1758: u8 [a0 + 0x11] = a3\n  1761: u8 [a0 + 0x8] = a2\n  1764: a3 = a2 >> 0x38\n  1767: u8 [a0 + 0xf] = a3\n  1770: a3 = a2 >> 0x30\n  1773: u8 [a0 + 0xe] = a3\n  1776: a3 = a2 >> 0x28\n  1779: u8 [a0 + 0xd] = a3\n  1782: a3 = a2 >> 0x20\n  1785: u8 [a0 + 0xc] = a3\n  1788: a3 = a2 >> 0x18\n  1791: u8 [a0 + 0xb] = a3\n  1794: a3 = a2 >> 0x10\n  1797: u8 [a0 + 0xa] = a3\n  1800: a2 = a2 >> 0x8\n  1803: u8 [a0 + 0x9] = a2\n  1806: u8 [a0] = a1\n  1808: a2 = a1 >> 0x38\n  1811: u8 [a0 + 0x7] = a2\n  1814: a2 = a1 >> 0x30\n  1817: u8 [a0 + 0x6] = a2\n  1820: a2 = a1 >> 0x28\n  1823: u8 [a0 + 0x5] = a2\n  1826: a2 = a1 >> 0x20\n  1829: u8 [a0 + 0x4] = a2\n  1832: a2 = a1 >> 0x18\n  1835: u8 [a0 + 0x3] = a2\n  1838: a2 = a1 >> 0x10\n  1841: u8 [a0 + 0x2] = a2\n  1844: a1 = a1 >> 0x8\n  1847: u8 [a0 + 0x1] = a1\n  1850: a1 = 0x20\n  1853: a0 = s1\n  1855: ra = 34, jump @0\n      : @45 [@dyn 17] (gas: 6)\n  1860: i32 a1 = a0 + 0\n  1862: a2 = 0x20\n  1865: a0 = 0\n  1867: ra = 0x24\n  1870: ecalli 4 // 'seal_return'\n  1872: fallthrough\n      : @46 [@dyn 18] (gas: 1)\n  1873: ret\n      : @47 (gas: 8)\n  1875: a0 = u64 [sp + 0x30]\n  1878: a1 = u64 [sp + 0x38]\n  1881: a2 = u64 [sp + 0x28]\n  1884: a3 = u64 [sp + 0x20]\n  1887: a1 = a1 | a2\n  1890: a0 = a0 | a3\n  1893: a0 = a0 | a1\n  1896: jump @52 if a0 != 0\n      : @48 (gas: 2)\n  1900: a0 = i32 [0x20004]\n  1905: jump @52 if a0 <=u 35\n      : @49 (gas: 45)\n  1910: i32 a0 = sp + 0x80\n  1914: a1 = 0x4\n  1917: ecalli 1 // 'call_data_load'\n  1919: a0 = u64 [sp + 0x80]\n  1923: u64 [sp + 0x18] = a0\n  1926: a0 = u64 [sp + 0x88]\n  1930: u64 [sp + 0x10] = a0\n  1933: a0 = u64 [sp + 0x90]\n  1937: u64 [sp + 0x8] = a0\n  1940: s1 = u64 [sp + 0x98]\n  1944: u64 [sp + 120] = 0\n  1947: u64 [sp + 112] = 0\n  1950: u64 [sp + 104] = 0\n  1953: u64 [sp + 96] = 0\n  1956: u64 [sp + 152] = 0\n  1960: u64 [sp + 144] = 0\n  1964: u64 [sp + 136] = 0\n  1968: u64 [sp + 128] = 0\n  1972: u32 [sp + 64] = 0x20\n  1976: i32 a1 = sp + 0x60\n  1979: i32 a3 = sp + 0x80\n  1983: i32 a4 = sp + 0x40\n  1986: a2 = 0xffffffffffffffff\n  1989: a0 = 0\n  1991: ecalli 3 // 'get_storage'\n  1993: u64 [sp + 120] = 0\n  1996: u64 [sp + 112] = 0\n  1999: u64 [sp + 104] = 0\n  2002: u64 [sp + 96] = 0\n  2005: u64 [sp + 0x98] = s1\n  2009: a0 = u64 [sp + 0x8]\n  2012: u64 [sp + 0x90] = a0\n  2016: a0 = u64 [sp + 0x10]\n  2019: u64 [sp + 0x88] = a0\n  2023: a0 = u64 [sp + 0x18]\n  2026: u64 [sp + 0x80] = a0\n  2030: i32 a1 = sp + 0x60\n  2033: i32 a3 = sp + 0x80\n  2037: a2 = 0xffffffffffffffff\n  2040: a4 = 0x20\n  2043: a0 = 0\n  2045: ecalli 6 // 'set_storage'\n  2047: a0 = 0x40\n  2050: a1 = 0x20\n  2053: ra = 38, jump @0\n      : @50 [@dyn 19] (gas: 100)\n  2058: a1 = u8 [a0 + 0x11]\n  2061: a2 = u8 [a0 + 0x10]\n  2064: a3 = u8 [a0 + 0x12]\n  2067: a4 = u8 [a0 + 0x13]\n  2070: a1 = a1 << 0x8\n  2073: a1 = a1 | a2\n  2076: a3 = a3 << 0x10\n  2079: a4 = a4 << 0x18\n  2082: a3 = a3 | a4\n  2085: a1 = a1 | a3\n  2088: a2 = u8 [a0 + 0x15]\n  2091: a3 = u8 [a0 + 0x14]\n  2094: a4 = u8 [a0 + 0x16]\n  2097: a5 = u8 [a0 + 0x17]\n  2100: a2 = a2 << 0x8\n  2103: a2 = a2 | a3\n  2106: a4 = a4 << 0x10\n  2109: a5 = a5 << 0x18\n  2112: a4 = a4 | a5\n  2115: a2 = a2 | a4\n  2118: a2 = a2 << 0x20\n  2121: t0 = a2 | a1\n  2124: a2 = u8 [a0 + 0x1]\n  2127: a3 = u8 [a0]\n  2129: a4 = u8 [a0 + 0x2]\n  2132: a5 = u8 [a0 + 0x3]\n  2135: a2 = a2 << 0x8\n  2138: a2 = a2 | a3\n  2141: a4 = a4 << 0x10\n  2144: a5 = a5 << 0x18\n  2147: a4 = a4 | a5\n  2150: a2 = a2 | a4\n  2153: a3 = u8 [a0 + 0x5]\n  2156: a4 = u8 [a0 + 0x4]\n  2159: a5 = u8 [a0 + 0x6]\n  2162: s1 = u8 [a0 + 0x7]\n  2165: a3 = a3 << 0x8\n  2168: a3 = a3 | a4\n  2171: a5 = a5 << 0x10\n  2174: s1 = s1 << 0x18\n  2177: a5 = a5 | s1\n  2180: a3 = a3 | a5\n  2183: a3 = a3 << 0x20\n  2186: a2 = a2 | a3\n  2189: a3 = u8 [a0 + 0x19]\n  2192: a4 = u8 [a0 + 0x18]\n  2195: a5 = u8 [a0 + 0x1a]\n  2198: s1 = u8 [a0 + 0x1b]\n  2201: a3 = a3 << 0x8\n  2204: a3 = a3 | a4\n  2207: a5 = a5 << 0x10\n  2210: s1 = s1 << 0x18\n  2213: a5 = a5 | s1\n  2216: a3 = a3 | a5\n  2219: a4 = u8 [a0 + 0x1d]\n  2222: a5 = u8 [a0 + 0x1c]\n  2225: s1 = u8 [a0 + 0x1e]\n  2228: a1 = u8 [a0 + 0x1f]\n  2231: a4 = a4 << 0x8\n  2234: a4 = a4 | a5\n  2237: s1 = s1 << 0x10\n  2240: a1 = a1 << 0x18\n  2243: a1 = a1 | s1\n  2246: a1 = a1 | a4\n  2249: a1 = a1 << 0x20\n  2252: a3 = a3 | a1\n  2255: a1 = u8 [a0 + 0x9]\n  2258: a4 = u8 [a0 + 0x8]\n  2261: a5 = u8 [a0 + 0xa]\n  2264: s1 = u8 [a0 + 0xb]\n  2267: a1 = a1 << 0x8\n  2270: a1 = a1 | a4\n  2273: a5 = a5 << 0x10\n  2276: s1 = s1 << 0x18\n  2279: a5 = a5 | s1\n  2282: a1 = a1 | a5\n  2285: a4 = u8 [a0 + 0xd]\n  2288: a5 = u8 [a0 + 0xc]\n  2291: s1 = u8 [a0 + 0xe]\n  2294: a0 = u8 [a0 + 0xf]\n  2297: a4 = a4 << 0x8\n  2300: a4 = a4 | a5\n  2303: s1 = s1 << 0x10\n  2306: a0 = a0 << 0x18\n  2309: a0 = a0 | s1\n  2312: a0 = a0 | a4\n  2315: a0 = a0 << 0x20\n  2318: a0 = a0 | a1\n  2321: a1 = reverse a0\n  2323: a0 = reverse a3\n  2325: a2 = reverse a2\n  2327: a3 = reverse t0\n  2329: a2 = a2 | a3\n  2332: a3 = a0 | a1\n  2335: a3 = a3 | a2\n  2338: a3 = a3 >> 0x20\n  2341: a1 = a1 | a2\n  2344: a1 = a1 << 0x20\n  2347: a1 = a1 | a3\n  2350: jump @54 if a1 == 0\n      : @51 (gas: 1)\n  2353: trap\n      : @52 (gas: 3)\n  2354: a0 = 0\n  2356: a1 = 0\n  2358: ra = 40, jump @0\n      : @53 [@dyn 20] (gas: 7)\n  2363: i32 a1 = a0 + 0\n  2365: a0 = 0x1\n  2368: a2 = 0\n  2370: ecalli 4 // 'seal_return'\n  2372: i32 a0 = a0 + 0\n  2374: ra = 0x2a\n  2377: jump @0\n      : @54 (gas: 2)\n  2380: i32 a0 = a0 + 0\n  2382: ra = 42, jump @0\n      : @55 [@dyn 21] (gas: 6)\n  2387: i32 a1 = a0 + 0\n  2389: a0 = 0\n  2391: a2 = 0\n  2393: ra = 0x2c\n  2396: ecalli 4 // 'seal_return'\n  2398: fallthrough\n      : @56 [@dyn 22] (gas: 5)\n  2399: sp = sp + 0xfffffffffffffff8\n  2402: u64 [sp] = ra\n  2404: a0 = 0\n  2406: a1 = 0\n  2408: ra = 46, jump @0\n      : @57 [@dyn 23] (gas: 6)\n  2413: i32 a1 = a0 + 0\n  2415: a0 = 0x1\n  2418: a2 = 0\n  2420: ra = 0x30\n  2423: ecalli 4 // 'seal_return'\n  2425: fallthrough\n      : @58 [@dyn 24] (gas: 5)\n  2426: u64 [a0 + 24] = 0\n  2429: u64 [a0 + 16] = 0\n  2432: u64 [a0 + 8] = 0\n  2435: u64 [a0 + 0] = 0\n  2437: ret\n      : @59 [export #0: 'call'] (gas: 2)\n  2439: a0 = 0\n  2441: ra = 50, jump @8\n      : @60 [@dyn 25] [export #1: 'deploy'] (gas: 2)\n  2446: a0 = 0x1\n  2449: ra = 52, jump @8\n      : @61 [@dyn 26] (gas: 9)\n  2454: sp = sp + 0xffffffffffffffc0\n  2457: u64 [sp + 0x38] = ra\n  2460: u64 [sp + 0x30] = s0\n  2463: u64 [sp + 0x28] = s1\n  2466: s0 = sp + 0x40\n  2469: sp = sp & 0xfffffffffffffff0\n  2472: s1 = a0\n  2474: a0 = sp\n  2476: ra = 54, jump @34\n      : @62 [@dyn 27] (gas: 14)\n  2481: a0 = u64 [sp + 0x10]\n  2484: a1 = u64 [sp + 0x18]\n  2487: a2 = u64 [sp]\n  2489: a3 = u64 [sp + 0x8]\n  2492: u64 [s1 + 0x10] = a0\n  2495: u64 [s1 + 0x18] = a1\n  2498: u64 [s1] = a2\n  2500: u64 [s1 + 0x8] = a3\n  2503: sp = s0 + 0xffffffffffffffc0\n  2506: ra = u64 [sp + 0x38]\n  2509: s0 = u64 [sp + 0x30]\n  2512: s1 = u64 [sp + 0x28]\n  2515: sp = sp + 0x40\n  2518: ret\n",
						"bytecode": {
							"object": "50564d00000c0c000000000000010700c11000c0004004808f08000000000e0000001c0000002a0000003500000040000000520000005d00000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a656765745f73746f726167657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e7366657272656405110289870463616c6c898e066465706c6f79068b4d1b0289d85a005f007b000f0140025502780284029e024e035303810396032d055e067406440751070a083b0953095f096d097a098e099609b1098b791052093b3309010001ae9833c8780883881f8488e0553801000128390a000002ae8a123d080000023308100002c8870732003308100002c88707320000009511f07b10087b158475010a02013d07040002510507501002095010042a029511c07b10387b15307b16289515408411e03307403308205010068946171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607491118490149110849111083170a0701821710821818821908821ad49808d4a707d4870752073701330740330820501008f6fe7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f776fa66f986f29d49808d47609d48909989920d48707977720d49707510717003307330850100ac5fd837833070133090a040183666467330850100cb0fd8377330833090a01390808000251080d330710000383770a05016467330850100e8dfd8378330733093300100a04019511c07b10387b15309515408411e033074033082050101267fd46171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461703461702461701460739080400024617064617054617045318044a831733080a010181171c5147c1ce642e4152471d36576035330014951140ff7b10b8007b15b0007b16a8009515c0008411e04911384911304911284911208317200a072808045010161106330018951160ff7b1098007b1590007b1688009515a0008411e04911384911304911284911208317200a07283c019511f07b10087b15647533074033082050101a6ffc7c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b5782100882159511103200821730821838821928821a20d49808d4a707d487075207860139070400025417037d014911584911504911484911404911784911704911684911604821800020831840831a60831b80003309ff33070a038217787b178217707b17088217687b17108217607b171833074033082050101cd8fa7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f786fa76f996f2ad4a909d4870ad49a0a98aa20d49808978820d4a808510817003307330850101ea7f9837833070133090a04018376330820646750102091f982186f888219086f99821a106faa821b186fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b18787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790978789889387879079889307879069889287879059889207879049889187879039889107879029888087878013308206467501022c1f8837833092033073300240a04013200821730821838821928821a20d49808d4a707d487075207ca013907040002541723c101831780003308040a01821780007b1718821788007b1710821790007b1708821698004911784911704911684911604921980049219000492188004921800048114020831860831a8000831b403309ff33070a034911784911704911684911607b1698008217087b1790008217107b1788008217187b178000831860831a80003309ff330b2033070a06330740330820501026fbf77c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f786fa76f996f2ad4a909d4870ad49a0a98aa20d49808978820d4a80851081e0033073308501028caf6837833070133090a04837733002a28b7f6837750102ab2f683783307330933002c0a04019511f87b103307330850102e98f6837833070133093300300a0401491718491710491708490732003307501032b7f6330701501034aff69511c07b10387b15307b16289515408411f064766417501036d5f98217108218188219821a087b67107b68187b697b6a089551c0821038821530821628951140320049489220248414d24969488424499208499224499224499224499294929aa4249184244992244992244952922449922449922449922449922449922449922449922449559224c90aa556a13a24d40a559a24494248922449922449922449524812d5040289888824494a484444244952924a424a92244992244992244992244992244992244992244992244992244992244992a42a4929254992082149922424914a49922421499224499224499294244992244992244992244992244992244992244992244952952449b242a9a55029a524499224499224499224499224499224494992244992a4504a4b92241142a44824124912111189a4922412894422a924244992244992244992922449922449922449922449922449922449922449922449aa92244956285552a8d254a19426a94242922415929294244900"
						},
						"deployedBytecode": {
							"object": "50564d00000c0c000000000000010700c11000c0004004808f08000000000e0000001c0000002a0000003500000040000000520000005d00000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a656765745f73746f726167657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e7366657272656405110289870463616c6c898e066465706c6f79068b4d1b0289d85a005f007b000f0140025502780284029e024e035303810396032d055e067406440751070a083b0953095f096d097a098e099609b1098b791052093b3309010001ae9833c8780883881f8488e0553801000128390a000002ae8a123d080000023308100002c8870732003308100002c88707320000009511f07b10087b158475010a02013d07040002510507501002095010042a029511c07b10387b15307b16289515408411e03307403308205010068946171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607491118490149110849111083170a0701821710821818821908821ad49808d4a707d4870752073701330740330820501008f6fe7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f776fa66f986f29d49808d47609d48909989920d48707977720d49707510717003307330850100ac5fd837833070133090a040183666467330850100cb0fd8377330833090a01390808000251080d330710000383770a05016467330850100e8dfd8378330733093300100a04019511c07b10387b15309515408411e033074033082050101267fd46171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461703461702461701460739080400024617064617054617045318044a831733080a010181171c5147c1ce642e4152471d36576035330014951140ff7b10b8007b15b0007b16a8009515c0008411e04911384911304911284911208317200a072808045010161106330018951160ff7b1098007b1590007b1688009515a0008411e04911384911304911284911208317200a07283c019511f07b10087b15647533074033082050101a6ffc7c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b5782100882159511103200821730821838821928821a20d49808d4a707d487075207860139070400025417037d014911584911504911484911404911784911704911684911604821800020831840831a60831b80003309ff33070a038217787b178217707b17088217687b17108217607b171833074033082050101cd8fa7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f786fa76f996f2ad4a909d4870ad49a0a98aa20d49808978820d4a808510817003307330850101ea7f9837833070133090a04018376330820646750102091f982186f888219086f99821a106faa821b186fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b18787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790978789889387879079889307879069889287879059889207879049889187879039889107879029888087878013308206467501022c1f8837833092033073300240a04013200821730821838821928821a20d49808d4a707d487075207ca013907040002541723c101831780003308040a01821780007b1718821788007b1710821790007b1708821698004911784911704911684911604921980049219000492188004921800048114020831860831a8000831b403309ff33070a034911784911704911684911607b1698008217087b1790008217107b1788008217187b178000831860831a80003309ff330b2033070a06330740330820501026fbf77c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f786fa76f996f2ad4a909d4870ad49a0a98aa20d49808978820d4a80851081e0033073308501028caf6837833070133090a04837733002a28b7f6837750102ab2f683783307330933002c0a04019511f87b103307330850102e98f6837833070133093300300a0401491718491710491708490732003307501032b7f6330701501034aff69511c07b10387b15307b16289515408411f064766417501036d5f98217108218188219821a087b67107b68187b697b6a089551c0821038821530821628951140320049489220248414d24969488424499208499224499224499224499294929aa4249184244992244992244952922449922449922449922449922449922449922449922449559224c90aa556a13a24d40a559a24494248922449922449922449524812d5040289888824494a484444244952924a424a92244992244992244992244992244992244992244992244992244992244992a42a4929254992082149922424914a49922421499224499224499294244992244992244992244992244992244992244992244952952449b242a9a55029a524499224499224499224499224499224494992244992a4504a4b92241142a44824124912111189a4922412894422a924244992244992244992922449922449922449922449922449922449922449922449aa92244956285552a8d254a19426a94242922415929294244900"
						},
						"methodIdentifiers": {
							"retrieve()": "2e64cec1",
							"store(uint256)": "6057361d"
						}
					},
					"irOptimized": "/// @use-src 0:\"contracts/1_Storage.sol\"\nobject \"Storage_25\" {\n    code {\n        {\n            /// @src 0:199:555  \"contract Storage {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            let _1 := allocate_unbounded()\n            codecopy(_1, dataoffset(\"Storage_25_deployed\"), datasize(\"Storage_25_deployed\"))\n            return(_1, datasize(\"Storage_25_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n    }\n    /// @use-src 0:\"contracts/1_Storage.sol\"\n    object \"Storage_25_deployed\" {\n        code {\n            {\n                /// @src 0:199:555  \"contract Storage {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let selector := shift_right_unsigned(calldataload(0))\n                    switch selector\n                    case 0x2e64cec1 { external_fun_retrieve() }\n                    case 0x6057361d { external_fun_store() }\n                    default { }\n                }\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function shift_right_unsigned(value) -> newValue\n            { newValue := shr(224, value) }\n            function allocate_unbounded() -> memPtr\n            { memPtr := mload(64) }\n            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            { revert(0, 0) }\n            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            { revert(0, 0) }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n            }\n            function cleanup_uint256(value) -> cleaned\n            { cleaned := value }\n            function abi_encode_uint256_to_uint256(value, pos)\n            {\n                mstore(pos, cleanup_uint256(value))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                abi_encode_uint256_to_uint256(value0, add(headStart, 0))\n            }\n            function external_fun_retrieve()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_retrieve()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_uint256(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function validator_revert_uint256(value)\n            {\n                if iszero(eq(value, cleanup_uint256(value))) { revert(0, 0) }\n            }\n            function abi_decode_uint256(offset, end) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_uint256(value)\n            }\n            function abi_decode_tuple_uint256(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := 0\n                value0 := abi_decode_uint256(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_tuple(headStart) -> tail\n            { tail := add(headStart, 0) }\n            function external_fun_store()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_tuple_uint256(4, calldatasize())\n                fun_store(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n            function zero_value_for_split_uint256() -> ret\n            { ret := 0 }\n            function shift_right_0_unsigned(value) -> newValue\n            { newValue := shr(0, value) }\n            function cleanup_from_storage_uint256(value) -> cleaned\n            { cleaned := value }\n            function extract_from_storage_value_offset_uint256(slot_value) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_uint256(slot) -> value\n            {\n                value := extract_from_storage_value_offset_uint256(sload(slot))\n            }\n            /// @ast-id 24 @src 0:474:553  \"function retrieve() public view returns (uint256){...\"\n            function fun_retrieve() -> var\n            {\n                /// @src 0:515:522  \"uint256\"\n                let zero_uint256 := zero_value_for_split_uint256()\n                var := zero_uint256\n                /// @src 0:540:546  \"number\"\n                let _1 := read_from_storage_split_offset_uint256(0x00)\n                let expr := _1\n                /// @src 0:533:546  \"return number\"\n                var := expr\n                leave\n            }\n            /// @src 0:199:555  \"contract Storage {...\"\n            function shift_left(value) -> newValue\n            { newValue := shl(0, value) }\n            function update_byte_slice_shift(value, toInsert) -> result\n            {\n                let mask := not(0)\n                toInsert := shift_left(toInsert)\n                value := and(value, not(mask))\n                result := or(value, and(toInsert, mask))\n            }\n            function identity(value) -> ret\n            { ret := value }\n            function convert_uint256_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_uint256(value)))\n            }\n            function prepare_store_uint256(value) -> ret\n            { ret := value }\n            function update_storage_value_offset_uint256_to_uint256(slot, value)\n            {\n                let convertedValue := convert_uint256_to_uint256(value)\n                sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_uint256(convertedValue)))\n            }\n            /// @ast-id 15 @src 0:329:393  \"function store(uint256 num) public {...\"\n            function fun_store(var_num)\n            {\n                /// @src 0:383:386  \"num\"\n                let _1 := var_num\n                let expr := _1\n                /// @src 0:374:386  \"number = num\"\n                update_storage_value_offset_uint256_to_uint256(0x00, expr)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c518d1c9dbcf662f543c8435ae29d4fba951c7879abc245f854e3c2b04f8ec1b64736f6c634300081c0033\"\n    }\n}\n",
					"hash": "3f4412a339f3d5c8cfe4f7b1394dc70c5853a45ffd0ef56010e7fdca686103af",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"contracts/1_Storage.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "contracts/1_Storage.sol",
					"exportedSymbols": {
						"Storage": [
							25
						]
					},
					"id": 26,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:128:0",
								"text": " @title Storage\n @dev Store & retrieve value in a variable\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"
							},
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Storage",
							"nameLocation": "208:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "number",
									"nameLocation": "231:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 25,
									"src": "223:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "223:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "364:29:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "374:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 11,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "383:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "374:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "374:12:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "244:80:0",
										"text": " @dev Store value in variable\n @param num value to store"
									},
									"functionSelector": "6057361d",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "store",
									"nameLocation": "338:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "352:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "344:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:13:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:0:0"
									},
									"scope": 25,
									"src": "329:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "523:30:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"name": "number",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "540:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 22,
												"nodeType": "Return",
												"src": "533:13:0"
											}
										]
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "399:70:0",
										"text": " @dev Return value \n @return value of 'number'"
									},
									"functionSelector": "2e64cec1",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retrieve",
									"nameLocation": "483:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "515:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:9:0"
									},
									"scope": 25,
									"src": "474:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 26,
							"src": "199:356:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:518:0"
				}
			}
		},
		"errors": [],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}